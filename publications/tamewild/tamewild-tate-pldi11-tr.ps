%!PS-Adobe-2.0
%%Creator: dvips(k) 5.98 Copyright 2009 Radical Eye Software
%%Title: paper.dvi
%%CreationDate: Thu May  5 15:11:54 2011
%%Pages: 27
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Times-Bold CMSY10 Times-Roman CMSS9 Times-BoldItalic
%%+ Times-Italic CMSY6 CMTT8 CMTT9 CMSY9 CMMI9 CMR9 wld MSBM10 CMR6
%%+ CMMI6 MSBM7 CMMI5 CMSY5 CMR5 CMEX9 stmary9 MSAM10
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips paper
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2011.05.05:1511
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: wld
%!PS-AdobeFont-1.0: wld 001.000
%%Title: wld
%Version: 001.000
%%CreationDate: Thu Apr 14 20:21:10 2011
%%Creator: Ross Tate,,,
%Copyright: Created by Ross Tate,,, with FontForge 2.0
%Copyright: (http://fontforge.sf.net)
% Generated by FontForge 20090914 (http://fontforge.sf.net/)
%%EndComments
10 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /wld def
/FontBBox {20 0 820 700 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (001.000) readonly def
/Notice (Created by Ross Tate,,, with FontForge 2.0 \050http://fontforge.sf.net\051) readonly def
/FullName (Wildcards) readonly def
/FamilyName (wld) readonly def
/Weight (Medium) readonly def
/FSType 8 def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE373DCBE8503A9C1BDDCDE3976B9A
FF31FADC784CD99E8D913C26819A4962BC428320D924CB0D4BE15E2EA33CD98F
3A3090D3A2B1C56F2D8E679576FAF3FC1A79261690287D7B9444B1B4E36B6E78
13E34916336239067A606618EB045356D480135F7C325841F7B5598118DE9F10
DC40B14F98881CE9249D25473504F621ACEEFEEC415938B11B1EA0DB33CD14DD
BF0F9224FBD2D8BDC80385967061093CBA04EF9F2CC7611612A7B40A88C5F557
0EA7B75CAEE65197D76E2EAFF968FAFF7C1105A090B060815E86974F063E51EE
18FC1ACFC5438202F95B81DEE0C04897B4296C57CFBA2764E536B6E73A1CBC2E
1AF2A17BA8CABDADA7EB35401EE34AE46ED9186885BAEAFDCA8F14BD01B37B62
07F036B9145D582A67CE2DC116A3CBA2EA712CE9DAE17AE370A64A0BD9F2097A
7390C0825A7F2D1E6FAE15C17B4BD091A1319AF706C0A39286375588AC9F8C37
CEE850618D30E55550DDD86F2886C18D7E094BD03CE69AFD7DFFC6ABD981D17E
F37F29932A48C13C80C895787D1A9DDF53FE3E8F44358B8AFB19F6F0E484104D
428C9F861DD93E96206C04057004C309423EBBFB036EFE64A24BFA2ADC8D905B
3ADE7A44645E16C6767D873A3FDDCF7F7BE0C209D2E1B959D3A3A790A9EE0CBA
E10DAB7B86EF5815823A18863D1FA94BE316B5440D6A6EAF4908705DEE94C2B2
17D0E78BC9DF39FB3494C79A2B5DCE0447DE68413477450F69C2E500086E7B71
55A33D562486682D739872981BB62395C6BE6CA917A714F77F2BFFF6E1BB37C6
8C5990AB1D2C2558E5983CEF630CAB42A179E3B2C73641E85DD0AE1C066F4EEC
81B389B818C61100609404DF71081CB0B350393773EEAF83E774CBFC9E11266A
FA98B5C402C5D07124FC2E1F07216B2F8CA5258AD89C8485EEBE05925D9CA9F4
3151ACBA4F4E15EDD46BE85880F8BD30FF81C46426B89F799EF6083586387328
7B86DB8C1272626A094BCDBBA762DD19453D7B5FFA4560C127FFF95FA7622ABC
8C9B9034EB7994DA3A6DD03B248E41C34F148A01A126039A1A8FF238BA39DD68
6B85D50D48DAA20B0A6A9096DCC7EF90DA88025400B0A61638EE7359F2704C68
BFF5CB18A9BC4C44810607B9DFCA354A828FB7FBF4BA37B3220BFF807FF55BF9
CC1E3766FC6E759B1EA66D468F2EF9726E7E3B087FFD97E8590CB83FF20D2E27
21E23B94757252062EA44994284F9875EF92D2066710569A4DA91C77BF5C1F01
1E8227CCD0434F46803754E8B40345FB8FF9E1D35C0898F4FBD1358458CCB3AF
4967673635BB1DF93B1E67AF194D2EFAE96EBC6C9902393AAE7F86E5C1E5FB3E
33FAF08288881422F458406C701EF3CAA82507ACC1EA8D91713307D52E9CF171
7867BC30687DE200263CEA4B1194DDC64C2C790D4DF5AAF5D9C4B062588426BB
6DBC6C2D1DFAE92AD01ACB863945A0654E92D3094B3A184231FE5D128A78598C
F71D8F1258F859D4A227DA81D827D71EB464088FF3CA95F96C355E924BA79AE6
24E7AB3DA55AC57470B01E2CB8EE4FE055D8A4D41ED6C88FD986A0946814011F
0DC564E9B0706DD0E5619502431927B8A2FD51F0AD5FE0197EEE37AAEAB1D2F0
2A42CF0A23C01F3D119148331292F84D8A08B8F55B076EA1F064F8F0237D98EA
1D2E149AD2CAEF65F41D7D7BE9127A61D44897D7BD0D270D418D80D3E8100549
FC00C08601D47C5D3C5FA7479B61FC43A67551336128A4BE04A721B671A60085
C1B2135CC53B68E3FD64B02B8531A15E835DC249D645E3DF474637562FFC8800
8055D1559BF93F3A9EF30EBEA2383192AA157C2EEC895BB7FE7954CEDFDD777E
2078DD3E5F05EDD46F0291515F949BC649DDCA847913048D8DF6C06C4883DA99
9D4EF68F24A8598136767FC9F51682BAED40D5742D0621282C35E43CD40E18E8
F6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTT8
%!PS-AdobeFont-1.0: CMTT8 003.002
%%Title: CMTT8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTT8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTT8 known{/CMTT8 findfont dup/UniqueID known{dup
/UniqueID get 5000830 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTT8 def
/FontBBox {-5 -232 545 699 }readonly def
/UniqueID 5000830 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTT8.) readonly def
/FullName (CMTT8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 63 /question put
dup 97 /a put
dup 99 /c put
dup 106 /j put
dup 118 /v put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943DE1B57D06E82116C79486D8
C5C32DADDFCB2CBD26FE85FFCB176AA09FBE325434B8B9D358B7C180AEC54F8D
24A1AB4D5EE5375B963A221F060453E01768F0A398352CB2C76E6E70BA017570
BE1C3D3A86E803B10B506FD9DB49DF5CC7BE17133234D7BE9230BE8B7481B357
08595FAE04D04B14C633C52E303B06EDEEF7CDDF20F34D7F08D991DFE2C4261F
298E0A818EBFF29D3B29D1D0CE2F071B49B0622F65F936F6C1D4C6AA2860E56C
9140A4FA23BA31888345142DBFA79825662511437347767D4A13A976FCF67EA6
7882D7B391B37FC1E22787E484D19BB252C4D73AA3D73EFA5C6341CF6F127033
2B91079B5FF8A164666CCC65D0002EF7E374098745C84E3037324B4248C5385C
FCF0539F8C04CBC52404BDC6ABD1474617D06377A69F4851838F462E82A86BC6
F8DB2E740B5270AECB0B922D4493A75422349138B539B6067C040F3007F04191
CB545ACC01B4F28AF811266260FEEC04057287BB5C26C077946DDF23322FD99F
2B3DFFB62AB8BF12000AA81ADAA6A064F9C34D5F36CB7F66A5EEB7B494FA1AAE
32B380163AEE08F5BD270FAAD8DAF0CC5B6979B8D4FB6AD723E011DCFE119092
D1025BB62280B745BB0FB140E82325F1FDFC029100F922BF206E5527B7D8F60C
3F3E3AE2184CB954391D10A1618FA0940F12159167494E29A46125CB911B19C4
97B4DC76FF53B7F79E380D7375FAB6C30A467E02E48BA73403D3900FBB440C9E
951C081C8D5E04DC0C8E1BC7D552075CC360B7D1007367C655069324713715BF
F8182AEB6F401A1F029FB3962BB3A0B2775979FDFFD834D5559EE20CF54D7898
798F108C3E4553AEBAB9AD1D9DD4B2F2E84087FD2F1FD531B9E6C3CD0878D69D
64BE5439EB43D1A0406529598929DE942340A40AB14BD9474774D7E477E15897
3A52809334BE0765A7728CC8E1D66648E2B0ADC69ACA26ED5D96E5009498DB2C
FCA285E3A8683AAED685780F3F5989FC42EDDA137E5D0310BE80298312290230
1AA9342270C47548CDBF7D3D9E9D6B55DA0351AC49A8E29A2887FAC7A3D8CAB5
4D79BB7FF1573C2FB94052C8AF27ACFD99EAD434BCC277A4805E6F068CF20E32
C014E7CC244189592FB944D403458FF43F071102AAFA69B4ED1159207F8812E9
56F9812F3D1F7266B6C59B5F7377BEAA49275BFC2581C5D3C3AB61ACD3540CAE
DBAE2C427997990843F6EF1D81EC5218750F9B8F149E2F4F401CF54904C9F5D6
2FCABAF7B3801860F7FDD6922C5A1C9626B1A91B41522BCB0E7516520CF03581
59DF2DD5881BE5AFE79959833CEDD89F7035BFEC87A66E5175905EB11CEB5448
60D688E9CDF29F1F500053C9ECB534F152D7A792B1AAB0A2BBF42E31FBC6E83C
22957560022E7CC3A2CFF841DAAB8BE7536971772F03068462E9E7F848C1B539
78E937134911D55A1623B11BB94B548CE4EAA4EC6CDCCB5F890559519907DEB8
9B45226C0744C459729CFBF38D2D32BF0DA326942E66CA02AB759187A4652D09
59A4EEBC0673FAED2563994CB46DB0CFD13B247F393645FBB27486C355C29D9F
3FAA0589B72BAA1241DEE31AA68ADE8493802B99CC81DB24315AA18AAD1F3A04
BC647D98F099956E975B9B03C064F59B6ABB1B158A3A420D7D34E2DA9557F22C
6125BD20E019502129A5BF4E736DE5BFEB413C7FF77F437CE37A057B16CF9E62
D8F6ACAA5A11A553B2D4D0199EAD19053ED4CD2F9A1C2C6E9A54EA20FC995180
B2F9EC20F278F9B4817D9610086037107F01113EBD9B82A0894C0318EA9DA4BF
52044AE43C4C52DA8C0E0ECFBCD7B504EC949CF8C4DA5D8FE6208E0D0D6A04DE
A3DB552D6D434D050FA672B31F37963C3805B0B9899D7C672E5A5DB30937D29F
F02D543823FE9AF819A49D3D98AB7A5E4ABF985FAD5F82DDD14BDF377006B38A
2C9362EB5D0A00F1059CFB08D27D292428AF57F188FEEBCB6935B479B665B7A4
755A2AE5B7721FF25EF869D135311F531BBAEE36DC28A79D090D416458D3CAD6
F58BB557734F7A356032912FD44A0A4F77D4EB5D613353BCC9DFFC7179D08C9A
DB5817160D8C707A37E81BF408C29B4FF00389A688898732DD31BE8A2F66D841
1C0E31AC936929F843794E854739CF1FEE0F4E6D8DC406687402401179EE22CA
C8F7247E08B276CF0429C64519B589C762EA5B5ABFAF07BACDBDFC0C418DDF17
4BB0E27D0036CB4BC4E7674081569BD67CABF6F4C5B9D66EFAC5B96014712546
31ABCB19F2F35AF78E246F5731B73D9D7C64B0AF91459ECBF4F48B43E750364C
639B20A7DF712A9EB139030078C40EF059CF25DCCF2F93EEF7896CB57CE73DCF
4FB9354EB799FE2B3671DEB62D5DA907616D6650DBB18A30D71AD0D82B57E982
F808CD5A4FD723C607CF7C3DC1669EE37B5D1FE908A07F4A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: MSAM10
%!PS-AdobeFont-1.0: MSAM10 003.002
%%Title: MSAM10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSAM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSAM10 known{/MSAM10 findfont dup/UniqueID known{dup
/UniqueID get 5031981 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSAM10 def
/FontBBox {8 -463 1331 1003 }readonly def
/UniqueID 5031981 def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSAM10.) readonly def
/FullName (MSAM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /squiggleright put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE2340939CE40EE9186A0DCC3D3
D661293EC5BB40766B73935EB54125526067D631E1E3D1D6569AB3546CB257C3
4C12CA4AE98C3F99898F1448AC0B416B8E5C3EEF3D74B5FD6A1BE3C23B160E78
79A9E0AC4FC82364F946003C1B2E0EF3CEA944727E7502B65BA1331D36C159E2
1D107580F28A32E04CB876822CEF478BF4464CE4F7AE824FC786E099A1BE2A3C
7D2BFE2A748AB092AEBC2021DBFD5C40E912BC5856F3EF8615147350E75D2BF9
E428D7948E2128053FDB1F90CA9C7D6581E25A6645879F50577FE7F0B32B873F
13F97C524E19F1CFE3883C0DE1DF80FB61111978B0C2D028A99A712D3DC27D8F
C83C4EC335F0DB9912DD2AF009FAA56C5BD5855BA92851629EF6C47E6AC303A6
1A231558746ED8A78C76E476ED71246A2E15C51F465AB21A22ACACB03014B06F
201876D3C6F49E2D38D8C4FE8011F7BB148FC3227E0BFA51C0F9AAD64F0C6095
77B3D875476B666F9FB9A46763C49272FC504CC0E817A1533409D293D6D62CC8
DFDA666BC9DC70C4510BFB0DD2BC94B33D457EACFD754761B696163DB4C547B5
FF8994977A7C9910AF486487CE0320FA1E705BAF4B14FB937229D80F58D01E6E
9D9716EA3EDA84840B5D6BDE216A25814ABC4DE4C6818266C33CD4C3DA4F23BF
DAE6ABDC6D64E7EC7DE918DDB0B05D8413D32D99D15FE112C1D393D21806E0C9
7CE0F0977AA36617B8DD50937C5B0B5698947B0A71A167072FE1B3AD6F274D97
484926DF52CE7D9D2A4928A188E1F867C298E6DB475C0CBE09F0523D8BC6FE24
E1CED78178EE1E9D66A906B72505339E62499C0E4B6B5A2D596C4F8F4312F582
9413DC88D6EDFEAAE0C86BEE44CBDDD79BC02C844B80324B1FE3512E73C213BF
ECD22E7E13F98AB56E4D693B1D6045045E2F01DCC2AA1F70A4699B7D718A743F
D749133029EAD1870DF0B00EDEEDFD33642A88EB10DDF4CBBF8A7D8F7781179F
A91CF398747D52769A054CDACAEDC330FB79ECC96CF43C29515F5895D3A8C1E6
828F776844C88090405F868A872EF54467B72825B001B46F6496817A9B928BEC
ED212D4368368778F2D1B66D005F2D6E3DF4AB9B9791AF2CECCA3AE524781A41
5052FD21CB81D934F0F12CF8C8FFC656BAFBE897C5E86A21D3F42A38F7916693
ADD1DBF48F534DA16099FFCF3E3DBCB254BF49D8F72FAC2F9548477F9AFA414E
65A29F24FA16A9E0955A9A6CCC47198E6332ECD1A791F2E36E6656852179A94C
E3CF4477A9A6CF507B8184ECA5C0304FA15ABD8B0C379EAC19B9D16A630D96DB
A6DA819C2E481AE4870BCAB5963C0F9D837C97E207F7ED58B776799586B9F755
B705AC31C09C3F74AFBCDACF092B05F9E2B072C1B17EE6347523D3D5E1D404AC
636C33DD94121C3711C3D05F48E12DF8489F894E4913263176E81927BF5E3A94
99D124F64D00BCC288F03FD14F89E6352083333EC6C2044E2F81C477DD4CA9A9
55135915C27654B09BC9099FA966AD440417945879399B39C7BF20385456878F
9AAE7343912927476C2C88A445C03E3B77381F3F9A82FEECADCCF8C307144775
144279EB14E0F0443F8200C0FABD54A075EDCB83EAB07A7CAF6EAB17C6CDB239
077DC62173A54E93BE2911F4A45F72B80DD9C41B301B292EFA78D361AD74BD7D
2E94D44A2D79BB7B89708E094A21CCB28D80E0FCA707D742CC02BB81FE4B0E06
4A5E93DF0414BAC27ADDB044A0D444692973994CD028E1C62F1FFA4776554914
2D55B0F81C06A2633A4AE42AD00422A619E339F2E6F0C6FC74F70552974509A0
812F1007FD7055E9ABB8CB39F799F847993DB9593A76C388F9BC883D4A0DE2CD
BFD0F7F2A5F1C50791EB4363104B49088E6EA2C5E61EF256A9FF232357D62D78
0C876D200E4136F7B0570A3B0988F3E23443081591DDB861745B4F6F0FF7D854
8F558F995A283B346E266DB6FFB54E0761046152A864F710113B6BF12967D022
2947517E1CE2079849CF8EB01BB2B96EEC2575AAAD1AA1E019D7E72BCFDF2979
8E2A6EE0C1525389C16411E5DBD416467B9900F07223117A77E0B4C3B0D49A96
C2E3A61AF9C9B1CEB80AC6357FC0CA446FF87BA0CCCD81924F6209198BD6E1A6
9EECEF233B17CC4E9F0654024F7E857EAB409F4B9B9ADE4090F2B715443A80EA
130369A193A32A4DA3730F13E3C9E717CCC9E74611D787277B73EFCE14FCC3B8
6B11AD88F42705F65E9C747B472F379ECDCB7F8F9C3FEA64402972623EA0998F
255892C43CEFD7ED08957C495AAACDA59E9398B43788DF27F7433F72377C8F88
F54F5E3A5564244827EBF92227B94F4FE896FEC6519769AAD567E618DFF61B7D
B93EE0FFA2EA58BE1FDAA0025259789FDB31A1019661C18080567EB5C6306596
F97F039E3C9ABF9E40B4725A96F8170B49B73B68E308786FE99B0C005DE01894
7CC93C196E1F830570D51F0AD29BF27CCE45AD7D3B4332C9D50F1E9C2D04E033
1E197DB9BE1D44566F738CD26A13B8EBC8FD49E999D35F042E8A24F025414F14
D9D11ED702250F1295722F68A022196A0E38B9ADDDBA997283ABAA62898EF32B
C765387E238CA3475ED5C6EF2803CE32B5A90A8287C70386F46B84C332E8C00F
85A8CC2DE78D433A325B7862AD4D93B3EE2CABC4B688833BF263E26879AF213C
934FAFEBE8D804E2BC8433B81ED5DA99F08C2C11B93019D3D9C1C952F20C68A7
E141DEA2CB983DAC5A2B9426A98262FEB13C420EAA315C890F0B907BEA099C1A
10B0AB255AF99694C722166DCDA72FD58CFBA3328FC5EF83A52A750C5E613E74
A8572CB8B78ABDAC27B798E727E3E5AF9451416493FE3F4E95157B4ABDF3A910
64369E34A2B40176A5E0E30F472E33A41B8C7BA4CB1BFB9173783909161370AA
EA40C83C60AAE242358688CE13193C9DDC3544A959A1E6A16FCC4BFAA65A63C7
5AEF208FC201F88DD047B5E6EFBD4BB256F973269BA1B06CCFC186D48BCCB4F6
A0F512B1D6541417BB6045045CBE72B72AA2549C345B1BB466335226A0E76A10
9645C25A0FB4CD8455C7C10C0F4E7E9914D2010BA1C95C6BAE4E62C8B6A8BDB4
92281B366208ABD9C010B3660C5E150D63D6927255CF9081C0898E9B206FAB57
B306669AB87AF405C537CA7D3411DBC41C53EEFD8071C094486158E97BAFE90E
BA29BEB83BA60776D33BF9CAF9C7FEB66D4B93DA27E499B006D243FF59CB33F6
AFC65D10B74CC522BF4AD45E3451B395AD5029B148A1C9B710D5CF02B65F9189
0822C0A33C4D07F2DEFDD5B4F6E063891F0456F1BCA4540F9DCD3B0F9F39696A
52336AFCF0A33A029AEEB448CE120B9D939487EC8274AD4E1D5F5AF4C14EC910
680C5E312735DFA3A5B1835370A76DFA63A05379021A64EE55E25AD5218398A3
6DD66D1B474A2E7C6E236E0E4A9BD0E4F7AD1807C6478225C58327BFE1822000
26713D01CAD6951F456504D79867D523605ECD78F2D5DA05994BA4812BF65E7E
34ACB732150ECB3D212D03387C71677F617D76A9A42C708C89D61614F280A5FB
0BFA84A17CF9DF333C9E13DEE82A5ADC9D2E588338D247889ECFB090CC63CF9B
8D92B1CB784B65BE80E3B57998F9ABEE702E07BC127D272C67B0A97734E405C1
FAA87E6B9DDB8ECAD2B9DCD56D687DFF71BDF29BBDA0A0812695F81C5EBB83F8
0A810D6560F28D7CA1F89A11F253E1B3B4EBAF511454E4BF2C46A333BC186558
8D73374455A32DE993526063AE70EAA647454ECC62BFC5A53357F2955E4A8A02
E20AA64AB6511CEFC5A32874C8F2BC2424C6B85BAE80191216A22D93BF2813EA
18A1A961543D7C58C4F4B263D76AD6C61270F2A77468B3E59BA9D861E5AA6CE1
B7A9C4C2A13E80C4052283DF3529210B3F6E90C2EFF205866865E7E96F34513B
05A45939728619E02FF1410C0D220F6D615718893E7370A0B91675BCF681B2D9
56112D9D37ECB819017472DCD38FE4724834869F82985A69E33BF862DB420DEB
AA1CDF83099114501C037873E86E0D33FC954E12D40038FBDC78E7159B738516
A078AA386D9424B8D4913B7848D8439D2ACAFB7C81C9AB192D77F316D299D11B
24F67141B1E0FDB564B70FE68070BE6BC00F22C11A1291BA6401C722487BFE19
D7869DA874C9059677DBEF958B7AA06EB924A17B3EFE9014493EA1FA8C4C67B2
B5DC483ACFAAE88F2DFF9FAAA7825854671ECFD522540C9F6C3817C11D3B63CA
8ECF710EAC4F27506B67B972633D0821BD15F4511F305A5677F2919DEBF7DE88
4F60E36360A7856B6B6A8A866832534279AF45B4232877F45C92ABDFE0910F7C
F86825A1B6012FF93479BDC9639C01CF2C783356B33127AEC7039D40529EE54A
756D8B7524E069DA60A38AFE592B8B228ABE22B7BC9CD9B23277FBB567B1377C
77E21AE6F55ADF4F8864F4260562F0384165444385D5A8C5966EBF191900B898
85240634EBE8A5DA382E0EE3583B1B5D102B6EBFAD60AB9C335919EFBAA55A6E
36CE4887299E395EB5766080FC0B6F93B1247F28842FB817084C9C090616AA72
25F4ED6996D36CD9675009C615BA26BD4904F3130991023E4116A7E6BCB26C10
7106241DE039BA7F26E137040BAF587AE03A476526F025C70F16EF23474C0EEB
6E27D8562C7C733CF470EA198494A505A8F871E8EBA31D4F0D9F0AEB9D0EF63B
738B582F7BD73DEFD5D83707BBC7854B6FC7FA6E2636F0B68C4858B247F70C4D
F602764B9465975E9AF28C2046EAD743CC350E747D6524B9CD7F325946B9287B
F7D46E4342A71B0409B2BF5FA4D340DD549F6A5B05D2784EC5A248560F4E214B
C5304217B3AF8451C190FE1C312527746E45DE39D8D43CBEED9A19FFE143CA61
3B65344C26E189D790A0211556C609F107C78F55CA120F3449A697D1305DAD2C
D3EAB88E2CBDC022A4E036E232237C1C16ECFA62D6CF8EA3B6610B58C75EEEE9
676201206E4A8B8C7CF5EF409F2C0544DAAC926497B1FBCDEA07DF042ED870D3
9D74709FDB8CD2CAC4726655371EDDAE78A5D9E0811ED4DCE8C23DAE1ED44D06
F4DF09BD9A00C1DE178E766E05CD3CA64301C592BC01EA4F6D1973586547B170
A3338C60FA1148DC5F3F7B7DB5EAC870239BD137CC85AD54380379F5C30B0754
D0A0FD8DDDC7CE725B58F37DE7DF077916C912F2808D0E4CA32808D0439A148E
3B1E18B9C88C8B4DF23FF5C53B2881D7C23D1C239F08137BBD8FEA326E7CD1BC
C80027A40463BD58758F4402D3DCDFED46C2E3C405E1B1E8DD0062E1272AB5C8
91953946FBB4B9EB0A74D0F7F4FAAD798571EEDBF0CD4C92A6916909297F27B7
5135990685B849E8244D2EE73D5C7BEF1D3042CA8353210EB4293A2B2F1BCCEA
7FF2AA91F52D343BFBF5E91F2381AE5B6803C46605D471B7BD122153E87D872D
EBF37727370BB683A194C4C4DE13F54AECB116BEB3E0750E10AF272E0C015641
0F9264A21BA79821B29D8CB78746C314E6893765AB9BB7BB1730D758F687E615
D2AEED695331E99591AFA000AA540ABD36ACA911E91E20912AB819A80D5183A4
CB88E08E0E9911612639C05043942AC8EA0072E9CB7154C415C0FB37DFE3F01E
638D5052C87A8359DD979C44B730F06019191C5BED15E6E79FAF312ED8EB0B02
3E712A0F6C89A6F7C122A561F133FB4D2A98EE09B11ADEA53702C92C210334E6
8D5F3E1BCC0E81CE178ED749B00FF4089C1AC412DC5F6696C9D8B9D2EB24B35C
3C1F8F63EA348A95622AF76CDD5C4DFE06A8C7534A55FAF937777E864C98062C
CEAA3ECB5E518C75FEAA240910646EF782303BF34FBF8162C8650D5A6F0EADB4
FAD9AED7994003F74E09A3CFD8900A33160CD1D49AA1C7BB5E42A2B0AB5A9D20
A5AEE02435D84A2622ED87454A2867E112A9AC72653A7865E2DDB9C236384228
94DE4A396FA798ED1F370AE5247E0E703D4D4225ACC1EF410631555D7DBC814F
F84353CD407284FBEA1D371CA578165B888D771ABEF7C3ADE33DF899E55FB0C6
A99A97A474739D07FF17DDBA267EC6C0A6154094D6E7354FEEF9723F23CA6E86
D8467D66FC5DEA43D700C9712BCDBCB15EDB628F4B840A76D761CC213376A0CF
3F137F399AF2F349C1D7FC9EE28CE88F416F1069D6907C3E917AECDD245A1BBF
4375A03755C145042232F87BD3F097746E41A70FAE7761AB26D1FDBABBFB56FE
D8C80879557D3849CBFC7D25D84D137ADBB5FD4F6FEF8CC9D54824EC85DDF553
FC992F823952FC7591D08F035BDAFC9317F144C94E828F09E29A02F0D6639DF5
08D32902957CF0BE88694AA031FA8BCA9E73D48A60FBEF090FEFF955FEF964DA
F53A9B58D2732F986DD20814A1C11963E4FF24011CB93D616CF4A6DEA6ACC5B5
354626A142D85BFC4F03DBC32F26253B97414C9CFDF3C3EBDD68FE0B7908AF88
1961CDBB6A94155524361C0B95E42AF0DC1542752B2129938BCD020CA19D64E1
0EB5DE254B638D700EF4BA620D924D65E95A329AC2657D2CCA597A4FEF7F1347
05419CFB59A93578682671B9A2910BBAF099C877288C19A4EBEBCB3C64415248
C00D0295332B6388384F27779F0B0A2D05A9F3BBCB3C1F587EAE05AE4D2C5319
478E8D848ED75B368FF45ED8B2D572AAE502493D2A3660F8400E1AAF9B27AB35
99FA7E39E250E91A67101F20FAE8BFC13A07FD2F7FD3A45002C02AD891458739
10D221602C35139358B1F23E0DDEADDF0AC07B1689EE95DB17A3B6888D9BEB65
C7A9BA2CD903B2F8348489A57F5A7191D1627A2C76A856C9E178B17A40293F98
E9CACD819DBAFBD0FFEC6EF5BAA6D8AFF764786470A5B02860DA35A5B3A2BBE7
45E6E4882CCF3A980B0C35F6C170D7269F7263FBBBF4051A51437A218711AA18
A408F16E7C9FD7D61AC4E859A91CA4B18D5BC3B0F6EF0287298B75C11FBD9FA4
1BF203A988C21BC2C550839E432350ECB4471F8553F7B4E42128DCA6B1239DAF
6C9D4A8B8AB7FA8AB013EC3060F02D6DB609F59E0BDE4D05891811A41F7E47EE
7166D88DDCFF5BFE1AB84D873C38009A857DB436100CACD8DEB98548A2FD3770
B44D6194717757468A9C84238E5B83AD19921E31485ACC168C25DA73D95767E2
27EDA7FBEC3FA6C8C58DED3649994CC965F81327D8547181CE06A73A6D696552
6A6EB8009B1C40A46791E8DD0AD66E125F61CA6810BB4B74E266703F9DE0E322
41D93C72DF010EE7DF3B7AF46CAAA9463E68D5C8B792D3197C4EED52CD16D5E4
493C1F8944901537C4E6AC73E5D6621CBD177B50CFD7F86E786D6E6EC176F6C1
3D7E9346C2859A185793A764E960F236A1798FF5E3A740ADDEF422FDA93FE058
53A9989A0A7252337DDCE50B6A040E49421069081644A51C80D37BF73CB30254
BC1D8A551F71FFE93F068070448334307A87526A86A3A7D53AEABC3506E78DD1
849BFF403701D6059D6CC2CCFCBAC8BEBF440B8D3152C63908C6882E56EAAF71
2984E440F40B5F355DAC74EB02738BCB094E40A55A48A26BA9970D09EF48EDB9
C0C6BA95EC2A5E98325594AC418DFF541515964C77B8D2C8E953703063F17F36
D042EFFB97936DA27FC3601DDD601709B71382EC67BB58C8D07254A6BBF7FFF4
EADB3B735D143E4654A5F06ECF67F0305606CD0619022A5DEC8206D4F9B8D3B0
1CB47BCDCCC4F1898958555F5218EBA0BB9F6BDA92E8A8F645C51D69C597141A
DACC7696EC47C399F6BC4CC2760FF9366A7D1F2ADE54B913F1ED476D606ACA25
83D3958E9EE0547A5C54C359AD40D487FEED3555A936A7F9A2098050930339C0
DB023D22CC949331C13287D1108A4F840235AF8E613FD6176485B22A31B165EA
8DE2F2534E57BC3E63D44604D095AAF56667F587FBFB99FACB6315A21101C80A
6029178A3D776FC5BA1371DCFFB848F4119D1360A8F4877EAE2E091DD7659A4D
E41782F4593FAFCAC17CA91511592569F50BCA5E2EAE8F2216484456987EEAB5
7173FC1326E5980AEEBE4C9BB4E1EA8C09A9AB468E408B268D7C5C02BED4CDC1
3D0AA452FFB97821C615377D4C4FC80536BAB69FFCD6AE82C5B016A6D528409D
8CDC34C11C1ABD217754D32BBDE9E82E1C676A4C906D06A29CDE917F3B768231
EA4192292B734513A5334C0DB3CB07840131C0A1E001FA800D11752EA22A6118
81302640752651AB06879690063E4867FF3E636B737E2923D8259E2EF88405AC
94CE63DED1E5A2236574F27F5ACEBADA23CE79FF4C12A228FE531B47E40A703F
E88FC49058478ADD46178E1D968E21B7D842B770088B4FE66CE27EC9B172C1A4
848D473763FA49ACB07F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: stmary9
%!PS-AdobeFont-1.0: stmary9 1.0
%%CreationDate: Sat Jul 18 14:16:57 1998
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (1.0) readonly def
/Notice (Copyright 1998 Taco Hoekwater) readonly def
/FullName (stmary9) readonly def
/FamilyName (stmary9) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Medium) readonly def
end readonly def
/FontName /stmary9 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 90 /Mapstochar put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox {-128 -2956 1083 823} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA3140A8A4C99ADB
B3214E61CB091BB87421CEF35FF5745EF8DDC51293183D75AE11F26462B918E3
F15A016BF051C59D797E59AC042DB329D8738C9DF453DD062F0BA8A59E23E500
D03758832A6150BF51F1096E643C98DA553929EDAC78FE0F28B0D59B9D5042CA
218A2566A65C6328C392B036C04A329AD809C5D1D42FC26040CDE38E8120FF5A
D11DE58288113ABE3431DA9BA11C94694A2A4204029E8AFCC15F893399C3D386
20D9C687AF17BD9DA10337B6323DCB65E647CAF0C8BF047408CE71217038A4CA
48483F9A1746F6BDDCAFF1F3B967DCDF0EA4FDAEBA2BC1DAC5783877F5CA1CBD
06C4CA0C68483A7FF730F1004A1DD26E5A2275937C19D420ED1F806274E06BEA
17A68BBCC653F111F2DC2E2D91D1BBD8632F743270EE092E3B438B2ED4E75306
7CD8ECAE59A035922856DE7D6C3831A18CC9AC5B38CB866DDCAB2930C49E1406
30A42FBE6DE36AEB8A2D0B926E83644DC841C307B2796C39258FACBA197C5C54
3EF61AEE08D469E161E0FE7BCA6F4CA6E3828DB5C554CEECA7A42D646262E6D5
F912D45B91BB68B96FAC1CD14D17BDE227CDFB3F8F59CD80D887B535C738B80D
41CB1E83AD7170F7212507B545B6CB151CE6DF6E09E3CCEC214242DE658E0406
0297886390489290A12D949558490CC11EF34C481EE04B00276E7502C4AE4B5E
C1DCDC675DE1424406ABD4A9F22F1CB14AEDACA154337C32AC6F22ACF9089A40
3AA2A099E1AA5FECB0DE30C6F6C87408564F90835C5DDEB2C0D5A60060D261AC
2634EBF9AB8EE243230A7E139E809E56D3D8D634458549BA1A12CB981D968401
0D096310FCC5746AAAD8772C2E9DBD8F2367BB06AB858CFED0463AD9C0EE03F0
34FD3A55E67F3448A4297C3FBB0142D525AC71F643E21C6DE1FC9C88464944AA
1958EC66494DCA92E809E0C72380B9AA891DC6A7AAD53C3C86DB83F401C51814
1E6BF66C9DB09FEF1E8801B29B4561193596EE51F97141125A74C23F115466B8
FF94029D62AFB4C2E7BFE0E437297DB82A1C7ED1E361BAD8DE2B1AD0B30D5A2B
2DC48C9FD6B81011338A6F7E83CDB03B8D5D456FB2C6681564F20E5B8C2B661A
BEA1D511494AE6CEC81741BA16DC4A1CB1AAEBFBC5C57B38834DF8ADB3F37C18
4A0DBF5715190F3B99B94D42A0C3E157A78ED1708709C322DD98DFA4B81A028C
ADD5C5C0B771F763EFAB10B96556E3F685EBFB685F559403F2A07F9C0043EF8B
8DC44A442782CFE0D1E1EB2321B07E0ABE1E96D0106BE3F093DB992C4B3A166E
B179E50D712C65518987D00AB9A9BC8397DD0C4B791E140891C11D7566A18B37
67789C4433663410C34A1D9D13B51124FF782A06DD06993424523DE5A0DE2B4A
55F943778A6596E4A19EB1859B2D25FE65299DEAB3D30483BCD65C994D537BC6
954BEB9EB3032E9C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMEX9
%!PS-AdobeFont-1.0: CMEX9 003.002
%%Title: CMEX9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMEX9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMEX9 known{/CMEX9 findfont dup/UniqueID known{dup
/UniqueID get 5092765 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMEX9 def
/FontBBox {-25 -2958 1495 772 }readonly def
/UniqueID 5092765 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMEX9.) readonly def
/FullName (CMEX9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 26 /braceleftbigg put
dup 27 /bracerightbigg put
dup 56 /bracelefttp put
dup 57 /bracerighttp put
dup 58 /braceleftbt put
dup 59 /bracerightbt put
dup 60 /braceleftmid put
dup 61 /bracerightmid put
dup 62 /braceex put
dup 70 /unionsqtext put
dup 71 /unionsqdisplay put
dup 83 /uniontext put
dup 91 /uniondisplay put
dup 100 /hatwidest put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB69434BD2F5E56C8FF46EC332DB0
76984939803A4D2E4F7065326BC983B6DC4219499435B304C1AE83C8A14C4085
131D1CB66E24EF3AECA881EB3CAFBD7CC6E70F905DF2FF583BF11F2E5A674AF9
11C625E782E1503243619CCD6B1222599F709EC8E7657B1053FEE4D83E29B295
494CE2255E9D555D71DACD865C95E1A3ACC8D19A468D316142A854F452DE76EC
B45C35C92BCCA844FD24BF5D5A43BED6C829FAC12BEC9C216414BA7783DB2747
0B114774A6508C9D617C38A99EB5DCC26758D9D55A563F8240143878C5C49256
AD489CE0A01657DE0051A2E845EFA4EB61043270B4A8E5E0676E90149CAB94D5
AAA65B9198DF0EC8439A194D5CC14FB65FF3BC2D67707BAA7B23484DA100F9DA
DB0610AF3AD273DB18B69EC987D6D9A0BF699BBBEA34A0AF1AE401429DA0C85B
AE89B1AB922D16074CE2208BA2C3F88AE84F7BD87F4F23EE64789BB62814BFD3
946734BDD1586BBD77254160BDA350FCC2C30B7F6B6AE44B928191DD564693B1
29D840BF729843DA6A707EA375F7541D398527AA15017B3B625000ADAE91FCD5
B749C01D15B2A8C60E3E4D97D5C454974BFB02CC706122041709F96659FA31D7
C27D613F0B45ED42ECEA2090986FD97A3AD736C9310B7FBBB8B6FDF7052B9941
A609E7F7EBC0B652B6FAC06337ACC5A1D1260454F16F5EC6C967D5B7402600FB
546B55667896C188F50BDDA2E195EC55C0A7B48D6A025845BCBB4B567BB19946
69191A766E28660A8DC4A15C8022948207DDE6E7451DDDED8376E52631E4F0D6
B947E227F99E03605688E5E28EDFF6E8033E25FBE8F6A86D5A26B2937FF48C14
BD9AC06DEB234FD1669C8F3EE9B8BF3E17139E08C308A3BB0ED0AAC81291D8E4
2C1134A3314BCC0D93D513E3EC0D91C45C05ACD19994AB285B896334721B8C42
420BF74A5CFE7CBD243D3DDB163362132A0285C280277B4C60D9BFC3D40944A3
943697BD335C27F16ED870DABE54DDDA4BB5C3868DA4CC1C0DDCB50826700ED9
9DF963A75151C5BCDEEDCAF2576E0E21288D194E540B422BC03B62CFD137E732
D0660236BEA09052A292CDC218E48181DEE1BEC6548C828AF0FBCCF10BDCD4F8
B71AAD95C5CF688815B9BF856FCDBBF769FD395885A88F4A13FC7B9440BDE7D1
90324ECFF82AD30375BF19834A5CDCE28FFEC0FEFE45ABF372FA5C6F03D972C7
AB3BC52C7E1C1783D6F80155B3A5BD54F19E6B3FF7155A6DD083438D0EA7AE2F
F5BD3F1C0A13438F4C42B3379D2868D688C14DF6202B5006BE89F09FEBC4EE0A
CCC50B10D3F9E56CE282FBA763D6F46CD62A860CA0744267D336833173C93951
87995BAD6E789CBABD53DBAD179F29DBFE73E9E28FB75ABC0C3014A72D9C3CE0
A80412E418D69741397C867907C795A20D45306EDCF032DA7A4A248C8FFA0189
2552A041D06D13826860886B2FFC1361EEADCD6BE3710CD640E881B2811E81A7
45BE7BF836AFDBC85E5AE36274D19BB1A12083A35BC231D6C1D98F8470ECDF8D
8AFF93893D5C0557152DB776FA755663D4E1A7659DD7D7206305378297175CE0
444B24650996FFAAEF4A23052AA4E77553F992DF1D6819C195B0B962F5571346
7CC036EE1D527B68965DC2EED66818821AD02BDB5A27B3129C43986C3928E391
BA170B1B161818BB2E2529024B721839DB116A174DCE89F92FAF4DC83033434F
C96D97A6202D48E7FADD753825159E50FD051D7D268C5807225D52D161569EE7
F94A99E78DB76DF5860227F5B6ECB1FA255E162C3D2AF6D96099CF3286E96DE5
31D324EB92FBDCE0FAFC586FECDA5D9376D40C9B1A43BF1D52D3D54BA06745AB
58E755921509C3335F72DBB2366726C4CB688000C1D6BCE706A3DE168DD0D5B7
45BF139E205273B248F5C4E3844D4CD211E6208A2BBDBCD88AA8DABCE4FD0594
151AAB58FAF716298DDFFA7A97C02AC060A114FDB3A0FA6EF7B8F1CD8606BE46
8B7DAC1E72788C555BF9B5701865B263725AF314DB471239363AA8437EF51206
2181B31E56C30103126582F77EFC23CD8F37DE389C16333F6C4F78699D187746
EF94B8A9BF312AC2ECE4F23F9A7AA0487D09CBA71C11241155AFDA73BC914425
4943E10468A243ECDBC5E70A06A00529EC2DF656F21EC7522BF41EF0F8BF7D35
E0E76D6589E77900943C06AE933DBE3668099BA91C38C19E945BDDBFA4FA5C49
ECDC4F183CB9189609F753DBE5D5B1AD7FA8BB9E28E3BF72DE2C604D88F43552
ED0C3D02277BEDAB0DB5B7A9CCABC8932006E8D44300E748C149C08D41F86608
F980E68813988906B7A4C5436CA1C10E54EF608945632E82B22021193A51342F
5530D708792FCE9BEEB224D03DEA481107BAFAFEA271D16C3E8B89A481933D27
03A044FB481748F2C7CCDD0562AC53F9AC2A9423FB0C7DDDE764022EEC181FC1
1EEED102ED0F29A61D17004FACE1A1CBDB8994E2AC2F88DA74B173C45362EBBA
597EA55D327886FCAB9221CE187D9589BB795BAA03F931CBF86DE3E8668CE8E0
F8FD3B098CFE2ABA2099BFF8DA83E54E9996D2DC42E7D9416DC2D7FCBA3A0DDC
B8CF9B37F7EB7AAAA6AD85297B042900688BEDB470E6E38CE0929AD5176A6C7F
059174C1123F3AFB6FE77E4CBA0394C9A305FBC8FC817BFA6F97D530C77AFBEA
29CA42B9551906D7187398AFDABD2EE9B06243E95BB467EC8E0D895474C9C455
1CEE93868A6412C4BEFF0BD0272BA95DDCC0369AF8160EC2FE1C60F5E535D25F
B0632C01BF40867E507E7BDD03BCC3BC21337FA3B974244E5D4591437FDFB185
78F0176F5DEA5803EAE72E013AA7FFE07C40EB971DD7937DFE111BBC33F4F8D4
5504AA54C414D94A9FA908B7B5356B913CA1AC0E71BD21E3CE550226FC5ED00A
86C05BAB4571AF93066C4F4612CC3C51BEA3F241EAE68A79284DB837F5B1904E
B642AA64A984EFB35F870912ED178F53DBAEA4A0E6E116256930BF507C01DE54
8BB70AE4F99C5639BE4F065C51C95D3C97512E6C7E2E796E90CC540B09DF02A5
CCD2694E35C075BA264B1C1C83CBDAFCA48807A008B1873273AA1028923AABF6
6660CE500CF174183CB593014D8A272EBCF3A09133603CFFEF43A6FF059BCE52
5BF232A5E067BADBAE7D90A56392F6B5922443B8A14DE64434A0018E21C1CC89
CD5D85A03022B4D80FC1C3C8740140DD6793C65319FC3E906C7CB714DB22068C
A66714E765A17F446CBDC8DBEFFD8A8E284DBAA179C9DD9BD9FD0A1DCEE171D9
D5E47F8246FBBBDEEA159301B189724C21E5318D1B73BADDEBD21FCB6E8DBCBA
4872FB568BEEFFC852FC84255B5014DB80589DC29AF1EDA5A57309FA19167514
967F9F9D5DE56CA3E66A3D937C041E83C29AC39C357667715A824ABC7A39F398
60C43B9ABB86F0CB56F9CDC50B6CADBA7938D020CDD81D1B59430611632E2368
E7483D596A272D1D99B5CDF4BA2B66C9F50625ACFF60905652C251B724FF8C68
D45C0174D12B87E95E7D480DADA7EF001F12A1B3528ADEFC3052E7CBAE406533
32CE0D5F96B7A2DF24ED4B5C6FB220E751257161A0F095017D90E95F1DCB6B5B
BF0413399B722A309C1155A0A9F2903CBB7F192149DB130BC24E5C41056FC750
1E83C4E6EE02EA45465598DCF7C4892D00F14A954A4AA6C2E616D39F09BDEA3D
27F0BABE6CC9D417A17D3EB2C138A842F1E53B30F58F05C9C77F3A0CD8B3ED6E
5F67D05F551E95D9D1133D33C9F8CF57839C998E204A1FD39F24EAA20FB6B3D4
9FF31D4D1826745AD4D3E95EEF71DD2D4E6300C42BA9316F1560E2D9A094007E
79C04433D225BFDFDEA8F2E6D42C456B722F80EF4223ABB38991344ED1C78CBD
830400A52BD0F2253E20A30122A842971BE77794DA8CC6290EAFEC44E3273E10
54A6A2AE4E8F8072FF4A37265CC0C1FC4F773190B439DC006D769F3089928C4B
DFD6A6012A39A0C8E997599EA3F4A73FF32C011819711BC6FBC4B6260A02DC29
7348188F3B7EF0BDEBB8EAFF7347A3023C478F446CE904FC25AA2DDA51D976DB
584A2ACD393B9E9C601AF9DA9629DE5C003F742AFE6D414A9BF1377D823B465C
CCCD4A7D7D108A9D639C6BBC15844D9CF1AB8B8B2260AE601E7E9F7394E212B2
693B47C8AB94612A779255A9FD9685585B0D1A7FB8B7E586197426517B122055
CF9A5207EEF696E1B881E64754AFDF0C60838783E6BD49D470FD0553649DB0FF
7B8CC86CF80D05B0701580E75D874515C4C8A7823CE924E9E7ADF1C97085A6CE
24EE43E7969701EE5D3E5F07F59492A9A946F300DD83F9FBA4B8CDE73C12C563
0691D30B57F253DB008E4595AE2D472376E88E30246642031DFF3132F971D172
19F4B6C6F87303ABE5E1B4CF1AE504D1E4B5BF5C86E232B42304840A9BB34E73
BA98A3186A01B72D98C92032180DCBD3A8715016557108B939293E23697D81C3
FEBC37582B7F7AA541C220DD5D93E555AC54D7D277AD6DE29158CE8B89E29C67
A305FD1F200B5ED02588CC1E0CCC93F9C8CED113066C401E1FCB4EDFB49C9224
0FDD03519559B710C046DF2FD60DFE4029FD9505867321D98507F0523E93739A
81A9E72430D30D0585977DD323CE222D408E4E2DDA7FBFD91A1EE1F75B530C6C
A5F6ABA3BB9B6CF94C29837A4186EA933C7BA60AEA9CF1F7F632F5F561A4CB79
CA533B32069D8A8D2DBD8089F295FB7E0631ACF087B7E777BF77EC394DEE5BE3
B69A27B122339829F3593ED92F42FF2721840133DD96450BD9DBBCF984B3383B
DF60B5C6603EA17DD5A3D0BBA5C61E1A7737E5F7719E2CAF59EEB87293BBC72C
0BE5F5A97CF28FD8CE19177B37E8C223549F926B6A979F89C06FEBFE86178B82
44F429C3C3C1F6506CED46DE0774ED12D7BF94756D38A8B1801B086CE71FBD37
8C17A639A05280033FB5A7B8770A953C0CCB14B386D336C1CAE1CAFEEECCAA1C
936164553CFA7ADC9E540353BC77C57AF8F96CD0FB7C41D5265011C86FD66BA7
993FE45C8BD006B9BF0CFCD721A80368A1C4DD30EE15EE526D6F511DD5B42A75
9C53639E5CD73845FCA08B21A3EF803C0DD4DC61598CC3446AE68FD548B9F5E3
94B6A56EF1D7BDDAED84F8213EB7DCC84E699BD985ED8E5CFF2C729C02A925D8
B7906366BD4520AF1B56A6D16D5B8D1A9B9AA1EDD2CCD597BF963F42611D48E8
D2B4F733DAF0336890511388ADFC1A8801D25944E95BB859DC761B72B9E99A53
584DB945DEB895BE8B6CD42F39D9568CCE9F89781614437088584A57EF884C63
12FBD3E7874C42F97E8E2DEE2130ABF60DD60A3D84224AF5F6BC06F1DE598843
C9016FCA08B9A343FC5638A5F849C84B248C3BD487895F602268D3E6F5EE8AFD
0016BEAFE2901B570E75465A86AA357D15EF02EE39D18AA90D784DD117CC911D
47BCCD7B6221F4A0741BDCF8BF30EBA66596F2164C5C9B9BB1E013C9F92D0E26
A8C82CE7E6EEB0870BB2A6D09BF336CC2AC4B35D740403A60C31984F11B0D4E9
8A8B95DCF96A7BC07C1FF7510EA6B709A2FAF612CDF75B71C1E471ECF2650192
4643D9FCCDB1FDEC4FD158AE04768C099C7CC1FA1F693F884E04522E179C9E63
778D704419A3EA4217A85AD8E70B6BF53F87430E511C3FBDEC1909CB52912EFC
3E645F84680F4750762BC29CDEE4D355E3F2DA698F474D585E4068CE0BA9C253
89E76F438987B389480A7CB39CBD601D9A2A5640EE3894A345548F18269D275B
D43F757712E746E7EA971055FC27159818DB2E464628E362EEA21A9C5250AD98
58DB14F128F2C1394D38F5D12417141DF703A471BE813269CDB23E3F8AAE820C
65A72B14E8663ED16AE4BB7B979545FA7A3EA413E6435E0BAC5F16EDA64F5AC4
5B3B4188BACE769342E1B5405A3D87A3E8D337E8C6BB74C0FBAE053BFBC86746
3ACA563C0B70FE33B38C5F5C0D704B90D8A081F5A21ECDFE0C800CCFE29086AC
1AFD3E9F3A37C62656182F8FA82BDC9B6D818FBC9377271CB5F4F60E2AA1422B
4A52A35434D55740380F28026DFC190C9FB8F2D60A87E9D6C2FB65E3B745EBED
917DCC5CD77BEEA69D2C9698A0A2BB3FDCA2C338B1D4FD47B06FE48A1B643DCB
AEFEE774A7636F7D29FDB77B8DFC56FB7769521857ACE49C2A46A19EE83FA941
F1F79A39384D9C0C69F3AB2E22B142FAD9F6EC6F4D9FDE36E12BD766206EDAD7
91BBC76CC9F6EBD6668BB435501709CBE1CF23C32C5C2A877B57445EB3B879D2
FC850D78BCB7E116C1155981F8B1B7225FB495E0927B42DE27F16AA7DF593762
67A6AD250B378667E70198B04B040132AEB3747E89F9F2A213AC9D008558D32A
23DA61B5AB7D18DF90C68BF29FF638630D5E69872C3B7D905182BA65661CF042
EBD958B8648F5B650425B86336F3F57ADC4C3A02CAAC08E87DB5EBF6DE8C6E40
CEE8B7138105873B76925E5F08EB999C4A24E1F3EBEFD79B17D31BC0E2D12C4C
52708F03EA1F6859B3F91B885F76E6EE97D3A813F2635231F9C93D642EBBF666
EDE5B814BC413C5B85E31DB99EC2A1D6861801C7ADA21BFE167441B26E1E2BDC
6BBE9A438B41B5E3A7006637708163CF0E95AA0C47C15DDA87893AC37C3130E4
81F084FA674E69515E490C819676C2E4FB666A4125C7677FEB8C32299E6751AE
0ED2F1CB6AEDC00E0F8D8EEDC6C735A5CB813F1DCC95BD568030E63AD7DC317C
6F61B99A39C65B93D0828817A1079F40909A01A2F11A01FA256D2C57F7A28BFF
82D4E3E4CE220F270536A6424468A2A55C567AF75363C7BBE849BA0547D3867F
34A50839A7061287272464F0C5CA47C965A265E044A366CA620896AD19EE956A
8049A30C2B93FA109424AD69F8C369379C5B6DC1C695DB16E43912308DE3E3F3
18F592F0C2559951F9B1ED4D9B66D0F691BE22D45361D74A216C4D91B72AC393
28A28481B8377D8A20E2DCBB87FEAAA6C47861D12AB22FE1DE62CC65798D5614
58AFBBDE546B5712A69F199C1D84CC20281C24246CFBE9B2DAF3A9DCDBA4E5D1
BA82CB7082E3F560522D4947B51182431BBC02250648D7D2B771FFE8B272F269
14D4A76B275B1DB785C374A227624FC944DD8E80A0316EFAC25B7CB975195EC8
B248452D9D09C2B304FB2F5D416BB6387C2B0EB06223AD089BB9BF21B6079B1F
22DFF38A0E248B9733CF97D23214A30167C32E63803515168556062D710FE258
C6E3AD9D3DCB888950940F7E91F5B5D25C03B5A25AD033C8443DA01914A20EA8
F2E6CAFA15F6E10D5645DB2EEF7D627BB5DA85DA1DD2009CBFF9D2DD159FF95C
211360B517EFA263CFD0D2368C13381D3BBF877CA98DC6ACCA103B099DC2F3FA
B7A6C1A01CEA32F205716B83CCCFD20C8ED17A3D778B36C1F28C88B7151637D8
ACA1CD904829034DE2B388CCBE8789A647604825949FAB2921C78C670DD741AE
E988968EF346E13CE3021D1A0DABB13746EE4D782630708F40346358D1E71DCE
A3889ADAED210ACA14904C4F06EF1F86542C5ABF455201647355CD7AE4106036
F1B7EE78A25934E8D077D323F961A71FA3CCCDF5A2C468B48D08BE2763346935
0AE028DB5DC32E84F6D20CDCC34837AE20D6FBE559C10A65DD5ACF4BD1AF9BD0
2D5280D6763618A3803F4777CB8D89F7F96B93EC116373B47C98A95D9C332C38
4DD9CBC706C928A414FA1FCC656C3D91023125015202411418DBAEAE0472AE86
C7CEF889388A03B9BADC361256A312AC34F3A4D860D8913EC169F62D3F454A67
DCD2AA7A2527B1C5D97A19D75C708AC4817E54189B0658644EB6F0745849B936
2F045CDBBA1E90A7652AB610B46040175DC0A7C647A70D80A62E99F2C172412F
CAAA874FAADC87B45617DCDF05801008A17E2A4459216DA89DED97F3BFC146B7
2E4A674F95AEA7795A84D52E152721D05EAA79421ED2458E2441A83C38895C7C
C49D3BB154C5E42F4A959CB9263B3326CA1D3F489D2B68EE8B0507AE9A94F529
E489291245B9CD0599B4DF18C419CA5C7208656C5B4C5EF6F0EAAEEA81DB6D79
AA40C7D5AF1AD33C0EEA39BD65148E31103ECEE839BC841369C17877287D5998
0AE3C1D430AB256C8975F316B258C3EAF7FB3FE4B856F1A96118C21A05EC461E
289F62B8AC342C1AED3DAC6F6E49D7EC50542A9F88B20EF81EF92B5D9A5CEE35
5D872ACB0C4B6FD8F1236FAC2FDEB244FDF187CBE1F42E739B6485BB19B40E72
66D98FAF66E445F0DFC629B39550C760AF7205CAFB381CAD5E2D8911797658DD
BF8245253CBC7BB3E3EE82489106D61B7ACCF26935360CD49759CF4773574B46
9B8A7198BD4E89F9D998559D3D56F8C6A6BFA484FF0D988747BA62D4E64BF920
D16D5C00606526B86BB077194BAEC1D32AB800C7BE949E96E6A7446101F3D462
A0583E9B1059C40AA77B58174603E57082047CBD9F7D4DF623AE5627F89C98C9
E0DFF9B89C065FD3C05B322E05FEAE5D70435B0D03992FE6D71BFC77F482E7AE
4B85C320C779722DC05CC9FE8D9AD16DF75DE7182E5B2403987EEC2947CC3D9B
D78DB8FAECBBD25A77D1455A7EB82E8AAD3B1C0A18FBBC9F44F0CBE3C7C8392D
51C256C5A7BE01445E47A89DED93931DFF03E333F2109E66FC8DFB397B110386
E87E767061FC7D4EDE76872252B934254A3D3AD6EFA4E81BC6C3AB23EBE6039B
AB85C2D156B01B8100ACF30A272342E93FF673193EAB118456B3842575913713
EA4712EDD7C8E72CF14EE5BF79CC93DD60CFBD89E99DDF266DFF86C6E53D8227
535E7605DD7E2069F9787A09D684A43BABD2FABBDF5B687B403CA25A1B7C1ACB
CFA6458A24F37DA7468011420DBE03BE2A60B680F390D18DDBEF81ECAD197945
DF3441DE5EB7FB5F22B68C8F193A778AEE18A427216E5E5A6FA7C500D4166D22
1C64A4564E50C5573A0DF47907DDCB20F91A90333BF1B680D9A7CD362ED995AC
FEDEE6E50E22951B8D4B365DCF323DDE7CAAC228B1E37A56D2674EF166C092CC
7E5014A15433F63C8DDBB3E5FD49602118453B26D890FC9015DEDD1539EB9D39
2802F02F2D5211035363F3509C584442ED5BECC0461E6131DAC54856CAA9B1AF
0902FBC8E07CA039BC5340A56B9A9FAC6CCA2285D32B0248B6757BE224C2FB6C
994BDE9B00DD06A7598180C7599FDC862D5976A5560D9F5825DF079944F4DB85
13FADD0F8F8288AA607B1FB845C3539CAADC620AFC485BC9E851051F97E4A184
B2CDAFA204C3C605998A10CC6126A68F1BC447FA7C45AA218E44A4AFBA7A7019
C03D58220F8A54E940E6AD7374035FCBEAC5E37C1FDC17A569E0239509333A15
0897169498BF68C2856F13E1D2F54A304F38679DF4A02C05BF47BD10B9ADBBA2
6B2BECF9DC186E0BC750314088ADC16A82A26B0901D806B7C6F4CF8E5FF6AF85
5BCFAFA1B1B638DF28241BA89CB36A6EBBE7F66E2D35539979AF36D83A7462A0
C10F13ACDAF61E33A946AF6E18D2330E5E13DE878888A7DF1A48811F3666C20B
61D91EFAA9BC5ED54502859AEDFB3A24CE52757EC0B33BA8DFA577D1B7AFF209
53BFBA646167310E2D355258808A3392E8920655B93EBBAE2B4E104554F97047
E36890CFAB099A4FE593718A8E45190134D0685D81FC2040DCA28DBDEBB44C7F
86FD04412C73E27D9A79872884A597623F9A7AA0EE70C855A6F7D8C44A2157AD
DE421D5F5117431B3778AECFE8FDA942667A0AB862F53025C2D0606F8EC2800E
96ACF01CBE10604E6A52E15E61E8D9FFDFD589AF86B3617365FA3D7F9721FAE6
BBDCE7B253CAA97A16D3715A8D761B300C26F2A398A4001899B297835955F389
4E15A145A7BCEFF0787BA0422F42D1030A82A2A51B56A3F8B0DC3C2FDAAE9F8C
628345572C8ED481EB539C5E2401DA3975E39413594593E6AABF444739344AB0
3426D5D15855179B634BDAF946AF45F3A34FDF69CDB513B662F8E8192CA2CB9E
B0328BE83345AD153F8D2F36C35AC8C6B234F0F9BB8BBC097A379467E5E9DB58
F935392AB9706D834A153A4F17BC92520BFBC461E4A8C668DBF6D049A932E6A5
9AE49C87573EF71ED1B9A15B6289C6E874D1C445D33001D1AD82BE24235CC0F5
6847838E9C5BF2DA4C706EC22B7985346EF8B8CCA6C009213DC5EC388E7D82C2
7E078B27F140F0528CB36333C94698C400606527AD645F04D58809D1E46B7070
7C0C54A4CD81EA649C608DE4A3725666060115595EE68D73A1ADAEB9BD43FC15
B86DB3C6A6ECC01AA156DC9AF53B7DD4334E8F605FF48F76EBDB9522CBCC795F
C56A5BA3C0C59F7588B5108E655CF731C610B5A3BE2A0FD999E7DD07EACE7C6D
BB4E038223B7A6E49A91412F09D34C0589D1BFE451A08682DC9793AF7B04F24C
9337B10C2CD978AFAA7E910B2DC73B14CBDE3F6F14A70388958420BD8B729EB6
CC87A652A0E95C508368CE0DCE0E3880622EE9B69182D47B1085EE6AA163A8B8
9758A92C90B003769E8F979C84B1640BE7B8BBC2BA343E6AE013D4B3EFEB18D3
BFCA0FB2D3A4E82C287577D795CD2CE3765A393F3D2F01EA3C6D849E6C375FFF
951DA0429D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR5
%!PS-AdobeFont-1.0: CMR5 003.002
%%Title: CMR5
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR5.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR5 known{/CMR5 findfont dup/UniqueID known{dup
/UniqueID get 5000788 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR5 def
/FontBBox {-10 -250 1304 750 }readonly def
/UniqueID 5000788 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR5.) readonly def
/FullName (CMR5) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 43 /plus put
dup 49 /one put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DAE26BF1F487876AD1
16184ABCA7446A2352AB37C36E9C9BB67CEE105C612D36566FB459D6ACFB1DC3
7A59448A06EBA21F8824266BDD0ACF9E356251A897A920C39F1AB236EE06C039
8C4C0AE55FCED464E19AFAF548D454FCF73F6087102630AEA03E622AF2596870
1353925801642BBDC11F09963F4ADF037671B73D48CD9C209DB4D5BE7F4CB381
94887E8365D25C45D1F87EFFAE360104ABD3235E4D2F4BA163408448E814D49A
3E7C171B8F1275D49937C3255326069007B302844EBF2BC1990DDFF1A34C2770
A262ACCE874DA1E0002188D6A713C79D5E9226178EED27D6F4E4DC24ED2669B2
3873F42A48E5C1365AAFC83FAD8B849E5D7E52BFBB01B281005A9EBEB4EA2F35
B691489305BCFE5516DEFBA092F66ABCA2D739A9277AC69F74F786045E63B0F8
66D545B12B0581AEB579D5E1E2A412DB8F66276E05F131EC3B9F543E11F40FBA
8CC47071DB04A5D38A707C9F825527521CA1FC412FB54DBD72E912BA4EC8F747
306A65040671237C8FE84AB6D6157D96EDE13B3A8FBF7140F1A9DA55B666953B
C7FA638353F278D07066AB8DDF0DFFC832F7025DF1AF9F894D52E9FA95EBBEF5
9D6B97768FEC26E845B87C6ACF5395C75B894B5A1F50B248BA33943C5AD6CC2A
8D9AC65C08B3206E7F5E5913CD0D54C9FF741A4D92B628F85E43F52082397891
66E6F922E0BFA2E45F0072217011D4B8EB40893F151E4E2E92ECE5862C467D4E
3833311B08340AE1C0C692095AFB739E9B9A4F56BFA0F0B2AB8455A7470C22C2
0C2EC285026195CB73EE2A713ABBDE4945AFEB92630BF852DD4845FB4C9A8C8A
0C8C971F29440B4A786108D0DA1AEFDBE03568B6B2F3953B4D07A5B7D6FF564F
6CC0D8C08CA459D556154A45133BD7AF70C7D8F474DE66E64FA112D776478A83
B282EA4E941CE2FD6D8F7B68D129CE0093AAF7C1D345C3D65BE74EE9391C9B89
2D4D31764F1BA81CB12CE46D15A6BF941C9F0EACB4A2DECC8F2F6B85FFF490D4
ED7BB6C7CDED10F03F68282B2ED20809F95840A904020C98299E17C46243D9EF
05B5B8173BB2E8CBAB3AA9B8207A9EFE6366C91A7674DBCD9FAF12A2EF4B5117
5687F3DF1244F5439ECD8AB0587F492E990DD7B516C664AFAB76CE71084FDD70
E7F5A38BD46926615659488D3548C5066C06E443016DD40275CFF3105573117E
369C8C34E48BEE832D93F0ADA7674FC6F5A64183DB2B70FF166E02E044B7063A
41D2F396A9158A26D3953F12982ACD1D7593F474DB98ECFD00EAF57FAAF17C7E
C1E4775B37FCBCD6DB1B5BC6209162E57E21A6AF427043562D9854B430A0BAED
20D31A9AC334C87875E53E0B956D33111955459DCD98D54E1BCC61BA58CDB41E
03009979C0A541FA9F69B55D3F3750515E5F268A7B55254B8A44CA732F2B9242
18F34C029665B31EB68331B0147607645983340D15E322E3D0532E6376D40FA2
1041F7988EB9F56D83946757786737D8BB4A996EA7933E79BE61B4EA1115AA4C
286B7AAFE80AB7C619329AD5FA772A6279FE85FA6B623138FAE1C6AE3FA45AB0
95D8020D2EE2979E8A87D7E7C5DA2E6B701FEB4923F401F892D83A4928807152
96CB664018AF24E829E582FA8B4F0E07387BAC53530AB3AADF74404EB2F311E6
C6A70F960FA962E52A30CCC6E15097F9B7BF011626DAD38EDF78745B60C0818B
34663683577D897B1B6AEB240F3A2AA29F1F1800FE0A5C205B35C6A6438259FF
CCEC942AD2D7C3CFE01F956B795C0349DD5380D0140D3BB54FD99EEE5171DAF5
4FA360A740589A1F8AB4FBC275CC06FF89A8350F4982F87E747501A74B7C81A0
0F40FBA9D2875022DC3D417FD623D89FB6A0C0F1B930ACC2117C6CE94AAE5844
0B5C9DAD579B7DDB73F2B26B05E1AAE30AF69937722E8360987AC0BDBE305B5B
DDBEF5A6C03BE1743C518E6B7B58A85AC961B8755BF37688E37DE0632BBE06E0
53FAFAFBE52EAF276365A0484A1A682C9B9486CDCFBFBC4F4A1D6BF71378F014
56DDF9B15A5AE0276827ACBD9AB04D685F52A62BD3DA33BDC2A262B756B58C26
4F3B552841B81CA60C951F400551166C72B8D357D8122685FE97D14AC22AB6FD
2EE4CC429D580AD7B8D12A9C601FEE5D25C98BCBCF96C87FCFBF28419BEEFFA8
7A4FC7B6E5FD377EBD5E743C3FDBB7554A1FB9663B648B15C4119CA952A8263B
278E5845AB929942E1A0FC4CC413F36134884EAF3704865C1478D6988880EB54
C5C5C1BDD7CB0548342B9C7B6F94DD6341C5744A9A3C4A866F620BB70575EABD
AAA42E3B6E23AA029080B299294AF2E9388520367E964A3A66A84628D75F1BEB
C7A58C92EF7335F30BD0A26D072A986635318E0473CE3CD5B4F1BBFF6E781938
EE4E3C11AC27A1BE0C3B55586A4565E4B967ED2EE4674121A46DA1C32C5D278A
44BEB43CCA246B730D337918AAA394728814C726DA4F9C40AC6EE877365976EE
A53276A818CF25E995CAA34039339C55DDDE74B3C11742786C1E9FA5C432EAC4
E184F35560EA31D687D005843B02F9252C2A16F9E4C31C18D0D45B7D5F63D589
3C1FE3D33C912B9CD79DBCCF9FD8223FDC18D55762F0DB2DB241625B91DB17F6
206120D6300D317E82F3DDE6D2D0825547C08BE7E6FF8FB54D4DFEF2F4E475F7
F3838B4ADBE49F8C41409D85085DB5A030858AAEEA5AB9CD2D1172C8D0EE31AE
507D8048E123AEAB05979C872ADBA4833D36626166BBB2A2CEF2F3E641DB429C
AB15C97D7180E8E6AC0D871E20678516ABAA4D616B51C132F41E5661858B8C2C
ECEE4A65A2B0FF310DFB531B213196D2E2AB015963246F44E22E603E741BBFF0
16DBFC284906983A8C15278A36F5379F46C152304DADC8D90C313961E5F58180
EEEC5A15131E5C48AD27F80B77EB0370482D528735FBA3E6C0548BB66CC222F7
CCE87194F565B9EF7F32E656E6964501CE32462FFA6B87087EBAF45D454CFBA9
ACA808C4397F3852158F1C0AE44772253ABEF6D278F726A03A9CBC4330EC80D0
117F9131C5974445B81093C1D6E093C669CD285D1BFE864D53E5F140D40BE4CC
2689C42C50C4137DE564374B2130609785D8F519E0083DD24A44DE24A68E4071
4A2122AB8AB9649660D1C96DC58F37F88623528078BFDA3BA3085D527ED4CAF6
25BA663A61AEC4938CA78C49623FE0EED33DA2D08CC78F86A807E791BC9CFCFE
8FBFA55EC2259B64C31F6EBC45D2DF9B47EE09AA54011D40F55B6F12F49F2266
EDDB09D44C521EC9568CA7E62283C483A436417B65B4FCBC7EA32AC6EB4E7B30
080816F29F06D6B09E5506D3149C5D758BA85D820357D4955B0C1FFB383E10DA
4D61774D3B23C84A339C7348ECA6078080FF8B436B2261091DBBDC02583E366A
622ED9F95D2A85BDBA48DCE8BE45628A4ADFD5A48869800D9B54F530F43A8F53
F765F5D5C44A9399FC1B9CEFA343966118DD11CB102423D46BA0F096795AF0D1
BA33F089AD80A104DE7FDF8A6E7D935E6713963FE3C57CC673BCDD423DF3DCE0
C57EADCA2AE4DBB30166C2CF1F7113DF96A27D4BBB23ABECC5A4795F1290F4F5
5293B5870F892C9A32C776AAD06D78D0514F047373879CFC5AF9D624DCE5BC8F
7CEA5055064050AAB2F24A1C792B2609FFDADC6AB8D0F31A12403CF3436A1E1E
E24BA5F92587925C4D6795A3FB163245FBF054BB1B0FF01FD63DBF7C192D0F31
33A17E7764699B669A3ACCF7C36849EEDA395E7F55174023A79904A766F21D58
3DDB7B4C2808DE7FFB8717658084E70DBE046A13BBF1F9BB97B3AB527D68DE8E
924DE65486C3B883CD65A95901B0DE57821CB6C6AE37644E02F5CB0163617113
C91D2C649A0BA10736F3709BD504F22DA8831A09BD0B2D6790A498F2FBC2F642
7845796E606ECAB2356238AAF40323D71B236CBD1E3E43BD5443F304D52F3CC0
28DB5D33A732695AA09C0449C53C656704D820217AC035DF45F59AE445946481
E5BFBE5D4EC0A42B5662FBEB9FF6ECFFB5E8517312F56C91A01824E401E7203E
258C3BA073C1B2532B8312F5AE29E37F5EA71C52F171593B1370D4ED5D7341CD
567390ED5B75D612D5873BAC518587525A591164E8D36D2BD89F792BD9EE6ACE
99FB72B23CB2445F12B8A6A0876EE711166C9E34897D370174C17A2495D58B4D
3DA19DBB1AF2E09C72FA42AA3D8047D05AC4F6A27F3EBF32ADD2AD2FF26EAE05
A9AB34C9287EE00E8EC29C6603036D365AE08E00D1C7C410EA2551696954EC92
92080C8FA5C9E67698BD7B895C82ED29391E015F83E0DA145384E223319CBA74
19494F070649E03CE9FF905619C6CB40F562DA49C1EDD2CA221DD7D3DAFA8279
AB50DE1C059CB8D5C9FA8137DA711B9D30F236526AA389B2F79F3D5BA6ED9534
8852BF4448DC1B72E361A6A2B94CF865BC9C3401D995529E2A36DE755EE001FE
C67B184AE8241D08AF88D626BD2D8AA12EE791AC4253D4761A21917C7F2F5AEC
795CD14B33F59DD7080C7654DEFFFA669F50FB1AC8C0F2E60201673A78D03DFD
DE0CB142F0F616C4051772BDB837CB4CE87A0C8D61E0FC7F90517EA0F5F6B1B4
D57143CC0AE7CA9521C1536962867D6318DF1C9CE6476CEB9ADB21655D379B26
7A0EAEC2D28430C14D38764C493BA4C06EF4BE6780131F2FEC066C4866E0B258
51C48BEF77011A0B5763CB3D69A50BDD50C2D7EFBBF18BF42544B1AC196377FB
4826BACB3C16DB805D38C34F9E92AA9AB5F9A9B317D8BF32AF8A758017269914
DE3B748625D319E571187E1BFED9CCBE11ABC18C0C6123D24D2C7303DE998847
0F6F644748ED225135CC3B957EDE8567AF3EE47F5E942EA9293F7BF74260D1D5
A6F5E56705E12C8379DED158E66DF54349F0504EF584C6D05C44CDD8B720809E
3DC36FF60BF55FDF1CA8C968E68346CF43C568E0B3175CB7D55343DE21CF9730
C9DF918360036E4204CD024A67E764D3CC7677E5B229C1B909ECD1B9042134BB
DD8E47FDBF63F212D401A797EF60011F52EAAFB88E3E70E007BF19826E40FE4A
73B57D52FAB33A737B1341381EB2ED307E0B83B45D6911E04BE623DA82DD6BDB
2DA096827E6A498A8D503668E45926525789D43D1BD5B896B487C0CE04FC9DAA
CD9078D0C8A0639E27F0DCD82C552A7FABA42BFFEAD66CEBBD4D2E4B4A1B40A7
B6FD119D37FA26C14C29A70E2EDB3253A1AAAC2650009CA3B97B430B1A05F2C6
F2120C8981683D0976BC42FE98AB2D33014B983CE1E2F1E1AC4A524249C3CF13
4B36652F96FCBD3660ACFC2F9778B729AFE2CE1BCF473DC5A846FCC3ACBE455E
2C37853F5204085ABF3BEE50C28D99312A078CE2F6F4C1D2D3017F0E5BB5B614
102BE45CAF8108407EA970111B5A97CA8C7A64C70D52D28D2EDCD27879B1003A
6D168CD054E87C063744CDE097887CDF268D89180AF8BB4F170804AE5DA779B2
1941775FC32FA189038D6050EC0E400BBED364E0CCD8DA571E902DAD812988E2
4BF761F472EBEB411388FEB6F901777D090400F695D823C758882CC008D889E1
02678FF81B252C33C89E3B04157C889D4F0F86D432F0B3DD7811BCF01C2FC041
0D4B1DD9CB6F2433F9B34E7E8ED8BB1FA4F9F7CEB5354A8305C372C2EDEAFE5B
4AE23CEF34AC457961B15CEA084E31B3741CF2EC317DF484736EDD688737C380
6D868BDC02D1E63A52D21C8E7C1FD1BD8717612FC247293CC91E0EEA08D5F805
70217761CFCA0F9C13996DE0F045F28DB67378221722416236E4DC00194E9C45
A3839F4BB53E226919C2CD13A44E4F67334454DB7E133B2D308925CC2E275293
F81AFEC4DCF49230F22EFA19F48CAB7E09FA727CC2E11E5A5CCF57307506D5E7
6DD1D26BFD3DF97E73C2DC019B0A75B9D6386469ACF1A00A5AAB55F99BA1DE49
9883DC4FB0E8AD9421B105E050519976705F7BC889FB3B6C2921D2E198FEA294
E192DB3738EBEBF6485075728A0E16ABD53A25BB0795A21B65AFB6ABD7EAA3F7
1DAE1BA012651B4BA0ABE02F3CCCEB9E92979F17A3338A376C57A1F13E3C90C7
9DE8ADE421329A57369CCC2BA622840B79C0DF098EA42B810C596DE85F51EB9E
C8F6FAA598C73F359FD7CB1D337E3B083833389846A99C87885A7537D35772DC
A7EE51E8EEECF4E4F38AA04C3F4C447080386A41F1461599739D73C58CD02D65
0899177F7D707AE793B4C915C590AFD6E6810700BC0C3D14B67E03129A4215E4
953B88C7A9FF1AF4B6DA293E1DF2EF5667D408AD3F2DFDBA46EF95A1D8E1CA29
FBFA01A4B965D1101CA6C0C2BF4670E94776753FF52C2751AE41872EBE3DC66D
EE58BFD3BF8F543802C7614F64E7A9CC4474DAB5F4C59F8085FD523C91F0FCE2
0CAEE1B9613064F9C9CE9556C841563A43660E0E71EE761F0448C41589AD0312
958167F62FB166655800150F9E81A558949071F01BB11C9ACFB2ACA4F332D2AC
598AD5ABD3D5EB17AFA97456C0DE4D3D872750F548C357FF34919A3EDCFF9658
F3DBF53BB3D0A204E84702DF6FCF5022E753CA92323ABEDC81071ED44C306A7B
C10D15F905672783BFCDF28D97EE156E293046C09595159C735A266ADAACB887
7026C404951C27B88CC3EC1A6F15F016D55AE6B5DD739914DBD6861098977064
762AE2867697967117DD7E3CDFC24D046F1D83856D49224191CBAE95C2E7B9DA
4DC5ACB06B9F637312C1378941EF6B9D966E84DA69E66C43EDC0564D4A9B201E
5CCD830900AC4D4EEDBBA4AD14ACBADA20179AE138CF35D6F830801D7F9D1F3A
B48B6C2EA3B77E7EE42DC0A26C7FDA6EB64DF4136FC3AE0FADAB84CD30392E44
49DD3F7DFAB77AC2E3A8D16C9BC002AA17A9C1E9166A21648AE2AD7F9DB250DD
2F3F480844C93059796E89238B0DD470329C2AEC9F178B83D421063BCC18CC35
2C562DAE86EBE6529D19066FAB70C8E73B260C71924B0B3DD652AE37DC2ADCD7
A3E3E1936FDD259A3F32D669B6CD82D73436212D6CCBE436578139AE07BA8C5F
07A8D2158C8F21007FC0B96E2B3588466A6FAB4F70363E994AC4FDC2CAB3A478
9C98DE079DF219648A6219EC7040A8FA91BE9D9451BEA89906677866F50B6FAB
E8FC00E826B115CD65FAF738492A919CCB657186BA12260C2816C44A632285CC
25CA1D797DB0D901EECA675FFA1182AD6D48A8A96402D07A288CCC02F8A7CE0A
39084DA379C5FD08743060851BD02A3C9CC298FFA0AEAC5F5E1928C46A6EBB42
7D2AF9D32BD0117A8CD7B453C66FF39163092568B5A26F210900D466EA5CE01F
14BC1F57BB0D3186BEE9BA1A5648887CAC06E23057199A31781C4C37B1A07C32
B8AE8A40F5C481C8D2854AE5C2C3C746C4A2B48189A373A438F512642A55F2B2
3CCD2D5A06A1859B50C1C3352B1B5B56E652F00EE79060842A33A8CBD002E777
3CF6C051A6D5F02E35480569E9D00493C494F9FB977E665AAE4468E6DBBCC950
33876A21B75095CF391E09E814D7A03EAA19BA0D7A560610CC36EC3A9CA39CD1
4A359FBC14B07975379B68949C9FC2DFAF037C56C13802A7F66C809549EF2FC5
25EF3F517F06F90EEDFA6F8A3E5F1F3531A5415F3191B8FA7B0F28950A20A1E0
6E354480D09729E3A2D6796DB81825DADFA4580FDC7813B7989B18020C3AB1A2
87E948890C25563CB26A068ABABD94F3D42213218F2ACBB2F5B317311474B222
BE1844548554B37C97284940D5B7AF9E4CBD884D4994A76CC1ABF8E6AB0676A4
0A8130F05B0ABAC088FE4F9FB536924A55451C8772B29087B8E5E649DA3B449B
4A055214DF69D0218549440B3665E4D20C5A8660B3E0C3ABBA3426E7820E1A94
5D273A6ACB263765D340333B5CD8D1282FD5B0F5BD4D40DA12A5CF44075F33F9
BCC0B4C20EADE30D0ABB3562C00540200F0F70D9E400DF105D4A90F08ACA4085
DA389EFE63F6B0AB3F57A365EB00CC15A8CD1562D33096555D4953E8E641A509
B0A10ACA9D518791AF590BD2184BCE9CA030005B1D0BB40F2AFF9AD6D8EA5501
1E539263C28BF261A94E7D3AD7EA7D526FEE3D6CF9CE6601AB1BACA13D20320A
E832889F90EF6C927B65657FD980679763C27E327767CD617C6BD6194F429B5C
7219AEFB7056E4ED18569CEB9F2903EC9D13844AF568589A49464999FB16582F
882D08CBC5678A89EE45249B0ABF22BD05526E1B4033810C9883BC668E223AC6
D5729CD5E524BC96ECCAF9DCC5E393FE302C7110510C8B0A390389931DFDCDF8
74804C647146B08B935FB4DC20FED0DFF9BC17F1FA27DD0C07773E68179B181A
A55728533D4B44AA8E58F596634213C0C64EB52A8E1511408FED8EEDD3431613
2C630D36D7AF11FE042383A48F89895C09D1A5F43299EF1CC5D2ECA159A81CB0

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY5
%!PS-AdobeFont-1.0: CMSY5 003.002
%%Title: CMSY5
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY5.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY5 known{/CMSY5 findfont dup/UniqueID known{dup
/UniqueID get 5096646 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY5 def
/FontBBox {21 -944 1448 791 }readonly def
/UniqueID 5096646 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY5.) readonly def
/FullName (CMSY5) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /prime put
dup 116 /unionsq put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D77D0DAC26A1FA54
D2471EE9BE33D2E87853491D634A3F05B7672519E09291AC2D08D95BFB80CABC
FA89042E94FED8DC9929ECEFAF741D273687B2127F5B80ED7D16F146894841D5
1A80D8085E27114AC35CD5E578760D8982CF4D8587FD3385FE50E21A253A37E2
AB628DF3500FD2C21BCCBC8C0B6AD3AE21DE63AE6586DB06B3FB1966625EBF52
90FEBA873F819AB480FF994D80C01DE1E2F28C665E74FACFF98B2972CCCAD279
96F2EFF1113CDA922985E095249765989A4C6A92A76340DCFA07AFF34AC5E177
09B739A72D0D1EAE1A6164F3AA0DF1651EFED335B68C8465E1A61025235D4A5A
C3661B9C0456C35C770242149B3B98A29784BF71030C7DBB2C13958E5CC263AE
FEAEB9FBA84E06D772E94A494B60E32AB8FF862E57175DB17F6162DFFED60EF2
D46FB78237E778C7321ED79FAC137945A46B2D90B778DA46308899577BC7844E
3E09303AB2DD1F64D58756DAD62ADE22C62DE6C9BDA77CB12B1FCE3374CFA442
E0CABC7C9AE699CD955077A7268FA0FD3FF5EEDE605990F0DF0078799F5CED44
6ABDB2E7D9214BECB8B2CBCF328F7F5B8F346B55C9BA5C785A252DA59602B6DF
186D23D5D90556EB52D7C0B44E4A9A189C180FA213E12E9838F0B2902779E289
3E2B7DF45A01F36D88C9CB814AE5D41064030D37393DDD7D5974C1A27EBEC064
B0403898996140AB14E6EF1B48D555A1C4DE29AD0C5D284988B92917442D2C61
3B15E55CD91837B0496FEBB51486CEA7DFD9787AEB484BE887111903124340C0
EB034A75292E59CC038E75E1DDB0027407492EEF92D70E0303BD7B2703E131FE
BA91B289003B7E5BF85D2E5E130CB37949AEE51EA57FD424402B0BEEDEDEB5C3
E23643F3100312F94C157C98939EA2312B11DE0A683D4018FFBA2864626C9449
0D656EB0C79246A7F5ACDF442A55C9188D8F3FA64A9B6BFACD8F81D7546E0CD4
3C5CC653CE9514306439AA2BD2FF2B965EA69A30331E8D65056D919476867463
97DAFADD16BF9366E95C7C4276093B639541F7AFC9AF745260685D84DD3095D4
1B925540372ABFB68CEF211D65756FE0E99733B5DB40D5A42016E8715208D4B0
7A120EEB34147BD179FAFA94D0880121D1C6B27F94965ECC1A93D1B73AC1B3B7
191B7B3CD4F2E0E52A3893255C4B3F1A70A0ED36DAD262538E02E8A227F6D6A1
8A047A91ED6409F1E0D9B40698C817918AA47B95A082E3394AC42DE93BF9CB28
68E63F3363FDCDB014E89990C50210750E8442D9555B0A796B243AB03190B2BD
57C39F233318B6474F1B3CCE31C21BEF68FF5E3F866789041910B1B11ACEB75F
146BB1A162AEFB268700C2DFBD9752BCF6F136ACAE815C0AA4147AA2CE61D282
1BA716B693E2F713D0653B17C9381DA86E1CFCDD1B1FB9A72ABDA1AB2BCAD30E
A4EAB601BE3F8EB95B32DCF5DD114683AA64E14F9A958D16CC6DAC7DC3ED651D
603959B0265FD36F8DA41F3173A708D88C73EEA1533CE48C2AB26B4DB7CFA662
A8A463CC178C31D342EF907B3B44751859F2BD510F1CA93D61AD39E8E5D7785D
D465C47F3EDFAC22DC2B5DD93B2F752EB5482E138A0A1E5CD62747E0F524E29C
A56E58A6BA543CB3AE051F4D90891B65712B63DB197E60275EAF5975007D09B7
95F916615F97C50D8FDCFB67F1B677DC5139E6F46ABA079AC552F27F507CAE8E
E5C04D31ECDD6CF5E8A447846375C1748651245EB9C780D87FFF162AEBCC9E0B
155B318CBF420DF0CFBAA5669C2DBC81B55B5042514B05B7B82FCC827E21462B
BC8F8FA96E2CC4441E07E0901EA72495013400453E49B7D243FEF528E4078AB6
49277EE77C81B9167D2EE1961AE265A8C01F7562ECDC47D9FEC391097474EF8E
54A5A7FE6C98A81ED29D42A3D54326219F638C92AF8A087607CA2A2A80CB1183
8571CD40199FBDB9D70AD83979C739F533359FB2DF0AC4AE3A0E9DFE735ADE9D
6E29B3F6DB9A5B11418E9C860EFDBCB0E49BB900BBCC85860100F1FFA5AC07B5
14F37C5AE5E1A35168BC48BA7012A297C7771789302AF44765A6DBCFDD418172
62DF3A4785385CC9D055A9B4FFF373041D9F5E9DA83BC1C5F3265E49BA624B82
F15BC17B135D8723324865A9CCDD2EF3A0F64C17914F9B238C946FBCABD92B30
AF90191996ABF2E4972AA9D0EF7B64AD0126D07714D4059CE032905BDF877D7C
3440C374D7B5D0073E13ECDF3DEF2938EAC1908CC60D0E5EF5F52AE8A1B0BD34
8A454CDA66E7340783A7152CCD74EAAD4112C7D70F3C867E140988BB610CCA20
F1BF5E3DA8097509CAB419E01CA47D449C50EB8FC6DBB75AE2C5312BBCC5CA91
86B221536517CAA6870429B65069FE3CBF3FFFB5631B57597E5C0C3E39199FF6
4DC35B155A759CBFAA96409BAFC7EDFF03D2671F0396641446605843CA4AA36A
15070DE52DDBFF487C5398CF7604DE843F32CAB26A96F8A9DCD03F3DCAA57E47
6F0D36CDA34B96B7F4986275D79A1BC1954D2BC0BE1509709E40FF23B84F8D65
3DE1D1D8A2AD94AE3DE202D62993EC4BC5AF66CE512EFFE7CF39028BCEC1667D
8782111D9D503BFA45E4960E6197D8CB5697B1662BD2D991532074AF5491DDC3
2EC52B4E5AF9B2DAA5D5E4CB644BED25DACC3F445E4C7D58A1E9737F4EC04A79
238E3578311D88EE6D067725C580A146FF150871FAB2B366B5AFE5CE3B386EF2
EFB540348505A1749BB34586851FB2FEDA92ECC395B618911E1D00B427251B05
15B9E42AC1F0F239827B938EAB8CD20FF9705F4D7FB5F5F911CED9EE8FDABE8B
3C3442DC3B716C3686E1B0573EAE3905C3964ACB336FA3C38B17F229EA10F036
ADDE7FA5CFC01FAAD33F75A125F52AD395C7DBD3AB6F2321D7B5B55F0ED237CC
61FA8278FFF9956C64B8ACBE357D4603CC4599BFA198AEC01E4F4AE047754C16
E155C8FD09C996D9B5EECDB243FA48B0CED1F0882103729EAECDDB9523D6BC22
0AA1545814579043F0DDA2D7F015E56C399EA3C644A15BA6B144361449609C40
A4986E00918A7B44BB06E7090F73FFBE4EE3E051121939EAB0349EE84715DE36
FB187C50AFD74C44C25BE4B7037466CD60F211FFD7044245159505196B0E181C
0177F14D0B486CDFB767708C171FE513AAFA2B60665CA55B1E5F9E0304B63666
3BF44EC4F5B7DA58891081F78B37BE8453E86AF3557B97D8B4969CCDE2DFD255
91FB4D9CD41E5F931751BDF7FC8C700C633470064C0BB00FE5745918A69CE430
D86FE46DEC014C019C06621B2EC6C3F196A8A5E1E613AD8B28A9D0B981C11A29
4AD11CD3A46D089F8EF7D8298971A5F9F6F139CA794AB4BF0AAB2D4D428A8E4D
B80EC134CC7CD74D3F08E7BC8AC5B1846E1E5DBFA97AE4DB885286C7D06B4CF8
948E889ED85E8703CB97D7AE19E1201EEA205157BEEFAA3E17B8BDDFD01BDB17
691010A662280C279942158F68BD351B235EA4EBE24D54C0055A19A3F230F353
77202A1D7BE371010624CB741D4BA2E690B33FE582D666E9788A3E3348A0E100
2843E0B2FDEE05DF75F4D49DFE2B69BE79E97DA1B3638289395444F1CF6CDAB5
5E6EEBB6F907807B913290C25D8AA546B121EA90DD113588011DBF01B7F88AA9
B9CA9731532478D3BA57786817C1D31D8C51C307D7F500F1B58C2CEC9594E5C4
E5E7239D90C8B5B4A81F95C048272A2C05EF0613463E4094E922F7326815EF3E
6E82D5A36840A76B1BB25185CD66B05FF2D140E0F22CFF73EB3F57732E935BA6
8C64BB6809E1B45089273527834789637621793414B6853A1C301612920E3F91
458D043CC1B6CDA271864FD4CCE585FDF025FAD217F975FC36FAF8B79A6551DE
AC3863E25DE972E2A4AD997E77A2C05A1A14152BCFDEAF40072A0AD952A3944B
AB12D66ED3C408DD104B8638D67417D2A95A87E226A03C28181047CF5BE58409
7D07D2529BF867BB61ACFD68F817BCA73815F787162614EB926563EE2F8629FA
6BEBC05465458A03C2A8673A3CFF7552855E082A7B5C2D4101A1B96449071485
279C1EC56610507DF786427B4E4D949BDC9127C2802451F3B21D60D5827E5B7D
0A683F4402725547EEBE27C38839876A3B1B7FE0D7107D6E2292631D1B9EFC79
87D05342972EEE2C413568BA971AF56A2D4D89C7C0D0120AD504D444655CFF3C
957D5EF19169401CAAA2C4C144FF87AC7DD3451A63CE796B8F6C600F913F55A5
A74B928AD676ED097740BDA578DA299F42CB7B7334BD2281E403129866031EEA
1219E7F9BBA230D049EEF401CEB412BF7FB58FB2F9B7D1E47F0D774956B803E2
872A7A5A38E5B7EC4A225C73522EFCE6E98E3EDA3BB402BC5BBBA209074BD2A8
C856290D01A092160E8FB0D9EF324776AD39D7016C63A500D0839E670009F4C0
20F033554B6B7CCAB7BF60494431E4F2755E4CD966ADC7A078D434FA59E5E49B
9903F4E722ED169CC3D0FADE874E3141CD47C69BAFA3183BEA4F37B388F4F48B
7D143D4B79CC5E701EEB350447D9600D39A7C03A25B5B8B6A5A7284A8DB4969C
CDE2C99C39EC07BD8559A45CB5AF23B849C1826713828F43DF265068950DDADF
3B584B90748657609A89008187BDE4286F95694D01760260274A23A41FA66A78
773902ADDAD18F98F045FF7D20AD20EB685C145D44237EDA272619EA9AB71497
DC8BBE9EEED31EA77C9410FE650C65A6CA71F0E72E7D83BBCC0A59DCEDA6399D
64A8F4865811A637838445D84D97204CA7A918DD476471A598D7536276C0F0D1
F0A88D8BCCA56409342C1FF678CFF90FC7B287C36CE682E1B200B54B2CCB12DB
D1DC9BB4E1CDE2B9B6BD4B80DC226E10FCF20A9E7878A16EDFF37FB874E4868B
A9F1C452EAA7126E81763A2DE2B502132046322BE26140F04FEB0E7167920679
FE8618E1AC5C03360AD3D8B5E913E1CF0C1BE9E446DFB050C3978165838278DD
23D17DFDC85DC7B168F173D0945D110976084CB27B6F8AB2D22410DB05BD345D
E4E38CC7EDCBAE36CCBAC590DA5C12D969D51B847A1460F4FAEE7D648818D26F
20FFE485D842C2088258F4F0B1FDCA46A7110645C25E3A31C4E6986C220985A5
DECCA30BAA3A4B5CE0152B8A9D68B1FD67F21050A87BDAE6B665036B9C73953A
11B16AA3285456220D09A03DCD8402C06A2BB18717B1AEA7594F748817176E12
87E685FE70E28C0382EAE8948A6E9FC2F46E2B70DAB208611DFD5A5D97D39CCA
8F9AD9A171DF53CAA6E3E5AE87257561BE15E3BB21779397A30AD4B22A1A1EBA
4B7235F59EEEC1FAB7294D521EC1E36723A4D7BA007DA4239C05F0E6DE546D5C
7A58CCD00F6AC96C20B7182CCCE3E5937D7A64F7CCD52A107BB8092D5F95A8A0
589B2DC542511DC89A0EEEF23E711C7444BDF95F64CF486F158CA162138A36DF
5400A5D03AE62A945373E95840F6D6C7BCCC4FE65382584A4DB36D23FBA6562E
1F3AFCDEF27AED61245EF880426B14B3DB5D9731039FB98F2F51094CD7D5EC78
1F8B03F07064CED40D139BD04C868B1E51A994731EDBA98E7D678A07F7AF6E56
92586848C58ABFEF378F5C1B4C3E20BA860BC7310B9AC48F2143B5495F9B3A35
85C9AD5AFEB23DF6376EE78BCCE054C8FAA925965E38EEA6F68CE1B5329D9DD4
DAB3F3342C6E6D9E0C70E63989DE8DD2D3C4C671233888ABF56C58F69D29A742
B5AF39EBF1092C2C4A906B872310DE0E83372B1C7F6E295D8DFFEFF960DC0F4D
83D7878BD8918B9BDFA17889D52AAF362B6162C07810672E23F66F8CF3BDBD6F
0E016C4FBC8CBAA796057A6B9BDE3233909694110279F81259A5E628FBDF6159
CA0CD6997EBD34C3038A02FA4B422A98AAF4297B998685D7080EAEBC22E27900
8B0178A75E5E52363A2E56507B3E44A6F9A9DD81886317A07B4823558D3690C9
8C722915FEFFED7F6CFF4E94DA744562835E29C97333CFE50D49A5EDB886F4D5
279DD9CD35C15656F9329CA06A0CE1BD5986784A910EC3DC7AB1A068C8ED4829
DDBC83091AAF21092234F614A6CA2C4A854B5049B5622BEBBA68AFC0AF9C6686
74555347CD055BB13B5CD7B5B6954A5794AFCFAF9AAA3682C7333564660E7C1A
8FB3DACF1ABACC3D68C26D07060C7D5B9AE9C9377A771C3BCD317F0ECE3CED11
C0438A29708D99A1F3C02E67AA1D7BB57AA7D8C64A2028349BDDD4BF6DB3139E
C1BB6D7D906699484EE2A5D83296BEE09644B62EB10658E06E4176C1E5E7BC4F
36F3454F2DE69F0C5B51FD5874F67287294399923B19A40CBCA4B580BCDA347A
9AFB7AE64C8E9070D5586086E6F42EDB8C0E9729649CDAF7C0337BE5E670DB9B
D5C038262B65603C1CB1BD00D4ECE2BDAE5B77A8A129DDD79DC7D080AA89B7D7
439A03568C2C826EF23C2ED7160B2F8F14C05F444E364DDE247748541CE7E265
1414B5A15E7152C6E9056B0CD43421D4AA5EBF1EC2CC70516F920F08B0CDC38C
DF480EEAF04D7F12638C9CF8DC4F827DB07256F4432345FCDA86CFCB637D04D8
931A81D2DC47674AB435738871A65422D3FD46DFAE9049F27DF0DE33A0E3207F
A6832153135BBE5A283CDFF46ABC74C78B3320EAB1E881E59E07C3134F3830B0
8216AAD3995D3F8F6CC988C73B2B7A5B79E81C6E8377FFBDAB29B4CB6317B118
84A437E14B0B213BE7ED610E9469405AB950965B2CFBD4CF0B3415BC9638771D
C2D8265D4FF0018FCD3851E645A82C179FB4995A337C0A854999E0D91EE8C98A
A9EB781A0DEAFAE1D666D2F5813BB2E79C232E5C96C686D414921DCF8EAD4C7D
06F79EF5078C77556346283940EAEE347B06F756A800FEB7656DC02597A674DB
6F8BAC8751BA046D7040B5BA0AC766522FF9657F71C7C89DC93E92000A00120F
301DE3ADB5D7D62B57E0824B9BBED388A5CF1B39B034AE2E44BE27CC0F5F0223
2A219166697692167403DC2083384A698551FBE48BEC89629820596FD569543E
75174901415C56DCBCA012694D671655AA84A8D8307B34066F1AC149C8B4BE3F
578F57A39B93DC454580C44B12D6D1BC653CCEACE809E5F3F7406B9F4A868D68
ED4C5C23D7B2497668D718621A94AF4938A16FDACFC6E3B216BB615324375050
24A7466E820435B11E93E91F673D609932BE884AA1CDB9D433A40D189A668498
A1B708DA358F56A1F2CE297C61D9AC19ABF79539914749E5DEE0FD0DC998F4D8
1A4CD93D0A06E68CC764308BCE69D4D53FB2F0AB742D7E9618321EE87EB1DEBF
14561A916C8D58B9C6AFE80D586F5FCAC3C6489038178E77B515108E48C7AF9A
AC9C3F93598A28CD03864C6A65659E8E6C782F50ECFBE2C27678ABF0978877FF
C685386DF9D9D8F51EB5AA618D2B3F63FC6A0D6107469DA479D540447D785235
2FBD6C4054C30D02DF3D2732031297F53AFC937F6CEEE01B2EF34D59FD0EBD21
854C5CAD32C59F6D8F843795472ABE1F73107C0F5A5B9274CFF2346E7627355D
5E7B3B3451C89DF5572F4E9BDCAF526425B34D71875B5109EE341F55C551DA50
31E2EC3BCB7A79CA3F737D3CC23200160C76E29B9A5740BCFA0355AFE7930076
1F621C801268E18B83A108068B8DB4ACF7079069AD73E37ACB779490900CB770
326BA14A6CB1E7FF537AB11F432809968CC441F418AD1A36075D948D487C55B3
C6FC12080681BC9685764E9348B28A29E6FA025EBE0C175AAA6CD60CE6E2417D
FAE5E146264FDFFE499FF7B6F04466BF3406D2AF6DE542862EB51614000D9B0F
0C630C2955964D0D808C8C65211DA05FF14547308FADEAD9A907B1944DBCAAE4
DAE093FAF4AE1AC91793F025C0F0C1E74DE7817154052436A369CF7F52E05841
5778334C75C7ADDF2B7C1D996C18E65366EC4F8F085AF9DE24D54FF213C73716
0C39CA3A34D642680C20FAB4E341AF9CA85C7228ADBE4FFD00EE7A98DCE14E8D
9FC82161A2953B8599A3083FB9DE0120DC0CDC1F26623B69EDA60B24ADF86DDA
596064614CDF8ACC773C6661C1E326189D43DED7A570EED08134A1ABE282D7B1
663BF7DF87F740CCC353B6BF37EEC7A8614E8F8B18FB6DD65AE7856609E3D43F
3264DA88D907D32A360944FBB0BC2B0D206B0B6037715E39B4376489D889D6D8
F05AF783BF47746DD3C5FF51C65C53D85340C9E23735A7E201E61B2DF5B2BF1B
45C213FFB069293306FD205AEECC574348388D393BA1DC3063B2F0482E7DD0A9
2DCFF9395B345A8CD005FBC376F7B00F5B00C9F44BC679611630E538EA270C61
0AB27C84EDCB74741A249103EEA42D0158942AA6A3FAF04D8BBE1AE401886C31
CB6DBC0E6869F9261F9B5B4072EA0886375AEF6191D5D9246F71
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI5
%!PS-AdobeFont-1.0: CMMI5 003.002
%%Title: CMMI5
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI5.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI5 known{/CMMI5 findfont dup/UniqueID known{dup
/UniqueID get 5087380 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI5 def
/FontBBox {37 -250 1349 750 }readonly def
/UniqueID 5087380 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI5.) readonly def
/FullName (CMMI5) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 105 /i put
dup 107 /k put
dup 110 /n put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFB9CDB3B91E19AA95
B6070999687CD39CE05B0501BC0F19F4FCE5E19BCAB1989C541A47F00C4947E1
FD7D566D95445A20A22834570ECFD7F17970BBB274C172956BD6458D36A306AA
51AA40FA84AB99AB3D1C47256A2DC605467A7F2C77963B2D31C2CD1971FF9627
23D5B9CE163D84AD3071314F555A564CC82CFB80B05E31708542DAC587837E6A
8708B83AA4527ED523623419123FB743F544A691FF62C172E6FC42F1EA9D96F2
023DE87858FDA38BF3FD9E2AAC5F05FEBD28A5DE1E97FB1B03F6D7BCF64ACBD5
20083E062A50A1B86CD28E5DA789361A19511275636562527DA0CB8A62C0CF8D
8A46EA3505E7C597428C86B3B05FFFCDA0492897AC6C6F689ECDF468F49463DC
F193DE83E34D73E48D23ED37CC1BAC6D1CF6BFF1C6A0165B21B844326B418575
18E1D044C1864B27AF65AB4A031C767FB91D2CFAA1729386A7C1621D859572FC
B604B35455D870D5A757DB7BF44D9D079F4F70FC669A96A0A1080F3297B6353C
6161E0E815C054EB6709752A8C104D177FDB4962B988270E9538E944E2FF6717
6389DBFE95B71E95EC57335EEF4F3E8E7B041690F54039D546937028BD0E8740
A9F8719E08AD387878420EBF7D8D1807B6A594E98E27BE8C6314BACE9CEC94C7
D57CB34AA7DFD06477D62C981D9D686255817A22E3F49DDD47B28FE7CEBCDA0B
30515EE8EC56542A3E3E68B990E5BE8FD65B953A0EEE2B066FEA586C75E4978F
0A0357C0C37397AA22B9EC8D9081B44C71CDE7991903DD5E071B87D081A57064
A143042086EEBF8640F36E61D8A0052C726C25F1B3CCCC6A58868E00C30D5CD2
034835FBF999CCCCE1CA0ADCE3A4EE4A36475FF6D00E1D7A8ED65CB0213FCC76
AB7DA81B9A97FEF3A51754A48C76E80198A2475DB6047623FCBF2CDC827229A5
C1DD7E79197C29CFF591EAE9547A1B21D381FA04D80E87F41C9A00A71B5424CC
D7550DFE38CC7BF2B11B810FF09DDC48046BEAF8EDE7CBF8847DA0BD5FAC93DE
09EA6AE97B193E9A31F1174C337C72F4CE28CD59ACDE969712C57701EF3C48E1
38C650DA766470DBA252DD9FA657F7738D31A864E26A89C0618EB611B36B321D
C48CD0F10C4157E210657C6CEA4BE0DA047F414C16F18B8A49E4E783164A83F5
E59040752152EC549ABC2F840ED955F90188E8F91E4F4533CB5F42478029B90D
76A996EB3D99BDF9E1B3019AFC030536449C04275DD78343702CC302461DDAE0
9CE2AAB36414A34066ED793CA7313767AA897AFFF6676E1AD5D4E3CB3C3A66B8
C5E91C170C41B7233D544D8EC3FB6E7E6EBF4E1CFBE49E3F00732256EB2495AA
9D206A20E902CFC57ECA3CD1DF324C834C75DE927C473650E4FFB299509557C5
9313ED07F343B6B4FD9F3DBDA9B3242756575AF54DEAA7C6DB9F1B9E1128989B
312A505411EE636BEBE0823610CFCC7D347185E09CC8A1A78CAF7F20C9668C91
0DAC60D889D17BFF3B7AD694F587ADCBD4E48F36DFA34FE98CB2E8A17929A683
0B66E005FAC311AAFA9814DC9CB2DE3059E0966106CFDDB18035EB255906F843
C8473B5E66E8FB4582FB72BDA4F4EE7A8F3A178F02EF1264C0692D7CBA2B1906
DC27331F86B6D88D3233FD74CA88D7041B4A2025A7024F467B64222ACAA24DBE
112C83886821994044EE5800F1F81F7F58ACEB07D15E22D38EBEA6F5C4F7896C
BA2EC301F8FD150832966A0C46EB35ED3EFD0192351AFD1FB9C394454BB1FB79
2BB86FFF5B846F412C1D28C560C00B1FE876684EC864EA6F88E7B095CBAB2B26
29EB6928961BC58633B7D5A5746996C3DAA6FCBBD2D42D59C1273B786511AF00
B60B0E04C7365E4AAC4AC20288ABDBF0A704B6F7CA2D9FC65CE4AF36A5CC463F
F97844B79F772F1E0C6F4A6DCD7AAEEF16A4ED9CAB55E692586C5C9DE8701A3B
111D15F99AD44A3F375E7C4A531020E9AD5CD77212BAF0F9516B7E865F5F5042
50524EE6502209FA562C94AEA4555F868C9FF68368EC6C2E52253E0C882132CD
DDBB83AF15DF29B2DCF516A004DB97AA9487EC2CB1B772E8C84DB1B82841CE64
D4D10FDAB7E162E079FCBB9D4670AB4D2F9128E48183A3884EB8C74DEF7F0E70
A587A300CE834A739244A237936A78D31617E4F8D298EEF7A783BC573BF464E2
9FD1F0592DBA4400AC25327DEC2F28F8EE0CBD17F012E9E15FFA98CF1F1F9265
C2E4B8F3ACEC102196B4F9F973D747979E38DA36558D6CEFF3538CA7E1427352
CFCFA0DDE3C02A42FA39CEA5DEEEC5F3F7FE7C1B1AD98D51446772195F08FBBC
D8CF46DFAF7D78A43B70F9B660406BC43FBD32374C022C3A58CB24CC43ADBD80
4E7AD6C418FE43DE31176B9128496C331085DBF6FA883042168C0FAFAA9DC403
7ABBACC2B18922C4458B49FCF241C0399E969937A2779184DEC8AD5AC3266E40
3E81D9B9AC5A06F9DE81785668B2CCB9BAA20F89120C9EB9A5F4CDADE6F67C61
C5E89C6014F4772FC208723146587687F8E14F4E63F2FC952D2F9143275F168D
B51AE0A66333D957C9D5D7253A2362C30A0219219BCBC770D9FCBAF0F7F45FBF
E85CAFD899BBC1EDDC416ACD9A7F83711BDEE28A683900E672453F4527F44816
1F284A4C488DE221333EC9249D1C70C3FA41F37924B813A3C54BE3206349D955
8FBC6AA9115F9061C9674958D40EA2426CBCA704E0AB35190F473C72086A2B2E
DCD7E6C1CA9BD9D7C0C2879E414EA6C61923A60FDDB53957680DD30951CD3B0A
6B743B1E7952601F61D4413C3A7BDA4CC1C65DA9D453704A1333512560B2EF09
C2D6D34B5AD4AFECB4A07A7DE5122ECEAF0CACFCF48E78F440071570E3F171D9
96E2C6169DDC77A3B9A61D5188428B035F8128BA909C26B448B6C95FEB52707F
AE0687C3987F75F1BF90A7F61D0C492C49457B59271BCE48F3FEE78E12D3271A
F5A91389DF2ED566990BEA84AB699B3651B2E81975620CEB607E2882F7D29ED3
A4279439107AF9AEBEE47CE85DE5CE9595A96A118ACF1EB1E935E2251E0E7F1E
D675E5D89D501C9CC98EB274B6B00B718D3EC50EFA7E170F2DEA2A2D2C8B5760
E85A1AD504660A93140BBAC19A48B456B3FA48E05776CE9DC05426520692922C
4AE3FBFBBBA2C4EA2B92663E8D316B9D5E733E0F2FA092F24AFC98B5D69063E9
8AC28D6EF97D3674C04176197050E49709D7558F7A32843A2278160DFAF9CEA3
9A0A8907B19379083365EF866E2272A9ED2B662614C57F81DDB145E9D460A572
C573296761CF028B0CC562B5C73B1933F0F78935DB0771D1780C698A874290CF
4F3D2D0C000B9A4077156A0B15F6FA23CF70586D3E341796ED8BD13BE5CE69DA
D169579BE16C6BB5D74224F380490855229FA64A762AC6BBD0D06ECC13E57E56
FCE574D51744431CBC8A369698B3F9BE35B7C1BFC59FCF08C04E3554703230F1
2ED2DC4459A256FCA63A759407CFC0B4D8950852BD11D9D631DD0B1EA09178EC
B5C85FE885F3E048355859AE345B73EA0C9FF89DDC31A7839C86CE36FB7C9C65
33257339FE7DE8F9826AAD599B41B8AF40F47BEA4399B65B7E114FAF14B9347E
4627B501AE9905A4EF4483551D8D5B5F291CCC25506E38A5DA92E127FECFAFBB
F6BE02A63DC1B5090A11CE8700402A53B9DB788ABD4910DCB8F1D0C9FAD68668
0045C5EF2F0F5205F4A4CC2DCF43479DF053E2DCBAD3AD3EE779129E7CF4DE95
34D03F05FBC72CC02C5E1BF394AC39530D93C70739799B7E2FC84D99EF7E636B
900185158DA3427B30E7EBA29CE9657D3103060934EB58A514F6CC06CA0EF378
2447416AD37A066B63F2BBD53B06BAC2C915AD28CAD86AB1725BDCBC12D0368B
0F0DB1885ADA0B4214F59DFD86F15210763091E3E5E7925A39F7C58DEA801563
198D8146DCEEB18EDE7EFEBC5610208CDF7D42B23E15AA911BDE63C0EBB78D9A
DA13B882064E1861DA9B4688A242559ABB1BA404A516A4C7357D18E4C7AC7D41
878E2D8682B032DCAC20FC72BC0D18F9783E9094F59D3A35A977CAE583B5E517
4E8A8C991E5311533BFD4FD0B9B7DC8F129705509D194DA9F18135E7B87DDADD
D06929F6D65C8AB18895447C4E542CAC2FA8DA064681418E49807CE61DB77720
4D7538917F5D113CFABEB51A0E633DA5ADE4D3A09462D2E4C11125A31C3ABCB8
D2905C09E4E91D11B92F405696A4F1996282F44F34A19748121C0E86C3DB2CF9
30073205E35702C191BCC6005822AFAE9EB440CC7739C51D391807AA5FC768E3
928AE0860D52535397395FC31BAD93D8887146E6BAC26891DF852FC5E277C3CC
45A9784386BE5A1926AF84E7F3BF380A5ADF32D73CA695FF1B78215F2D2349D2
B1C3AEB04DB8B11A611682E7F4FEDF08716A801D84D47FCBB5FD4E9AF027635A
74E8C12F7AC159840DD60728DF43615BBCDF8EF80B1D761D34ACCD561F5AA2B3
15BC21A4856032E4F9005F93F7FB3CA7613C32E67D74796C5C819457378FD94B
89E45341CC2B774F16C035079A741B0D2D54B43FDCF69DBC30DE45BB3695AEB9
CDA1C7EDEDBDEAE0079C5FF03BC855E5F5235CDD99A915CFC78373A4604E8E66
3426FE7AD92B8FA0FB0CFCD773434B5C624CF3DA9F77315F0C58D42CE9180BB5
2D2B7DA554300CD38C592CE35966B1EA45638CF064AAB4CCDB2CF3ACE7A816B8
360F2F5D7EF9A36DFF363B87541744CF36ACA31F9B17872C96B8214740C7C0F0
0E251B4B3306C443487F71ED324B4896231B91F909CF28AEB3409DE1094E6483
E851326B4CE4E56DF03A929913926A8D4C52C7DF7A6F7EA62BD9343AAABE9BA5
403678ADBD2C125B5DAA08EC695F6448373355FF5B91A4FF16596A5D172BB3FF
7CF9AF0B6A744A2451C7399E969E6E5A9784B9195A497B43304111165973EE28
3EDA3949E5D891E1EA363F8A8EF4ACDC82CD14BB931480409A5EBEED54CF8284
55FD70C98822BD9A31523A3C6A6F26B0216C07B6D63D3CFFAD15A1B83BE55D9B
4008654433D80F11754E4B4B09FB22569164A8DE5669629E07ED1ECBFE365287
690C6F21274ED9DE2156D06AEA66A323450B29E4AA42CCC9C9261DD499FD33E4
A974570C690D2C0A1367A7487D57427C01203D2939E89A1F18A4ADE84313A2DA
B12EE671E3B42F44F6B32E12F4F2E51479FA3420A3A13087D9BA76BB1756AFBE
C4654792600D79BF52A32EC8E02587753351AE7F192D08B7EA9314FE4CEA31BD
8646E59F96765073ED1E3788C8DC7C0AA2892CA25E5641B338F5F207D37B2757
C7FE8E52649C38062566E420F8F0A6B83043F758DE906CF91413718028C9675F
5E0F7D09633361EE152116C675BC3A90D807D3A19B848DD34BE3BEF950287C7F
021E231262ED6A134208AE2FCB90B7436614D8BD33226D8D519F8F3F494ACBCE
32527307BA114CF02BC765387DF54BC1E231CE3F51D09F7A9178FE80A62D8371
533508ACF5C454CC72400B444D177A36B9A096489CA2761F1CF1F7C788A9F7BD
334A5C24AE6A648EDC740E36B28D6752EEDB64ACAD640CDD66CB98448C7CE7B9
8EA7CEF9E2A80EB270A22ECE1EAD0FA85EF5E0C83AF23F0B4E4669AB41A6B427
3928CA4421E216A4346FDCAE5D1349809C97D059A2CB6BEBED01CE0BA1754863
100D49634FB84A06CEE283104046A90396245601756BC39A63460C2660F54589
5A690DDE53BFEEEB398355E0FCBCFE9CFC664195CFE5BC9C4905700FB9FECB7C
6E644861E81E0C0581130D253D861801958F04A543EF20C99B52E246139B8D7F
B7C78E1E658701FFDAE6ACD2A7E79FD434B1CE834DC7F98D16048A2964EBCEF4
BDACEA4E6FB6EAB3A270FDA758BE633995D1A39EE148ADF8A169173F877089E9
1A560D068ED72051FE7FE1D6C3BAC81EF265950598475B84AF1486CFC55D5903
3BE1479996B48A6E9ED904C66700DF63029ECD9BF1794BA67A7C0A005B00DF52
8A6A0374F4E65CEBC1CFDDFCE3EE53B57D78203D72A0FD5F9699277126B4A5E0
70B9CF50FB9A46D0685B563CDAA61EE9903F0079B22ECC56F0BDA3F1930FC6E4
637DF29BA68C83DE60EC2AAADF31CB46F337126706EEFFA0E8DDC29E5488C2C3
E89CE98157CF908EB04C55ADC7FE853E152E0D963915F5104834A9F73E0EFFF0
BA20972EDA0F691CBFFF3B0D379B0FC55B77E4891B7B8372F5F79662E610AC3A
7A02E99A18D5E87E519C45CB8CA3AFB38A74AC99214C1A182437C15F57963CA1
60709AE4D7A9527518FC6EB1ACB5220932C53F8C1A0DEA53B1716A105922A90F
10E116FDEBCB7491DA52872EA22B8280595120AF86B49759E5D61FF3B39D310A
68685F464915FD4B9A19F7F797BE424748C94F4636B2AA06C07C4A4CBC634CF3
04E5B400E7E4F0419B112DDFAA0C4758560F83D80A525C09B67B5906D65FAF7F
6E5D42E5D0AA0EAB4C189E34CD1AF532F27AFF45FB1B954B3DCBCF75EE60A9F5
018F023784C394FFB581FBCFF4DAD820EC8C64F08360B26A89657FD7F50AFDEE
FE8179573A3CF350FB4D216AD4BBF496AD7A9191941040560854A5A22F2DD997
0B6DD21DD3EA8EB09C49CBEC6CDCEEB0BBB1B88271093BDE64DDA024D67F098D
6C1998506DDFF7907AF00E4A13A0E7C93046411CF6B38DB4AC2A8A0B67A027E7
96725D60A0A50B983A1541C18EC1999A99D7AEE5688407D62BAD5B13725AD3CD
0243D3EF4FDD9E409795D8022D4063BA844909C67ACF82AA9CED304D5F84A9BD
1EA3C7F5D2A7BF70766158BFA2BF63B3078593F3EEEDD0B6083B6858AB0E3925
8588CCB7BBA9438DBD430AD29F127063AF4B9F05EE48507ED3CA9D232187D3F3
ECF6B44F723CA243C91BFA6CBAC2D055A7DE56C0038114145FAA7D6D35070A07
5B65B916EBDF3A8A76849653DFAE3CAF9561D85CCEC1974DCDECC6592040CC64
5745DFBA8D9BADBD4EE85AE9662F32185133FF9A7E44D66410BDE8B1BB1873F5
DEC1D8341D039537358F7EC07365A462A58013C7072979A427CDC52AFFFCE7E5
4D922702976973206C0EE5806C33706C59C7361AD626D6CE7D73B3F566F01F27
AA275388FCE7FD284B031E6E262C2511B3FB2D6B93E53332C2ECF4BF165C03C3
1E16D2FD363B562B17AF600E4EFFAE42CACA979C6CBD4B624732090878288562
D28DA255FF658D7B2BF12E71C704E590188B62B57234540987FAAA373A4E6266
1D72C99948D78EE0BA5F56079E2B75EF5612495DB6ECBE036E13DCC1B79D14C9
5F085D1CBCF29D52C7CCB0AAE0CBC720E909CF719DE6804AB3A2164CC5D2621F
DED2AD5EDC14F9CCECA26EFB9D9803197435588CB476680F7FAE7B8634DB18F3
061C5289F14D2E2136783C42F2AB2ED12973BC60AFBA29150C76C118E72CB788
E61E561574114577F8D14ABC37C23445297753EB71A3C330F984885006154BA3
E1A07EAA256B8E5F5EB5139762EB0F4A641B648B0D781DB48A55B5D15489BAE4
7835562F4B0158AA1C2FD39A76A40238DAC16668DEC357DA709888966E72E933
1F68EA16A3221BE420EBD5CD48F491BEAEFC0E9A77A1670363452518416CB3FF
BAD590D0A3E461EAD5BEBE6EE7B2A42697CFFEB22C6BF46BBD3EA9155A30AA89
7FD1F319335E45B9E6977E4D6AE67993F7BD617356C8476B612AC5F8103603CE
A940D6978F7FB59FF1123D8C3C49A4D94B1EBA8D4CFE205EB0352BD1CB601CDC
9581B8ED3B44B090C731EBB86157498AC7037239F9FFA8261CA99CBF3D382D49
F0117EBF3D9A4DEFC8E6FF39C3F4022F8E1AE5C8B8A9DDBC74642AB0267EBB3B
DACC6B7C00AB6BC3EFF9588CAAD1E91DE71B0B7CC7787D549409481AC250F039
9CCEB878D275E2E346171058EC303E62B84EA810FCEBB2916BE110C37AE06BE7
70561CD930E8AE76E353293F9F839797A135916197A48D453611484DA293AAA3
39402546DB208EFC3CE2DA145B6B40DA1DF5E911DD91EC9F234AE3452CEB3D20
4B6D79703CA2EA91AC3B5951B557D62C7728D6E3F13BE05939C2A6F9F170560C
0AB39BFD238A0859BA570499CAAA419F561C1C0BCB99679553C2535B4FDDE702
D31E2527083154CA648611692A2D022AA1E2C6D5FA580B6E77C2EEB26C6A643E
7C1D168DF865B4775BE5F71D4603C1BAB86B4BBE77B855707A6B4A6C3D5C74C5
2D718A2D86B0C9E91D82C2AEB7166DDE523F70B48D37C52368A01241FCE8B63A
EDEEC917A3C5481118EBD4082FF15FD4D2BE60F57D29418B6B3C5F03D5EA9470
34BF163C67D62FE7359ED7D6632610F0C415EF01B721C7EA2AA27E04BC1184F7
D29B33736C033F3AB2351BAD214D3153A8B56AC1F060222DD0D1599235993179
C9E51D5A3BE628FAEFF08B77361E9F6D6198FA4DFBDBF06C5DE00368064FAB44
711DBD96DC7CC8C8FA6CD5FE6B4BF17DAE96A4D95CFCD30044F7B79BD7ACE218
D20F9B839FD8312F5B3279E3F455D0E9448AE6E34E2F5C77937234D12A695095
0B8ED6AA967AD5821FAC801E1CE855D11CCEA57CD2DD47F322D1456AF9F70E70
6D02348BCA5E03F7487BD3DA4591E19CD02D9FBEA2EFCE0C75486777A4C06A46
B68C27A67A648D62E0A313EFC105A62A18B4B7B75B6DCA68A60A5964B771B17B
38F66F6CC93D02B90CC445D4E74249C31DEBA9F19BC5984865D6C86463442BE3
D78BCB97D7A60E9E747DD403B76BBF4D3181E2BC47D3F6DAB71656FBE43A4E22
A5B1C2B9856D7B1950149FD6856E8E02610B9181E6FB262349DD796ED56A8D68
17641E495A937F4C4C7BEB73895B4F08431AFADF371A8ED72E4E0E9041078AA2
7D18E07D624438BF358158741788E73FCC71DBEA8B16E1D38AC02E698E1DD0E2
DE5CC0177D4FF3D312A97A3D3BBFF2E18881CABA9CCE19ACBEE67EB6AF20D2BA
F6B407AC7FBFE14ACB3191F92692F719BAA01E91A0E47E7AD0EB4FAAFCB5B33E
6A8D458C4CC4F6092DCECD4F86B8583128F7866A2AB3CCB8AFEE7E3C8E651D7F
B1A358871129E29189D92612ECF5D5D850DA0C914C03E3C15FDDFB2B9E49A017
CC65CBE254A839FB28D3714A1189500B009367F2B95D8C7C6AE4EDE27224F993
9A44D24014823C8A31D55DFC7E2089AB3CFC93959F9DA086029F865EE5D8048B
1175AB602DA295F430E5BB78813A5B09AADD65198B1E803A6A462030934B3DD3
DDC72EA254C6C2BBC7CDC82DE7109A977C3FCABA632B908CC357C0293B825E88
046021CA431EF4F2FC30A631212893F3E127822C8E9F64A75B4E85D62EB7BF27
E6A820617541DDE5A86610165C0EE645663994741C35D8CE5FBC74CA04E0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: MSBM7
%!PS-AdobeFont-1.0: MSBM7 003.002
%%Title: MSBM7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSBM7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSBM7 known{/MSBM7 findfont dup/UniqueID known{dup
/UniqueID get 5032014 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSBM7 def
/FontBBox {-45 -504 2613 1004 }readonly def
/UniqueID 5032014 def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSBM7.) readonly def
/FullName (MSBM7) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 30 /upslope put
dup 63 /emptyset put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943E9244F705764795A35B9047
FB548ABE6E67E3100BD046C8785EFC9E5E8EFDE27E12F8E500B0FCF1780BAEF4
3EA6864ED8042B2D6F7CAD4C111814EC2724D474FA400D377DA31AF7CA1E0162
2D6D635809AFABADC3C3E963B2B6224AEEFEDF4B792B439E5D266E15BEA751AB
DE0D5B865840116436E1D48A3AE5F53949DA7572A7C2108CE63F6ABF9B9B34E0
32338504CAB003F10FD641BF0B592F74E69078EAF516B03914824F5D23062147
029B08F6DB0CF3BC355ABC8AE7DB1DB9E66E263D9CC9C2DDA81B8D4E5944BCD9
E44EE4657B1AD5E8B33CF50E3B4B6EE941A298F23166F660404D74BDC8ADB898
97E9D3393E78E9096AC73A1362E677E79850E8E17B44656E7AB5804FBAAA5414
17A51F12F9442378E991735B7DCF51F3B96D08A8E55A2AB15E1FEFCABD38A505
B0E29098FE78C3C3124E91694AF81996310061CC563D85F98CF9BE5E9793C92A
892A2B9C27FCAAFCD7E6AC4F9DA6111BA64CE7224C1C7174994D344675DB1A31
1C169986FC61E7A2801419611C914EC6D8D12DFBCD440077B5BCD75773D117EE
8F6774890FE56CA86F7A3E1280740174699BC4C573C3ECA9E3D7B745AADA4628
521702D3246859CAEEDD476EC833204AB997558531589EF9657154412E791EDC
9E567A5D44B762E2823DABBB2C5F70FAFFD2B13F4B3059BFE38F42DD71014AF1
FA08A822F2CE8A3CB1741AAD742ADD05785757B417E082BE55B1A3E21D40A5DE
8FE6F244D0BF7889E704B1EA7338B9E4E65A2E6BEFC72D4A42CF449A022E54E4
C1A5CC4A6ED7B1FF1018EFD07F2979E51B6E4D115B6E880250D07E1C0215EA36
2B8B20EE75EF233DF5A3B09CBF02B8C539FB20F0075912EB6CAFF69F35D07D6D
DFDA88D53E98FE21C2DB8AD8AACAB446B96D43D5516179E91F5EFF67FFA5F6BE
D2958C53F28426E5E4E26FA7898448477988E9866A5B274C64F00DC7B8213D06
DF77BCFC05045CAE0797644D518FE84AD92476B454350F107F8D6D343EE0BE19
89EDF993819124CD54FA73FBE5D3917CD6687F753818EF7C3CD25861E0AE858C
398D15C90C9EF53FFF4C7DED3AFB72DE6DD9CDCB61521B8F4CAB74A5F64BDA60
3641F263879F055A00BFFE450D447E51875959BD87F07EFD815BE32371314700
42220572ACE57C323F2E9213B74E9D9C85FE9E5B969F1E1EE606ACB5FD93C876
5E025CCD19950A5308A05CD7E39453BC21C88A8E8AD85A4A84CA493EF618C71E
FFE8C280A2460F9BC471B3643AF7096198310F04D7DE7A567FACA6F87F9C22A2
B09F5A83658F08FAF959616959F2B5422F5B51035183D9243F2225E2D29C493C
A07E0D9554B021B15CA09CE439620A44183D06DB32FC7C0C2FD798DA0EC33C46
D279B4CF646318400975BA78A4409552875EC86F72969BF4411C96896F1D881C
660544A42152D545EEFC397A2167B49A6710B093DE55CA8712C40527B5B9F329
0111F30DDA3F7D3205541F8B5F5A5DCF85BCCDFFFA582726084CA64E0E324F98
76A265495171856AA314D513C165CC52C4B0492C1BFD8E8BC089DA328173A0F7
A845D16E1C626C7B07D1800E75A5FEE31B9753CB2F6F762715F5C0B895295FE7
BD1D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI6
%!PS-AdobeFont-1.0: CMMI6 003.002
%%Title: CMMI6
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI6.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI6 known{/CMMI6 findfont dup/UniqueID known{dup
/UniqueID get 5087381 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI6 def
/FontBBox {11 -250 1241 750 }readonly def
/UniqueID 5087381 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI6.) readonly def
/FullName (CMMI6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 18 /theta put
dup 21 /lambda put
dup 28 /tau put
dup 30 /phi put
dup 58 /period put
dup 59 /comma put
dup 60 /less put
dup 62 /greater put
dup 96 /lscript put
dup 100 /d put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 109 /m put
dup 110 /n put
dup 118 /v put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFB83E8A2A6085DA11
61B1632328B94B21D3CBF2E7752D441A2C9A03F6681FDAB37C4B67D5857720F7
0C4BCEE266586738012A2237A85FCD0425DA7E8E8632543F5BD5D50F9DBAAE69
9E053AECA6027559DE42F7291EB381D866F1293107553809861D43508C6F2341
5E4FCC431AF4A9B3660386AE63E877DCF5E513D0D5702B98D58B34897FEE163A
75CD6F5A2196F91CE5060CA5E72F9C5F79D18F242EEE58135BFAB02D5CA430B6
D1B9A376849751A45E52577B1810C4F0C7F6C8196071D5B08FDB731C5384CCBF
03B460347E0CAC959E4A12620B6C2ED62E06A241D1637F418B5599A7FF3C1390
7AF66A00F7C31B4EDF249C56C268EC9D546CD0489DA51B734C8292CE7B3D9E30
71448C85ACC64FA99B2DEA91AA4CBCBBB9DE20833700AF96395DEEDA3FEB7D6E
D6E3BE4A62CBFA18BD0471C14F3A2FD025C88E8166A9830C5B5B94624A3D6482
D1A1D83805D0EDAC1C79EA858A523D9FA3356DF42BC01886E77F6AA6B04E4E3F
AD107D861FC626F0A439BC3F125D48649E5101BF79C71507FDACACBBB4C4335B
C41A5C15ADF1DF69E1D68C3EB9BE30BDD5385F81D26EC8F2F206C1C7032B9EB7
0392BBCA23B4693686AF8D2E1ACB2FBEE81D75667CD1DDB906BC5B675660ABA4
E63429F16623F20B6A040E4942107CCA26CF6C1F52DEED9EC7EB15BE4F18F2E3
9ABDEEAAEA9AC41E9F20C37C54B33F609F5835AE5A1EC9D674DC50FAFF6D3511
2198195590F62B3B8A6FC8C3431BB8895A2F910F0361062DE32CDA9A7F41E761
B09BD8545CAA2D7124B5688B54705AA52E4716E36C0303FEAD38E0510B3CB496
6C30B115C37E02043D47B4ED796C671E30360800EC13F0F0FF3E0DBF5A642396
EB0F39A9DAF0974678EA1D041F08BD73867065DA91B044EF2AB15FAA6546031E
189936C1FD302BCFBE55EAF369DBA4895DD0996BF7292762551A86C8A3604E9A
8AD29E38BF6FD40172051EBE7C694249F3378ED0139D37EEA3ADB66F3A80A1D9
9C3655F054CACE93BA4AD42DC78A03F42455ED1BD5C122F234F21ACEB8FEFF9E
3BFE0DB2DA6D368478299ED63912A234ADB1DCCF1E519AD20772B71F8522B5DB
24E9658BDC1333D76F07F63D81F7A51D12C445ABF698092A24E5E5C36A52206C
0C41F7DCA529BB0A4D146DB6B4B341459FC17FFA357CA5F93DBCF30B61374613
4846D619423BCAC59B7EB40C14C70ABD985754A0094C98350D01FE9FA371B0F4
38884690DC7700C49236EF68BD6E806E8937AD8B77648F552C0C907007465A76
1475BDD3FBE1CF69C706E703226471C249A3448F81C240ADBE4B5474216D0235
6B0816BB6935A2704E851E20C002F85B653BB0700915B358DDC168ED3FAE3D91
8280A5CA5C2708D622B03DC47A70E5FFCAD5A7C8D9AD563857BBEF92A3BDB588
8B5B55CC9B960F20CA4AEB598DA8488004DEDBC9671488011E836D9D8B6251BF
256D08E6F1808E9D498449DF1F18E48B310D561D4DD3146C2BA64D960E66447F
6DA8B07194E3BFAF662C00737BB7222B55A5CC206A1C46F252ACF93D2063BABE
2BAB874C01AEC438D3F86AE37C9D7FCE4077F5B5785E12C1E0B685134CE2E8A2
2E4DCDDAED2D53D13014E428FAAE22447763D4693E82600F850CA4A49E1ADC5D
C8DFC16E97B9F6164095CF7F31373B591F815621F45DFF77BFBF89EF60C9F50F
0C2FBBA4EA9602E197B9447FAB6AB57B19B1C801DAB66BF7D263F6572B9EEF88
E06744C1FE197B8EAA71E1EB67716B7CAB30C859A2D1B2DB95ECED02B83FBA32
E62F97EE4403FADEC936CC8DAA161F7B509B2723BA2B735572A80D7D087E6395
6A9D34D5963E3C6E37F307C66D1CE551D2F055BFCC7360FBE93ACAFDE2B1A849
37FD373F62BB23C1A2E3DF61C9452A8C995B03D44D6210A968C6293B4A3BE662
C7B0B59E6EF6D53FD293B2C290436B0C448E7D15A63533DE321643E53C85EF8B
060C434E46A736EA617EA00D185323460E77B95C49070B035194A2E7693C3B15
104ED7F56FCADABE49F27F9A576B354C574B5BAFFFC57FE9AF02FBD87B8874A1
24C53826659BEB1EC50446AC26EF3A95877ED3D81D33A8BC1BF7473FB9C11ABA
0F27B38EEBDF77D3D3EA63AE6022DB0D4F1125DF274B86EF0A4A263E108D6044
7A885F5E87362293A53F457CBA6C911D23653DA7CE4BB7D4FF4481AB97C0DD81
C13515F0E3BF8A7E8DE2CE69B25BA9C185D9BF31A65DD290B0D4FDF40B61E2D9
AF92BC6468B3F5AB5D5B88710C489ACC69198D697055B39AB3DE8B3733825C5E
6E763E2698574381A01352A7042A36EA96D17DD2EEEAFF04ABF7BF7D877B0FC7
B6BA51BA994D431F472B6EC4B4C327399576470A1773BCBAC61CDBF0F95DA6A5
0BE5239B7E9CD39E1E4D27EF6695D1FB56D4CA2C2370509547D6D01273CBE6E0
66A696C35D2D0282CB8C85D7B1C51453A0AD0BC80E1D183D11AA78879643D9D9
A3D0B2BD8EE3EDF29483CC5871426232A20CB058EEBDAAED85378B163425C270
B0F7BB46B7D1B89CF84E6A06791195FB17F11F34A2548FE424DE10E376B39A2F
DD9B0BA2F2FDF3ED4AACBD0D60E67C0749D6DCBDE6E79041398DF3FC8D9B6CFC
693B870683CC425C52705902DFD324E157C9829F25B14A057AA92AFA17F156FB
0BA949698EAA0657B03D9538288D887959EF24A427EE7EDE47F304A1A6A715FA
2966273831B5B3A9C11021C153E67A73FA606FE3233C3DB217404C6AED6A4C59
DD4C2A98B31AF5604D8DE8354448B4CEC66022E756B0056CD32E9B002ADC712C
0545C2C16D9457E271D98A4ED7DDE01BBD1856F5C3DA28794D2C7951FE2FE6D9
18643CEEC41CA4A3464D3D3A102653CD6EAADA59CDD44918523B8811C2ECCABA
AC0D188F5E07B37AFD56006B10B32EDD179F4DA693EEBF4DF5425D996585F21C
8780A4D23D24FB0618C12DE65CAD42A0138E28A100257978EDCAD168C55C6F07
78A067F0299890356C2A184820A554FB07448395ECE36C45211757552E288ED3
7DFE46CB92EB2070442AFC85864A45000C4854D728096AD3D4C552EFC26DB6B9
C340358451B50AF9F1B35C2E32D495DE85B5848D78940270DEFC07A14D960730
878B5B55916FB40FD805116C9C2AC8C6D4645DA67A978F1C6FE705EC188DBF7B
FE7AD6769F2EEC4A9B05306D5BCD6EC3A240D6A29ED07D1D82E697DC8CC391AA
015DB6BCD1DA5C9A5A7BE3C5936681215E859E9837027D108A54F42AB24E38C2
4A7D8CF3264AE049D4B1AF48BBC564BCC88AF19D37DD81CCC431D0C554DF29A6
94ABDF8126EE4FE1DFB78559B9BF36FAFEC9791049C865694F9E2FFB7A308FEB
EF0195FAA6BFE7A081B65C5125623903828372F117EE17E588B2FA26DC9AE37D
9A6F0043C019624D3D87AFDB4B90C46AEA78919CEF5D7ACEE316F30EA0229742
55E02E0E2533CAD78CE9BD6E0260A695D776ABA229D89CF9BEA92CE0397821A8
830A557021B3B90CE0B07A4B34C24337FA3FA4A3728B6E013BA01071CA7FA667
6FFB4BA3A28B5D5614ACD4E80E00938C2589CC6CF885A260AF7589240BF8987B
20A19FDAC73FAEEDD93EBCB3D46F735214164AFAF1A7828FE96E2BF7CE1EA46E
FC1FC4527A0ADF2B81CA51E3D96F3E786511AF00FDDD9764CD3178362CF9DEE5
F05D100EC21A301F40FEFC3EF05AFEC140A9466AE68FCFD6CAC1A143BAF2B7BF
D0DF808F0CF87FE2399CD9D2DD424227CA7D4073ED002CD555FBE8057A797B60
313D18ECDD779FA7289D4E7BF82D95A7535CE3F0F4164AF239AC666653736654
C13E436B526EC5A1DC97E1D85C4EB563C7061AE1E81F0B38BC45B17C15FDB0DA
E5F6332721A925D4DD5A97BFF3E3F11D4F4F43BAE4E73A294D314527397F03CE
AFD12DDF9D07DAD8D6C8EFAFC2F52E20FBF62026810C0C31A1EF71FBD612654D
C68B7A24112F0ABDD20EFF3DADBE447AF9CE568F873ACE72B63283CB26B89BED
4B3315F26084453B1EB0877065A76E7B704B27F93DBEB365574A78E92FDB4B82
D6ED91A1728F571FC9CAB636A6E81D0C1C4F5E3F6F4574B6EED48BB61EFDDC80
1831E2AB9327B37881F0CA5D5265575F210BF4BCD8653B4193F74E3FF65028F9
2968B8127C68CA2919DDF529EC882EE99901146CA629A07B4DC59E7868DBE083
6E546C5769655EF6628FE2EA78AC891D130108192053D5056A7BD06C09592AF9
6310B3586A2609DB94CB0079550358F5547B9FBB2B77917A327EFE3F972C7263
54076627B4DD74638C3105FB25DA246484799D5326EE80503F18672B893289CB
1FFF8D3F662FB33E93025D86803551A8A1DE363D1534BFA3EF968871B19FB189
DAD841C177E2AC98B6B69A78048221C5EBBBB86511939D3A9963B3BF021185AB
0B26CA7D0A779DC2F7693C7E48286BD60EE46615E31B93FB0E6992AE20C792A4
72AD6FFAD6682D0F606807D7AE63A6280B5967FAB889DCDF0F76347CE302FAED
A59E1B1AB785D9D0ED695A0D05DD3DF0EF0B275AFCF9EC7031E1357E99A3DB85
B4D137567875F7580E2BEC96B08C97ECB40876000B610E0BFE81E7884C9BBAE6
6BE9C2C612475396BC10EC7FFBD1118A7971FE1971DFD0CB677ECA65DD837B5E
C7D36FE9F20A15A941F1E77C11093C902DF5B7639580B9C0E4AAD13518E1901C
1162FA095F301848770C6C618E371A0AC3463D0D94221EFCC0884B21300194B5
97E03BCD5C4878CEBF352EDD1D2173B56C9B6A08BF3F33419DF226E1633CC5CA
A88A57AA85E21657569916E9B4B79E51B5535A57B2D6FA3EED1D0AA32DC0165B
12F8F5A681040B456D8DF175AD6053A2954F327F4EB4CD453A056FB1701242C2
59755058640C62632C764E002CE928E6B908BB137C28630A3CDBC7C34CF2B643
FFAFF20E345A86F31756C78A8EE2B9B1C5DAB2C863B29A44190770FD90BC6AED
0C25942BBD6A370C21650947B49AC8EB6825BE65DEFAFDDA32007754DFE0273F
B995B8986E505F95E58A3F8873545DDA6F3FFAADE992F3FF7B2DAB76D663280E
CF2BA18BC8871A7C361AA3600B192948CB918FEB0F2900AF2BCF169576828325
449CBF0C7AEDC299FCBB061F491469B9ED1D56771A03F9F202550E17FDB15B51
4772B2F06E6AABA4027D13E8730999532DB2475630D2F8EB98242E36F5B45A94
2D8083014B63A806BB9A01906143482C614B5CFBE8C5354A3F2438B2160F6DC0
81AFCEB201EC67F66DC5808C907A3C6CB664F444D24095D9A11D4978A7B57037
87C67552FD59F5713D0FE03462F9A1A323BB3EFF0AAD61B1792CB109CA9AE4D4
D7F7FBD3FB91258DCFFB4634669FA13E03C0AF699165311CBF37D24378022787
87D1320ECF878F859149B2F994E700A32CB7253297AC58753E4583A08A1F83D5
CBFF10F2D26D71CDB20E1C69A666E9C4D23BB0E6BF1097FBBB204EB736E61FF0
C3FDE1986938F8099694B9F998B3C735770FF21F73B1A6B750498BFD21184F11
5E6AF0F1FBB08EAD436C4AADE1E6B815F5E58988C113B4B2335A340798BFB201
40586D0BCD6AF5A08CE9AA042910197F47D98CBB4411A6D435A46F46B3964F85
032D7F8D880732276A8FD24DA772F642F06C9F3EB4C9090AE4A3AAE67D8768A1
7B2A57E15B7FC626450372F40E3EE28D8D997CCC8CC89C644461D1110740407E
F6D884A0503E05AF830994AD0CEEA924D935749F6EE9F2DD65A58ECD59229918
A303C90E19E9C411FAF24AD5E9B786178F8182692CDD508A4755123B4A594AF1
A8E7287456C1CE2CA485CF4CF9DEE5238AA7328DA204816F98B7EF49EDB30875
3CF8C48E0465BFFA8F2A1CFB6A8F165B63CC80F54C669D02BFD9A0EA0FDE2B40
D69F0101AE4D2C10185AB10953019FE7D373BF40C2F6D4E36693F118866D1267
12BA7987ED4313E8635DA02A4FC1F7815105F8EDFE8004A8801CC1AFA8D123FD
1768A6C39E838BD489C6BEFFD3BDF650DF48D5F8D99DD5A2E8AD235F2CAE8BC9
C13AE9B214CF3FBFAC7BDFA54CB6E675273330608BD35600775FFB2A96FF648E
DF55A78B43CF54CABC0DA8D574CC5C5C62E9D658EC62035EA5028767749E48D5
658212BD39C7E76ED0C6F3E0A1D138A0DB8BE574987AF1E43070F1F12C560009
F48993FAC935EB56A5793BA13C28293601D268B4880F9BC33D553FF3B6A7900D
37900BD3B4B558C84BBAB09B4BC2B14D32E49596DA090E586E28D560903B9744
7D014EF2A6AC4F711A025DBBC841F1C1C93BA1F8327DFE33C803A0993050D590
C7AE262261DB7D04B9DD91F89927161A69E14BB2A48D29578410E312A4793101
B6CD65B298988AB798F45B76E1F58BE24DB207C7E07014E17525B436D41FDB28
D1072CBEB526E17C72DDA00ECDD06394940DEE8BD02CD3C81BFD12BE0568A459
0F53010A0655942C932905FEE87183CE357887E2ED286DC1E89F2F401CDDDFA9
B418F218D4115043892882C09F2E3749D4671E75AB1AD01C78F59FE3F54276D2
A91512C21C68180CCC0E147E834002D7799FF393842CE88BEA714672E1952C9F
7CEF2FD0115B0E292079909A7775769341A7888CE6063537ACFF225B4F396972
41BF46C599D278906F3BCFF81DF941BF5888DE8A53CB0A2D71610CDCDCC1760A
7844F89FCBB892AEA853CF5D967648995559EFE852C95D2EFDA2CF063500F88D
2C83B615618831267BD8F5438DC53C6433CE7347E9C55E103B450EBED6229219
20E979C00B0B9D86345FC3A8EA2B049B7E148A7AA1C859AFE93381DA74CA578F
8FAAB28175D5B57F6A74F9869B2F530009E953913C6925D0045CB2E817A17742
3C5B7574E9BF3BA7B769C161C2496EA2D346B4E19E434120FE92A0ED3F4A9ACC
A8BFE55F04D17DF035D01FC0B06182D8C27B6D32F36551B9AA56D61FB6A34254
D0DF918C6716D8D05B973C8BAD5AD52C06EF3C6503D4E0F7F791511C79AE74E4
4B707612149D583C5D96E534CB45F1E7CA5B23642B1BDBC881FD8E4F66CCEE96
7CC0509B5CFB0B3596682A81E682DAF6AE58F605FD7A1F414F62572298AD8491
B76D0A23B4AC731FB8E7682F506B5CC02F7029827FFD866EF4DBF56E07E7743A
D42CE65B38EBDEA193CE5B172E87DC88452C3DE192E363EB9DBEC4EC65F53002
BE9E94180F73B53CE1E8EE9333DC86DF5FB2561FA1F9B2511962CBEFACA739CC
38A286651CEFBF451FF6568CFFBA8AA68555181147C1CDBA18C4F5C77BA8548D
2B1BA37E05EAF7F69879C3ECBD02783028CB1A8649842EB71023F89CEB36CEEF
A9B04E9ECB0577536B88ECE7C1D81B0D6D5A478F8E92DF83D194759437088D7B
E93C6AFD0CC6D568E60E2F1265A6613F97A6C4068C8EEBA70F6CC4E88A80F65D
EA7B498395390A74BA57221B86611D3EE5DC4632F139CA8A15E5B9D2DC97088D
7CC65197CD93F4803BE4246394F40EDC2CB4904BC273C597F13C8DC680245A3F
F1AF2D7BCE5D69E9CFC81E5E9F46927C5F55C719AFDB2CB1AF2E4D55B0E3ACA8
6BBBCF253CCFF8F02B8542F296CED0EB8A06A88549DC959E22C3D6C48F310452
22B32C44B046A61A4F7F8AED613DCD3C464DB2280D56E517CFD16DC32C83EACC
D3E936D2F3A883B265444D818393E30EE3AA59E6FA73DDC421F5A0FC8442F89D
CCE98189ECADC080F1973E14012C2B87F6A8289D7E1E24B79433A73BE771A305
ACFE83195EFA1EAC827EDBDDA678979C87FAA5768355728EF195A9456C7098D0
9D501CC27070F27AA426B145218C9315AFEE5B4BB37010E988DF32E2D7CBB3F9
F236403EC9325531A6CF39B45B12328C9EDCC6AF76A0DF223531C12CDEC349D2
325D6FAAC3C41E378245A0E017C3352B9CB7F2A1E4AA3D9A44E39D5BCD4C4FB8
7316BC327ABA5D5F5FF14BFAABD822D9433F0FC61DD06BF1493BFD06A184A94E
7EC0C67DAF6DD7825A6CBD56048BE3943949B1CC8EACE2424FE4A69CB97F313B
D84E9C59411BBFE163267D4BE932D830CC8E42E2CFEE0EB76A036B6D9FFACF7A
F3C0EF69030754FB5C0DB9755DD7292B4C730C54C0F76DBA3E6C934A72101EED
2901A35F0E97C666A0F038A9C215D92BED63C96741F3ABD5F9F2C4B444B6919F
E7C44D0F515535CA4864DE403210E35DE285BDCA6D19C77582D4C1390006F9DE
CBEA7B882AF38F42B1571EF3731FCD943CD830226A248408018582EDFEF29E9A
04669AFE475D7024E86F51F136F36FF82EC005C37D0878A06C8A1A0E2801FBA2
7F360C9B5ECEFDFB060714B514D154B576C81EC27DF303F1AF86F10ADD125F6B
D6B15DB5692CEA3E7EDEC214ED4CE4832D60E91796C9167A6FBCABC6E65545E1
A6CF665285E54842E1276417C8A24A4EEE01D24F22213D5A5B80370F75253D63
24FA8F5CA144C0276B3A8E37A973E3CB65BC569E522CABBE8C5241319EFBA76D
5C8958F64954B3EB277F729BEA35425F06EE99AAC62AD65CB9856E5F2E260D37
856BE78B01BD5ADC062250702275AF3CB501D50FC44E89810EC81A8169115D2B
8B56D092BDBE1933EBEA9187A55C6A39EA6587B515F5CA3E38B980B9CBA21A04
C2C4BBF28A10DE0FC55F404520EF97E4975757BF21224E57FE935A52899FC726
C93490E222E59D82AE7201CF68034F7D143CB38B46EB44FF43E188DA9E46AFC9
6F3393859AFA347F0803D8683EA43AFC7E2143ECF9E9D173D47D300F44FE7A61
BEC3014758403C0EF0E879597148D137A5BFAE6933FA4546A7E0129935C31A21
54A8F07E77DE11B2428FF122581DC20429EC9C4E8D36E64576506D7BCEE5154F
FD0CD46499382B07044BF89E024F6D5E244AF3DCD04B8F4F8036CF0A92B9098E
AA6CB14A4F4CA2811CB409872824E710FFD44C5CC953CE9162BB0C8B01AC3F74
1945028E23C4E678A6E83BEB468EAA8FAFB97B046AD3863D8A2214B6964FC091
7B5AF7017D8FBDFD731B5809F1916AE851EC8E1B034DADCE9CE8BAAEAFEB6835
3123AA46432BF5112728B74BD398D6B87CCF9591A111345BCFD6A655E3D89D81
155244F4BAEC73CFB7E5145AC52D5FDA4A96B35475EC0B599727F1E5B9D5B8F1
A8ABFE2040755649A654BA7BC8F34C207CA2E89EDB49322ADEB2AC0CD0B91F6D
7E08E3FCD72AF6636A454C93BC7DADE67A7A9AC837D4D1B81111C96DCBE0B09F
D26A11024B6833A6C346A08DBE65B13CB6FC58506E5E6CFF3D639695A79C8865
E59F843B1B29D741DDF243923A4C76779EA9211A1E3879C99DED7F4CEE5D8F4A
C333EEB5E2972A4DA72A6B33B08DD4A7231955D67C9DD96D40E332303D1A6973
9121614D268505090B6700CF4F91A31CF8CFF2782B2B79D71BDA677179FDC8B1
DE461CA362457904BCADA983573B76B74B2844A5378292432EB30C62218A713A
9142621D0AD2AFF299C79CE70FF0B11EF315491271AA62BA725FD923FE87B0F7
C743C186D711EBE02E63B6452656F557AC838278B4B4A3A65C8F4AFE6E484544
270F215AD21A30A84AE517A2763AC3828D70A8C54E7B7E68973839FA63F4166B
2575BFD66F8CE7A791B642D23A050C1CE3578090805F24D0B7B1B72DD251F6FE
47AD90EA739F67A7ADFE70ABAF62DA6C5F62604A724B1A8DFCF5302280A3D08D
89D7781B2B6EF676A8787443C9CBFD064B4EDE2E2108A5A77D305922DFFC8834
A93FDF3E0B71D6BFD77C3A49186E8FB514F8CDD784CA968AD6244240D29356B1
089B752A13522DB989B0C5AC4542D8F3456A2185C55B311E9BBDA68594289515
56DDF1AA1963A48F892D35C0A02855CEBD363FA2AD33E3BAC4F4B69A8DDC92DC
2A33EF78DDB4A74B5007E8FC3F52B941F4878CC96243FA5BA8AF096E97A7DF96
468E96CC14B1CCD6242A7B3675D8E6244744C288B6CC1A9EDD15167A21C15DFA
A48D61095F91CCA0DF541FAA9A77046868D98B163137D951A7D1472975B6C221
56B019FF46130F14CC915FA1BEC5E221C0E1D3E357E3C4295E31359EB0ECEF08
DCD0CB0D5516F615FE1B2BDA796260E76494EBD08716FADA3FD2092734665080
EF1F45BCD789A3F00B6883C86B21A1E01803E4D27BD9CB6548416568A45473AF
09F460E6B936D470D8C1A7EC0D07B4497864C130E7D278C9309891E6C62A9324
DAB418A7F7845AC8C4D16516CE895DD28A2D312E9ED90A527A4F1F0C701DF35E
51BEE65A21FCE4491CC090C841EFAD79672A67B6637BE02ACF2F58955A8F85C4
6EF5ED540B2BD9AE588F34FD06A96E9C51DCD239EF6D0969CAAF54CD9C4231DA
9021F28446A1A29CD6F31605EB776C27EFCD68DFE58B79081A10CF55B7B2348E
7C2174E3BE23225CDEB0FE4F117A8D1828FC0707D830E86E3F87A462B3C79D42
BFA394FCFF0A4B0D12D7880E057F343206C24C2C69918D9835C52B348FB2987C
E1204221692060E8A35C5365470DE0901C13A24BA72B88F17298971D4DE95A5F
639C1ACD5987BADBD2B22A5313767C5B322A10515B33ADBE052E373A6269BB96
090BFF998F092DA298C56E9E1C4930AC34DEC9486115DE5DA8B6DF72D7BC552B
ECA1E01DF83710BF4B82EFE1192AFDB885F74EA7DC747988A03E0BE4EC588DF7
99AE23264BDE32A2306D9C6A94F5C30CF1CF01AD8EDB2052F322CC455711C0F9
4294CFF9F279C3BD53A180A64EC92627B28E7B3593BC7CBD885276F64F3620AD
B0EFCDC5EB1F6CABD6D72981575B95334DDC4672C0DF56BF3FC242563B6BDC3F
645B9E90410BC2E76BD01633831A09C884C09A29D9E956BCA11272796A132B71
F9F2108F9D2E177D52DE7AD5BF84C6D81F4E7D14390ED906C64CE79E98ED5257
9795AF48AB67D37C9917BF502E82C6E20D0682FC35BD9451BCDACAECA3CF8B96
342781965B0C0BA3CB2BD0F45080F967423F603B200857E08B2EB034392C55F0
B68D2B21369B5C6C53682A7BB2E2F344A12E1E680A24D12836445F829AB16FAC
4341299100D770D59DFA9401F099392675391A002038B512C456A3B57F4A6E83
151BBF93BD0F7D27DDBCFB98F62794919A3F46CC78D9DAD4C412B7E8A32D6078
3198FC32CE4F8FD5AAD50BC69D99C81F268F099889EC8BE7C9DF4877FD7A5865
8BCACE9CEC777187AF83821E63EE81449A1E617FC8F5A7CF6B4533079A97061C
82A19C1EE2C975DCEDF86CBEFF4489C7DC5434FF0D91D1397A0F685D7E54151B
0141219EFDE69F5952B5E24F0A185C5B1026A59C5D12E5848FB5448E194B8713
F20B70A0FAB4DB5DD62727B835ACEEEA7E948C0AEFBB1BB46F7F2186324965D8
D31E378DF3D571C0AB73E8A19D94611AE5E1DB820C27F34175FAE0029A267F90
9F0473AAE7DD4716686D8165B6378277C678B18D74BBA66B2E476408F2CEFA14
D568C13F1E1D5EA1FD3B9E926A3099A3382B6F0342BB7303BF877888010F49C0
1BA67E6EE75FABBBCACC39C2E3C77553B1E67858B75B50C31F5DEDAA182F5575
AA28665EFBAD92DDBFAD8BA65FC3472CF8405C5D5AEA454FD2FA13D5F200C26E
39F1EA78562C5402AB4CDDDF1746BFADB0C88CFFE2198C19395D206052BD4A48
D74D4FC04D69E98A0777F2078CBC380B6553E1F5E658E672BE74C5F190255D17
9D07DC8553BADED413EBBB89068972A749AFC3FEDD9C3DDFAB10933A9C4F9A9E
158722012DF2425F783DCA4880E8AC1AB36DF40B811D61B77F209D7302804605
076A46923F9F6A5B70212A10DBF485D2B5CFC14CFD9FC6D45E02B745492FF457
76381D9ADF6B773E0AC1287463B27B2BB94F2346A4DC4131795BE484281820BF
8A7DC161371032BE49027875F41C6B53031A44EAC0FEBB66E247AA5F55D6970A
FFB63C577C0FC53B41089496EC7EB4A5C184BA616D0328E6ADBCBE7FDF954DA3
EB8B401D5C8350CA3F56422F34EFEECF9B6297BAE9C85E1C4DDD3FA529FEEA86
9E2C99BAE390DAC58253067252301D075DC9AC54300E80A0390281370FEC32CE
88FCBA2903648C2D30635D878500F89FEA60B1AA5D241C3D7EE00542A935D125
5DE441226B4840F3AB4B83C00724C3F0830742BFB12D85B25885986166E585FC
56F8BE4AFDBD1C136E6AF6A44283696FCA476535F2C64A6BFE242D4554004211
B5A466480C88F1DDCB369A41805E56A6E4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR6
%!PS-AdobeFont-1.0: CMR6 003.002
%%Title: CMR6
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR6.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR6 known{/CMR6 findfont dup/UniqueID known{dup
/UniqueID get 5000789 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR6 def
/FontBBox {-20 -250 1193 750 }readonly def
/UniqueID 5000789 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR6.) readonly def
/FullName (CMR6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /Gamma put
dup 1 /Delta put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 58 /colon put
dup 61 /equal put
dup 94 /circumflex put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DAE339BA29C1C6F656
1DEF13780383DAE38A868377CC7D396B2A05F341AEE0F8BD0A0191F51AD11A4D
2E927B848A1EF2BA15CFBE57A51E3AF07598275195C9613041F71C1AF39E61F9
EFD5F6512FBDA76E29DE6B508F62F5CF9F73F5288DF1C7B0B82C92D3B6358BAD
EC3CA20BDE55DAA7CC58004AA86B6CBF8C410D8287E88BF20588A39309C2B703
CED322F030AA6069869064486CA651DA054FF3F5E56534CA358B0829A6B954D8
9103436E6B06DAD1658BD4A95AB41343B01F5866FC87C4EDFC71F1477C98F8E1
1DCF27EF743FF90BF918AB8C4E5AC35841E2F745480E5EDE1C1DEAFAD8D0018D
2C1F1CFCAD9F6609859DEDFD1648A6CD23D8ABB80747F94899F17C8F3E6CA55A
E176F19CDFDAA0D7C920B3A72051A4745560AC81978C92459EEE5AFE85AB247A
32981139CBE352B248F4BE5F73503A084A3E91F05328EE521D9669E44E202584
5407E7846F9FEE3D54EA18FFB144BF2D6803BF65AE402034B3CDBB40DD24217A
3CE0E95E2717CACD603A958187C42B3558AA38D6B6390EEEDD396F96E6041FCF
6F8888221AFA87EAD79F46E0E32CAED91E6C8500879AB6E580C581E8C8CE9B68
2BB5EFE2604E8DCB2432D39D75EE556969F1B2FBDF6A4BC72D106AA7CF22C268
464027898B311613E06E1584707F262F71D9F49D2149306A88E02BC60BBD6BDB
EF41D90F19197BA9AEF32B5E63D5B9FF41B5602F9F786E76621DA54D574981AB
87A72081EA05D6C6BA940EFEBD0904EA4E77BBCE17E20B42E1722617E0F6EF32
F1ACDE9D758594E9C81049CCC10605A27C2A06872FBA9F159CB155609B496ADA
4886F478E44029B5E620DE8319E257697E93E1CDFD27D560E2E4D34507020E2C
D9FF06BFA14E056D81DF701FAC3ACE4BE6C098AE116E079F0044391EC1661F6E
7A93B9320BD7F91E8FD2E8EB3F5CAE997D5CDD35107A1D35302260D1499B8B65
39625B7925F97D917B66BAFEEA992873F07220714F192839948CEA080BDB9A03
77B9DD032273DDB5629CB28B5D8797EDEFDBC601823E038384C90C79012A7D96
8F27784DA15BACE21501C26E3AFA5DCCE81B52B0ABAF71A35D33103EA86F2415
A39A830D559C5C6CA7423945BD3DFA942B20A06D7A8D8671F9831DBB52907AB4
4E54776D29C6085CD9970B6DD21DD3EA8EB09C49CBEC6CDCEEB0BBB1B8827109
3BDE64DDA024D67F098D6C1998506DDFF7907ABAADA1C39C759C850E0C6F8E89
A392D1C9329ACFFA92D361218D75E115F70A47C53B73B356D703E9C499AAD098
AA9C8119EE9E9708A9EA3049E976FA19AD04210D5F6092C7903FD155113F3A3F
269B746560F70970AC9F8D09956E0E84DACE4112C4E7C7F6B3F0B63D26EFF95E
2B2E9699D16BC8AFC4AD9113AA3A974C9E82E877288CF71E9169D2DCC61AAAA6
C536E5604EF0716F6487292BBB677518504B52C63822BED3BD5FD14EB41EE6A8
AD4B6CF90D39F98E12A765B645CBA3E8552FB9A986390212CE119E7C3DD675AC
17BD006144BEC534DA2A860188619F17589008409C5A309CB83FBA70F6446B6E
2B56991B6A03B1DE10C621591CEE45BECA27C54BC8B4F1754A9E8F660812710E
117850E1BB6FD89BB13F8CE391C43DA89EA67E9C3E7A4697790EA26B0E4E2E80
DCA508873A7AFFC11B8C02EF86C2316E8D8B6BCEA37F81A3A87546705F070C3B
9D4D28C366CEBC1EE485B8E2357DBE46E86C87B9939DADA60888AA9F1B92FECC
CC1C198DDB594BB70A8FE690ECAC21A414BAC89BF019F34D2A130F485EAE35B7
2A10C67EA3A48A4D9734759CC93AD85C6A570500AE5AC9973FC76EFA06BF5DDC
26E20E28D16B50957EE01AF2653F8D860817967AA5A9BF9BF7ABCDA710E9F34F
4F0EBCC32B3C9C2971F6225D2DAA6A451366B83F32B2ACB83E746D365B2DE38D
C1AB7447FE7B37F9630E410E5D8F0ECE74DF46C538947B3A167AD9F3E4A7EB3D
60F5425AE75AC3A27D39311DA35696C3DC7282AF1532E7AECE63D13DDA0296A2
01487185FDF1875AEF55A36C17D6A8DD329279D229259463A2F05CB7A874374B
E2320E1F6CFECB9C1CE62FF468C29751ACD9754AF1EABE8E7696C2888914416E
235B6766F20FFBEFF285277B639A51EA2F2E30D207BC891B00F0436008F980E0
9EEE7FB375BB069B9E0BA11DA951A99D8E60B4F920A0495C247FA7DE904765AB
DB5C3B2D634757E43EDD6FAA4DB3C67F82D6853E1170F0B2D8CE496DD4E72B0D
28277BEF172F1402959F64527F9B640619F04416DDB9D05FB2ACD019CB9C119E
E544D24EA6DAC5C69785394EA50E6EC9AAA9E14B904EAF29A733C6D7942B63F4
85729686742F26DEF78DF0DA1CA7CEFBB684F4CAD99021A3B3D1FE03B9C5A4B1
BD04CAC89BB91B11952A2B17A61789BEE0C54B46C03FE9A1AE73D17CF94BA30A
237C29D414C3BCE8E3E2DDF83C0BD59DCB66C4D2C3DE73DA8378F3C6C8035D28
7464399857E57651A53E9C4AA68DFCA91B2376CF98AC5290FDB9BDAD9EF1604E
9B0A70EDDA1E564B6D2456E7BC722454ACA8C4950FDD44B6EB9AD01169A9F845
B06A0DDB7897C847A5B1F42258AECF3807AE936C8F52C3A7A0A85D68160AE442
FE81543DA6702D76AB6E8701F80DFC1D87C961E350D0E52AB2A298B9E5908600
7E14D2A87309043CBF13F69AEAAB1BC239DEA88EB5176624F6046664B1D2691F
FBB2071D3706F97DCCA355A6DCC4D09FD35DC078FBAAF672FFDECEC61050A120
10B5A96629041303FD01ACCC7686165DED6AA712FF8E5E85DE33C4E7D877C49C
6C469A90410BAF60BE65ECD91CDC2EE7AC0CA8BA7B53865F26092BFCAA0BCA77
B80DC51DAD09C93C8DD8E43502B4B68F3D5918C3492196292447732BA90F5AB4
9F5E1D634ADE1CCAAD028DE5EBA9535F6FC5908DBD2D643E0A7E059C8C386FDC
E72659C0033F535C0D7F6B98D0335552D0BF3C6E302B672A5EAADFCEF81912E3
8F54E6FB7EC2B325125159713D0AC50DEE3673B9B148643727E94C80971A2E73
5E1E13237BE69C84FC039DCE02ECE2668AFD047F21A61BB94A9F498C9FE5CDEA
B274B40728B6F6CA9B6C15BAAF92F465B0D7311B46545CBA90D874839443CCB9
3110F052EB247B24B45A3D2FA6FBC7EB2A4BEC2A5892914B3C5EA3F4F9B9DCBF
6F932D95700E045B49E4B1F2C9D2A42CF39CA2F5A2654E6E8E6E92473D28AACD
5E35C6705EA728F704F5996D286BED433F976AB7E018621A577AED7C0AC0A84E
A032FE1869F603E6F20386E3A190A30A21EA886249ECF8CDDE2C33D73BA8647A
3DCA7A8DD9E8EC8D9A415D126BA38B6771C489DFC419303EE9C1B83FBFB3A0B8
97D64F30E4BCBEC24DF603FF3BF541E00D5804B6B6543D3D2B661CC551D497A9
9DFFF535AF424B2F3150BB39AAE8CDB306AAD37767BA10BADB031DC2FAB16955
EE78342CCC0E8B5976BF98F215461A8C6F63EBE6E2F1A1104662DDE53388CB51
8B44F3534853B8095F3B746A2459C2EF800FB1EF7F235EBAA9731E3AB3BE4369
1D3636E3ADD5BDF0C34FA80E90D8A1DDE770943FD196E0A7C5F1FAF6970B34C6
4673AACA6B2B5C12B9608521AE736C1F4B97209B063D991300ED5AF3D7F27E76
68E0B858FD8BFF86581E2B9548C691E3E5D9EC4D39C9715CDE86C7D22223CCEB
8A38C776A30AF14912390A7546DBECECD7A687D4F08646E57A12C80DCA022B7A
33399761A50B8E0ABEFA1163EDEC3DFB5DA3248792EEEDD894872D4E6814B4C3
548BAFCDE0CABBCDB97EC6D1BA47F2E77CC1389BF19D73661749AC33F46A618E
A665A85776545BF9662F2179D7BFD604FA8EF4700591AF3AEC647E27B24B76F3
133F9198DC15C1AED830E737909E43EB91C334C44BA35810007A3888E33F5DA5
B3B2C35481C648AFE630CC3E08F77744E401B2934E407D1EC17ECE737606B076
F8DE8EF3344F57495EF49D11580D6FB28AE0B1422521B320843B13467501CAE2
3DB93D7BB779F73B6AA30050DA74BDBC3F8DBB30F32EAFD07734A151BB2BAED5
C9B1F790059339B64BB4146470F30928C9A49AE88906BD6FDB7431A4B50809CE
0F67ABA01CDCC2320B0B097187B9299E3D80CDD7BB5DD5BFA7B28D924C5633C5
45A23CCEE097C41C3759C1FA8DBA0DD95034BCA89BD23FAC18C70093F40FF2F8
0FAC5DD4835F2DFD40540E9A9E9FD951A8AF2CB766597DE00147B163BACFB7E6
EFDA4DED594F1C746D8B46A1145E0E4058F5917B3F21E9BEBDE745EE72CDCA64
FB31EF7A2E55265F32559480E2B6726D3DE26FFC97EB4E3160F117E890C4B2E5
8DF310E6A728ABA85540F571C024F8DD58E1D7827FE97CED5EB31547EBC36415
02B8C0E10B7E37D816F01D56A364B8552CBFAAA95BC4BDDCFDE91CE0EF005B4B
7AB56FFB47A093AEDF0DE1EA48FC8103CA3CA1470864D2693E360006D05668A8
AA422CCCED20DCEEBEA5CE0DA1EFB00FB93E922B18124FA11A88D0F6E0F719DA
57603DD5DA42E1C56C2FD9E5415AA199D4F334C151C1157E75C107FBBFCEB706
5F4EA47A29B54ED8CAEB8DDA2F53D2A703B95487619780A52DA1270011648A28
AA64338E04AA5B92C1EDF3D8DA34FA6D227A0325EA6F22E9B38B6338C657BB21
CD4C582DC04010330F62923F817E4EDC6E5C0E6500F2A975A8A95BAA30C4A134
BB31B5AC45A2E7F6E9CDFC810D41344C4F606049445F8E93D74271C1E29DF7CB
5459593BA28AECF64D903D3E4D77CF5C04B06DE44A41EE4D9FC769854503AC85
69E4A5106E84016DE3D59865D4AB30BD6C9E45C45DCB5408421CC50CD6179C85
34E55CC70FBD8FEFE9F1D5160664981716E3BC7F24B6F54E0323D9BC4B692971
24419EE62D8B0BA726E2B4294A9A76F328B8101DA29E78BD5C4AC383350FE196
4D42DB1653637D19530124858950C22F1E9CF5BC07D46B7A58CDE19CC88DCD2E
7FE4EEFD8AA6047E919823C8CAB2EF5274F45E861E6508CC11A8AA90AED2403A
B2BF1315C2157B3B50A3685205D93E40906EEE9DE5985405974BCE0B84BB37DB
080A45C5237B269B93C0A7CF294A18B45464A41F604C494CBEF829A381155CFD
71CEEA54CC39EEDB6DF58A9896246B09F95DC6BC40BA6916AAB5ED3D24F66154
3662F8978FC63DA9280FF7ADB09EA5BA79D3B66E0C88BEC1EDD78DA93839073A
A4D7B0E627000C4ABA76C47CCFEE92E319315333A5584A951E34C55412049C4A
A5569FE65A006F77B416E0530AB6A8E7AD6C72340AD4CE25937158FABB2153EA
281E1D840206F5DA38E00815E9081F81DAB9FAA8F4DAB305867AC84735DB4F52
A36129929BD2084A8EA37BB6889695204BF7290B68D5E722540BF8A276F8BB6D
451D582EE59D2FF03F6B97DDE05FA00C3D375D2D0AAC8FE298F85CC067B15481
48D70B6A0354C705715B891915FE8EA45244677B9FCE81E72D66177E309F3F83
F744B9EA9E55C3B30DEC6E5E03B3988FD526A82A5E8E1DC79127FC62B2FA7949
B3AD3148868DE22BD4B5708E32CEAAE6ADEED1F463EAB9692411E18F8D6BF391
126B2700B4CF3B59D02E3F8795130C96285A63FCD1E0F647ACB1D35E9C58BD01
1DD06BABA00CA4343BEBEDBE677E053E9732B33A7495DF51782A07DA07F5646C
770C957AD915CC70BA8E08BE7A1F4E6BA5BB9C603E38F6FB0A2578471C4D02F4
283069856D926B9076EC73AA39CEB0A061AFF1575C7093FDAC9F89C3DC06EA45
06F3C2A3BC9FF21128B10CB758DF0F099B459A5264A8C24C098110D2BA1A8532
8FAE146A91BA7D033F591AB1A94B8A6FE0FFB610F698D216D58B4EF6C87B1524
8037CBB7E23D8550A620341C6625A1A2ECE7CEE2598D66277F857231A36155E3
984F147783E9B93975AC38A29F2FBCF704C8A04AD84C3E04A12D2321FA56811A
5B6744813CCC187968C5C26BB8D3E6615A912FA5369C01CCF8C0DB790593B190
1A90CFB5339B8771F325C5FC448D36C7312B11A15A8635BAB59CF3CAD176131E
026F6E141B2619EF7F3048750CC9291397F141591EEC8B612D6656DD34DB54D6
DBDD303CED74BE76664E7DC86FCFEEF2001C9DBA56418FB61F589566A47AF36E
C94671C5E8939AF9F4D53C0DE7142B7B63C86AAFA65877EBBB48C64589AFB2CB
1280AC099FC48058855CBDEB6C2D2A0D092267996591DC3B5EC8252984E9B27D
2E9EDE8CD8303F0905DBFCAE497DE1B755B924452CDE11CF4F20893DD6FF7251
427F520FE00580DAF1703FD968E0F8ECCDE618E1EA5820EE6CFED97C78864EF6
26FAFEEE194A268F24249D44829AA360D731C34DC285501E966A959180718F72
6330E4CC060588A2F65AE64A720DCAA818D49D4440F5D0B6C1F6C3A107E12445
F1BED2D3FCBB87A9597F01C7332AA79143564056219BF87D4B907A04F77621AD
054935E883B2B137D3D1C4BC792E8335CA08B6D83227F35736C41312A0BB077A
60FC6488C5E02FD51A10AC113D4EF70038C649C1677B2204A77F2ECBE9B3C341
F4126BECBCA61E3F3801F9188A3775924A62D30FB096B440286FA655EBA00A74
9A4162904BEA07CE68EE76018346DEEE20839C9A2FF71179B58E1D4AB30856B5
F5D97295A097174467010B15D733AAC5813CAA633746B430B1AAF9F997FDAAFD
436844D1A56B8E25A89D2CC4BA6EE7ABD167818FD4F6C747E07B262C99EE2C35
323F0B471586CA50F54C6381B052B15B0C58C19DEA82C0CA29F00400B727419B
2379979CDCBFA966AD513FA903160C571C3BF1BA239540B11EF2371A3880837C
6D6CA2F374280CFA1586427AE975A2AEC34244874E4D441DBAC6CD1828841C91
069AA87FAE849C5DC7C9EC1B9876E59F3CCDF8BB23D939F5348D7486934BFB02
CC5A22541ED352616830A510DE7732E5D8F7E785BBD31C2BC9D348CE5632654D
2C1740F89D57FB2AA1FD8FA3304EA03F757BB8F498ED98E48485722E78D97B12
A05F3A28438084D1CF90AC4C3FFCD7B3365941C45E1E02CB13CA1E99F7FA1D00
1C9D489D5C95F019AB4CE89FA3B6604473DBD2CE8E278969E0A0FCBCE68C23F6
9381882443D3FC16966555FC222F3FC4B1207522201AB7A15A7A6F22CDC9D392
360BF4C95DAD35770E0AC7E5EFF015F2C74ED7391F40EC94B8D1C163B5DEE5B3
911A20C2625AD3B24BD94D2A42405E655DA47D3F94F882CA2F479437B4E0BE71
8AFA4482C6FB270F8D05B4599A01403DAAA90C01DF3AA7C2BC7E66AB6AA833AD
FB6E5EE13E45CC7CE7E200FBFE639F9CFFF5D08512C02764997FD28368969BFB
0876F236EF6189BE73AD827332DF1B2EADEAC0ED3B939CE5BC3CEC78975FC636
44FCBC2CCF4396AC7343EC62E0E4F3DFFA2B880BF31D93ADFE201BE9CCEC8BA5
0B9B919E05B851E0909968DA259EECC6AA0743F25247978CC09C28C4F878E29A
5070E4023BCE95FE0ACCCC01D0EE219FA8344E8F6D7D4347563BF8AC030B9097
41F24D4BC9494915A82EE9FD37FBB6A46BF077B728FB569B1258CEA5F51F36BE
4F4D0F890D782E44748CA3FE8C8A515998371D9C7D2311F192B4B7E7C68FC6EE
3F7136714C282A2570FE591F247A08319CE9EF1E43274E4E57166E31A2ECA506
85350DA31AA4C33C9687F5210BA225EA1007C444FBFA2126769767E47A967884
9F6DB7BDD4779EACE0894C524D7AB9AC6980C15451EBF292BDEA0993C7BBC27D
088D0D3AEA95712FAAFDF0A13E39D3C84E61BCB7FEEE9AFB5FFCA9691A1D2B91
CCFF1BED30BDEAC89D240F662BB23D7784962160D2D51116183DDFFFC28F1555
02F957B20E26619874CEBE43D125F6E86386584056D02CC030BE48814FFA0AA4
1F08AE0D5B320690DD2DDCC634D3D634D7CC06195116DFE7AC821F546EEFFE49
8C6353DBB65EDA98ED92729AD8261FE1A662DE75C772FB11323AD065201A7943
854262EB5F60AD32CE002FE7F15CBA8F8D641E848C50C59C9FC0E6CEEBF7774F
B05107D8EE462228AA212D54BDA112352814FB6FAB913472DAB4547A50C2C1E5
D7ABD94719F604EA68B1108EBB5BEBC3EF465BDD27C423B7A166A0435C6B8CEF
3FC33121CAB7A1FA7A9E9088EDA3A1565DAD1C08E402BD6CF4EC99EC3CF3CBC8
4FFBA306FC5E40690E464D46673BC84C902C0F96D40EB66C62B4BE8E235D1819
CC22B64E687E934E2D78627C57DBEB3C0C5724BA4C040612C57AB422E4B4C573
4F285D474E12E54569E6B91C8ED4C8037B446E7D317C45C841561C945B7C9C76
83B06789058A8C6C5E257B52F1EF0D3018713A3A103DC01F2CD58D754E2E5EBB
A257D6E354CFF3438ED333DAEA4041608D3007C74E40F40422166077AAAD9864
B8ABDC8AC95F3247BFBDBAC531B59D4D8C588F9D86F29ABD563D7040CC530F0D
4633E6620B4933358C7FE8C16D53C769B146699CF646BBDCC1E389A56AE0F0DA
347A833E045CA6AF4BCBFAB24D0184CBA3917DB58253E4AACA7A23A75E66D384
119D73072047B134C065CFEDB154D32B82D1AAE7DC62F18CA2B00A0BDC92FCED
BD74A272FD048227D6757782661851B3D94D71A8839B6E7A328CA539FF6E3C31
26F80B5FB7F7FF074901EB00A1A6D7691ACE50E1E0EFFCC99C49FF0894C7717E
FDC85610ACDE5966DC523045418188CD33C64DD5DFD7FF01EF88EDB40090D647
7E3B2F55483835C82FA008C6A6DFBF61B21BF5B53CCF11576A5BC110F2A65C0D
12356EE60C1D8A39D3DECC3C10B3B0FDE983084B0FD17A624758D3A9373F938A
AE4A118B17F6D4DB3BBFEBC5985BD45427FA85A51E54FF5F83E34E4371D48F9B
8A8203DE399BDA45F37920A28DC3BE2CA7D7F7E02995EA0348B94429E64A512E
182DAB2869CD2CFBBE069D2EA662F71EBB5EA7E0FA130F43B52B72A0E9C1A98F
5B66D6C409632F0951B59F9BE41EC2A7D2FC6B4F09120B0A5B76BC0E66E24478
982A83A22B01DA32F53DEA693D24F33CDC5CFAF0E673E2914DCB572D26D13189
91E40C204E255D1F4329FE92C8145185DA5B69F6E8C3E113267B97BF9B4A477D
81BA4A7B34DC9A0D9EC20DA8ECB44F51A305C12BFD4680622AA61F241ABD5144
B4ABE9510B090A18CC6132C9C52DCB56483DCE7280384F168D3FDF3F6C13B748
1E77EA3E6C5D12F0EBCB2569E49A4688B1D2B8FEA60D5D46F43F719388CF5905
041787E5AA93DF18C4C8C1B339006D1A2B78EF510CA1190B79D62F05AD17AFE3
7695072228BD5F098C5B14BD786A23E2EF07040351D0A18F547BAB3B3C6C9EA9
D37D67BFA76C399D318DB108FB717868203C9B2910159DE3871B511390CF185F
EAC37EFAC26C60953D85862F553413443154983370ADC9B62075ADAF193E5E9B
30015442E7897360EB7315109DC3CF2AF16CA671728210D29ED9518DBF962BED
7CD9C41F0CF93F2C0CE4560B80AD12BC1ACFBD3129A1BF07F7B1E4204908CA70
91299D7776B70ACC137D7C1B30820B852AA0CF5F18566C09029A2EF7FA35665E
8D4B9F63AA23C9501FE0E07B79BD7A72F7291153715067EB9AB5CE78145A1462
4FAA4BF2B5FCA39C616D449C57925373D2FE923BA228DFA008C466A4B0DDFAFB
174E8A4FA88E28E0378C8E9579D964A75306325D4E34CCD58BE67098FE778B52
80B17C99912104426F3A9FF7997F8BB4C42332C58981B6BC08FADFAE84AD1B1E
97073336C7B23A459BA31FB81D096EF4FE0171F49CAED10EE73A32D186A53FAF
1312CA614981C267E66CB4D623A20EACFCD48E4DE74E44F106694CDDFE9C6DD1
9CB87944E97E22D51195887E045B804BD5C365526B26B1B7B5992411AB462B96
46B06227486AAD199385ECEF946D92F2C2BF9E72379BA38F349307295B3105C7
EF499F9CF3AF685920D0142EC9B890D36DDE83CA6184AA16046BB296980236E3
5566455635EEEEC45DBB42EFC3703987422C8E654D7040181538522A5300BDCF
C6826B79DF911D8CE858BC8FF6D8066908EB0C7E217B4922AC437566F5E76C86
08F01418BE76B9BB88812E7621BF48626F7AB788E83F7627C5EB24D7FBA8828A
45B25EF4A6E7CE21F242A80209162FBD1E446FF87234D4F3B13326231F0A4FD7
3775AF20C11747722B567C7D1A12143C5A3C10250BC367089BE6A6397A6F5CD0
D5939CEAF4348647423424E779AEC8EEFF8A04BD27D6D3AE560ACD8B9D91BFA0
7C286C3C10604501103B41D28C8227192AB52A7A898F147AF7FF12609D54BAAF
2BFA75371D344CD854EB36A03A9797B246BE4FA7493A925363D32BBC8A3DEE01
D367CB632E248CAAAB47B4B792CCDDAF815BB0BCDD2CA4C316CE1DB558C489B0
DC99370BA5D43B48D40D3DE368CFD9DE5B4921AEF54382CAC3F79616A84D6E91
65DABAB5ECFCB3EA198947B424C07AD393B1D055ADB9E589CE86AD2A53831C2D
CAC48E3A3BAC4BCE13378F040B4EC849E6ACFE178855739EB2CA95976ACA53AF
0CECCBD5D4F265EE2EDF2DD21BFD7CC9E51B9D92F6AFA618CD60C7AF80493556
F076F707D5758753254AB92CABC7395823C16701C125448933AD495D2F654ED3
2F894863541177F5FC8B88B614E5C9BDC2BA77B6C25524FEDAA0E1A67E15D5E4
82E3BD23DC13BA6288EADB24935C341FB03C04650EDE5425E7C6050E9A152344
0395DC45B33466BC043EE640A54BFE1A49B3180CC20280D987
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: MSBM10
%!PS-AdobeFont-1.0: MSBM10 003.002
%%Title: MSBM10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSBM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSBM10 known{/MSBM10 findfont dup/UniqueID known{dup
/UniqueID get 5031982 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSBM10 def
/FontBBox {-55 -420 2343 920 }readonly def
/UniqueID 5031982 def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSBM10.) readonly def
/FullName (MSBM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 30 /upslope put
dup 63 /emptyset put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943E919FB4E3240FEEED78EE63
0677FAF39AB2543D18C08A2B98B97451CD42CB7893DA8601CC0F45A65BEAFC64
EF72554395DA801CF2E9E3B03F65F1BD98F8C5F8EA06D7457842303C1A817E7D
69821807328AF426B9DDBC188A79A66FBB9E6193B4A3EDFE3136C6574B9C4C94
E2CBA4FE7997F949BB2DAC0D329C2AD8E4095BD18A037AC9F77B794FC389E5CD
56CC4C0B74D64FB0D02C92B88942C18B6DA84D4CF482DAF3A01E80BE483AC6ED
AE98F5F3E49BC762EF6BA937D528E751D9588B0A1E82EF0A5998150EC3854472
5A91EB983915BC1D6E2C3E615E0267B39D6937ECE0EC16162FE76676E5B69F3C
BC1AD934BECA284B89F0613B70876247D768BCD246883CFF4D819D6265302730
7E4BE6B2FFE7E91CCB8C6D2AFACDB4C5DB9688153E1D6B2DE136BF7068418A4F
2D1C0CA301B1B97290B46EE14B8286A81E709980F67382A5132F01B2D44DCFF0
9753E776AEAE2141D580E64C82598DAA6DA4057FFA9D02C3B77AE15A50AB457F
3FA5A10A3C986B22F8E154C1E564A55D3BE4487677613DCF793F7E1B57C9A925
BC57746C25FE567719A9EAA9CC44F1D0FF8F92C03132B205F57E3AFE9FB66632
D3FB3EF5BDFB9848030527FE759A5273CB81DBA2719611355F43E34F8FD7D0EC
9BE47685A2D122C9B60198A430C5F5E3F972376F0FF4BA52BAFF64095F7ABCBA
022622692231FF87514FD912B80C07A0EDCEECFA629E2734B5EFE2604E8DCB24
32A4C691DB4CCCF19EF897A9F4EA5B2B5AFCDF87AC06B93669F3007C1295E016
FF0A99324B80E37020B1080E80949525B3278DF111ABEA48E7182B6F4DE2DC90
B8D31A953343D5DB78B1F2CC6CE631EC7E3D0041A823DF2A4702AAC0F0A2F018
E5ADCD42EF2EC8AFF6F4705D30042BE7B6F866C14AEA1CEE04DFF82BF14931B8
D297C38E6DA6E587C23EF0864F69BB0DBC9C1EFBBB97B92BADC336A4AFAC6A91
0A6B158DC42E975CB5D8D2054CEF367FB112456AF50684C41F80B1E7ACAEA852
EABAEAAADE1EFD16DA13E367A6FD05F6C5D61A321B185BD0D596400C8422C933
BF332800160813A68AFB7152DB4E8D154E11EA07A3C89327F84018CAC0A22C72
53DE1EDD1EAC0BC1C7A422BC351F9F37D1C7145F3A213EEC9D972FE95BE93E76
DBE0AD28B091414EC1FC68C843B5E196F35C67A6B99EB8F9AC579CDDCADB1DD4
D81BF263CCD105BB35BB4DED530FDFBB95FDD988F5D4C0534870FB00B202C528
7ECC536A22C812D8766E883A5D42E20CC229A75C9C9D578E10A701837DC3A033
90FFF4380023CA9F57B53B623D28ECA8B333D28EC2BB2E7E68B57DAB474F650F
FB74A2C07CB3E723B6B5DF308A96704C0ACA64683627B6AB7EC659CCDDE3843C
3FC76319B720D130E13658BDC7320335F08F5C26C841C9EB1B6C547CC2A57378
3D4423F1A24F9409C251CE1D56356FFE6256E277B9D0BCBA006A308B250B8BAD
10FB4D6BEE1F5B1796A88CEAD00B98A99D3D276EB7E0091F8428092863B12F3A
EEB3A963D0E914F202B0B451BCBD348762534603DB89C7A9D337A64741252A4D
9D5FF4F2EC4F83FC026A78D941EF65B8E986C37A11EED391CA9BEDD0361D60AE
6F75FE40BECDBB81DCA97B0DD11D30E071
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR9
%!PS-AdobeFont-1.0: CMR9 003.002
%%Title: CMR9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR9 known{/CMR9 findfont dup/UniqueID known{dup
/UniqueID get 5000792 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR9 def
/FontBBox {-39 -250 1036 750 }readonly def
/UniqueID 5000792 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR9.) readonly def
/FullName (CMR9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /Gamma put
dup 1 /Delta put
dup 22 /macron put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 53 /five put
dup 55 /seven put
dup 58 /colon put
dup 59 /semicolon put
dup 61 /equal put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 94 /circumflex put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9AF72336CC4AD340
15A449513D5F74BFB9A68ABC471020464E3E6E33008238B123DEDE18557D712E
ED5223722892A4DAC477120B8C9F3FE3FD334EACD3E8AABDC3C967C61FF003B4
B10C56D6A490CE9594D57A2D431B9E5E10FE3D8832E227A7087611431ABCD029
85F4865E17E17F8CFBD2CADC97E0A8820E3ACEC873F31464466A9545E967E53C
DBDDB8478E69063FBB891566BAF88B7660A4405B16834761F041CCF7650AF955
F9E853AA9F5F4382E1FE7D0C5BB4023818A2383F91249D48CE021250EC9EEB1D
2835E18FB73026250B32A8849067D5E2258797C917F998F2D4121D96560C5FB5
B5D3471216639A8671B6DFAC5E3554EC36D9A72518525A795590C74DD70DA3A7
78BFC43E51D6F2BA52F17D4DD00D389D3983EC54912AFF73684A8A7E345537B7
E62361C04A47859DA084BC72EA53512DC54132EB2EE671793603015652EAFDE3
41C4B6B679BD60AEC5153EA0D2200CB1D097DAD770F5F31E6FC475A225995277
B867B731D5401E2D02B85BA85158C80FF7E2BBCC42B98AC867E67D25DB656072
55A0D32AB7AA483A5A9686CEA4E2B3031D90D84DB3E2DEE7706C91BA81CB8DAA
700E5F61E07D6998C9552C81B66FD10A10033D49EF3BCB0FF22ED0A3737523C9
8F851C61C4BF8A213BF6EC70C956AE48B5BD276CC0437C72BF6515B10739919A
F00F6ADD2798CB211668842349171A5AEB0664D2C44397E55A4A9EBDF54A3EF4
FBBCDAD9DAEF4B0CAEF7112FA828F2F8D9F633D37E5516AB5ECEA87342EF8DC4
3A50548490F5BC9A8A1F98AC7AEAD9D913BFA10CA86D73AEB5BACC1FEEFDCC15
B3655522CCA2C772E902FAB2A6FC153597D52763EB44AB7489FF061F7F58E8F2
AEAAF4D17F36CBFC00D3C653F335D14240C87DB4339DA9D30A5BD1F502BC9013
461B9DB2FBEEC01BB18990439A0E9CA6576BC9CF6B1A3DB9386C4A5D4AA6A5DC
CFA45FB75F22E10ECB72565DB441A194902C91427B4F676E531C661F7A2C3C85
CD534D1C89B6779B2EDC8E44667B992C20C70B663BFBF680A6CF4383EB7CA26C
4D1F06B5EF4025BBE65795F1EDB5CCB97050872D6C07BC2974F905ACDB7A765F
291365D6C8152153E7F017A25FB4476C60FD9EAF9A121633DBEAC32F62850223
D6418566AB350F90F4B35F19598478F76B63E347D4C61E203D4DB8ECB9889181
C387F4B663A502C638761D2782BB96EAC81A0108D7BD6938F67FEBB69218D115
D8E89CFABCE15C6ACC7FEB983332A51A6A73CF4E341574F366713D7FB29956D9
9BF238A87483D37E526A2EA2F101EDD34E34CB92730DCA7235AA0027189BE405
2DAB4AA021A30C28B26C50808E1E965C02F6212EC7C72F5683339425A7739380
A422E6191ED8453AF0CAAA424AE44DFA7CC5C2F6EAA8D73A5101D8E9517DBCFB
2858D0E8ECB7DC430EF23A9E4428CB7DED8D035D6050251AC101A2D0E884721E
2F21E573F948048BB8FF888911C508CC198BD750083B339500C426AFCD5634A6
AAAC1C7E91249667B231BBFC64B4317192FE07FE9DA0DDB5E517D097AAE46577
9555F29D45C67CDE9812CAD03F220B20519F2FF32DCA56A554D4296FE2D1F3FB
B209B5270E0E695EA5A0EF1144957CE045881AEB8D05D72CE57F4D34617AED67
0D3AF0472CD8D60933651626550366E300E72A9C89ACD475C2E2ED9BD44B472D
9DAFE943F8E02A6DC38E447EED964624C37C3130E48211CA279BB6A0BD59466B
42F3D89B5746F29E084E22CF58395AF0F29E55113F3A3F2F52CB3A6DF3D026D0
C81754B8E2E4A15F6943BE9D0087D5166060734FD07C4C57D7C7D90E8C9C1F35
623CEEE3ABAE75E1A18A1E3B50B7266BD2D8E812CFEB4A46B856885B185640D6
B9C22179551002B94282F57FB433B7FF157D2F0D240836B72AF4A331668AE5D4
E6B85415F4E8B9D2F9AF90FAFAA0A3866DF417CA5A31348CF9B41B8F5F4D2F97
CCF7ADE851B5E2E2F6E319AAF5792EBB9DA2C6AA8B73D889F3CDAA42932CDA7D
07A7E59183CD89520DDFC36E5D513BFD8AD0886046585F29B4D7F42CC0C27AA7
53915AB1167D292FE91957E94A57FEE2D49C20C9070ECD736BDEE0F046E60350
EA539DC298156A4E0D019E7D481FDDA6861E20678516AB80ABEC1F09B126BCB9
52E8272A06BB6DD87ACFC423B4A4FC9A3DC8DCAEBB807C5F748F1FF8B17B8B88
F426206BF1B7B7D239D26BC3CF0776C467A98CFBBCA5FB6145D5900137ED19DC
D002F10704AA680EC753C22E29AAB15712EF22AF73D80820A1EEE953463D4EA3
81FAF99518D4FD0F862A324FC44C4B9542A92C5B60CC983CC8F647CE5BDB4D6D
B92B380E0E5F7208A9CD91FA9A469548162C761C1BA05AC9D60B766764D821B6
B4E17F56CE455F06EA1EE2D38FE47581746C4C5FBA63AEE2B58E877D1A8FA83A
31C972D53B64E92EEEA147426A92CFBF76FC614119C6E9C6476FD6A069C803BF
E949FBE50B5AB1F1463F9747E8D353F7BBD991C4F90F920BC9407D8E24720293
846D052214E60390C3CB926D38C83AF697425D80C2B4FC4706615B905516B733
46ACA325CEA68FB21B2D17CF0B68BA4DF249368625CF83441EDBF2B86C957C1E
44CD722BD2537CE84FBA07EC7AE15C840041B9F7F3040072E6084CD55B301C08
A64A53BD4D3DC30DCAC6C152F316ABC59B8EE978793EBD568849DCC2A75A495A
BC83470D503F8E389F54B4A4A31624E83C601B43AC1E52CB811FAA7CA6B644A5
1AE0BFD4FC774C9C9DFC2769ABFA9C83F900BE2DD4010416053A1D4874E6ECF4
D86E44B4CAB15D53E5630C144B0C15B58DAAD785BA298B1893D1B09BA5D40344
6678FD2D17FF6674433C976D6DAC659175CED26139967C9B2B9CFFD78FC2570A
E5142141C2888DBF2DC8503F9137CE7CB21A1EBC2D65BF33FCEFBC85C9CB736E
24E8595CE934AB032CC70BD6A3B0F3BDBFBBE185512FDB7BE3D4A6620478453E
75D044BF770B44C9741E31985E6DAF5A318D7BED12B02A4BCFE60D25EF12843D
EFC9BAE2A3F2EFAD66D7858E83EB46BB09D2FF8AE9C43844A7001C86ED97AF51
C511E3A89A1BE349FF5215D1A57843EF51456B9838133846F19BE79AAA5C1AB0
5F400E5E8E7B0BF96EFCA3B8F0894BE589F2C9FB6C97BD16D38F0A237CD4F034
099C41F85C7E2C7BEC8E02C4F327306A53B4B48B26A8926670CEEF96F6DF2281
7C2DAD99EF8B81BBB777227C2475AE7400DC393D9C0445E925DB1E955950F7AE
53E9AC4306794239346A419F7B5DF4168382EF5956B81F83BD4BB7635B3BCC84
7D84D05AEDC02D14675D777CD19B08124001A4F4EA96990D96000C082A12F00F
7FEF793A7FA69D56D3A38D012168C5458B667190AFE80E02C816CAFF0A71953C
D80B085CD286027E2FDBB05452AA762FD7C813B2E19A79C74190E04E746C4933
CE1E300CAF5DD53B08110509BDA404EF07FA1BC5224BF1205DE8E0C3276A13DD
866675103B960C5F36644F96B4FAC16F5D6E91F74629B318FCCC8E8CB13EB76B
B0B7B90718D913A52A04732EA3667674994A325A7973C601A7DDD50F658E0826
ACB8E53D4914B0274AED98D7BC3B2B7F9D48A7ECC2F8ABEE05CF2C4F2B90360B
B7DF779EAF3E103D1D83EDBE32DDA873768D8C37DC10A5354A94B4153049AD64
FF3E0BB51AB91D7C0B4134D8731CD0270DAAF19BED9EAD800A14B65B68EEE89B
40DD624111670DDC7C030DEFE0D1B96420E249332445C155BA96231C88E70643
D526BDF3CA1E05FEE72CE2B881CFC01ED780C10E89F0828AD55FE29043BC56E8
2750A6DD15AADD54492F6092618F4CC6A31766B17FC60766D18C307EFC9BB787
39047DAD6B38419EFBA46B4E2C932F97451FE78AD75FA90DE409FC6DD46585D2
1941F5ED47A8FBAEF5A917A240959E8D9F9917DEA3247D9CAE6BF7A88DB4C4A4
F9F5A6DCE542420A032FF3392FE0F3357B51F884D6181583A554F75B1DF192E9
253CC828FF06B0D992D5316435980B044BB191508C7C45CD90F797F88856424B
14A5707459C50EDCF3E3D8D1667AAA83015405354CE744C66D9A5728F29E0085
6DBF740717FA0799E3BCC4ED7841588B496A5E549B953A7FD288B4A045DB611E
E3B2F35963FF18ACCB1C968BEEA2CBF52B3999AAF89A05320BB2E97F52CFE06B
9F10E3A79865A3059A957F97972D80ADF678A36E2B586C101FC6AFA4D137C13E
EE7102C9B8EF78CB057F8B7476F146E8FF5C897FD5503DD198128CFF7B5FB339
FAD0AF0EA967F77B07B367A4AC9F668F8BED99B98E87FAC750EE045602D76C3F
289FC9D97694C96AAC0AD1BD3FA94DF2CBCEA24B40F47B9B59E54EECEE7AC4C3
A3F5D19160E4C1EA830D57FBE10D8D46AC5CA0260F22FAA45236F0F542BEA9C5
5A88F878F68B36114E0573900C65E305462B22A3429A17C7A567694414DDDA46
5F30542B8FD4F00F6C295B2E8D3A986B953D96822DB2ECD48E8BB1763434E652
152EF3717F5E7FA10FF0B01D9F64E22C5DBD7254629658887BACEC0ABDE972EE
67299FB84A05B3EFE22B6976DB4CCA384232DDAE38C31623A4E39EA2E82C1EA3
BBB68F1A7DBF405DEC37CB7203A895C36A44BD2D63F45B3888AF91D37B510A59
3C921BB44DA620892AD87B665F69F6FA510B071ECC403CB2BE2F54B3969C9E88
713244BC97C1466DA8216DA7600C221E7E7EF5C789D2E12B36422023A03E11BF
2790FD6062FE6BF62F5010A92F0A104B76E255A0975E04F6F20F760881BDA7F5
D834D1D328B6EC19AA7D5E5678A84C74C82553DBE8BB5765E84F5A8789032143
6020940B4B8D45FC3433D356E28C25F42D0C19F911213D85951B2B00D01B77BB
A4C72E964F9D95422BEDE582A05CD52E03D28A996E6CC8FCD910CBAB728073F9
F9FAEED5470FFA55930447C5BA816F826F983D53EC9941EC8364B3060FD74C95
26D4F5CA753B574FD2FA4D1D333785241D8741B79E628BC852FDC35478C5ED9A
C1BE88C5EE7302816E65C12B58EA16FEDD4672EB3E24B6EDAD5DCE263BA8A970
350B651E5A9F3C281D85BC3F44EADD0D93402E36489BA5185E7D388974B0B700
70575188BB610CCA20F081E2CBDA13DCC6F72567962ADB342E02C1E763B673C5
F7384E24C6E1730A3A790D690A2103AEF88E0C1D4480DC9B25E5C8C9E1919C95
F83320179B4C7C4A26D559BFB24D7D596FB73758C9990C451E77FCDDD17763B8
9C30A9534E3CB6680D3D419D4B70B0B0A0D160FCCDE169714E373F65B7144CC2
DB9A44E041211E1517D3148E65A2486CBE5E74E625261CCF65392FB4F3091473
F9E8DF327D59A58558E5C9F7190DB577D5DC658F5E36258291C708B3D224653D
064BB6079F91293FC733710893AD1C96169B30CBFE4E9D52E7EFAE4AFEE68FEF
1AFD5E7E9DFCE8DE332B0FDC0514F9B3090AC85BBFB527FD8034DD33E9576325
A8769AE09AF1BA792447DDD932B98FC9486B39E0B04DDB3EFB7A30DA0940B33E
E27490E0E841E87B1C90E5248A91742ABEDC10F43A8AF0F9C5B4A4930B1AADAF
01874B9AC3B8D0DBECCDA6CD7E96471FAA15CB7F8A599C5746327CE392224C3C
40BD60AF97BCA6FF6FCAB2FEA114D7300B89E91C3BC92D5B3E2C83BB37992D8C
72F661EFD0AA034C738C019DFB79BF40651A1A34BC1EB9F5AAF58F8B3DA32645
24AFF8636486F08BC21533B5FF7391B0679A78DFDCB03DAF6BB7475A1D51DAC1
EE4BE9B986655D1FDB6936445EF99B58B303FE79F11275EEA96A9F6808EA8775
D873D1052FAC93769789C700F20EB2ED6D15676F6E563A769CA9298E463FC311
83281483B1C953370D196727A6A0E66D32D9480AB1B6DCA77868C1A2D5DB6483
5F31EB6B18EEFEF1CDC31533E69B0AFC6B30FC9912DC89BAAEEADC30BE14F448
1A6B70D36A5D9B01799BEEA686066114910842D022EB464A9A1E8F0A5628BA69
AA9A1925CCADD44703BC67A89F3B48E4680726DC4360274185CF3C8AB747A8FC
4B928AD62B092EFE48B01E33ED756DB696171FDB775396BBA138E056F71EDAE3
7A1E4CC272B8418114B0E81DE0BC43DB3C133167344488820A92DF10FFA26FB9
65FCA2C87D302E956DE6B4FE145145440C83DB43A68F8B29A592B127BDF49063
B7F11E155CD4CAE305525BEA56B7C412A6260426407BD892A3F2B444AC3421E6
FB6E6425EB5C3053C5644666B80405530FA0012B54557327C98E0F4F064099A6
4ACAAFC1870359C1B6FBE7606BB8A26026AE20C212210449905E628AF1B20490
8CE908B7EF3E3DB551C85AEB0F7FEB6A8D215B97998E5DD9C7CCFB2A9402B8B6
1770D4023777D4B45A73F471355353412C51D4CE71FAD1E0AFBD87B5F86307F3
10D0B94F1194EFFB64AD5DA54A4200490F609CA8B912E149F8217ABB1E9EBB3B
C4470E7365CF5E1E761AA1945044B225BD53D142F6588C50E0644740F7DD55E4
8F73201E5354A8BC78339211AFC4935F44701FBA043AAC4BA4698E9D7700029A
C79F992F62627C91EB855F64C4B251718FDA71EDAF082A0C7B00550949D617A0
7071FB14F05620CCF2180941341D8E60FC88823438FD728A4042AFA8B853107F
852F631518B61B234565291B5D5B89DA818DEE3AE3B68A2869DFA63255CC882C
3B16BBA08FCE3632E57FF7A07F857A1F0FDCADAB39D77960BD827CCC8661A997
648BF5BEBC0FD2286C2A112A8DEB9CCB6330A049170D5D68EEEEA011D3EF3EBD
855236B9380087CBBB6BE24191F728B7EAC5B50F7A547AA0989B7C7D3437DBCE
1669341264E290646F2C8C5A3ACAAC7CB63DC692FAAE13E9B40E8BD39FE16A0C
1660CE66872D061056C04DDDC265C024BEF8B7E3C3AEE76FE5C9702002C28BE0
B180295EE00E567FA2E5CD1638226D24A7C732E1BD8103B476EF5702768689C7
D4FCD47F2AB94A2B1FBAE6ABF87B09E7713C773FB65CA83F7318035B332B9F99
24A2C8897527021321D003AAD7C273E4BFA2710B9BB26C2CFD3D9A5D7ED1096C
552D50028AE2476FCD6D12A5D0A897521313ED1A3A8456A70C16EAA50A3E6733
6DC89FEC56AB54A579EF264377A103939D5EE00A90B4F2206D0023AF9491FBE0
800C6540FC945199E20E945F46CEEA2E885F6800B9DF042BCEF4291A4B1A62C8
6A7ACFF872B25FA3AE69E0093F3D0FF13A3313430C06F1AF94D500431566F659
E8C859A5F80F5BD2E85C8E32603D3745628E8FE6FBC50FA68F9C3811A2BEFEA4
5852CAE2AE5AAD3230ED050593BAD0A9581EB7B327C6916B8FC348F4C23E6FA2
00FA28AAACCB3091C1D83F7BB88672A53A2EA3B8C7C24374E400C57F0F01019F
E52D5C47F389D4C9AF126F4080F9AB8D1C8F470932BBECCEC72A9796F6E965A4
82057DDB43D68298A00880D4C2E2496F26F015FD83C5549215753459310339B7
6B2961EEEE74DA31FEC8E2BDDA42D4080A32372AC372524BDDA580EF6634ACE3
128C69D04D890DCA337212B109585C665AA83EFE47D5BABC2627A86EAD11BF7D
744176652C7F9497785A7A06A994ED8414BBE8B26E74D48CB83FA24AAFBDD507
84A90195EA3D77BCE8C2BEDDD1DC52E8164DF15D65B916EBDF3A8A76849653DF
AE3CAF9561AF3B705F75B9E5DFD6758DB65A2FD54683759912E0D0035CFBCD86
5D239CDECAAD9AE5D95377E0D3F61C2AB7EC99ED28D2B4A7B6004A566B43CECF
7E35419EBC2A47CC76393F4778DA801EA75B4C1FC38062AA77CC4EF0E6CB0C81
9A797C01F89BB58A957D3DAE33E4256B1F5A7D66C8989C512DA066D6DC771548
F2DA3B490834E7B4CECD9293A5DD581A3171DB1C41F348377A602A2DDB80C0CD
7B960942967BF3983FCE91203F8C465362CA8E91B3C759943797C24CC83176CE
2D044CC07FCD6CF9DD7FCE413A0B2CF777529685866C7855509CD57489F07108
D995887AEA9D20B3CDA77BCA95B6F655020E2964AD82AD77382DFF4903C680FB
2C666FA0A35C4C85E87189C909F4B6A0C788077270ED2C2B0D838488F9DAC159
7864727A4F21FDF43764C2E9B8BA9A8416FCC45247C82FE6FAEBCE13C1E3A49E
269A4690D0AE927362CA09840E5D802CFE2BD403D853D4FF9DB92D17AF722C95
271E384878E4B6991DB3A90422F7D0D4A260E131BAD83120E618BBA0C7F201C3
E6822BF981212D1462A8E8C28005291E4D768BAC7378E124713CA18F365A18DF
7FC981026EA47CEE8FFB0EFA469E23050DFF752ED042F0A9F8DD7CBEBE018E1F
056476FC098BE6A639F16CF415B773153D9615BED1251E4EE61363C0F51AD30F
D0099419E94B1EAAB833E4E31084024D0E7C946E83F574F370790FF713D5F12B
0141EE5B103939B88DDEA6D3A49A83886DB260065E423B426EFCAB1270E1C0F3
A18E54817F7BDD3895DF79E9BE619F51924D7A42202DCE9AB3649C01936660D3
CB62D4FB61BA328951941B644D69538C3D023168CD87F7D7697CCD5020446B3C
96FF9C99042164C633B9FF63BCB643226DE34650381E96D9477ED1CB332A3DB4
2F317830305631533625ED6E1C31222D9A53F0E3789B23C329095592DC31004A
9B21D2E9366735F2983F7D46685A0C56F0D06661ECB6C626F298AD41CCBC9D7F
3B1FA3F4C77AACC84E85075B2C3409B8138618E9DCE7FABF87C55B7155B85EDE
07CFAC982102B9CC9B91EFE1356F4DD0A6D87EE94E783D9B3A2F97C83025DD72
25A476A6CCFE38AC9541D2F6715901E16C99C139BFD6E06254AD758A7C7BE59C
3BAA712A0A56D9636B62813AD59B70EA8A21FF44CF705F818D1295DF3CA75EFD
6E9406E15D1DFB6E3E5386A1D75068986D021414BCA75566A6EDDC541AED28AD
FB33908C7332AC97BE9EEE4F0F37676F388E65B4FD23D4AFCB1F00CCF8D475B0
06271BB84AC9AAC072FF6D5AFDC5A833E61CE4EDBEAAF4DFAB0C651407A58102
F825D9534F2C1768DE57B8460BFDEBC41D0B3D5D96F624964E979454C2049DCB
7EEC17CE40D0B29B213B17D52165C16C8AEB2DC493055F56769DE68B5A430916
F45E36D0FBB705DB03D6220AA9CDA067967A43B3D1F3FC4F591BFE0EA1D6B3CB
C69E106EE07FFFD590BEDC71CA9AD4AC12B09B7C201D4AD7D2CAF1775097357A
4275DC394324393D48017D6C2F277AFF0E93C8C4A3E3425FF62BBE15582296FB
FA1E5C6668641E4C15421F6D812255D98D2B67B424A262AE0E744AE5D60CD3A8
379888E6847DF6EFFB5644503A563F06AE3300870CC9795DA24E8E8D9BF837A3
A2F5C501AF422A313B47DCEC7A019705E6091E29DF2C698AB39B218ECC7BB912
8F40DFF15851E78AD50DCE139744B3A47D3AE4434048AF94643CDA5FCA4CC7F7
FD2D7D2ED6170C71756C064B5B6CB0089BC72CD282B1C86F6B754B14665AE538
348F5373689082322D3B312419656948187270B247582E6C0C4D6A3C834861C6
B4D3D85D1BD88440934B23A5EFDFE4388DE6D64A0D12EAA44020F6F155CB40BF
369CC251562EBC19071B5D5E4B66F2911463CB2BFB488EB89713CFD6403E18AA
7EEEBDA6F3607700D42765CF4212F25B55E4E43D7E9DBFD169E6DAEC68330660
124E1C888D8F29C186B5B3D228E1A1D01E1FBCDA30FD05F96B56DEE1137B16FC
2020B8E5A06E948A03AD34D0803D78C5D69EB3149F63E61F478E8DB5B49F1AFC
3484DB420B61D9E6BE38F80A9E6ACF5C33C8F1F072DD28C695B9A2694F234B70
4A98A886BF89323F8BE2A8F34FD613A4B0873A61C14AE5BCB405DC49E2C1084F
25A6FB25F477E7E43BFA1AB9E4E2B6FD928FF7E51C0C57E4FAEAB43C34B8FBEE
DDB5EE51ACB12746CC79A5D9DD45C873C5DE904E4BE9DE2651650A1B1C4EB5CD
67AB7AC2F94442043A8EE7DC96235C560959CBB1DD1CAB2450E5E64ED996806C
ED07F40C563FD7DFFCC5A009F37BC5DADAE93924F214A1468207592BFC7BF906
A487C4276D5B7F5E508209B432EEB0992E4CD33101D41022ADD256BE3ACAE350
FF238B1AC1DE72D9D2C6BF444FE9559A1C2FFDB90AE13C889A9707D74426AF46
44E175BB666D641317B80A26FCDE09C7ADBC9A2BFDC568553C0E55627353A4E8
3992A83C2E53279C273438E692F93D1B7E959AE896CD724D440AF0A7546E52CE
4626AB22A7CC642ADEFFC024C045391BCC1E4FD4EAACE01CD451A373066792DA
714704635682FC3229B014C1532DE7B7799C0D7B2075D0FA1ABBA68F6E1D1300
286A77F20EAD1766BE9F245A6399FA9681348453774A97EBD70C0350E0B87DB8
E6ADBC16E40CE3CBE9FF1414232C3FD2D801BBD6F9E9CF239D2D468296C739C8
D45EE96961A4C5110BA710CCC617AAA482107A092E2490DBB080EB833E7F7DAB
2B258D6998DC60F58E1C0E0BFDFDA4AF77C139D01D8146D1644FAC34A7F810C9
3609A8BFAF9AAAFCD4ED2F3D9893436A711AADAB18B86D73A4F509E8AC6568DD
3955D3691A6BF69EBD73C0FA999C113D7521AE512FF1D0C1EA42C7D325A073C2
2F46A3D784726881630B651979A9926EA5679791D474043D397AF882BDC80A96
845B26D7E4506E7E9CCC3F21E78250EAC727789278D5265F5DA6150F64AD459C
C79BEC39461E8454BAAF9510EF3DFC10F270F1540A1AA1076EF43442C4DABB67
4E9DA6A354079D66087EEB0CC3A9384654EF462693D4822FEF63731E1645C61F
139C91E01ABA369EBFDBE88907D6C4E83D9EDC4CE6E777F9EF1083DA2F52E024
6E3461F1157161C52A7462DD4ABA3C0048990A8A1C400700DF35253E27634465
AD4CE1FFA5808D2E512CB6E494CE3D19AC33D2132EF0C3C55A03460D3A3E99E6
B7B58C52571995EEB48CF42E2B515F59AB3D6099DED88B7AA74246A8AD913C81
43CB8992837810EE252DE59E5E529AD09A209D1476DE54F7F477FCA44FBCE7A1
41217371AD969265C899719C6573099F695958E528878A5298138DA9197DA9FA
74DA5C905B7ED3D08B521AC6A251EA3A07988BF7A398C826CA8F30B5E3B4C6D1
E2110DB0434E3FBF9E6DC6267CB2BA2F07EE5DB937F04DE594CEC3930D5CAFFE
540D7B0E390EBF11C30D7597AF7238FE4173F27409B06BAA456940CEC3CBC10D
A8643FE0ACC29C58C8C105AA64CC0A20ED54CDF9FEDF4EB7DB577925B7903730
4B26D6E9247DEAE0739A86D801930E1BBA5BF6A71D83D8FBBBC3FD5BF7579203
57E6EFB3C27D4316D2E896D13B3AEEC8F7E783504EF6F448257EB203080AFEAB
701FAA862B86BA6F224799A88A21A6545CADC2707C6549A0A622ED5641D4677B
8488CED31C9F937B1FA9CE0E21131A23791632A17F2AF7171B7248389CD67296
A3AFBB08EB4808E781AA38299E86253149349DE1BD5153D45F84272C066BCED1
AB06F16E43DF5BA8122E48234395ECF0C7C9BFF7D5DEA5DC72B9BE8940732285
751C0D8F19E5899E95676822245051F6305FF637D1788966A290DF6229D51E36
1837B6541127B9A88FDA52349F1509581AAB871EBB22C0385BB7860E2935A9A3
7925A1B97BAE90FC31FE58102B51FE9917C8BEA33A5F8F1F419BD6A4C6674F9F
6071018B7F733281E10DF131A365D810B00063744695F1DD16E26D8FEBD97246
3C80579BDAE935F25B48407910CDA9603AD463DB6BC04247429A7B15CA82B6CB
0BBCAC62823EDA8541EF4C0647048D77316522428E1C1666B4943FA55F1BB8A2
1F0CCBDA1DC0286FE868DD449773BD240A94F693515E90D6B132FEEC5FADC102
37F5D8E3992904010027A86C511BAB8D83EF3BC1097590E0D4890C080DE7C805
C42784D25F1DC43BE0F8BA248E037A450548BAB7650C1CD566F5B9D106F588D0
9450175AADABF149E1D4905E8678A8DC461A929745B56D8F650DF32DA58D00E0
F9F6D36EC09C0A5F8D1038B884CE060EE877CABCAE0D6941A836C0D801A815F9
C813F06F6907DC1CF9740A5A1378774B23E8A01014FE829EAC5F613AFA1A25D0
8FD1D7D558C032CD56DBAD6045AF8E5B54830A40154F130E9C0DCA998DBCD0D0
09C2EFB08BD9281F22804E04596D219BAF251FE9A485E6ACF3A24B1B4E47708A
8BEFDA5A7489CF5FAF47622CC838BFC8CFB8EC28E4C66CCEDD9781D9D4610724
C8604285777D95E7EB79DAC0A124B9953D739FBC24CDDE17E968DE4337350936
644F59A9181D057399951FC3081373884F0094C39133E624173973E1FA0914F2
791C4BBC45E656EB9729680F4F9376F623F53F7F662F071414FF5B21D0A6B23A
973FE4D01119462BEBE17138AA07CBC03E79DF5892E7C811DA3457528BCBEE61
B0BBE0026806E3AD36F46517B01373A7CE8BD3F31AE91CA0569F9B77DA54B722
4434193142E95B8B8A3B3F63A0E77220CED045E3AF4014E444B54A3FBE194880
B1D01DD33BBBBE3BA82500F437F4DDDB7D50B50476B3F31558DB8B119C612CAF
1D8AE0D7F48D07182611000905E062516F270978F8C258FC014E5C64CAA4CB12
86EAB7F52E4A21A32419A104A6C101C1531477DB5421E8ADC73FC3DF42286934
7C32B6B044033F81731910D71E03BC7A10216BCDEBA2CE2B8D615F2746A013C3
0C2C89BE0E5EE9E46720107C16D19C92B19E176FF827DAD0A12909E21D3E9886
498629A9E2EA95AE340E463DCAB6B3E6AF985B484F38E18D808268
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI9
%!PS-AdobeFont-1.0: CMMI9 003.002
%%Title: CMMI9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI9 known{/CMMI9 findfont dup/UniqueID known{dup
/UniqueID get 5087384 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI9 def
/FontBBox {-29 -250 1075 750 }readonly def
/UniqueID 5087384 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI9.) readonly def
/FullName (CMMI9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 18 /theta put
dup 21 /lambda put
dup 28 /tau put
dup 30 /phi put
dup 58 /period put
dup 59 /comma put
dup 60 /less put
dup 62 /greater put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 80 /P put
dup 81 /Q put
dup 100 /d put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 109 /m put
dup 110 /n put
dup 112 /p put
dup 118 /v put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBD07FC5A8862A8DB
7E2B90C16137614CDAFB584A32E50C0935109679E31306B8BDD29F1756946A67
7A7C2D9BA6FAB9B20A424AA0E6F4BA64C2801C2FB5A1156CBEED0ACB95F697B8
BC2A6E6AA7EB1F9FD8E3C9B1A16697EE1F0E7400421A7765AB218FC837A49365
82DC6B2C877A7DA84A81E6126EE96DB25C17A207D3020A045DCDAA064360DFFC
E3CD50E21ED239D2A6450D04F879A26443ADEB6A20ACC504989876476C7D1A74
91564FEA1F4CC2C8C8FDF666DB537F315AE1886C73CB5B00E67E7B398A6C018E
540EAEE98BB8136C4F044EDD63C33431D2CF9740F051DF365A4045D9D8782112
7BB5D494D9235BA98CF2F30CB119F5A904C32AD04C960C43FC1F5FD8DA7D90D8
93AFB59F3FF4F796481AE2A7548F948FECFC6C127C4D3F159B08F206AE8C296D
EE470DB2F879EA79475E029D22D7A8535C09A18689DB0609CC233E5199C02756
972CC9C94D9FCE264DEE5D75C8D651E4E2D1189AD9588CB815722BB5EE3C379A
6F31C2E6AE1AE4CCEB29766190AFA20EA937114978752189F1A9F42B39483149
796FCFA123BA9CCD1D9BE28289660BCAE16C40B5B504058D55CFCBFB4F4E3D94
DDBF39F157E63946534DA81C018B1C01B9F10DDB55E0A5C2B3985ED1977C039B
D6755EA42CD09E27751E159C30B93F376DBE61CD3AED34BA36A768F232EB3B80
E3E6B77C4A48D408217818E398B83D995AB6BC871F20991DF57313D6EB0C793D
0F28088EBDB7F38DAF7E01AAB3476EC24D7BB38A9889A7D3038D930FF4289B83
F54A7BE1E2D98A3822098D2E4D067A0D400C20C0B2B4BBD74C13ED1B827490F9
ECF48F8C3994C1C5AAC9CF783BFA4F307528F51EAB55F961808A42ED53F00C97
72A432EAEDCFCFB622389BDA707B6ACC9433B065CF29EBFE93AD14B8ECD5F47F
F073F11822C49B8BE924CDFA6348C3A75E9BB9BF3F31C41716B34794B28CDAC9
4DB8B087E180A9B3B17680F73D9C12C8D86A922C948093629F5D7F542ED882A1
692F4F6696865E53E3E2DD43B2D5E8C989CFAA5CA5C4C5999045E170BDE9921C
BACD6F2863F5553EAB2BA2D4A9034729EC0C4201DE90DA89B0A27C5A5C974109
4E37BFB3F46B3A506169FB0C68E1CAFC844419A8D261A1FD86A3BB78E33D5FB1
CFC687A5975987CE45155E5FDFAF0CC5FD5568CB1C26212F92E88255F0549F59
41B33125946DE43436BEC00804063FBF03EC796E3361B1C852EC3038D107F80A
9198968265D5488B26D7670B22C2D75EDFFD1B7B4AAFA36DFD94640C9D0E2D20
5BCA18683EFB91834A3939AB8EB60E2F09655BE003582634C52770DA9668C292
2E02929D812EE2B0CC65F020064AD5BDAC5F5693B30508F40ED8E20E87149BD5
8DD41AFF83FD1944804017DC5A04512E593549FFFAE501131CE2FDB65EFD0B8B
33809CBAEE411B3941C241550B9C30DD28088708F1C0CC3125CBEDCD985EAD28
03313741F67DB5744A87B381147D5BA70AE1145C27F794854628D87D6C1ECCA1
749E3465B950175D3C3F40E344297BD92D3190041A4392033A79BEAEAABB8DBE
CC14E39612F43721CFAE6F79074429221CA588AA2501DE520A464DE157A03AFE
3C082FAE7628FC0C57FFC61D0330AE6332D20FDBB09BF36848FE05E782D6379F
64F9C82C45402481B0A35989027F9756BF5A79DA2D96E10F39167ADB4305578F
90B509B6891338FA1D67DCFD61804AA6621526B2EE4769589A2646581712AC05
DA6E98D16494F07D612743058F54FEE516BD89A8EC3E03F9D7F905175D3412C8
F7329077FD6EB25213F3CAC94BA0C3363B759401B6EF7548C7D709F3241D030D
4EB46A1AE81863C412BDDAEA6084C37143A4C5E41BC646315B1CD09F934186CF
49D1D8239E363A435307030BD79536B50B723A39DD763DB539F24A10DDA12BD4
E467339D2D6DB177D6FC539FA77D2DE4118EBAC161E928749F7C753ADEF86117
58619F1155C563DF2E11ACA8347908B98113AED58FCD0394150EEC94B7F986EE
88BF7171D208D8F1774B1DD478F0C2958AE372D257E7EDF0F6B5D6059CC4D5D3
B00FCBD2E9CBE79235B9A5A3E943CC27AABB58728C95C7DBD4F4A1F8A4DA99AE
7377B0CC0BFBD454794398AE0D5F7281771FFE87B25A819F36E692286A42D776
01794A43CA9BB30FB8FFDAAF014F909A369E34C2F6C75B7D4EB9DB0580E33F46
19654443AFF8384B95600B86FF8E41FEFD032355626D60C7507C058EF832DF41
194B48A36F11082D1DCF4723E21401E0C7447AABFAB4639B26E3D2730E348F55
53EBFF39CDD03E06E2FA5FB379603C879EDB7E1A10F89695C9C47DEEE52BE0A3
F446F187AB9D7E93E6F9387F21129034F36DF40605D28FD526AF82CA9D232BE4
412567F06B38ECCD496EF40A7B243E46C9FEBA4F1BF4B1ECA029C5EC239353D6
C0B100BF7E7DB33BD1277DE104F15AA19F37340A777741AD1AD693BC76DA48CC
C6F83CD84591ECFEE375979972B0FAC4C10B625E4BFB261B9FFFA83C31DA0108
4FFB6377466E9739E0EB64424BD9FC7239C7DD834EC6788A0F97FE714AF92831
E1BA36A8A9E24739F1DC82DC26CC3CE28C210AA7C569B19E1784D663A0CA4E81
AFF43E86D6F5F63778847700072CEB77A4EB946DC1F23DBC00BCE773203F76DF
00F0B085F31420672974DDC642D885E95BA6BBE43E1CA8ABF464D9881CDECC7A
E98E31B9754C9B72A8BD5CF6D4D214DBC3BA7A0CDF6635953F5AC1E7639C4A91
C7AECE4C75CA3389C348F656FC2CC96C84C85A926237B6504DB51937C9CFCDAC
B75C31ED570D180757884E27757783DB2D5F35ECC48C496CDA342D49AA947BF8
2FDAD2F19DFE8CD1C76A8FA08F33681F3E12E229D7DAB45BE3A3F258B5ED4980
F15340CF20D965252843E026803E8AEE736EC41CCA82167401977AB719AA2F50
0B791EEAA82027B3C712D2EB9D14BF8F94FBDE2227609BCAC41EC08DE2BAC023
28352F913F7DF08D4E1C66E83F764578B22B4EB7191E852B91ADCCB1BCFDB1F4
E63DFD152E86FA9DE9BC8908130EFDE29CC4401339C05B5B9764CF8EFF14951A
C6C13AF979546996BF22F2B96D3D585B90CD27DADEC78914DA48432C6ACBDD42
20EF583FD41F2F6D6D10C3DF7DD077304B5940BB0462656E306CBD91EB9B756B
7014B1884A36201EC582FC9345C386043DD2818FC301EF78791C1D7854F8FACE
5DE9801DE9F59D5B4271E003AB897B2EF49501589D681D59CFFD9B03F722EEF4
74ABD29997515DA3591496B62666744EA76DCA45504F8075C0652D6779DBEAE4
90430C2945FBD60AD53B51DDBEFC7ED703C418B4B244C8FFA5A3C1B7600C5A55
3EBDB93C16AC191C3A28EB2279BD3F0D67C826BC6A73D3C0AD02262368AB4621
98A1605F2887BC5880E1AF2780330E0FD01D7CAACBB0F008A42C427F38236066
54799594E515B289044BAC4DADF8B3686B4372C5110201221FDA923F131E07E7
93C44BAD406838BA4D1C277EF74098B8C0EDC41EEDD58C195D7DFF5FEDBF96FC
19CEBC6C3006DD2CBF76916B4298BB915663C2F61AFD7747E03A03BD7280197A
9DA590E3D081C6F53DBF94E8D6FDDDD910A70AB18A0F6D48A590FFAB314D6CFD
E3FB20C1F3C91063F00726A2C13A3D48323F9854839405E5A29D66A43E6E2B84
A8B3765F1D817071D4D6FF42BC785C2D11AB2B9452F141696CE19C6AFB9777DB
107D6E22D8CC6C26440BC48248AD8805C4329D46BF433741CB519B21663392DA
5DC7FC9BF37E5BC396BFADD7263D09F6B4D69594AB386B7BDFCF3BACB97A0E08
22013E716E642592A20136CF9CFD61D4E515D80E06A4CB4FC9D9B916C93CEA95
B83B98C48CF36C1D02291D4F5C0419338D64E33C90C90EDD2BA3B96D70FAFE0D
403A060CFF448D3E28A9B1E3916018465E86095BAAB4706CF7ED350D7C554789
D7F4FE5F180767DE8739259E68CF142040BE1E2E8C6152DE3417C1FAEA7584B6
20781DC4A9796431EE713DAC4E713C839D7A4FDC8AB6BFEFFE767AFD8B67FDA6
943AD387E5D3BCB09039ADB64ECC2BE2620C6EC269E708DD06C311F450099E33
AF46AEC644222E7DC4DBB9371EE12CFBC4F9B27AB46AD1DA96CE006E1DF8291F
A550A93026CBFFC1087B134EC6EA76F5E109CDA58FF47338A0039A786A575F70
B8A03A4F9C8D07A4C856C77D9BCC8E3EAA740172D0C2D0A15BA35C9E5717D7FA
2691774DDE730BB9D7C70D7AE103DB8D35F3728470C76EBA0E670634E1A0BA84
2FA102BAD7271DF2680D86A4CA6FC353869987700E5E3FD778165456033D624F
E9B3E80EBF431ACC934AA0357E824B8AD73E222B510DE8445C55C07C8E5DE46D
E478F832BDDECAF2EBB11941DCF84CCD887043FAED9AA90D12BC8CA9A0C8D94F
8D3BF1F80B14B6CAE6BB1C6AA405AA64BB94D5A82CFEA548BA070796A02F9642
87326D066101435AB9EB40BA9EA9E61B363F5F5E3B924369796E8B78DE3414A4
2B79C6A13ECB2F34E6299658D07D2B3DEF3D4383CE009A927F0EF5C196652842
D96B857AB5E905201E7E8BA21A5EBED1FC6863BA9A1A6E5390407F75055E2EEC
512FBDB3E82CEA13663F1A1944DA072C765D8CED06AB461470C5723BDC1271D4
4D1D049D3EB131743F1EC9A6ADDAA038ACA2C41D139DC6A84EC3C61AC7F1E559
6155CC2F49171F6E07CF56D721D9728E87FC7DCBCAC46455A3694C765FE807E9
9CBC2D304AF37E0F28CCB22F239541B53A4D24D09C662559267467EA487BD33A
0BEFD4899B581D20582930703A868655C31BE935364CA6A95FBCB22CB714C040
9718824DFE97929D0482430726CCB5A5307957DD2432A9B6271E849148DEB76B
FAA290FF6D0B18DC5B76407852E81C105EC6CFAB0F620C6DC9DA555A33C167B1
430A8BC338BFC7D75B7099CC906AD923FA107C74D3FBB719D77A4E5A685FF9D8
56424EE4AA074434B809D894ED50F6A60A035C5223EA25DD8983B9B34210DABE
718D7B2BEB293FF1B63CFB1CBDAFC69552963D90F5E3FF533A3FDBB626E9FAA3
F3C119E5E01C7BFF832A033C3515BF049E29558B1DAD652F2888E339E67D15AE
95F9BD14E3253DFE9072B24C0E7E85025B71096AF51C86AECB2921126A43156B
EC812B32B1164BD9B2B947D503C015616DBF2024F5C8CB3236C1DCA653D661FE
6B1C19A22D272A176B7F1B7F9E67AF40DB0EFD4940E58B2A050249CA4E55CAF7
6ACFD84FB46FEF952D18552B3972D79D808B4C263B8C7E1BB647A2D03E102867
630D5C3F2C917F765A4F6FB8106BA6A9D0093E27A4CB6049C2371287D94B5111
6E7020776EBD744C6C920464BBBC0AC206033E8240017F8CCB112596ECD7CAFA
89950CF43FD87ACA750C03A778A37FBCE9C82C2F5ABB135BB02DA8E8C0D24475
3BEA9D79372D0022FF1ABD378C151417DBC69FE5C9CA38D23A3900E34BF924A2
90777ACDC37930B67DD44A2E76DDBD9B89598D5F626BFD325A978D277265DA47
38CFAF16E7FF1946E15F41CA73F7B4B02E5AE8FC4C37B115BC567E4EEEFEFC34
EC8974B1465AE57759EDDA28DD38A9210871D35D331AE1BE6097C3EC21C770C9
B25D040B2ECCC3AEB1EA1BF99E0C2C0F192C13BB9152CFCF75332E03F9CEC376
9B8C285A35F53655BE38713E09AE34BA2DA9C06FA42A6FD2D00CBF2AFD2BADB9
1571629C65DA38A431710CF5B01FCA68E8B8569922FBC3F9B64A5509B6F677AF
1B97E91FFFEB6308AB68AC58F9BA43DB5E764021E75B56170EB44C2C0A7DB86C
62B8982256D3621EBE3DB3994DBF5C5A14CF34B4AF3BD5697F8E3203085DE9D5
84B0598169760B925463E93DC87CE70AF4C2DF0F4287D2F2069847BCCF7A37A2
AD451D5ACE4DBCCB2E14D5DF38B226952E7446BF87BEC736EF3D5AE793304618
D66D3299AB9F9CA1D13F134FAEDF36750046E27706C7CBD8E0877BB6276E5196
BC2A355D109C0253644918E1CC11B717DE6FBDA201E769812752888CD66268F6
4ACF4A9449378F9F9923D584BA1B51F33663BE7A306887BC14A37E3C5A4654E6
531D6EB63DE3946BD8BA95CFB037991174F36D61D842071E6625605CAA350A24
FE551025D10871FE0E2599A63900C8520EF4911C53A03897C8BEE152451708E2
43FCF4E700C583A5E8DBCC03BF9CAB864DBD19E1760945DEA0EC0BA38BEA8256
D3A8D4F70F6685A99C6BD2BA8B412A26C002D76138CFCC7DF6802931E5D97BA6
0151F6A4C572235B4196B22B7B2D14B32886DF0D2CA8A277ABAAC53B63F64CE4
E4C088192AAB674497E8AF81961359C389B51F4A257373D907C615030BFBEF53
DBD99058FD06E352450B658478C10454AC8FC0232B70D5CB916981978053E358
99D322A07294748BA427FFD1E45C909171017B52B7C742FD77A8560852D819DD
8DD53211A14D7B2FD11E42941722FD3985D627FDAF87EB57326A0D290B5077D1
8A4230BEB40523A8565F95E0D44F036A571DB698EDD9D94FEC9512369E5E5E73
A3CA5C142617944F4F99C0697ED088ACAC007FCE06E5A6EDE7D0E03A3399DCE5
362271BC31533866BA79FD1FB3F608B22CCD4111FFB1BA35D920A23AD157C6B3
C3DAE11069D5E46DEDA7158C6478D8B8C0D9DC237CDF0CC6633911673C43FB79
E4F9B7F27495201E5ADE66255BC2CBE9D9F237DECB62A19D62CB41A1C92432D2
07F0629E913A71B3F1AAF8B8C5AC66D3C8605A48F8913E39C859E163DB1DBC8F
0ACFEE80A40B6172032E95A76B752B873FB4DF23CF3A655AF1A1B88C8DC156C6
190DE72973950565454C0A188A33395FD3D529A88F2B578356DE8EBBC12F04C4
5B899F667D9E6F3A4EC6DD8DE71FD4C2E2B6D56823EE4E0526679D71FF1B868D
F261489F06F97B010CCBE640E2F57BA3DC3332B329F7958394BA9777D833AB50
005E8E9232547104065ACE33396772B0E0BD66D2C6CC54DEDD071E444D8C95F8
6F88B31E20FDB80F77C83151B7E25BD3736B4F9BDC52EE78C41E9475E5A6D94C
D348AB42F5E36B4F167D29EBDFBD43B03F77EB296B06A36880FF17D412E77EA9
F2E7C25FD05E16BEC6732681EA21AC3FF6893B93FC09316A370CDDB86D9E6087
F6042C3F9ECD742778389170F5F041329782FB9F9702F7533E51F355F71825AE
2BF4F8FE50D413AC9A20C41B42537FDBE8DDC5A5C793D3760C1EE13716068752
F0AF10812250BEDFB4D7133FD58F4587BACD572505C84A7D3802D27443175FE0
0D89C3398B55176D8642AFBAB5CBCDFD6220C8488564B4306D74A58CD2921AAD
73CF803C754DAC2F30A5324886E273064FA51781D5BC596BFEDDCE3982EA1AA2
62CA7BAA1B16C6EBB99B2AAC4E6C9CEFB3D10F19987045C4918DB239E6E63D79
5F44B9D097118D081153AFF96E5EB39CBFBB99A3BE30909F614869031358EB98
F07A97EA78AE50375941B2474DB46AF3305F2B208D45921F93743A6CB8AC584F
6BEBE25ECAADD5A789EF60C9F54446687E7B030DA3E5243189F02BA46BFD28B7
DC14822E136AC7E40CE20458DDBF356488045C95907363864CD6943643BF0109
EE027A3091C11EA392EA91320EBFEA3B857370AD8EB86D73F035A476F7058222
E8CDE78CA1AA9EA69A8AA6EBFF3E67324C567B914134DE042D6F8F18A9373107
536E8D90189917D343F5299024239E2EC1D2D177D8211BA44AC3CE67694563D2
841B62F8110E87700E6D1522A79EDECDA6C59DC3004C4C3CB2DFA31AF1544E5A
4FFE7802F51C8402B2991BBC188AB976B4E85B124B81A226930F5F80E1D34658
2C2E711A080DBC1EC1D661782A37A121F9F469BE383F47BB8E249300A4E2A660
56BB18F8C35B4B830993FB73790CF101C3BB9BFDF16CE498196B69EB18BA4DD2
95682F6E109B03CAADF1C109B7FBAA515F68E3D13AF1E8067FE8AD1D722E59AC
028F18A90A93B0A8092E176ACF53A13E05692A45910501C4F0C4060C40434A26
B014245EFB211DD41AAD932109F364CDE249E47B2500A344D3B45DC41704F107
F9FD70DBCFD768F531C969C8F2C743E993A9064AC89AF45FA0EE8466189EF286
59BA3CB358D134D3789A40B5359E84029E48F594BA5C5DF179176109A85170E0
4A2753C3818A40D52CE36F3AB8B526FA6ACCA04314585D7D7666D5D9CB098D3C
85217180A0243A10773C405FF8B93DA20772C2F9A7891C49F55ACC9112706B19
396BFB26AE49A5F0D341291C56E72E1FEC7CDB427DFA3D6D52D2220BE7CF1C7D
76D6CBAAD81B980130428D741EB6D5418FAE396E754209C6CE726ED06D9F2047
E9AFDE9BAA3F757A91DBD68DC2B251A246190AC5343AE18C003950C8C7A74F8E
81655FD161DCF664E5EBB1A434C0B429151A66E122880102C21A2DD5E12C7F38
84C29843481F4F0EF62ABB8FCBF6E9C4CF7295A566CF52028C2C14D43EFFE94C
837600F1001BD0D721F7363FCEB68C85A4321A037A120C1D97147252F1BAFED9
9094617EB5D2E349F3015E2A4DAB7AF9334BA481F5FBBB7AA7DEF04BAB806496
C0BE7461454AD0C30BC5449997479C66C0026CBDFF135CA9AA0196C5E732B602
2DF248F586226EBB76178CE7C9771F3C12C656588D50F0219E89BCB5AE4E6544
D11747D416117B9DF544EE1F95FCB151594CD62B95290A9E3A33E21E968BF60C
9143C201A46DC97736B2AD31EF7912A9DC7DF8A737036EF0D43C3A1DD7E0AF91
526F782D6773135EC694B3435AAA4F350585EB641B138700EF0088BB56FA33E2
D478A1D8A5DDD1473B7B61B9CCFEBB3A85E4222DF8FF58112EE89C651394CCC7
42D048559BD911B02AFF4266A4795721E9BD1B4C56ECC50EBBB5F5EC926F2BEE
B19A4E7E4C1AA289426CE1CC05F50B8A4054781EA3CA08A963333C52FEEF26CE
D2AAB70BB351D30E6E81C42E7523DC84552673457FC87F50EA3D6891F074C5C7
E4605DFE041876B3D6BAAFAD6843B3C3C15F8CFC9207AD27E6F32F4F8C2B3793
C79CA2D0EE6FE8E343BEF9195E30B5C77593D59084CB2378C6BF672C66158B8E
940867FD443A3A8410BB43A8A2ECF01146BFC29A14746C9C2AA47BDB66816F5C
CC7FC4C186E4C4035EFE89E29DF1DDE2CC99BDC193712E464D00EE063740D3AC
F9C9B26332F9DF81A4573CD4743A698581C1E0951510732711716E989042F282
849FD310AFEC5107363321A70520947D4979D5AF23A06DF4914E35126752AD97
0FF5A7520354FD9D18ACC891E3CE86FB4B52E12A4748B01AD0ED87ECD12DB15E
B821F4EFB68540C35CE37332E5E230434D41FF6EB1249C03F2E5D2750123ED4B
A47890FF53BD4184A101A4E7C3185BDB9B2E220AAF7E8A9C0420071732D2F274
EE1858DCEA9089156D94BC6E7C0D3871ADC08968A895FB0B8005B0DC2B042A1D
42DAC793F0F7AAD69F1C5E48799CBDFDCCC78234F002C6414FE18B1920D259C0
095B4E9459879515F8A127D8E93CB877A48DDB531A17498E7FE94B859A315AFE
CB5375F480FC6A05F24AA071776E23E0BAAD0F575CC8769B0CF6211EE2F594A8
25ED4E88687373F7E2B68B7426642457CB77CEBA6741473275DAD75A013F6A55
68D6774EDD327C3F8AAAEB57906C08909ED37E5590C3CCDEAE2AEE9E31EFCE55
476D9D32EB4505FFBED54C7C41785006FFC67D24E1A6DFDCAF70A96D6BDAA1E3
F1F7486572A8C58C0248E7CE6BCCCC634389B200526EF7D5A5DCB9E6AFC2B969
E3C4E36398DD57A449E1C2F69A3BCBA661A90FF6911F2960D0A24775BD60CA45
50A5FEF3D12C6760E043755C31296825158B473525B3B52FCB61C7F70F021AF2
B474C88EF1C59559D37C07905732D1F45C339FB2C989E44DBAD8BB4D376490F5
61BE71943CE430AAD4FA73C656AA9D781B809E352B58ED4D96A89D650CABBF1B
8ECFD352F2FA7CAF5602D15A097BEF691EC81C1C6545E9B3345907BABB6C414C
5D032A55DE368FE7016F65A5614162814F8F5D45EF8FA211DDEBBD4A01D72B0D
AED7A11AA85805CE159AFF4E8D10A16BA9E0CCE4ACD8079F22D2A143BC202CAB
AE09DD60503C187C1E3DECAED0680B6B2A57A048D141B581D705AC207AFD54AA
E248E66F50A3F0DD6EF77D7A2CFD6D98A6A63D95FEA726CAB34D1F26D0FAF071
85239A236A62A111282B2B412B749AA139E21C24080687894034D889F03CAEF7
5B7E793C9DA8C1C611991DB33F44144EA128138C87416097FFC54F2B0D3AD429
E1A7444945A1A6491398CF365310F9D8517667652FACEF0DACF969DBFB6E67B8
510BFB3A20D8194EE3B5D7EAD72ED494478391BBEF69586736FAA7E8D088D5E0
4CFEF93F02F8CD1E6AEFA4D6126E4391A0A4ED5A8A3637453C4352B50B391A3B
E7161CCD791660D27B935812D96005773C73E5F178B32EBADBBCFFDF2B970F3F
14FA09938B165494CBF1ABAD731BD6FC449418B61C55B8E9B309B5DC08A0E96D
082119EB92795C10E6D8CB71052DC67199D0D6BD3DB7E17C4698E7BBC4418EFA
46223F6D9A85F8982AC232771DD788012E176AD340EDCF5C47660D9543DB2011
D035064AEFE4FAFF7767926761BFCF9159559E23BF2845FC920D32F08124F3A2
C2894C4F5256F74530F1B09FA7CA29956245EBEA4AE752760F496136B38A3BE5
094C5B79F1284036A6B38577E4F0BCB56C62B05E942289A05525FB3CE0DCF129
D3344429D3026B7C5D46558993796152841E66AAA7FB31E2332902316D974C63
75809F92CE1AF58EED2BFB0EF585378067E01E175AA00844DE2A2DD838299E8F
301B02EC88C5101E428B5506F0CADB7436516C5116741B87D4136A05069485EF
11E9F9B3FC90FF28F5C9BF15111D309605D21F41F18B1DA028F43C77ABFC608C
B5DB37C17FC03498021AF1556B97E4FC95A13AD1BA1EBCA83137BA6C03FF2548
68934C31B588A678ED77EBC51DC8E979C8883C776BC736E530D42389CA03CC06
095C7AF393C1C3460EBB6C32969714938981AEB0D3246E0FC1DD9A3BEDBFD541
37A01DE7A1820BE4A32DCF33076B18C8F858F5C379BDFF2D03C553784744D282
EE0E6562FB9103C7535776954928A4108F6284D7364E1F0DE11B156B76D85E38
CAD35C00868AE3D78AA9FC3C2BC4D1F8DBDAB85883B3B455446DD8FB1891B485
0BDD181EB8A9D4309DF32B1E56C040D7FFC8B1BA1A412E1D9C78B0905787C9BC
BFE3AAA50F6CFCA212C45A8375D9B39DBE6A8A96CBA36DB595FBBDFA2160D855
76A0B88C90AABD2C84459141EB6CED8529FC0E4190B40D51D306D1C622B311A8
504EE2B466C7034FCC6B8309EE222F8EDB2A9C5AF64E4020B31D99AB81864333
A4BE50213EC29B6F304E738C2F4D0E644C78F74D486E128CF25EC20618D32CE6
5784334F6D1760EBB315B11018DBFBEC330BE8DE281565CED04C0CDD378D32A0
1BDE1CC16ED29EBF6F3BEAFAAB163E666B108F0099E116C32D4664B65D4DB628
41BB2A5F77E281FF8591CBB2FF49B1DAED776578322754963C3F0AD0E8E50CB0
E455BED98DAFADEBEE723C9124DA43BABC4D63D70899C7031BE8DCB825195CD6
F0242C914EDF1AD1B33D84FFAD9364EA2ED8D8E96730CD4BBC14C78B4CFD6E54
FE5AF9DA077F27B2D6046371A89417D5B186041E14801248EB708F1E47D2FCF5
05E4A1D37D63E08BFDEA44DC120AE1C7F5D497E8415313FD831CE920054C2B9D
11ABCF7C7C64B9B5937A0CC3AFCB739995F53BC047E08D52126C7E893D0DC6CB
F926D85062C15C9F9DE6E2905C03FF8AD6E7508C582063D810CE9EE154497F72
E92ABE18FD245D0C0A40C7E50B1945CA42A97C181529C7F2D4D2BCB45C100F2B
10A917978C947F50AC1A5B683DF73FD43975527DCE0EFB661B3B9C147C89E1BF
1B05023FFED79A714B870F5912A2C15B9C60D05B9BF9D4854BF19F19724E7FD2
001E99382EC757067F54C8A56F70149F320598FC43C18EF62EE9BC5BF83B5F3D
C4D43B2495A324817A70D2897F2CD1229ADD5C2EEAE40346A4D61583049E3FFD
080A1FBD7A65F80D69FE4DE91AF7FBEDD931563DD1D336534CDB44600AC597DF
241C02F2491B10E5C188984AA53AD3CF2790D4B562952DF32B7E108212A5B82F
93FE65DBE6E19B125CCC71E43E640B5018D46ED3E44B18D84EA4FA2CB3294958
DE9BCE82739D1B3FC8DFDB079B5B9984FE976F8DD8E962E71A7A4CBF147DF2C5
F9B6862FC9885CEA2A55B692E8F5BA44C6EE915E41368DBC60EFC9B785F03FE6
EFBA1791C0667926AD4786EC8F9915802D61B0FCE11D651B8E42DF10C372E65A
DE05B4B2DB464A51CCECC1BB4576B3E739EC845A7C022B7325A2E35DA1D82FE8
AF2A88B7E8436B5CEDB580119334AB14B316BBC9577B4001121DE5BC684D87B7
30F1B18DA82AB5AAC5B0267DE5BFAC0DBF4D7E70565B5FA9C6EDA0A66253C43A
CAC5B9FB0E6F53E52C1D5D8920CF1B412487059EAB3BE5B5D331A9945ECD8EBE
AD65CF97B5A84D8F78F7610249E587B1021AD07D4DDFFDB636228C3257F0038B
8EAD18474A777140BA168FA924C15B86EA1CBBC4282546DE28C3C57E0538BFCB
7AD2A797F63A1C8947BFC38D79987035E00D4CEC3373C80AE44E2C1115A89955
3784609B8224D5310119661215F50725BFD94A37DBA6DA16FCB03EA5808BFE18
227033D2D87500EEFCA1784502B6D7F1E3232E688BC9B386656CAB7211512ED7
E164E1D1F94B49845D3B24B69B28FAAFAE85CB755F55FF01473AEA9377DE31E9
7F836CCA3DD9CEEF306F3E18010A3A4B706DA812D937BCDAF4C2A1249F0117FA
EEE63FCB2C5AE1A7854CEF2A59003440A07A75BA27AEB57B7C81B6E07CED87AA
F834E933134B01C315DB95B9EEC13CF47631B4AFB50BBD3B0738E693789C8991
D6BCD7CB6E885D83443E8C9DDCD22CE08B546FFBECFED7AA77160703621183BD
A0DE17055646DA8BCE61ADD5B5039768BBEBA4AF7EB0549B29CF0ADE665361C8
2F1BA8D7D105D58BA77D787C41306615F2E31706DE7E5C4AB691E74B18E83E9E
51D527E16211AF243DF2C8A6453A40330EAA5AA1DCAEDCEF060E0D4E0CBC6AB5
56EE809FAFB65E527BD155F765773EC968E45571932D298AAA57EC5F4A4B8DDB
4DAADC42ACC43BD66269DC05E1FA83237F2B4BD33DEF7A82B511642C963D7675
9490C387EE35634847866FF390A9BF0B9C53C9B28ABA5DCB6D716696D733CC1C
4BDC0C98DC70FA60F76CA5505291F130D28563AD252AA848E539E6CA2B9C6DBE
5A98173CE39F7C6F37D50315797276A45C4207556E997E193D8A01C4FD5E16D0
CA8B6FA5C32A0A8798D42E3BD3BEDA4B69AD3C796EC829C19FF1BFED6A34FC1A
7FC8F3B8CEEDB313408E4C9AE2A8D4D3810AD0187BC8BDF10C7000385E956FD5
CFF3ACE5AD295E01D8A6905DFFF325B616F903978E67C2BF20FC75665FF6C9A1
412720A8CF29ECA8809ACF5E7366C234D3FF2AE358DBABA5BBB5E7595AC9BBCC
569C1B61CA067DA742D200D33927489423393DB9243D3195C96E52B2A4D57D59
AF15B6D666472275BC457D8CB752BE7157E7F89E86E3FB74CDA0E206858EE5B1
CB4621BEC9D060C731F718AD7DED0CD00A3DD8E93C9C857BA400EAFD161E4A88
F9031BAF00C04B6185A35B21AAED1D2E69A74676BED2E85474A381D66774F6BE
9F0E3658E8336DFB7F5B9092A238EF7201D613558CD011C41EFA1AF63DE2DFFA
AE05D6C7F820538A68562E57C95EA9B2BEB5C27E315776A8A0ADD10BCF25F7D3
907AADC1438DFAC794852F637520896D24BEEB24D61A8FD5FBD670AC477AE7D9
D20ED99F754B9922297C6146334B06CB2392ECD9D507685610D8C1A330172AB8
B76CD7C42588CEADD6D2D67263DE07E3FBB45741B82D0502A25006602BD30B3B
AFB46CE4941C0462DE6FFB6B7184F10293756E975FBFA916AB4CAD27D6776A05
879BB305BAA360FD86D75AF4A3E5311930D472875E5CAA4053A48B7E76F970A4
7BD9A54910BA5C2F873C69CC350D94B7E24E271C9003FF6C43E9FA8FE541FB97
03657164E37194838632E20E77F1FC704FFCD8C5E2BC50C84BC981C57DA6C2DE
895F269C9749E6DA9585F5D19C67A897E74C1BEF711980220C5077484732F531
985E27729836E3B387F23503D30CBFD298DF414E433E989E068AA4E775C00E79
6F1E06CAF37642E6A4F0A28118E39C78133F04B76AB5BAC4151EB669951DB6A1
FBA2F42E34350EDDDE8C264EB9DA56421D45EC603ADD14CEE0C7F5E0D247EAA5
BF1BEC53619F1D1C3F384A354E8F17DDFDEC26CC1532CA124400F54E3430B79D
7BA16CFD70F42E7A94FA4D63707BD59E44177E5E9FFB864B76944B49C1A6CB0D
BDD5D6BF4361E3D6FD3DB4344EDE10F78C43BE6D3B172C133CDA1C5210749E12
9E595CBF75B4B073606383C42FC61DD0310853308A0CDC5852D2F990B2DF5A1A
810DFE61311F9E8264FDBB098D7D1B02185326B4E4773B2F50C8913B1F8F8305
E8033AAE6EA771CD0B1B75796A32F483971A961B28F0B1EEAE0F0D1B2817041F
4A318488F6F0FBD4F57F75F2CF8AEEC3E999CA57255E33CE5D6ACA7DC2C9D73F
E3DEB5E5428639F5060B7A4D889A5476BD50DC534D7B8D570BA455AC4BC4B61B
127213BF3602F7BEFD903DBBE2B813DB81D4716E83C8CE921A43FF85A0336DDF
E2804E2BD3078AD2FDB4CA5685DD7A05E3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY9
%!PS-AdobeFont-1.0: CMSY9 003.002
%%Title: CMSY9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY9 known{/CMSY9 findfont dup/UniqueID known{dup
/UniqueID get 5096650 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY9 def
/FontBBox {-29 -958 1146 777 }readonly def
/UniqueID 5096650 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY9.) readonly def
/FullName (CMSY9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 1 /periodcentered put
dup 14 /openbullet put
dup 15 /bullet put
dup 18 /reflexsubset put
dup 20 /lessequal put
dup 24 /similar put
dup 25 /approxequal put
dup 28 /lessmuch put
dup 32 /arrowleft put
dup 33 /arrowright put
dup 41 /arrowdblright put
dup 49 /infinity put
dup 50 /element put
dup 55 /mapsto put
dup 56 /universal put
dup 57 /existential put
dup 68 /D put
dup 69 /E put
dup 96 /turnstileleft put
dup 102 /braceleft put
dup 103 /braceright put
dup 104 /angbracketleft put
dup 105 /angbracketright put
dup 106 /bar put
dup 116 /unionsq put
dup 118 /subsetsqequal put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A580F0834F28818EBF
F29D3B2C7C9AFD969BA6D3B7429E222AF78F6DE00CE2C8008A5966422936DC5A
DE549B458EB41026E123FE75E703E046F665B7DC78298A145548DEF8D579E008
39279A5208EAF898A357DF3FD9CE4450811F20B454D86B2947BEBB11EABFC62B
187B12458E022CDBAA6EDF4A89D79300F635D8CD973E35FA8D9B1240B3D30D72
4F30444BDF0B51ABA15A181A3196A6CDF9CD1D38D64C83E745A767446641991E
23EAE067609DC2E84B44D923CC98407812813D5AEF0EA21E560B31BD77D735BD
E35EAA564A570DD3294C703E16BB9F251D54407269C8B23DEAD063018D6EB748
4204A415AAC8384025FA922E7074FA7B8A6C31FD3761E7B2737D4D9C9992B7B6
DBD0CFDBD87D42E1A451FC5C7EFAAEC65D10D278470DDF42DFABC836CF15D042
6900E0DCDD36E7153BA186B8358E74F91A1D43D62EB0B821C0E97FE63F1586D0
98F01E8F6B6F2A435343A25CDD80D3AEB42DC8E5AE02F8837B84EE5EB508B02B
6980D2349984FE1A0D3ED12355D556BA483CA078B7921FB336EDAFC22AE05C1C
5614F5025B890009272DA8C838B81913C872A54F7E932237FB1BC2CE5D64CD04
2D320C8E2E610E9EE36EAC7C28C833F8A14048E751B61D0CEB342CBAAB34D104
311B421B8CE4D903D2E2518BA8B734E2637E2CA55426C4A87EEBCE637F8D71F1
54626C52083262A5A9A3B49142948BC1AC0B7698811AE81FC3D3B1C14E6C274E
CFD6C480514F3649D7725A0A14C82C9D537B1C5A9ADC816340B8B4E484AF55AA
905EA936A83FE2BE788D084469008F407447E0077417096333F163CE94CD3098
4B9712EE23120829AE2695EA63975492DB2615214B11C87ED0ADB776ED4BA0B1
40D09D1A617D4F57EE1A9B05C8D5F42AECB9C6AE67757DE6307B1A9C467123DA
773239976AB0EA052B23F263031ACABEC9EEC7A43ACD0DC2D7AD66664FB0D937
6A0F463A173E8B90B2596DD323D2350435D9D31B638112D70492F44769FC0C6B
40A291FE78AA598CAFC19E5AD195BE7264F0EC29305D36C7AB8F2A733797D75D
94C8F7AAFC49C13C108F514745A394F460294C6F3F44162BBFA878F773A5115F
062E934253B786DA2B9A6E8E843E06B97075BE99F21B330D6684998C5C340B72
09D69B655097354CB682D42120ABF5109E5522ABEC94D05E7211DACE8737A1A9
0BD3EC16F48798E67C7C85560D79366504BBFE5F7F5EC1B05B9F68F98149A02E
E53F321C213456D802C01871E9024F965258F71215F40EA71057C15E349F06A3
A016BF1B7E44DC4766FC92EE500EBF7C47D36B1EA34981EE6FE38FF4903466A8
C9020B91CFC731642003AAEB145EC0F13D6281B0838BB4236C220F6F467F7DCB
C79BB9CD5B6A180DD2ED7F94DA6B5CB833E62E898BE832DF601BFBC8148F9430
C8AC459F23EA2536E301C9DFD3FFBAF4D01E7853B60A69B5D012DCC0054C0BA2
1293D3B4EEDF7C5C78118138544A60FB1A500F72BA39E63EF5D97D68369850E6
9B6336DA577128DE68FEB71877360D97204B5F3C06E808BF95AA6D6013524BCC
85CBA9FD2CFEF383645E7E960E7AD471A6A3B8B8C3A0A0B8464836499309D82F
52004FCDB68997BAD9E4B5B881634FE1213283B6B19308BB67F2364F7ECD5534
467EF07CBE71989FFCBC6224417C0710EB3EF2676B9DE846E7FFB1AA6608EC9A
76C31724A19ABB2AD08CC102F5DE8E4E513F90A53F06D440A66B000CCAF6AD12
6F4B161B56FA5FAED65A24FA183B84F4B45407AA69624068EE0E3E47BBE973CA
C72137823F1D676131C8CD5070092CD73FC2A93E0480310E21CFB14C031206AB
411694AFE7B639ACF35C28705A115E98BC69C66F6C58E9E79902453798D76267
29B780AFB6B895B34CBEA51530E8300569EE4D500527BA294282FED81F730A46
6ED19AA5AD45852739882216EE937FC45D75116BBDBA6FF4B4423B398E383CCD
A7D705B8BA85076133E823300C3EFC9EB9399575F5F6BBF868265304B299AD77
B6B4EEA04C83E163E8CE2BFACA65F9DAAE3AD2B0F8DA1F986E6A12DDB2AFACD2
217E37B093F46FF3E20E587A9490401C2833F5844763FE2C528E151214E8CA95
018E1D8D47C9EB5FB4F0EA2A6D064680DEFD2C5489298F83B58EA7FA8CB019E0
671028C59C3E007DD86CD247889ECFA6AD6DA2433B02180DCE6ECF9E495D0976
D063A61B007233DED5E3F351D790F26D4011582735A69F37E7CCBB0AF254B925
B378522B748BD9BF152E2187DEA12BB168C42AD8D67D18567393B35DB2AD8403
5A7093EB59FC276525B8796FE81944F7F03349BB077110E182A61754ADECECD8
A5255DBADB523F3DC251A7D97F17DC76281CC632FAEB382A972D60A15FDDA57E
2F42AA338D889B47F6A3C1FADAFA8D11D63EF8D0C8C0FCE61FBD8AD34EB8DB3B
722BD86CE5B1268F704ACE82A39466DC2D96C9849B9422567FA5E728B17FAF61
59A77E9B3289DB807DF54D076139E3DFE176C3131FA4540C1542AE5AD6200FCD
B92D5DAA77DD4D3022049B6EA2A037FE96E0CEBB1608C663F1373246FA74D70A
BAE7BD37F3AC23E003204FA8270B4514DE1FDC5401B69CBC98A67A5CAB5505F2
87C242B6ECC86E88EEF44B9C79DA5F88CFADAE8B4CF437A7CBD5E0C01A9BC479
E92EA48C808820C567E74D62ED7597FCEC53DE9A0B3EBB9A3FB50AEACAB82BF9
2AA56D029357AAE016582592972ED01C0ADE565E87607F17BCF4983E3321F606
ED664B9516D404B277C2C1B0F873D469D64A9744D9C1897125FD471E71BE060B
A3A617DC8D812E184664BD83EC74EEB5197611380F2D859E1A61A14404493D04
B5537C04541E557CB5039905F37E72B762EBD2321633E12C38C409338AD5AAD3
1A507BB2B8F5235F0614D0CEC2BE44CAD504C9B2CD3E45437A493A33B9BF8A1C
3FE66B1E673449A54E8E3C3470688E94EE4404C888583F7C96B43A592D586D25
8AC1F206EE5FBF3AFF7EDF9BA91EEC6BABD573D455E0AD6802E7E23A662D4F12
FDDA00EA054CD331DF86C099C4BE8AB4EAF5D8EC1BFEFCF50302BE61E6FF26D8
1E88C544570E8D6F7D875466C70AA91D6CCD4DF4BBA34FC67191D1692D3FB76A
66F114152956A5E38345E7495BEB1A389B7D0A59624ABA784F77C1BF7728E556
F9D97D71858D61624C22C6914A3A995BD75922A2C37EF2CA91F923A4561CD3D5
2DCEACD9C3A65A9FAFFFA4822E79D6D89D6366DA6362DB16FF061840582DA35D
E4EE8308040C2DA5F298944EED470D6E4E1FF58DFDDA96C20C85E2DF2652E12B
2EFB8F890D301E8CE777678FA786E552A62A60DFC369AF4BDC069F5457FC86F5
1FB1A38A2222EEE86FE1AC9A8227663AE33217C1F381115CCD04D2F381A27E97
36D356DC64615AD63E1952B37AD4F967317D76A6DEF039CE8446AA634086BFB7
7B0B34F595B61ACEB346F51ED10ADDB7B852B5B2BCFE416D0435A7CAA4C9D9A6
152D9AD938F39E9756AC752F1604D884992BAD768C720C45479F5AD8E53A4832
1B44D6109DE4460A662DA6081465E2BE02ACBEB52259E046767DA24E1416FF44
D5AA1D303CC4249510D703CC6CD0FD7DDB078A91089FD86ACE1721F875F019B9
82D7C5B2530567F2306F47DE90EADDCD12AA1C693B1982827DC36A74C86474B7
0A8A2E084CA403AF654E2F8488806B943E38ABF544ECD45FECDC441DD970B180
FF3FFF1A50D5E22216B240A527F95DA1E43770A3867F225DD2A8AF01A965E06E
A063997C4CDC0B16B52F9B9C8B0DBA94F88F26A7A01E596DCF8F33DA3DA5B02D
2ACF771F25A1372F521A80B93DB0337886FCAC0A2E8FAE0D7E1E0C31EB43AE3D
B4C2020F322A9857A9EADFA7782CA70DE7421B9A83DE1873EED8D096701370B7
7EC33B9C104E9CC16DF8C80ED24D1F91677E355DF037621ABBB75E09ACDBEB82
30F1AFB82FAEC4D9E2DA93303F72C1078679EDDA35ABF2AB38DFF091AEB273CC
5A7B29C0164977160CA75F62BC20474C7C1F127AE7E4DE865FBCEF852698AB80
B61340CAB6F86017FEF570104E46B6FB3320E78D387CC58DF1C4FAD8570C0126
B6F54AB5BCD47904A9255366AC9C88576456D3CF605822269CC65979EC3CC740
AE3D09257BA3AC7A364A7F5EECA3E658AA20B53423553C416D98FD8100D80A30
A1B19F029B7473070D7C60CDE51BBEEFD2B45B1C82F4FE32A5BB6BB5BC32BBB8
F600ABE893B83B806A5435AE2B40E5CEA9068C6ABBCE73C9B3533520439F28F5
E171DB1DD90B2EC04A1F36767B2B97D4EC0FBF217D4E80ADA5383BADCD7E066F
5F4B23738A14F19AC7D765119AAC9AB6CD0A8AD4EAF8955CB9F5BDB0156CACFF
236D24E8A12AEBA549FAA9D7053D10AB7094B5D9B86FC7375E245EA8D7FC64B9
859A1A37C006E0449AA8DB8B89730348C71C7E014A2EF8D871AAA856407C33C9
392720173DA60850938D0537564455C3957631AC8F8C0B3B29BF6163828796E6
0944C3000B990715188203B32BC4E3FCDF173A4A9C78753AB7D76BB9A4C2DA4E
3EC638753D6FF6356EBB07D0A9E8D3F50EA5451FB6C836B9E5EBB8F1331C8CA0
B0CD271AF316502CBE87F652B5ACCD43176AAA32C6530C69E77E3C85DA496F3C
06980ACA739DECB5D986622AD81F204579218660EA791774C2D11878DE23F858
BBC4ABC7EBA01B7FEBB32BC914FEA8E5720731FD43F8A5CC53954D13455827EE
9C7BADAE8322E77EE7413D6C86E6D378FF8044F50F529E765A1CAC29E8B1D91E
CD40F70F2D4890E0FD04502933212D5AB176DB143831958605C1667B8841E770
CB4D513DF0C3182C23CA653A7A714B2A8DE29D6B203F5A9481E0CF3FF073FC6F
476B0B205136DA43650A940035A970584DD7D06B7CDA8E960186158B75FE3917
9B1D0FFE45EE1606C875DF635B80F5A9E5B67A6ED748F52A53A710A45AC20BCF
FC96755E685A3B0712D5E09D860986C61C631A8D2A505C57D57C1D4AE78C552C
DC5C9EE15B82A4C3020331B78FDEFDE53974C391F375E8118EB7B2D23DFA3F15
389043EB6F33842C82B896073760197B13D3DAC172D77779DF517AE31BAC43BF
5BD6F75B59AAA59C7EB81B776FADB720282DC06BBC9C33AF5AC0BC59F6A0044E
3898A4B5868EF32BC4F980DD863E8EDF6DE3E753A7B3E39F8E8BCB3D3BF14EDE
3395E73BD07440FCE88FB28A96878E823C1E5519650F2054EC2CF733EB8AEB0D
510E5659A3179C3FA8E31EED621BE0EA648D76C370C3CBD8043BE206F28699D7
5871DA483AA5D3580CD55902C85DB9EF5CF5D3191738FE64DB42410F5AB8ACFC
CE07E524BECA5633B082F4793002A4A7215AD1BA31159A30D72AC60EDD0B2BAF
73C9934C85C5372B47BCD3ECEE463CADC05CE8352EC1399ABE2465AA53E5965E
79400336B1F5D1401EE2DA5807F9701D1086DE505F6AD4E64DD4F3E5E90CD64D
FDD25E6FA03B679597CFB8C5C1F03641CEB7B9B40787E70BC6B063621382E3D5
1287365426E44A2EA208C26155CDF782F404CA7B3C6D379103EF4A51CA3F1343
22B04A0B55CE5A7633175838B9E50480E9B80446CD3B541362E7A10BB3C58A42
88C0FF580B4A0296073F5B6505E4FCCA5D4BA2F7E8D59BB04EC9ED4E664BC2BB
8754777594DB26DA0985663D321CCD13FB261BE8A771470DDDA783493E452A87
D0AD01AFF8EDCB7BB159F1408FBCC52F126C46234CE6BEF241B49472102598D6
91FF2DCBA2CD0E6658A61DB3591EA02E4DF202954B655C5A3C34B14CB60CF9C9
2A6683AB282DFD79B33FF3A6AA524582F174F11A5568159083496B242ACD2770
0ACE8473D363AC11250E5DCDCD3CB2281B71FCEB8AAC1367D0714796AF3BF01E
80BD4B05A0A45E6CFA6C672850B9DF113F5EB15923ED885A0E4488D4914B62A2
FAFB6A63F8AF0CF0DA498E1BA68C4150B6E59CBA80BD17026FA09920006D2075
BC6F1010D0A10648A20D8ABF8137BFCD6A5DB3606F6B3CA51E8A4645D32E5966
6DFF7537F65DA4268A86BCA5791C21F5FA9F4C2F1F6C1AFC4D4BADFA63609C4F
5F5158608E6FFD9C5BF00646C3AAB983DDA5E37A9C2EA81796B161A06201FB6F
8EACE87008EE7A008BFBA69AAC04D73A8C0447FADA0249D8861ED405537E23E7
BE68C4349FD64A14E3A53D6C6484E704BE4AD5FA0269F56D3B752A070D9872FD
A5CEE543B413F13CC4CFABCE885BA4533EA0969FDADC14DE6846B330552CFD60
A75BC8C9DDA76102E48DB6B81975A1F3FBE182CEF410841CC6164AFA0CE51FD6
8E8E6F0971277052E21126909B5EE51508306B886E945C11DFFE1C91BD0D79E4
554CC7D6A774C9B98610A1E49C3326D62F157CA9D89B56699F32DBB9D49C716D
CBDEC052133F8E18E8F3D7A59008398AF3E4E1192CFFE4D0B7D2ECC8DE2ABC1D
4DF7F2EA5EC0DD756CB2FF9F95FF10E506463D3037BABD221C08506FA603DE1C
DC45A5998921C4023E501DBA494C1F41C0955A761AC3D5B13A88EC4F0BF40756
BAE8645EA76027B8AF74726521DC129B9AED4BAE67A511EA56EE9D0D8D30C7F6
FA8BB890375A263A0BC4E9CBBBB8F8F8613A43B10E964F8CBD6BAA2B0BAA70C4
4CFAF6EBF4882B610AE13689823D37B046FD26DA85BD96B896CBDAB6662573D0
2CB87D45A86A016146513441BF7A748F1E9C2AC7172460EA628BFB22F9797905
F6DF6749F13C7F234A2CE4829D41E0F53EF3C5F52165297AAC4B5AF4747A9F53
60370B4C0110DBB42C25308F489A856B6664371FC2126BAF4710790021255653
CACDE1B9ED6AF5C696C3D8BEA4698DD9045B3004A5C4C03EA994A5445C9D4EB9
865266850047E28F2D82A08617E9283FE637CFAE4F7F261CC2D616A8C746EF23
7360553A6B434201944C04B1522533C61F615A20BA3678AF8D4BAD1FB548D82C
72D41699FB96EF40ABBABDEE633F05B4445BFC4E6E661DCBC8EC473BD2BBAF7F
75F7FC86CC7B1F3A2343EDEDF6B5F7E98A0BC4443E21611F4D807FE7F597A37A
A4DAF8A8E6D04FEFB320E0E25C61E156A72A3E4A69EDA04B0E3B72B69FC19E63
AA33A682663A8F37F4FFC1533CCA2A80DAA675DD723A7E13D9DAE3BB0F5F3E07
99BAB9B9BCFB29B73FC76EFA02F4F632690651DAAEC2B3688B636F0FCB156047
F8EF7239716BE5D3DB2FD1DAEEC11DC2D65CFBEDC1C950CA737A04FCCCA509C4
7E47664E160322366F70CCC641B9B49192AB839E0AC609AB2FDD3783095293C3
11C56740FB50D23AE9FEAF66DB13F35367B562F15161AA270EE44713881B2387
7889FD10198AD4D750390811714DAE7A8DC6F5770224E93408F8CCD4F8712A9B
3C583C983D98CCA7FF9DDDEF8AFA292781B1D7089336CA631413EA0728353E8B
3650EDED7ABB6E5DB5B85014A3A9C4C76EBB664A5B3E0F3CB2ECFBB6294F5C4F
69EA3AC8C071B122B129A28E04FE989DA9670EB6246806A516517DDBC52DC001
4C027D51EF1F98506F21E63D57FEF267B913F1ED4770D892239222F3A9035C35
FFA38D1AF3ED9A8C02235D7422695D30A2F801389DADF34CDC489EEB38089B6B
026D884EE1C24FE5785C383B988FFFEB5459A1644CA44D353503AE117E87F956
393DEF6C47D4E1C5B1A33835C9B8E1B98809DFEE43C4D6DBEF1C2B1ADE4B8F13
3B5D224C25927433D5738B0FE019CB88B1F373E4AC2BDB5BD86887FCFC55D4FE
001DB8881237DEB70C29FB4B1FC78AB75D63C8632FECA3224F6FC80A8CBB7B7E
75844F9EFE1E760903FE402DCA583928714F3FA350CAB74B78765EDC9EA74583
014778FD4796F1EDE6041ABA10BC323B098595438ECDA6041A2E8460B4921D36
08C16D646A7B27917D3DBFF4EE7A17FEC986E9DD69621D48CAB56919F96605E9
739568B1D02976D700F1D4CAD5C1319B772F7BD8C9164AED3709422940A8C369
62BC1D166C17512383CD923E344AF2DBB26F0983369BC48AEA1FB37AA15EB8E2
DD8F082C1C06DABB32BCFD7EADC3FA5A4951DBEC366C096AE65B56E34A583A02
88C1874BE8C4377876024064AA534A2AF5123DC1249D5C436069792CEA802997
39AA4E90424869BC64D3BB841B348CB7710B99297AF1ADB79C010BF1DE5355F5
57B79F274AB870A2E9B4DC7957C8EF3014DA16ECDB70DC6D0EF44EEA41AFABF3
C66F6BE38E7EAB16A6F9C9F2533E4E628D2485F24F985CAADD1BB4616CD9A710
54542F57C8DCC93024F925D8D138233B8547D3A8E869BEAAA7C629184E2CC529
4820069F25254115CB01446379D9AD913CE97E29F97A0F2528A84A00C596E351
A78B9D67C25EEF3E77591E3F95B9158CEAAE619EE10B69C9188D595775613DE6
9E901E01DD9557C856DFC5A23E03EBEAA6D3F25F09825BE2279898A5C5B94BCA
818E81D0E13E49AA0CB37C8E9BF510A9AA309DBDBEC85C639515477C6B2EED73
CF55F91DDB130751EBFB691733C026A517D7A61F7379E0AA5CFA6347760FF362
BF41B8759714BD1534C723C606BDE3704BB489C36533AB02724C30A68D7D0D57
FEBD9C365C9D0C675CFC94D952E6F66BB04493942F14484065AC93D59A3DF54F
5354677B4EF33FAE73F326859D2CB98E739B0ACF3C48C7325001930E4CB55148
A493D9F11F0566E7C7DE84D41700D7A11C8D0E7A85A8DC60A08513DFC7707804
A183026BE88045CFECE49D399422DEE4D7BC788EABD2A745734D2C5268108602
33E5B0292781A07C44612BAAE636BB74C62DF8688E33E427824D075D238CC45B
94C468E66F526D1557616B0E1F8D1762BD46F8F69CA4B90D3498438ED2DB7D03
19430098EE7A5CD7E03466AFAB134155C74B598C95B80CB003BA2262ADDC1B39
6A684BDAED78C11B020F2C787F0F7ACA36D14AFC63A69D7402D38C3B8108F955
908C810A4F136F2F1D7BBEC7B548C99B82E2DBE94DEAF63307BBBA30A7C216E8
8228E6B6CA3FF005138E6F16FBDD8C2F2EC862FB85A1433D6C7EB9042C6979A0
210AC17A4A2681CBF80B0CCCD244B75B8FB3251B966B658C5321B189BEB56969
B8F398790D43F5D5628D19CF183E15731F7C30F478B28987868D955FC3546D6D
57B6AA7F5B3BF9B3FF917A12484BD914C99A89C78A72719C062FC53986A0BCAC
F12C8EAA56EA95560F22381001E7EBE5DEB5ABBDC777755A498CE1E7AB375CE7
46573F290842CE336EEC7D189633A29FE51F60A1FB3D9B46DA43C815375F7322
C594DF06FB9D94ABF3CF070457A3A9FA5964EB6465FB7D5D557ABDD5DB30324F
35E3F41FB0BEB6C966C149914A30AD1B496E95F880C0D2C62DB074669F691F5C
7A77B21DCC9E67BC0C0A27965C1E24656230AF9BB598242976E0BFC2124B0DC5
650A375388CE4F3432B977E7F90610C0142344491F8800E2FF5037BF14D32058
5E24D095C2D8D3C81CA264BC94BFDBDD061D0658BF303D7D30732EB0B8D7ACF5
7209539BB1E313BACCD9AB518ED33BEBAC56D17E2627B0352BD8A84A4955816C
8DCE1886F9E560C5D0302D4683069D44F93F13908CFF6E90CF14DEF777D5135C
14CEF2CA887D36A6BD51E23D7C3F05BB0B095B598A76CCE436A8B2BFCDF5B340
5FC1FB76212A674D6E223EDDEAE41956F51E132F16951B7383B81ED870AAB652
526DC406E0609594F012B4B730F157D20763885FA325EA22ACEC2EFEA4096FA3
816A45BA249C801EF89ABF2149109678DBA20D65D9192BC4E1C262289BFAD27B
73DB7A2414243B7836C7F4A15F1C9277F94E5FF9FE8D6019ADE72D4B9571D0CE
9142B3057E564466882950422BCD557581F95006E25BA750372C4983C06E3977
AEE879CB6AA9171B254BDD5CC765EAED304DBB916BFDF05C2C7BB5A0678452C4
17333BD245CD4FABA813FDA935FA4963980D3777EA7EC576AF1C9EB62345E085
01B59085ADC9B5876CB44916F180FCDF273C4B23105AAC1FD7343B85AAE7C07C
775F117EBF708F60FE3C7D9B43CCCFF03B6E1D4528F174B77664AE1C786E21B2
CBFEDC1D832FB9B7527CAA329D20A802015D08F6239DD18661E85C340CA9DC75
597E1A745F4B1EA1C91F3FAD851ADA931C653006BFA8FA42AEC75B56AEA8647C
493DD88909CA7AF5290042651D3801A7E144FBFFAA99B82901444A37E3C322DA
78D62E5D93E2EDAD5D6CCD5D697FE43124EEEC945D0AA5973147E95FDEBC3728
819DF38515D7F1F18E4CD4959E0D99A00DFB2CC2F349FF9AF8FE7B3CE2D727DB
1C0E4AC5B5B1718AE3224FEA4B3EB924F409EC35878061A88E47942D7C3F0245
34D9AB67A216BF6B1F6EF0EB1D1BE9BC66E8226714EE3E1796D9A9A3C2576407
16A132615762BCB03C0CD9BC610D28147DE24DDF22522EBD04B17FF3C358D4BF
CB3714279ED5BD60B46BD32E64362AC9BBB442F8FDF50D30F7A9B56441F66644
18093A3FCD5EF06DBA1F01C5156F81D76F011CE7B9C61EFEC3239729BC40F22C
8DEF26CF4F8D4281F5DFCD2CC64C3715E5F337AB3F3BEFC318AB96136F621510
13BB166EDDE6FA7EA168F4DDC5351F2F41FDE9F20AA106A969101DD567BF24C3
25A9AD1CBC68320B63698DAFE14EFF444125C897CA7E6B281D0B804AE306BD1A
F50CC9421E508D617C50D128975B18101EAA0897AB02E2833F1AF971BF56425B
1A67AF421ACAA9FA530B4E0A934770E1026DD6FC8882D913A9F70280DDDBD571
68D82C31BE54825DC4345FCF2409E8E857E70FDAFB90B53C9389047890BD712E
DAA7853669231D6BE6E60C26084236733018E51CA734B280EC48D0EB0229F5B5
1A7B06BBD319026CBBEC32A097BEE04C266B12455A3312B0653D3E6F55A239C2
74BBD1542F156B8FE1EE423432CDD10FDF7F3DAEB560DCA3509E7D972D08527B
A0AF61DFD0A8082B19E89BD7DE2D46794EB751DAF115EAECBA5B2E75EF4ED31B
0CA5161D367C12480450C8F8720CD87B21DBEFAC7848A58CCC01475F02A8CBFC
59667DB7466631822AF1758EBCD3A22B6945F11C4623346749A0D6CE08CEEBBF
5FE16A8F369736BA8B571A753D0999DCCCAC165F35A504B2A9ABF782637EDD11
27EF62E55E55DFAAECA3F296DE070F7E908111443B77B7350CE3B1F6940FD7A6
810E790D93A70F6330780BBFD5CA914AC0F42872E820E825B78A8CB9232853BD
51B4F046871B010A3A6921F832BDE1EAA9EBF12CC37FAE6213CF06D972D934EC
EB8C0DAA7B6257AE035EE08DEB58975D87B067BF6484A35003CB0963F147A1ED
E62A4362FC5BB8ACB1F2C71C6DC9E2DA1FA95A00A2CAF97805A2A88BD703A6CC
5310ECA24348AA7FA2D9A37039B5879975C7DB34EC1A7C38E0838E5A46D1A0B6
736A23A26399E954430655E197FAB46B091232211D365934E590AC59CF13B180
FF55AA13D5C6AC6A2EB95BBE1AB127FF88E56F93CCA9EB3589E038A4F3B94980
F5C7BB49F605977ACCE65265271E6E9F502CA00E4F55BC21D930FCCA0F4126EF
75F70EA1009AA9CF56055C5CD9CA5F878AFAFC07DD803B8A5AA2E96C710AE8E0
53CF582FEED98EDE39F5516F2C67AA5CA988337ACEBA87A98A7794F453C08F66
3AC8F387D9867CAE907E66171D29DE823D19FDF0E6C6B5F41183937B53C33C85
0759775918C94A60F2F17C14158DBCDC4C6FB317ECBD43E9E2DB05E2EF0E443F
870EA7F70B87C5917EA8C3D12C6607986EB943C2F4F83D71E7F05B4BD3B487AF
06EDCFBBBAF3CF8D24C90EE5BF9AA4452419AF38FC05D69BF3705DEA1696992B
2B6B33A914C4EACAF9960C62096B3DDBAECF9F1D25125E9D2993760A334B9FB5
605BEF65C6BF0054898C83E4DA273972A6BE7576C2DC5C98A99B7D835CCC1483
14CBEB6C5A3A4CFA9B318C4B2FCA2DF0C171FEA75A1EF6AB4CCDA62294EEE974
750C85607E752EEB9563C76E27B2CFF38B8F88E0743BC41DE2125EF85E347CDF
4E2F544B0E2ADB99F2A0CD8CADC5540B03A4E64B2E0AC9A0517DB077A555AFDC
8ECC4B05AEF16C3126FDDC359E5B03F795034ECCCF00D1A742ADD785D66653EB
B8E088C18703A99B17E8237EA537DA4834253CC693F295C8A5600AA4155A52CC
09BAD7FE89D6A84B7577EFE0FFF2B9179849F7EAC9698135EE23D718EA19D395
9D8AE5B1D8DD422990F735EEA64988324B4AB513BF293E439644A0A3D475F950
422A66B702FF38DB6757674717833D23CEBABCCCBF4E3BFF77B6E56C965E1261
48551726F14F1F0A76B0A656C2F78A83212C8B127882C5F8F9B0CAC6D019810B
F6B42C46A48475289766E6F9A15B4A24AA49A7D764705AF3CAB165C1FD79830F
C7F0B96111DE7722607F3AB89351507136A1343D10875F2E654D7DC261BF37E7
88FBECC29F98EF6E2CC3152FE1DB93F93D3FDC50233F2D1FCB62C23503885A99
41B7CA657E9C59D06D1A40C0F53ADE6FB095094BD7D692DA9981FF66B9793C15
43AC95498D7113B0114927ECABC8C37B8CDC501E3A424D95312FD731A044D842
0608239CF204C5AC42107EB9C6CD21D841A90A77714649D6DCDDC7F44CD73916
694FC7D7EDEA42915F628A3931260E259829B3D3A40C3093224A84EFCC8CA951
62DA06374AAC8235526B5983893C766AE5AE73CECEC466945CAD603BAAF2916A
C16E116A1D850429E8B2FC628053A238DA2C86252E918A30711B2E5872245CDF
B5E9EC273E9357156357A01EFCB9079C5C81EEE0A17E9900B42DC1EAED6E6557
1BE1999D537A071681A35C9F7109906C3B8C663CD588164681E3A05F798262B9
9807C0059F7AF49C9A5813398AFBCF405CBCDDACED3925AFA197618D99E35ED3
30AD206628B4FCE7F5F51435C7AB2CCB95184C16CBAB649B9388B791AAC5D951
CC28737D8EF10DE825B18F36AFD044F2B8AF5228875F102DAB4A367AE51FF978
1598E90FC4470374E056FFDD04EAE320D7100CF2B06F4D4B2CEA5EB596C40517
B3D6D02449B4EDE1EBC5671F455CC569DCAA60A6880EC7D9C2D65E37A16863F7
D95B5B394E944FC934F969C45C1AE14BF371B5863490EDD69C2C1857A3F706F8
6BCF1D783EC7B15B43CCE796A2EE01FF4E302FD5683D98C5A76C87814E1BC177
35EA423DDD6993D5F22F3CE7976643BCC7684C49C7F270E2A39BCC6DB0E3E1C0
A16D268D86D1A473A40A3EDF8BD85FD53533945446FFC465D261FAC5E5F7EF22
776F39EAE5B0AEB9A45F53EDEB890CCD811310E1FC9236293B631C3E7FDC2D41
F4421D6B11706BDBC6179B12D971D52FCFF9433DE17B998B54C3136BA03ED5D0
8B33012F2524D513B741453D3D3AD224EF33BBE61138FCE70BC98E0C189CC4CD
644B84C0646B0D8BD91965C17AF0618BA682C37BC1C62778B9D5AFC117FBF1AC
1F459F40DF1995C187A3A29369AB8D4F32F945383E35425C8751B29785A929C2
AE4F4C7CEFE1630E789CBEC619E4F2D34E7A2E0B5EDC8EB563166742CDBE8CB3
76E411090525C921DB0E391FD03EF404F82F494A3D97FEC39AF60D1C24C6C9B3
555824ECBE0AED1AFC291B66D17AA5BFCD84449F40F52BBC8EE1D60AF9CABD42
FA6B56A725B8E117899BC392F2F30805B9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMTT9
%!PS-AdobeFont-1.0: CMTT9 003.002
%%Title: CMTT9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTT9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTT9 known{/CMTT9 findfont dup/UniqueID known{dup
/UniqueID get 5000831 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTT9 def
/FontBBox {-6 -233 542 698 }readonly def
/UniqueID 5000831 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTT9.) readonly def
/FullName (CMTT9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 33 /exclam put
dup 34 /quotedbl put
dup 38 /ampersand put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 58 /colon put
dup 59 /semicolon put
dup 60 /less put
dup 61 /equal put
dup 62 /greater put
dup 63 /question put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 83 /S put
dup 84 /T put
dup 86 /V put
dup 88 /X put
dup 89 /Y put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 124 /bar put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794DDF2E6BABDA4215500A0
42D1A3D0D02C0C98BB1D6ED0B7791274C38B038FC7921FF1FB8FAE7258C09259
4B8E1BD9EDCEDE9ADAD9BD9598EEA9691589649A9A21539161E374075BEE3457
689F308A4A7AC9F2FE4B301A6C36B0442FB92E3B002623493DC087800B5A0521
0DB96A23175AC584DE166F59142779F26FEE9783E28DE49FC3A8D6583EE63FBA
610DA773CA18ACE6F64A4867A1A7817120ABF9DE4D17782866E6CB6B65A9F6D8
3667C8D3E61E5356E35343FDD4C6436DF73934470916CB5F0ECEA6BFF092E735
C7C355B56189D1DD5715EC97E50145FFC17BB1497315A9585D713A7A6DFC7933
995468EFD0F59E3C15865B87925A3F2930E20D5A35970E2C44F1629FA16E00EE
EE21EFC50D49F5BC02300D0A7BB85E649CB4E2E828C8B1C5469463013E71D723
2CB11BCBAC191AC751A2AF7FC228395CE9472DC1809052012AEC2CD66695DAF0
4CA04234F0187F4116C93F59A7F1F8123DE87F111853B785A20CA8B49B3B0CEC
B11AD345E1A11578D2EFEB0536D125237086CC8CD9F34A5137AC5DDFD8746014
D74AAE8239B81ACF65F379CF2153B06A238A2D767F294CAE0D79228F0B7D45CE
510AC9657A1776202FEF42F96D476E7DF407786AEA12DEA0013D3B4C5D0640F5
BC5BB72C34066270399CE595827175B23B25072723BD24E07F6BCD9EF0175DEF
93714BAA53960F81103CFB731CED4A267B53727BCA3C97B0BA5004055D4EF0EC
F725658E53AC86E4061B489AD4154915C3981B3B703E1E2A8D390CCECCA99385
45EBE35441B062D7D12DAB2B31569387187D74A4043FD71F1C6D352EAE0F6757
4345FBFB6DB15CAE47CAC4BAE47AECAE5FF5EC19057DCEFA1B23F47364ABDF47
088A7C6A2AE26B10459B6D41CB69182FD1472F326CE3A15B59255D1DE3B616D8
9D1F12561038839781E657C896B8C58A32DF5AEA23732A0966D96C68C988ED7A
09B7E2C8F9F3D0D56879764781566299A4EDD3588BDF70E3D924D25074F30988
E35BDD827AE4D0B4A06F55A9976BF0DB3C0B1D09CD08E8CB168B50617691638C
0EC1A791C228177D4FFB021EC3DF5082CA3487AD2EFC8DE9466A690ADDB4C52A
FE2A6DB4CC275CD33D9136E735279FBB2008D59E667905EBB04326EC33C98B2C
94744B7F540D86E90DED64572ECF1EAD3A58EC101642B245A9C7232DC8FB8741
03F97883BB32FB955C22F878FA0FD114451A3B3859B0B5537AFAB73AEC7DB2BF
409E1FB41D473714F6BEA73CB085139879FA31710E01915C2938C37BAD6D7D71
45B897E00857D3931A489EAC7B42BCE4E65F73F67FE027CE482DC47598ABCB95
39E98DA8ECA3E23F0799D5963ABA6E2984DEACBE7B46B40ADC6213E0F4D08971
58F68C946C748E4B4217CBA2391BE2086C9758F4E32C9B6413E48D84D33A6E85
84747029C0A9C9B92841D217A902BA8EB333999D62FDA9F82BFC8ED11F67988A
0CAE42182E414A9766AFFF4B046A09D476F8E3F15A8C7829BEE982D8350BDF5F
F215F2BBBF68D4B567BAB798B9604C79306C475926E9FEC0F07A99F43473C6FD
B15AC29C3D07FEBAD1BAFF75AAF2FBE94F104F1DBF838044FAD94B661B06AECD
D9AEBD02B60CA4546DD6B5B5C1A3833ED07845671CEFCA8955CE0DE5DB8FC93B
3306683CBFB8E5B79A863DE78D455DE9D592043C2686F88A43140F8B9F3B553B
7047420E93E753829F8D47AC7621CFE3626F271E31F0019CC02D0B57F67BB47D
8CFB63E902EA3231C00EC66EEC0D30FE8394558BD3535C888C4CEFC6EB72E737
712ADC6300162D5D79BEE0CA1F6E4127A0BC90656C01692F6D82C85550AFC97E
C2693E379160FDB9636FA41AE9C75B7F6643B05971C6D67CE30971D590FC07B3
E0B36B4D1C7F25110B5DA2130D574FA292B47322975A2BADBDB39AAE69BDDBDA
A880F9AAB580117708C79204DFFDC08BF4A48919B5C22228845CE8C3109E93AC
2479E523B8A1C12A6E541118F121DC6B4EAED83491A03192D5C3A2A45D1A2467
757E7B377C635CF5CAE11A7CB49D49F3A1BB2286090B5F0E4F89869D1771D50C
54B5C5E091E3048A2C194F0ED00DD64FB95BAC6FA9D61ECD093ED416DA3A4981
DB07CFF17C4F55C62DF628EBFF06FAC3F3D3F91C30EBB34052BE1A08F5EDA4B9
08977197950A282B84E21D43C64BE3AE4BCE22C70E7D392DE09D89B7F23351AD
6AD37225C12BA79EC9951F5DA1E505DB26200190ADE0E549305B7530CB86EFD2
A896F13A97E51754F70B609CB4511CEFC38BA579C071E9510A49982389980DC5
336D6C4A2DB100DFEC4055C7AA9C55880F94FBEA9EB280BEF66CB8E1E38A359D
E5AFB12B540CD599085ADDA7FC2C72E7C873015773FFEECA2C596B75BC39A3EB
3C43FA2E53C0D7993042F3D652BCC483E48B7F6C94C3FF6D38E276086A6AE67A
E5A571B9C72E0D7824E0BC2ADF51A393B9E334649F786EC1923C854382B89627
1B9E701AE5A6C42E672B2C6A33C8BBCA8F69B9061E787D6B92183F20CF4C3903
FF5417427B84798C82BE28D2C81624E3920CA61EC9EADB364B5A6E50E49A1A72
A9A090A1FCD84814B8B2708AD787D2B5015DA1305874F58C5EB62F843685FCB6
465FCA80176CAB2B2FE65E0A270BCE1E3DB97564BEDFAE5CA44395A8DF4505C0
3E103CC3B914359B2870DA6CD30382EAE8949131CFE31E9E75C3E47A3834BB32
CF183D4A8B9001710D0A11390C9DAD116196568591D38C2AF4ADD852F31494EF
573462759A35415900360882739789D6B89ACEFA251C5ED90ED704DD7C3C80CA
9F6CDED69537D201D520C99E69EEAD5D3C0EB84C166660B3C190166D93EDFE6D
15BCB6DC5CDCA825E48D33845CC2FB15291AAB823F25CF8BB0A1EAED8BEC524D
D9CA016027141FAC9D35B64FB9C224552F29EF6B32497254E319090E698FD8A5
15491CDFE1B988C79A0E3B9D01E12FF084E9FA86CCAE02A3EE6F2917B61A2CC1
64B8CAF309D1AB48A34227A7729DFF99CB6EC282E3FAEDD2673779AA7E4C1789
D93FDC37FE95F087C5F88F53D30A2DA9C913BF205FC6BDD060A40184F4AAEB3C
D080D63B89CA3DEFF310D09EF0A83F3914BD5B7932980ECE139EF0313C20B4C8
576EE0FE3F28FAF4D3CE7CD0890BC824A85B8EF4636BDF1EF1BB519F93D36540
ED09FAF93FD71992CA2CE2E83F5355162ECEB32AD218092F45D5A61A44E67135
EF0453589CECDC6962D0E8DA7E7567603BAF50B2C8F1CA65EA5320984E7D69AC
9A7D3D7F92565D79E8C9DD2D92CCA7DE9CD058545E9F98AA47904D70E1897099
3C4C852B3BA131DDD348433C336BDF5FBDFB62120DDEAEB3255E3207B0C84A0A
1ECF9EC869DB9BFA3693B03FCB27C5A5D3CDD62630DEDE91B4DD5B9784BF0BDD
FC6EEC3FA7ACA9E15FAE47CDD9B7FCD2BF0EFA10716F08C0AF25FF67CB6F9598
C607D2FCA452417D2C69DC808A9441A66492394C3450BD30632AE739EAD654BA
4343459CA36B6D5B2C12C39495952F2EF93D82C73E33236785A79609E260C4E0
CF3A3C950DE71DDC3939D42DB1CB1CA917CEAD56979A70F8F3B207C805319FA7
3C000AE2B21D711A6D78C7BFB901334DC06F59EAB6D94B507734C27971F8458D
D00193645AB92FB8FE163D5C51AE4F40BDB4F2C51691E76EE0636F071F37AAA9
BA78BD12459CA499210EB0CE2F8BD317387797C33F5933AE7A6264DA06B4A6A6
1188326147A16B205D1F965872DED7D8EDB3294FAD2FCDF0D423329E9CCF879D
4E0B966D509F45527F7609DD09694D286F6FF7535EF8971B7DFBAF608A19D442
C133207EB1152ABBD11C455D0977F66A9B73E51381D1CA4B66E87C0C7175A63D
80C699A052F00C41DAEF42E7A40E07B1B14107AB0787E24E17C1462960E3C54C
AE73BE4924464FB177EC62F116B2822842541543EFF7ABDDEE197D6BD8F8D4E6
59175D8C5957550B70BE775AD52FFF6E7C00DA7CDC16E1DF7446BB5D8FD82647
3E9F87D5EA365C82A2D991321ECB14A9E3AEADC5A56665DF7072D6DAE402BCB6
14D92B17F9E063E4E9D8D239C91F5C7C0BCD2FBD936C9D4A0B57659420343B59
B395BBD1AB5B6003F653699D57E7581F9813CC98D4F072FB78899D6DECC42D34
F2787EDEA64058B46C4BFAA2BB96E9BE5CACE8D91E4C080ADFC0FA0D4A29C6B8
54FEA9E11DBCF53D9CA40A21AE5076451EDAB3593E56B6D453DC8EAB8C78B588
34D4C4F36861B5649BC1E9F3091E704BDA7613ED45C911DFECA74EEA05165191
825F95A947CAF382FBAF01F3B8B041ACCDF39718D7DC5BA6CA12BB20EEE96439
BF2E2628AA3BD2C91998E6247A690FCB0CC95F286F427345CC4F1115BA3A6E54
4743355F2CC991CBDFF5725902C1F5A6DEFDC8638A26EA456C33C27773D6214F
66536CD2E44FD253531732D5A8C44B336B1BB47B0477350EB8CF74889B93402E
2356A9CAAFCA562315D8E0B3F42F08932CB87BA2499A875AFA08D11DA73B38AF
F46D03B7F639A8D7BF88CF07FFF4E91716DCCE6E2CCAB60A64D5E40EFD8B336A
1BFCC4CB04F49DE1FBDE7AA5B2092A6EDBD913D161A3271AB6411622D0E14416
37F81E0102F5B0F2F9A2B27819E4BACD7C50E29D6291AE5B0973C657761545A6
741729620EF2BF1046B3913399C10982EE5F4142CF461EA31042E432CC79A1A1
39C607D22E45A6DEC008CB4BF6007CDE9DD5802B49A62C8E02A6D448B64177CC
887AD71D171B99E7ABE2085B37D90B3BD8513995D9A57F53184DA474F6DB5E49
B73E04CC214EA5398DF7D7541F94E623E8687B511640457A48A68E9D9D6584CD
15B57CC044D8091C771D175F2EEDD411099BC8F7B4317DC503BB5E405AEEB526
5E6E1B1F2705275D274E012A98F66075CEB90AFC648B964DDC0E9C4AE7B24CE1
80B051022E5781A533A21DCFB97893847D685137EAD85BA708A7E118C72FA839
A9E460B5D17365A0AF1F53A98319FB64A5819B087F554BC056C4BE44113A5404
BEF759F890C1CA5E7AE156F4F8106FDB4F8DFCCC640976983EADB30976344048
2A86D7B2AF4A01CA736B98D52ACE392AD4BECE7E61C710B08B66F01857CA460B
B8376E257113E10F6DEDF14CE2A4E6A99ECBCD302C36CADB713D849EAE9EB598
F29DC98531D793B79F83091F9B136809E006F34E423D528CC4309AFFB3EEB47B
9A9DE4D5B25CE953345C326BCBE2B4912641780637783084D3D12693F8135483
CBB0AC4EE0B5610D7CEB7DF205830BDB9BB404DC1B28FB0824CC187B26C19A91
DA0025EC739BF3993700101D042DED86D67F5FB87912CFC51AA7DF53F2162D62
6314A2CE13810D0B8D81F45771391A236422CFA0F35F7A0CDF14ACB2724AA57B
7C2C28D53029B1146558610E0CFBBF72A85AB9BA308F846228F299F13F68E8F7
D963B2EE9EF7D4C21690632B640BDDAD0556EFA4EFBF035F13377ABB5CBC280B
9E0C12AACB153C93351E5BA95A7D149010E204950A59C7FC6581D9703468C1E9
EFAE37E7E6ACB892B3F8D1248D9A4A72F642FECC5E0B25C15EEB921EDDE84D12
0E524FE6133C4921FF4921242392C12FBE69744D53739F7E849C1B96C4020AB2
1FF10DEA608F111749E2FBD8DBCB17F353DCB3075B4F4B8186963EFE95A76A10
85AA5BB6DB4095291974221829A8E436680F4860E01C3843BE5BB3101D0869C0
EFCE08D187BC04F58C7A450A59093680A0F09E8E3F12DF5223E7EAFEFA01978F
D8354753A68022CC92C71F2CA732DADAA8A466D4AAE5999B0DC077715671F518
E6277741F44AE798EE50DF44CCF71FCF8BC71F76374005FEBC4883C6EDA854B0
88C0C2B476709AA809ECE41AE786DB1A32B3FBBCC14921673578D3514C8CA842
E1FF90BE33F7B93ADF6BFB8B1AFBBD080783BEF056A6BFAEF676F7BF9F2DFCC8
01D255A9F0391951210D60D4D4DCA93AA858B38C0D7B8FD740D5FC6F277C2A68
54CC2DE1F40B6347201FCA2A0A91822708D820CE645C3E4E5A09FE25721AB33A
97871ED448F38FC5A349D81F402B34461D840D5768BFC6849439AB6115104F78
B87115B1DAE12542EA898F86ACE247709817850B067F537E6137196101D46DD2
D842EA03EF4501E34074E8458E638ACC4EB349A7430AB035BEF2DD4CE00554F9
18F9FE32A55AC1E7E50D64AAFDA278D77A7149C59DC5B1E3064A4B281A54C9CE
A5EA94ABEAE4C6D5674C208ABC72563976487136AF2E21F835BEFD232D7F0D13
1D19932367F51D5379934DA7F1635AC51EE5CEBFA63D4D32F018DEF13624EE62
31DAE68A08DBE3B4FDAAFC75291C8C6CC7A657E3C7453C7D1461A36E88E633D5
408253B673AD87A9FB2D0F56DF1305916D14D5DD62051E27BCE09CEE9A1F14AF
1D7164BA5FB6E6EC8D38750F7E28BE330909F303ECDEE692E347DE13C8C2F82E
29C8BE6EFD76546F362A12A1C2DC12389EA95ACB4DCBE95620F0C193EAD91B33
BAAC5801AE827B9AB3FCE5D11D1D7854F8FA8A31670119CC0CA98628F801838B
AAC7EF90AC5466BE69CE3E3CD9951A5EB9AC08014285422F6DA6F6E221BB30F8
0042A11F2E4B765BB0D142AD52F4D85785EA71B2E1CE20728B9E9306CE93268D
99B822A5AB5232EC7E26EE1160850AD3905864A01357F22722B6A54D4EBE58CE
480EAD9FBF068EE965AC4B5FD2FA8CCB91ECFC6E90B9C49268CA0B0FDAD23ADC
D5A74B41149BB08454054C451AD0DA4CCF8B60F2EBD061AA03A011D548B6B481
FAB00AF9225BB5463F27FD67333FB51F8664536267E95CFAA0BE3BC1B8F889CB
587A3A4FA2B45864F07E11372C9507A625C0030EF7030A0B4D931BCC48F6DD51
A4D1F63FDC4B59C1CB18E6242E9F4B4B8AD9755B870FE60D640181FB7EB8120C
C56F51DC8C47FCC6318C2145EDCBEFA7BC4253315BA67FD2B3D4AF6A9F3F229C
AB75B592EADE15B1FB5FDBA1C0F786BD21A51506B7A2E42C2D086BA6F84D1B3D
AC7531545F0B01346831FF36A52CAC1E390F99AEDC265B44B0FC9C581BBA6BE4
48B723811EBCAEA5FEFAEA7E5B987F2C7B3E9A65D2D14A7B74F099401C57E367
385352D0776D2A908F7A5A2E4D4160946C5591397877025C8C387CA413EFED56
8B142E8341E349DB4DBA422A4FEE56A573972A0C66590175158E48850A9F7F38
4B95726787B8F969FDBC97491CC81CABC976CD00A27D1DFCA7CF467A956C1C6C
839817AEF8794B6151FAE9261119DD5DB787DC9D3B420FD325ED6599FACADE0C
320D54C2E0D296537E22C1783670A9D9BECAEC63853EC2F05A990260DC189D63
7CCC0BDDF2CF7585071ABAC14630666737041194D0777EA4292AE60BD7F7100E
DB568C90F0D899EA006CA423CFFD6EC70A5D3D8AC43C747DBAD3B02219E47D8D
DE030631F4678C357A58ECC52782B31B50CFD44EC33F41585E51B27E3997D33F
461BEF897220AEC80007F13C5A1EE3A0430CA899047DF944831F8B010A7DE74A
BFD26001472DC00CDC9F17CC435F61ADAD4E9AE062ED477FC621FDDF9242C449
1BB3F77FDD1519A251B663A693D84B42BF0962F537757F38CE5C5D56B98AB10A
3B70C8AE8D52DCAFCEC22E7B09D3C4EFDA1841C74CA975E4F8294F7BDC796500
0ABE197ED3737A65F7BAE601C91DB3983EAE11DA3EA18ABBBA3650DC361C2E77
EF9F97618B0C337A906FF39926D2B0B7883ABBA650816C4C6B34EEA836994EEA
AFEDDE56E0099D0E09EB88EB093544B9BF4871200746A0409C475FC4232A38D8
F3105B0FF44E4F132378DD12D9E796412FD0F9478322215E9F59E69396C35AC4
097C4995B60BF4D8B3AFD0A002B3A6E4FA114131410D5658999B86DFDD3005F3
AED1FA8F077AD1F27EA249221585703F20FB70E37A26C6C3F2E101693C94612B
65BF89F37AA3C10A40EE8E49915F1A1B95D2193D8003DECEF9D76FDAA33B1AA9
CEDCB21C2A3B057479888EB349CDBE1919CCCBC6DADC20934BEC7614C6B16BD0
D8ECDFEF0BDE3A8D7E4D974B4A7A2D094ECDCC3BA85A8579371B91324AE4F7DF
CBEA9150C9B8A72CA75F419A5EB9870C8679E50A5EDD0353E7BB1F97647B8A27
324A51DF91CF569299F13A726E93DCBB9576DBC525560F7AA8A84221E28E80A9
93F085D828FA62D5AB3E8C90B209ABB9EC00754B2523E1F4DAE27992B583EAE3
970CAAD43A47B5884EA17F86665AEB19E4A1B62EB62D3EC44AED3D7648C399A8
FA809CF94AFA2A535EDDCCDB5ED2526C14D183491743456DC90132EB90551686
558D7AD8DABBE66F67CBBC4387C6050515C926AC1EC77E7F27B2F662CBA32AD2
83EEADEFCD24E59E3FF87DC207A72562EFD856849940C48611327BBA37FA44CE
1FC1A1B090304751BD1862B9DE31D5DED15C4B6D91EB1BB14CF1A5FA2A26DDCA
6521181C94508B12E50940CB8714CB01B1D8CA5519AE63BD8C787B3BAB9A94BD
991542F1C4A54CD200494B8AE9CB3B93A07A2C8A26592F6265222632DD7ECC2D
B986F554763F23259AD55257AB95D70E81E360B9E6F708899585EE5AD53D81E5
8AEEDB70697450167E89CB013419C9223C788EF98CE30236D45D2E0E259B146A
D65C3C9CD7DFD4C436014519367C8CEC09F44CC93440E1A8B0AC350342EAD327
7179627610386AC23E336E5C9B677AF6C5D84BB1395EB451F31152B561A10D27
0362FB909C5C1FC3D2431E65800A086F5DE35086AB2D53EE055E07BB4ACFE694
0A2A8A70F76CBE8566AC6CDAF55FE0A4D846497E462DF2F69F2752173C6CE4D2
79E0649D0C9B44B597EDEA2D882413542F2327D7AA85FFF2415C95B6A9A07D70
8F779E6BE61588394D6427CCDB28388BF50051D3C40BAA4663F1C2A441C36B66
E7D548A9E1D30E22486FC34C889FEFC8A1AEF4FF06EA22FA067C7D01B802F516
1208EFE94915BEE75AD959FC47D1D33FB51D9F3AD5F0A78855EC000EC76CADDD
6AFA97EF14FEDA6A317566B4DE5B075E01ED20F18ACF95B8F60F2CBCC6033396
FA4140EAFBF669B44280CD94CB402649FF45199FCA9DEABD2B4FB7BF14FF9784
2993EE9F7E26A914507E2998158898CEA45A99B4B266C8C8A7ADBF086EA835F9
6649C2709FE14C6F47A74DD826B81EFC3BA7C3F8157A4D92938912996028485F
A0A18C86766AA4A18F42B1AF6A6012F3DC95B146458CE26B20CBCE42C77ACFB1
712271E5232D43C8CB2042335980AFCBA313262DC77FD13CCD48F229CC441DFE
FE71A66A64B5296F0EAB9D134F8E0A2851E53E6AD56E09E971CC0A9FC8850E4C
A0F31C5D7272159DBA894E768F477D14C9DF16536FCD2C316F3A89BA78488828
34316180D2C9C575B6AA37E6BA25C7992D5F3228035688E158953C8F091466CA
BF75F56B2A250E4CA3FD817CB2CCAB5B9EE1C1903E04F95A338C7930679B1FAF
93704ABE3277A317FA42C53DC7E39ED56460EA87367501A390771C4432B96D99
1097934A4DDA68EFEBA0A33A6BFC4BB341CC375265EBEEFD8DC6EBAC8E2D0E7B
11FBB33C109F5975D77338CCA413513A646A47554F6BA557FA6E45505A2DD16F
5B5DBE2C4A23411D02E2C76C62912934189204245D3F1730662979FD8CB3B382
CDAAF522FA87A3A392A7401B79845115665FA65528D8D2DCAFCE6E616C683E42
B8C2DE266D4714870687E8A5E636AE56680D5D7F802225CFD427B0F29BB47F51
5B76D14A97BA9607D6593E7997DAA2770C575CB1327FA3D2834773CB59C4DD10
7F70F04FD4767A7E49CF01818BA5C79C253830E117CC7A384F0BAA2290B2082F
999C9B0DBD94476B530C44B612E2D6206BE77CC5A2ECF797BD0D7A6C29183701
DBAB32242279D33570080356107E91777A34E4306ED998B990756B492D18F44A
3E3422DDE39AC0094AA31C22178404078502239EBF8640B039FA23FAEAF77A09
2047D56979891E09DF91029A367222BFD67E7AC24A65E318F9BCFC0ED30A738F
9A3456DE96322E0A07C575BCFE10B5A8068E167B6EE899FBD4202919DF7465A3
F0C63A2E1509E93A6D451BCBD3916228B17EAFBC1D182948DD4C85379744BF1D
792B7DBA1333ED6C84A9251FE306C9DAE1E4A960C914B8742CFD755134DB29A6
097818090638A036196FEAB2E59E15875A0273B1B1D09A2D2C3ABBAB65757B11
8AC0AA3361059135D6D8ACCEFA0A98A7A62F3234940B85B66FD756EABE0AC9AD
D41B99D80BF670FA9693906FD99880978F195486C9EC6AF72F5964A7CA1F3363
04EB2DE6E859B7906336BE49AD5D254EFF40C8E778BF43F6C0CB8835C60813F2
14C91302E577EBAC6BE0DDF157DE7C55C4CD411249DDD58F4C723297DBB1EC29
B150CBDC9FA694A28B82A174FA2FE095D4A9761F4DCFE29607794434458BAE1A
92B680FAED4C302DDA47135679D63009633F85E865DFC3EF8EF75DDB5D383500
65ED92710553EECBD736C596D6FC4E88BD886C0747887AAB43A6A6BB9ED32675
D31A9C0352EFFBBA1E349F70EEE8A16FFB47E03EB6C8AC29A274A740D57F8718
72663C23B5F90C810F86B0A9063FB16D652CEDE527C29ECD79CA9DCF324A3CC9
02E8734130F9A2F671E3A60CBB746DFE683388A5EC3814233FCCA2030CC1F12E
6BB9E20125C2494C6F19071C95AA5B5969E5924913CAB1EEB0E3B77A20F7B548
43989B11A9C01138F32C067813F094839BD1334AA2BAEE6A0EC0198E18875D00
8B91D818DB44238A4AC538CE1BF3CE6A1753B4800E86C64F328339EED2A634A6
A30F0482B12BA773F8DB91C82CFE36546E4F8089622A660A1D3CA5B9ABD122FA
27CA9BAE48060A6045F225DC73CDED33C62939C701294C5A199DCF21A5F7CE7E
4BB3C949ACA83DC619D2ABA44E911678D2DCD5118CD1C50618363E875234D5DB
2B3BAC9EC47165453B56416F73B4B967B53698C80E7A8DBBEF2EB3F2F1854680
00245D69C35C7C177263BFA1AC47C1F5F99C8D1BFDF842DA23B5EA4041931B39
CB54858AB40F766C198FFC3DB7659C5040F5344984045926285AF9538D1D74FC
AAC9F3A812FD164402D265783554B035FE00B18BF968B329712FA6084B5617D3
36DCD1C93659E82D658970899EEAB8F9164B2DF31C57663AA37B6A963CF608C5
91F95E56D6AD20E728E945C2D392C94B13823528B66EDB8E20CF9C43DAD60B21
FF5B509FE1430E82A44C7B2535CF03356AE2001FBCCE5E5B41EE4BC2F8032355
F69AA05A643126BEE84B6CC7A4BC1A11B3AFE76C03DB4F9975DBD6AB19DDC2D3
6623FFD7F78D8E0C1E8D1B7A2D42E3448B94F578A3E10060014DF64F319C5179
FD84A772F09D4D1DD4D588CB764735543535AFDD199CF9E77590813EFB479737
46840C8DDD8E2DC03AEC991A5FF5BD61A04E2A8AEDB9E5CCA0057B1EFA117BE0
AE30837B49CFFAE721EFACF5455CC21D28D397FB471D278054661BC178B7F70B
E77F4657E79994BA84F5371DAA0E04A7855F9957F4C2ED13BEE452566B8EB761
4D7A3B30A23AAB9FA263A36EE3072C594254C65D7BD0038F7B1BCA77B21DA46E
D9FDEFB2A5F789078A32BB5C044B0ACD6467BB0B3EB4E8C44DA3F5DC0ADED7D7
B4FEEBF186A6349E136FACD0A8708DA039F794EC7F6B4FD6128A271F74F828F7
675A1F76EEC344A7B545E4521418E00F1E557D7E0CE7261E017B6C23858BADCC
0E79E456CD68F5920D9217C5FFA7FF0950C5634050F27216382001E7744D20A7
95025ADC76A2B630CF5B9C31D6DE850F6E1761775D383B531CA2FABB1148DBC3
DD56E0BF172241A9814B2C3346B5F9ADE1A3C0F1A1F67B1D31D4869564C08041
A5668487E8B72125FD1FCD7D5B1FCF37D60E9AE11DC16B0C8140CB0CD92C321D
8C3858E9486009F314570BD06F5D44385342EE8A49041902762B46305E6D00F2
FD8982C9FCD877D4D7FD01B765AF8A3FCC80B293998E6AE6862BB8CF8ACA6F49
23A9159F65E3FE4CFE38251820F60E4BA15B56EA231B9644FF2DFEBE72C872A2
C388318BD8EA07122B998095D240C0B964B3BB22766239145E1191730E2CF112
C9196125B77BAE9794C0F8EF93EFE905BEB9F8C3C07311CA04F8A231C9DDAC5E
DB243D21407D868BE83AA2FB313974BD5E933FF061413C28263E9FA6790B8D4E
BAF11E09DE2A84D73F001D5A1EC592D63796EFC7DA986AD75E31AC729681A8B3
A004641B8A5801F78771230BFBE39D46EF3B77F63191315F298250747F4E3B2D
C9E8BE52E64C9FAE0B45D3CABE768332797A494435A1D32733B6EA08A26156A9
F299DA5E57FCB81118973054BDD525083658D2E174C5A6672A3C6BFDAEA00712
5BC67C9951FB364E129DCC364A50695AE7D1FA602DEA6B81200C5D725244F5D7
7438F72A033E3EBC520DFCF7F3469E9D9EB603850D4D2F7D35BDB64A0E994E22
65EB70BB8D3F7451EE99F651F11A9209D086E85CEA2BCF425B8939B44FB04990
0E0B9147579D9C6CCA46355944F75938156498B7D30508DE225453CD1CAB034A
DC313310798924439B3B11D027DF50FC2D97B9F78111495CBD838C9019FDB35F
2817B5CAA82887DB7BFBB270BD10915F5753773560A9618FF3A70325249EF905
8DDF25DE3DCE2AA58B61BB8178B004E3B5E0039FE7DC507C5E259EF9B197FFD5
8E7189ECC0677D1C128464C7A64A626BB2444232D53D4BFF45A5D6486F3A21C6
6B6C7FDAEB8A626C69301C87C6768EBE4E12ED8943003C272DD2C69370CE61F1
83F8DB9F9378FE3B41A28BAA5080EF4CA3BD043A9BE9A1EB4F9DDEB3D46DE19C
8FA3CEBEDFAA717BB05D143F428688FBD82149CE575882FFF4B030FDDCE03871
5AA4422DC92D161157E445E309B3BEFFEF557820653C7A964E4047856BA06654
4559079F1DB69E5CDC960166EBF6CE8187AA3886555AB7620450A76990E391FD
27A470E28A65A507A0C888DDA19EFAC894CFDF74E49D0112A878877C72A03646
53AD77E7E26DDACE41C86B347ECFF18773251829F51A80A036AF18FFE06B9B04
FEA4A49D2A8E79B39782D1272C5AD287EBA45E937D62A62009A31A41F9DAB504
CE29C4EFA9548CB4FFD225D99365AA82D7AC508A30E11EAFBF7B13E22974E1E4
3B76CF3BBF3C35032287AECE34F0127A00A490A0FDACF9C5E781DC78C5415E97
1CEB9086734358D142FEAB578FF94DC0B834C6C09A408AF37936A97BA4A5FE6A
B4EC93971905A11D2CC7FB14B595230426035B8FEB7868DAAC1394EE07E44CEC
1F6326602490134A6BDF6A983F2DB6A20CFA8C1E203AF6FC99FD1815B3674298
8847FBB9642223D82A657245D8654B14F08EB552A0A4E75F5ED494BCAE4DAA05
8AC26589EB22D171A30E295D62A6A2765DE8E074C5B0C3C878E6CF59272B5F26
0AD04AA5C717080FBF09DC1B3A4B65721D1C09F3CCD3618EDBD24E5B65671051
BE304F788A2793329E8909034476F21C2C3F4462F60FF4DA73F1BE1340C87D40
3AC005D31B6F98AB066B7CE462F1362D43117399C56D02A776B2608795750113
CFC01E149186F03AFD9DDD52E0E3B5F5EBE5B7665C83F25179F4D7F4945CF497
25A7D5E5BF8E3309515EC3EDA58378EA4535E57C79A6E4B5E65B9CAC4D08BABE
D952C36C5EAEAA312D1D0FE34F824317E87669513B8039F359AA6154B355D4FF
34893C04B66770CE458297EBF538A4196D04FA2225FFEFA59A3EBFBD7A3D24AF
FD0D937697EC98CD3008CCDD61B7A0F4C0B85BBC7D788C39BB6014BAF07D1F00
2A7B0A3DF4933DA3408209E89410496B851236C44F1C6E31F2966E8104B6E1B1
44658EB6D5F3F124E58F1CDEBC4CD9B69385507752268D78596F23F44ADC9EB2
99E995B4641FC1BDF788458C5046D35EB0C2AE8ACC5F08786A8A7A1BA149C3A8
6E12A1941516200E134329D957D0931CC20A5438CFA2F9D327BE5410B91D8617
51C3C48073A90D3AA1A397CACE41A959D58545DCCD38AF2EED85F4017525FCDB
E31F36449D0FE1334926D1C1F2DE1FB1D7282ACAF3DCF22531892BAF64460E52
1723B018E3A145FB23C28E0BCF792E8E6837B3339040E900440261E4CA348FDF
B539ADE2B9C2D65ABF26A269C1AF8AFE4E93025658DDEF87CF44AAB564509E15
08FFF2593BD688E2319C93D217417F05B552BCE10C7A99861A1FB6602B0FB115
A61C763E70D8B43C7D9F99E3B401A978DBE536DA824EC41F100719581F0C336D
01246EB15EC2183F1C19E0806B2F44454B6455C2851540319F347893E488612C
A8896E08499FA8CD7186023533CAA7632FD9644CCF8243259C0F625E0DE6AC0A
B8FC8FA68931FA20930EBF691A090FA17B85268E251CF994BBCA267AF84B8110
F60D090DD83C6F43FC907DACB921ACB2D8DCFEB0CBB3A0A744B49E3BE47B83FC
331B68FA2BA3702D3E6341FBE6D4DA9E19395A80EA51FD22B1377861FDFC5932
983639F33862C2985E6CD255650C219B87E3A4CC5E7E9F22A4DF01100017A08D
D18FE951DFE3687D4DBBC7829CBBF93FFC9FF72B0C5648B1D83A9D02E34D4F92
D98D9E063C8A6AF65B0AAD2264A0680D4884FC84CD977840EDD97334D796FA5A
2DAEE16E0F8DF8FB32367806712E64CAAA963B94C08E6F2088354C11A7137A6D
B0F5CD4029E3FBF8B0D13B11F184048D8BCE3980B5C2687158938D8E11274D98
5E7482D7A427A64A9A12E68F064C934610CF57E3A6EDBA40AFA44C317164CE2A
462E37D741247C215993C78235B46621006A96D8FBF5D40EE42EB3411D48F63C
39BF0C087CA435F51B0B8BBD1AC9F59DB949839D81D36CF65088671D34CA4780
5CEF8C11232685C82A05B1E017253ACDF127C44B5C6E2FF41D5B6982D8981B92
A7B6C9DE760DC43083C319AA4CAF138BCFFF560F0F3D7F92E93D061B9ECCB77A
35BCCBF18290C27F9040194916871D56EBD4A2BDA7B688066EC3EF72E0B05CCB
1F70D984B67E610C433D051F3F929C437286F56EEF14CC934039BFB394D2F408
957CD82FFC3F01259E4DABFBC2846658B42A04DBCDAF30D2B81DF364873AF05A
B66604DA0A3CFBAAF457DD53AB1BA903C0E344ECB1AD3170071A68F2F267E5B5
FE93C859DD44C2DA25D7E5DB57F33954F0592E69E414B3FEEA6DAA84C390635F
F51FD864C0092A40AA0EE691B6C52430D760C33169DDF22D080B9DED632FE6C1
FDB27CEF38267E2C0786697A5E6FBC5DE1473FCB2BC16E80477A74587EA586AD
63DB625DC6C2E218D7DF4E23A07F6C0E131F0ED7AB54199B8BB003F1DA6F018E
1A98BCC7F3AB6AE4F9AC79404AEF35045DFCF08DFE2C1C54A5DB3E89003E39D6
038481CA73C25764E0CED455580B11281AA98C30A4D53B4ACAA6B659C86FCA79
6F803510F4DA1BF3CB20FC6C3AF08557CF0FFAC7612A5F0E7304785D8DFB04B1
9A03D885B0C9A9B8EDAF981EAC7917DF39D67DCE9B21336274E1B7164B5BFD0B
4396748B06E8616B6433396896906CFD4FE2C7345DC2CFEF1638669199E7ED90
287802026BBB99957D0FAB12682740558EC732A9A6451C438C1B5F9B14A5C938
EF6B52B9427CAD7C579E18B744D3D6424ABDDE4D3E4A9C6CE0611606F92B877A
F128CAACA9DED22E89E0F6577035393279DF40DF51DC29EAA9001A9AFC2759B9
7F99C7BD61F45F41F115839519331363D149927F6B8B89915F68F2A3AB210E6A
B3B6CAA2372C7A3348DCA12D57EAFDAFF73B8CEFCC611C3BA6BD0FFC24ED9317
E82D73998CA9CC127DBC54DE443CA78787E4697D06878503790EC2988CCC9BE6
DBA47B9A81A3249FCD058B4F6AAE2F097F57B01A52A5BA899634B83A01598A25
B07816F19F760494E15BE51BC83F1DD799C4CF72D496EECAE75D77C6A07BF03F
40E7F23737027BDFB9B47568178DEE58F77235BBFFE0E4DB975140E371105DC4
4B9EFEBF9A8D2E33F81D419F4505484A5A94407849B9ED2B7F93EC4CA273F646
FA4C547A789075937DE20EB5EC0F2B556F20C9E41C3D3D5CA5C75A2861B73E37
B9A6D402463B39D1E6DD86F2B73773C063DBA2E9ABB4D03BA7E82767D2A0BF40
427622B3556C79528FBC20B5424E16DFF4A0C64AA54FB0F81CF60BA2ACD477E3
385F0C9B7586A853A9896F70E8ADA10C6A3DCE90BCAA8235BAFEEC8DBC13DEF6
835A9D05EFF0280DC344D432A280C360F1E5BA9E8A5884FC5F3CAC2CCBE846AC
A8BAD0C904764091972294AA0A5702CF2EFCCB18751212AAFF5F4D5AF6DCDCCF
A9CC787DEBC1B9E4C9C6A0A2C1E9F4514FE6DE53BA743363C2D4DE1815CD65FF
B7D2ACC45F07CAF800C7561F483B66ABF8A4F904BE18B615B2F8BA516A845466
54915826E00F37CA09D6B4E8D29A7C18D7048B1762AD5A138CBEDD4FE2A55E0B
0C4340BDDAF6C03C25FA7F91710D5D70BD20BE736969B3FDA7A8F9692CB4A3B3
A07D02ED836053299C6BE46B86D5BA9B63E8995D52B6B312431FF88A6EFEA580
227341424EABDA870F8BB22BDFAE1B2E1A5D87DB4FD0369FDFE2E68556AA7917
86E8343D8FFCDC5FF1BEC1F9010042A610E2E4E8C92B2F054C1ECE15CF611655
3140EE6FC914DA8DCBFE711E115115F74F79C49C10EDF7A753458FAAD5A6A1B5
610EA25F4C8EDB6CC06668DF9F776EFFACC41FC398623E14A8C46A791612BE3A
6C1F9CD83474391B968020B23E03BD18DF9D4249ED494BB530875E6706471BFC
FFA373517418DFDA8305D11B10D2411C0521CBE040A2AEFCBE947A4CC295D267
D54E638555277A207F4874DB4B66EFB6F69247DD8C21B11A586096F9F0C14149
E3E6A40D409A5FF65CACA01614B2597C71E0ECCA99F153EEBFEECA4FF6808CE3
8E4542B6C1E9526570DF75106F6127092AFB45D745EEAE9F54081804F5FD98DA
0791B2F68ACB6F438CE33C7247169F4B7D5561B19AC611CDF6FDABC3508C8ECE
7E2ADFA8A5CD22B135FAD923BA5AC454C257BCA428EC8BE6BCA1A0B1DE5EFBC0
3E7BAEFB100CC8944085295674E3B6BDDD78C4DC68D04D3044BEC38E468AFF22
3AF1BB5EAB614F9ED83C467455493EBFCC06E3AA95F4946AEED388D37AF944D3
26EDDB175E43EBBB8097F3D29A91628DE3B866D919CD4D8B49E9336663532363
A51AEC583125A6F02C54C920EDA1BF7694AB1254625B2B842E21E4BC02A82615
E559DB402C492D309CDDBA12D55496DDDE56D270EC6678D6746263487F94F797
CE3C05B3795425D0795709C9D3E545A1658D0A92EE86159CEC240521A0991923
23F73C1DE372BCF1DA8EB31E490BF54809FA65ECAF8CA7DB7B449E2290CE8749
225A9883982B3602140EA7DDE2AADC2C2502C548A7BAB3B0EA5EAD76801C1BD7
DECF87DF0871647977912A3FF56D67D096AF12AE34BE136B52327F3C0C567546
6D2835FD6B8D5CD83E743709A14A304DB545247E23C318EC224760A2AF915C83
C94E701922AA420A2269DB0C2CAE44B61D1A2DB97752F08F671B6E78BD8EBB83
5C0918008A1557F10911B782403D18ACC06018D4105D163AE73E4099A4311A26
3FA2837A8186648648F3E6C3500CBB45B50978C3A1A8C951BAF2C72A71BEF55B
21CCC07AD5D7AEC4EA8641E17B21AE4C3F105FA728CDB08C199B0F388FB9D11C
A03F16356F37132F05C5A7A8684A9F9A919FE0F5B96E92819C36687A2D36A1FE
3929859A5C226C5FB27B06BCB112518333A6D10202FCB2D7E08E4FB483E000FF
C332A009D7C5158B2AE841B7E767CC6D7ED9668698AA4CC78A168DC9BB7D537C
C39038DD439BE211C6ECC5C19EB9A736D5043178FEF25ABD98574FACBAA04F7B
9FD0FFE7E9342E6639D6C9F24A0A7F00DAFE8CE67EEAAFA7D980CFCA99E8833E
D28ADBAF41B5B1DA33E15F77BC53790154AA3260034D64745B883C55C7723123
77BCB402E7738428BC12FC1AA470AB555F58084939B1D32115C081D7EF36E277
20F61FFE05972270874FD4F2689B884607A5B7547DEB1679566BABB178FD7FB5
B1EA0B8F556F439311EE490B7445B466D66B7932621CC6B4547AB98F02BE4FCD
F06868F63200222DD576CF25E36151BBFCCEB5E4C8DFEC0195E90390641DF58B
FE18C4C89B0C787C42DD6745A4B3D5B0971409B1CAF750B9413F9529890216AD
C26C69AB8A18F14286AEEBE5CD129274866C6D06E4E28FB8CB4D85951C5A64B3
061A09478A7079BC45F3662BA8C2551100EC92748CF3CFEFF2F463212329FBCC
80C84B12E7504F6EB18A30B82C5FFB8BE934AA9FA292BE91F8D48FAF800ED4C4
1DC970A5E9F3E2E443D2455CD786112436297506D56F3438848BE2ABD4915082
0C8C6C149C7E753C3AF3A332C7CA9F0AC4D7D1335899FFC88A5B512D2C48ACAB
8E5D1B18225D5E303CC6130933933C9217C6FCADE3966BD1AC654C4247908683
AB88DF3452027A6DFD8ECBC8D7257F62F5026F094AC217B39B37B4080798442C
13DB4CF16123266B94291EE49449B37B1A8668A7CB41C70BBC4107EA34C8F88A
E91D52D530C0564DC3B97DCEE74FBFF52A0AC1BAAB522D3D0FB48F5A860BE69A
19759AD30205935358D9CCD6FCAD74B6168CAF17CE3D0C487C5B7D09A547F023
7DF1C3A1D1C917D24118AB34CDFE987C0628EA941912D92BF3F52AC1B11F5E5D
7A41A3DDC486B62ACD187EB5FA612EE144298C07FD2C66440E5F6FAD41DCBAF3
8A907933AB0DAADE162B694E671563E1FCA9419B99CEF905A73118B1300A99E4
12D663418DD991497DD10D3A68F7CE95E4ABEE103F6173DBE36632EDB1CDC2EA
689A08036356DACFBDC4ECBF07AEC2B412F97A34F4D82CC643B3DA67EB500EEC
82A29AC1C2EECA9499720CCA8B3D2D25691ACB4C04F4C995C6392BB51CA33C6E
2643A82532D6009EAF8987658D341BF5C49E14B9043A2240FCCFA6434BB987E0
3188BAB5DFBE3CA1DC1323237E1BFD68056EA215C0631D8D72B9B4C9F34E37B3
4611EBB27043B7846E88A971A68FA371D9F8123F2761D4B90407C599632E1CF2
8485AAE4BD407FAD21DD6B7AC0439EFC2EC717FAE8A54C94253AE5D3E5CEE3F6
19DFE5B2F1E8AD8C63B174AFB4517CC95A420966ED79858A4445ED454DF02851
16DA7BC234C9293AFB63EEA46BFF3F910FAC8054B1955519879FDB9216DAE4D0
E780D51DF54ABE245717819E424F943D1E44F3C5B1B5B4356E5EC4B35163B928
A73677FE3CBFCC6285650B56F8059E4116546201DA16172789B40FA9AA56768E
8B70B9BBCD7A460AAB839FE214735379E5D72C7BC064E3678C078721474FCB68
D8D4600CBC3FFDC31746474335429534B7184C020348A2E36ABA32A34AE1D125
034556144C4364EEA49787E3E45493466762589A2A4E61898E4F84455502F69D
B64DBA2DAA850CA01FDC6786D7AD7224DFAE7D38BC9792DBEB1BC01047F97448
F6E089D6EE48B9F97743C6540AF564D53E99F0794EF566497DF949ACE2ED7322
903A7A22AECACC030E7EF81C13737F06E5AA7BBF53BE343F959CAAFBD8F84D60
60884EC419040710F739E380B28FC705595C84D5EDE0F404CE6D0EA6198D6791
62512076859CD058EC801B1622B38CFDA19FAD60FED5806A39687C9CD758B0E3
F52A2E700E305DC0BACDAF1934E351011F01A95331AFAD743633E993D9AF9580
C54F3A4B86C790E0EC82B2A686912E4607A20821D9903F6CF1A57DF2ED2ED6E5
E9683A8B14380356C7D6AB6BE4CC5265601E285055A258EB5A8DC1D6B1E04CF4
E807E96C47EA55644023EE7F2EDF9F83031295B0CC8DA1805B12B7F6C2BF90D8
0AEABF16CE58CE449D910219949E0D13BEEB3E5F99B933159D578C0C88D6D363
7B1AACD78C028AFA4C0CB8BD997178E6E87626DEBDC9C995A39E999783F5A82B
B252DCAA09A9B150639AE76BFD62DE3505C8625C11A3B05D92A7413481BB1E8F
BE93D65AD77120329B696527B77AA521C155CE95FCFF3153AFC1AA206E7AD33B
77559EA502D5755CF84FA0854064B235D55B61BF3D414B8FA6B6F9FA8E3A2669
E003E6EC288B38D2A78B601F4BE79FEE4D258A51E75ACC4B0A880CE0034CB5DD
221B32AEECD943A6EA194E71FB72C644B28AA78126E5C5338CC8CEC8F9E17696
A84F7387D1559C8BB50C90C302CC58B474796A47514C79A867C68FE36558FA58
4D344BCFBFEE87A097A86AC8FC1394A12B73A78C350E9FBE276E1AB573043055
56F2AEA8A2331299FE56E7D51EB61CEA12388AD240911DF09A7B36D148D6B367
F67D55763E65B7156FE5074CADC12FEB4D1048BD6CE4CB83F9979BCFC6D5FDF5
4A27289213D0CD6A408CB8FAFE674A7A88CA5259130333A87CB81A748C6F1FC3
BA32B5C3255FD923A9FFF727166889BDAC09153A58300709FA83035F7128C2DB
3E7687120053B3C91CFC4C21D8ACD9F736D99EA826293172AE8CDB576B0915CA
2DA1558D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY6
%!PS-AdobeFont-1.0: CMSY6 003.002
%%Title: CMSY6
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY6.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY6 known{/CMSY6 findfont dup/UniqueID known{dup
/UniqueID get 5096647 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY6 def
/FontBBox {-4 -948 1329 786 }readonly def
/UniqueID 5096647 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY6.) readonly def
/FullName (CMSY6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 1 /periodcentered put
dup 3 /asteriskmath put
dup 33 /arrowright put
dup 48 /prime put
dup 55 /mapsto put
dup 68 /D put
dup 69 /E put
dup 102 /braceleft put
dup 103 /braceright put
dup 116 /unionsq put
dup 121 /dagger put
dup 122 /daggerdbl put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D6AE353EAB9DBA0D
4335868937E3A2D0F9C8A4FBEAE138AE56EF84665582DDEF7B546714518D224A
F91D19409EC600924626D79F58E272E3657E631C06412F9D42732B6AE0A93D81
E2B13A81C76CC37FCA6DB35A1C6A572EFFEC7E1581C57B1D22EAE9C407771F40
71D002A06A6AC249FCB7605C902A76EB298B05E39D543A63332A91B8A1ACE05B
F902540FEC1024680B8D5857E4931D00781747C87ADCC45430B5462EA480BE50
D07C5C9EA0D8D6447324434CF0D637BB13037B6E1C48F191C52CF2B9511690B5
405280D5C825BD376EF12429837CD44BEA223DC8E199D8F85856C0FD551471CA
B30481FAE99B71FAA56B639F549F449F2CA6F5450AADEAD4C09595A7A8530D12
B23E012978225E112D23BD1D48DB097994A9D5EC707216D2BF5DF8B69E66ADBF
DBDA4737737F51EB7A38A4207BB46456A8117067748659D654B1D14849F14920
E57462ECFF602A181700A346C1E95131C6F1C66132915FFD999FD4105AFFE7D6
7DA46DFCC4FE53265B14D7326F5A44A3E97902CCB106AE99ED6434AA9EEE7E6F
60B8034EF80DF885FC63DFACB0AD1C00BE56F79B1AD41B065C59A35073B450F3
7E6BC7B90C9D9337F9636943ED701398E6886947E126F1E12D74C5E4B5CF06EA
E60F9B121B9B15E6752B127CCB9C26017A84BE6DD918AFE46DBF27BC06E66AD9
830BF2D6CA9E24A0199DD3E732405F3210C97C9BD21545B5E4DC10E17C1A2C71
851ED2B272055831A6F95864137C218E555B054BE3616820FE671E5BC08E7A48
D683ACDB91E05F469C0C8919D71027E179F4911E878F8D13F999C63C4EC2C21D
ADE1A11979B539C4C5746AA157A4EB4A7A153BC5D966197A7FF6A2DA3FDB161A
EF43C2D906C617868617E72163D5B0BC29C36A60867C120A02E08264231FD46C
1D3B62622A05129188D818E2AE83FB2770DF1D466CA38A49D15F9056BB7AB8BF
D7DEB2E3B3A8157B59D138787B21CE3B3A456E230CFEC1374AC66B7DBBE788FD
5182DA23264093CEF60D5BB0073AEDB68A61ECF1C69669244A1FA0CBA44DB83F
352AEE6012082B8A3FD62F4497B1BE0E4FF77FF94BF221212D63BC1E35B9758F
2D7F8FA002751DC0380AB954331E9AABA6C122F8F3D7E69CE8A6B359184F0531
6B158ACF34C64C32F4671D430820B36C9A9397E9C877D734B17C3BBD8A88CE2B
9F96D7AC5B8D55415E942D6C05392D03DAE53449F8FBE2225C91F228704BE9A1
ECC568FB2E90C73F2F7AFA62859C35F0FB26756DE719BEA5A3EB81A6481507F1
813CD1680EBFCF612FD9D3AA4B90688521446FABD5C54CAFE7B879F24B54449D
2B30738B137B5E212B34BC5384BC2216A5D13F761D6E13A043DB2AABC0276705
5C80CA394A8179D60DCA4651CE8B0A477165FF48A31BEC6B7C0852C9D72E11BE
FEC5E4B984DFDE90218C105999E070FC83F1716D13389B5EEAE3F26C82FE9A7D
3C67A98027D15DAD791348A21DD922C71145D287C7EA83B225377744BBB0082C
22FD44E1B0DF60956DB9C4790F4E2F81C477DD4CA9F4BBB4287914EBBB4F6E36
976C9E573496A2311E5C7677FBC4BB755B8BF925F291DE0442FBB8921402A487
ECF23EC556C3FD66158727B10B74C778FA91EC16629F6E949624D265FA6FDF1F
772E965A2C30C80AEEDC4A1867AE3D6D116BCE0F96D1A0C5138F294CC7C2AD72
8BE152B314E26422FA2DDDFA89A054CEFC6607D932FACB035FC9FD9959C4A468
CAC0F4DD41DFB83297EFFE36C352CA0A6B1485BF8433522BBBCCF9C73FB7334D
1CFC92348F91C4D0EAD90B22BAC6B27D21CDF5AE65C056BDE3B30424F76C8EFE
D7CDBC854B13EAEE0485CC348AC52F5345B7545B4FFC60B6E7CEF8D32354B233
8DF503A03F5201EC012AA67157F4A47B902D269A060A5B8E10A37CA7CAAFD417
1A13EED9533BD4A6E8845D7D236CB254D40930C273EA4372E0B13912B2CE9261
275D51D202D461FD69AE352E95F72D61683267D4951BB602A0BACEAFF9516F3A
C30EFFF3ACC08AD374A730287B148FE8E168089D239E1084E0F7D83CB9815031
5428874FA4640E1C216514AA16C74BD2B9A95EFD7B6B0C575A5D5B3AD1086CE7
E8EEE33490CDCF2E3FBAEDC984FE53D033987580E75E74E455E44496E186349A
DE4B5125F69BF79936565986B3D91E6A25CE6E1C4527FE22580A39805A91BF6B
90EFC8AD31FBA71FCC90EA04875B5A7ED05BA2FFD1C04774E1ECE84B4105ABBA
798C339FB61ABF75C6FD3F24BC775A7FDBDD87BACCB9A86B4D928917CA62C0B8
56343CAE0051A1172E7F234001A5FAA947CAF382FBF23E57F1144425713423E4
4FC1AE1D096D10D6FECAA6A9186B0D519F51D06CC976A65A37E9219492E6218A
FE9F99700C0D0D18BC48632268DA0F0CC24BE660E30645E7F63B0AD49CCA26EA
CEDE4DED685DBD38F5C4BB6AD6CDFEBED1B14A456C27C448C91CBF6337FB3632
7B9A565874F9849FC5E22C5A0437AF29E2B7FA405CF6B7AFEF66AE7449E89746
66ED2D4C15A36C45C0F64E6F185B808FC788984C230B4BA63204B38C309F2DE2
2937A92C184077F5252C9D6171EC6378273C32B61CF65E4DC124B321A4049294
BB6CDD064D4E07605DA5FFB7B3B0A55A09D26C8624F03D8C197885BFF0A20B77
257637447F628A4A642F6F92019F9ECA5B2DBCEDA63C05E5258C9DF131EDD1B2
B4B04E7A5441035163BC2769B79C89ECFDF071E3517C59A45C9E97800724E1F5
FDF504E2798FA9074A37B210B1C24DCC0B78263E2297ECA31D5C258BDD92D2DD
8C53DD3B3BC3835E5AF52311EF0AACD6DCD159C45743B1AE7EE5A0111DCC9193
441FB81F945D219DFF26BF50D80606DD3392CE941242CBAEA45077FBE6AD78E3
0DF4FA54CC33CAC27A337FF307F14E60D1FA48FB8368E307441D6811676CFD38
094A558CBF0B92503014BB169E345C27C74543CDA9E8134F85AA0DCE45EAF612
1AB1D86FFB5E13CBDE8E0F68B19E30D0D9F5F0A3EF2A84AEE4D7F1F63A045297
3F5C3080F313B32066E0C209C2708636C33A6531F1A483F3AFDFEA62305EF41E
C55594660133146B24184070B87C22EE5B80D66C409076D733245FD100E936D4
E844D8A15CF45C0CD6AB04F3B5FCB0BC7B1517BAF21CED4D6CCC3F19D21BABC5
FFA9768D77A41BC3F5C4595D868F2FCA88D6E41558FA5A70FB562E4EB22651A3
886F0ED1B46BFFF297A28ED67BAA28A1302BC866AA7A73418BADE0870872CE0A
305A5E46BE0CF6B5794539B8509F1E2DB4E40124D72201589BC4B55ABA2F5C40
E167175C7F7378203C949B8967E8CCC40F44A2D1D555A4273733874265542C0A
3C47FF7144C4DB276320150FD5CF453A505BD3BC1E98738A1CBE175574037D47
8EF9F80622F57DF4DAB8FB13004ED1DBBFB4664F8D7ADCCBD529B22235740EB1
216799B2D8CEC7CC4D16D8273B6AEEA427D480AA6E3C463F46763864856713DB
05307CE674714CAC8351410627B8D1087155F3788E744158F3428A767CDC9769
CFBE28A30D635D7C4FC44E43E7F13128A867389FD66CFAE939AE2745055BE71A
AA7A7817E24D38773771C77328F4A755C872AA977C062A3BF7EBCD6DEBC7746E
70346293A661684D3988A5D0B29860E6789FA8911E0C0749ADCB9A6B053B0E31
3D490B9A2982CFC167001648FDF96D040BEFDB75A4EB90E2974927BF38F10E78
17FFB9DF2A65CF56C1F63544662CEA0E88A5141F990DF6B5DA79CEB5B4744083
C4697EB37422BF120332AB934D292CE8A3624E2C8FE6862C2211254558459BAB
D8F1D8C76C604098701163703FAED0BB298396C86A0427106C007A7CDBB0AC8E
35F39B240F8D9D43C1BCECAB622C02E721A323383973B61DB81115E3552E4260
9F252F18E01C1EA2B0A1DED4BA50A5822D10AC7ABD664C460A4022BA910804E2
2094A3AE0F2AE375FB22CBD35CE9C2542C240A79BC6A79F1135E58985837E1CC
1E5D6666BC5D61FE6EF590316F9D1E80C42B9A7B6106D8B7F575447AACBB2660
2C96D7F024FFE3292611E82CFE62D95646B92CEF6F03EEFCB3F6950A22B0997E
52C38B55B77C2EE7A4D047F27ADEC6BF0BC639589FD0D1E0A47C948AB5BADA43
9846CBB5B1CE53E96622B59133303AA0F559A481E50382A2A38C98C1A56D9AD1
1668FDDBB1FE8068DCE68E5DA13C2D9918D1FEC7F69A6DDD3A29E31A57B7BDDA
EAC616202162DCC7B9DC52AF821A9C1D2D7F860A2F294904A55499432C7098CA
BF79B1B0A1527B99A4C57673AF54297BA822AF200FFBDEC475158AD6ECB55F87
555012ACFBDD0EA527CB5793CA7CACE2FD956F30D7A8AC7F6A98979BE4BD744F
BB84A87668E3DE62A814B92D3139981200D5ADA86C5D733CF5107DF6CB5C999F
F6F63ABEBC9694F0F67EC632BA8C58E715D92FD6BDD056F29753BCC3E54B0A7E
63EC33F7A29740EF0D8351B5897B126FB6C33E9A33CC83DAB91691690B8B9598
FD3F397FAD45555CF5FB9CD80879A0CAC1CD8E8D536F05134B21FA4065452DE4
BC8F63C82A3C34A01D00F4BB254F2AD7F6171EFFF6D7BE1213C9456AB383C568
BEC17694C545B98E8AD734D0522FEC92EB3182DDDAC54740AD352E7645D08B4D
CB4DA9B381D36C920C77869619855B4CF730E590B0405CD25884D6DB4D49F1E3
D79EC4D0489514359CABED492BD751104091A661A510F268EC681F818780F304
D960A15E583F354DD574767B860C57CC9CCA991E710576C626EA909C6677057A
C409AEE846B4D5C0535F849F33470FA395CCF5C05CBB9A1FB62CF656F7A2AA42
34730F786153A9856C337112F6A555A70EFA76404E2B88DA2DB91E8A2BC5A05C
CC339DCA364A87738B60497CB790EF16875CBC506695DC7D70C6ACCDB2A00555
3877A013482D55281C83BB630CB3EFB0657E5490176CF23420B97265B22B4CFE
1DF9E0B294F064F5160540EF3A452641C82E347A96514E4063A7FF16832736A8
6F21F6881E269CA09FB66DF37CAE7FF46D6B9AE42B6396EBF9A7A06453A81EBD
808B047421B0F88F62B3FF217542FBDA872D03A476FBC7C0D658C03AF70ABB40
03F1A3027E0FE186A22AD461835877ECF843C0E8B8340306092FBC5E91783A48
E010EBD29F114BC273BDC53D2C94275F8956A74561813AA6C2D896CB3F6E13E3
30F6C230C00917A40EC6F4689B65BEE32F5722BB1D1147585AB3B3D2D5EB8273
CBE30D1C6CA1BCC4BEA9B87A014E7ED3CE53D13ACC8D426267CD3BFB8497E1DC
C51CEB14F9CFB4D4BC9D6EA5A49DC3871DE59C89F855F079299F45D363F78634
493829329E3F370D117DEAA18E7A6989C515667C2229779B9A5494DF0B4109E7
71D79D379FA7B408A4675FA3DE17ED0ED632F9A443527CDA8E960411AD4070EE
173ABBFAF9101BE92BE59707F98419503A85AC58B949E8595D66D7B13B8FD4EF
11B28FCB5955C5F147BD7FA141AE0CA2ABCB1CAF82FE22D3281852205087CF45
549F4D5B47F52AF50E8F6FA0AEC0F95FD0B1EBDCF965BC8A924CE0F4598AC546
C15CEE4EDE7E6DD0E5FEC3A531B944CEA406DBEE21C4CF3384A79D0D5CD51BD8
AA5B8B1FC987AEB57E86D3C6FDFADF998A6D6043449FA5B88BB2DCBF2945A513
AD7ECD01B39BE46A577437E1774C3FEA176287C51ACCA15909E987B5AC2CA664
709AA5605EA89A8DCE6B4014CFA781E822E8B05F377BD0187D5EAA0585A98E2D
6726C471578295D824D1FBFE89F04A67F1A360D799CDF92C1218F29C24DE22CB
C6B625D044404C22C89C433715BD77D0BF171030BA84E292B7A81E2FD99D4E67
BA702C2EFA11D4461D833E74E97C9E295C6D170DB6BD73D615D03E678B0296C0
F8BF99321767684127625942B4C3241BD0608460C81D97FA658BC179917B5065
74A4D1F729CEB1D51C82F9C90F0C712917AC482D413ED7CAAFD545508652DACC
1A03842E354F734C5FCEC8C7BEA4C69B066DBC83BFAA473D0A632DA2CEDF20B7
6C7C83B4AE2AF7E05AA2C081BB6870AE38848F3870DD62C7D56EF1CCDD4BA3B0
32C61ABE629BBC464BBAB06AA0202772C16D82427ABAB4830ACEA267B0109A81
BA5D832731D1E9C9F0552BEF7A9B7AAA73760C6A09B910009BA9D93F1A56298B
A43A32D43CAA3988643DE373FF47C176CE92D7931601F0034E6CC303876498AC
026BB32D2F656A3541815697CBA2B6D527B69816161B2E13171E073D7CD85435
3D32708391F63D592B71D98805CD19978C2BAF780CB124372EEA0A3DAB537683
DC74F9E9EF98843F170FB086AEFD526CB81A7CC88046C52E1E56EB40F6F5C75A
FE9D5ADE49E82078858072F68BCD02487EBAF4E3F7F309628C1FDCD4B01F7D00
E1AE0A7CD3455953FFC77EEDCC5B5ECB1FA583064EC17132A3C12C0153C4B87D
AA57FF73AD33C22C81C545F0593DC7EF438FF7A5F76A04E52848E00CF2C8CB06
F295B1CD3BDB1D9E4EDD765D3753EA8DB76DAACAD75CEAC866FC4CA41501200F
F12998E8DA573786AA9A7232287A6D19A12536026BA4423EF0B6D81D38BDCD9D
2BEF15BCF32824F8EE802B461F52BD926A5BEB2E6CB31AF83E98E849D4339FFF
95419941B12D2F3B76CCD34D6B78B91BDFA5DB4D4879501DF3E514A5EA8F1713
E96330C5B4F1B7BA42D42F05E229FC303AE00E954A81F9BD43016F5930A0C490
6C753157E4355F6ED3C5D1963779EB27402522B5E9D459206B3A06E594DF198B
785F96B96E13045594EB42EF4A8BFE0DFCB4C5A2DA9594431FBE72A5AE18991A
36FEB5FD9E8B238B3A095939B6ECAF5644BCE7DFFD8EA3E723F66B305F142B71
B26F34E0538E4B58C4B5984883C6B08F3D1F596B56578FFB0EDFFE3F95E3B6AB
63CEFA183A5A49F07F0F7559994F56D7305139D06AC8DF9466E715D90AECB1E2
C35E3CD3F387579B3C9CA6F5BD741A7A5D7B63FC0130AF374124DC8C6AFA4FAC
E40BD5923FE889E87126FB22C1AC4FFBD351F884D70803BBE1BD0D40D3CDA0DA
F6984C373D3174358BC41C8DD4A215283ECCBC24F345FE65E316F24940198A6C
3B5483129706AEB60D6C0CCE0DF9C130593475C72A92662A323EA5B689E5AD0F
C949536875C37AA2517281A36A1C1D5650AC96E0CC00C03266E279B54232A1E6
E6697196A4270E1DC794D8DBDF0690372AE19121B85FFD357E965228C66BBE6B
D2E55533F7A1BF30B2EABBAC98CE35C619556CF9F0A522E8EFE4BE3EC61FDFE4
E364608963C928AA8B302B1636DE15C83711C8FA060C5BBB1BCB8E02215A4F4D
560DBC4A235F6F07EFD20ABAFEDE0795AA3932556D6AE3F6EB8FD0C1C509FAA2
55CCC2703661C9F48233B429F020E01C1F3B8090D331C3B925DD5D1CF9D19F95
6B192C593225B5186109D3E6636E87BA6F24EFEACD1F06A29DB1D1F4DE0D0253
87641AA4A1113755D0DDA6EE4234CD9AF550DF63A46FC6F698E623BBF6F05278
858904B415033C1A33B7770D99247815E2A8F1216EB42EF9742EEB4E1D90EC3E
F2C0661DFDD996CE1FD66F946B9D4FFADF86861CF8EDCD570CB400D181697747
83F38B92B1803874C24AF99C66E5F966B0E72B725FFBC6172341596D8AE51C3C
4676A65E4D32F499FB1ED170554DA7AFD79DE5953988516A8B2B123FA207BC49
D80645DFB16A79549BD5E41606D80424DBFD6F5BA1DF0EC271C596EBB4FD0B84
DC5EEC45C3FF598241368442A3FB06B460C7D46678069011FFAA3072402D4DD2
3DA6139A548FA99A68AC61134087071ED8B4A37A0A8A1A3B48A2A8CCAA351D75
1828BA7DD5B7758A43F98F4D449ECB58B20B26C40B35AC82623961CD892B5DE3
777908625E1A91DDE62DEBB2EE5EA3CAD7E089F421DF613D976660D547CCB02B
3C688515D5E85224C742257A27AB3519989F6A88CF9D6D61656F75C8BF9126E6
179FF4C5DDC00AD2A04DB63F99D3C6B5431B3AF6AD43983D416ED23B3B618834
32B5A36FBD12DF2C736ED6EA3D306AA99F15AD4639F43507C18A8CCBF385DFC5
7B8374B5EEA8DA13197B98A7B16B589B7F260B350F898ED99D3370CBD4FE1263
FD848DB8E363580344FDEDCDF9C66CFEE39F111D8107485A683DF08A1FE8676A
319CD25BF2009E5AC7FD81D369B81C4CB30E883F99C28885264D810385CBDFC8
817D2109410D62D8C4986AA220837E18820B8F0E6F13016BB5AD13AE72E49765
9AA96686AE9175408959D16B2C699744AAF90B01D871856466369C748B46E90C
D346C92FD542AFDA78E3B55FADC2B289F14DF2B005BC2944D8BAFC88F44E8853
5FA89E3843022CE3540433F83E9485673720E5667ECC676B08A931CEE0CE96B8
47ED91722CD55E047D63319C16CB2513E4656928A185A4672B3265FC8017123F
ABAD2110C942E9D1CD1C50B88D811CC72BDEF3C6D1CCF39299CA690FA83F7A9E
B2D262B358816E0CF0EE3F38B73BA509CA8129867CD3F0869DAEB9483702B44C
E59292659CB6E5A002FC03753AA1BE6D60CEA68B3C0A2F583A8F82ECFA24B709
D0D779A4CE8613033A7EE25E1CE2C76AD680F20299CF24852DB4F9033033A59E
34FABDD3D9396054C64FA60BA9070C8E636E201591777D71B641873844A8ADC7
643D4C04B7546244474F9212F30F26D01721829DD7B427243C720C5918FC3722
F01AD4E47C073B14C3F301C00E1BC8F9BE2CAFEC4018F2EFA2488F20F173A0B2
A344AD74F855D444E5BD7BD6848B3A5DE420C509D30D5898036F934F53024260
F75E81305992A2ACE57DA73AC6999E7B0F370236880955E7C1832025F5C5CA17
B1E724677B48E5235D702303525F563E35357A043FA650712D1D8095565DE356
1FF286487194107C63BFE86136622E2F3D405AF48850AC18062DD352025402D5
1D3497F2502628337CDE7C8CD8578251499D58A6A67CB1D4F8936829F31F5DCF
8B13ABB5BA177BA65432C04AD202BA35617D7266DF477CC181E8BDF7A29651C3
66ED8F3883A15CC647E13E8E2B6991C4AAE3554FBB55FBF67EAE1F761C8EF9D0
EDBE4EF0790843840C5554836BDA3F31573D2D5AB32D7397BE4FA82E7F6B572C
228A9C7B64685EB5D90FFB8BE2F427D3FBAB61EBB7A24BF48E313481166398CB
75B99CD9CAA77DD08385DDC6EC70479623DCE548A2824694F39C49C1956826D5
993A9868380B622DF0F38F5591A67B4FAE5BB3E6676253F9AFF2FF1652A8F4AF
B4D58B292EC59CC2DAF1D5982B3446848D2D8809D3DB069D943A1886964BBF0D
3460E5F3F20173929D84312F397FBC5E74D84468F8289838A45D9712B541DE34
B1C29A1397E7410B69D5C7183D34D9F76B53B4A39EFFE604AAB93224FEC9A4A6
9DF4F3A535AC1D2070ADBBD813FE88BF820B80633C29923FB2F7D40619320D04
AB7709626F52CC42E54EDF2C91204B3FC6C8CDD28774FDD3C956A724AD9CC8B8
B85BDBC71BFFF4774042569C50BAC7D287044587FDA040CC5B1246CCE23AC047
F5CE7356DEC3436DB351A5728CAD2D80A2B8E6F87B8D7ABD0C8D0C1BAA9D1E7C
7DDB13AC4E45C6B6E287D0BAE11EB9A9576A37C31AC828FDD9AB062C31432288
1936E2063E0844ECEF9ECD4DD1BF95C531598973C40811E904C7BA95A86AA9F8
82E4534BE07D1E428C70B03CE9571796CA09A32B2BE5F52612CB8123A4FFD211
9C1E15FAA165DECF271D3E069C8837D9AD5B5543705BBDB34EAB8CC06ACB6D68
A37034CF1812DE949D84C0732606975E90EE8361787C60421181D16C9A93D012
175227510F2BE03ED899D5D51D310AC03FF7411A460E7872A6F6BB4C7B7F8B33
4BC404A1959D5939FB493CD65BAE4208D90778B6BF1C6DF2BC20E2D2AF146531
2D3E159F91CD0CDE5F16437FD65267C89FA1E3F7F0BC96446FF48162486568EB
A20DC6BB553CC32E103B9E26D4101473584ADAE84B48B399CA78A323D70A629F
B29C250A10978B2A3A82461AD04A7C30B70AA15E807503C2D02134CC91922D62
5C59EDA0925CAA9F80EF0BD642B4F91A850ECCEAC7D83C566AD1D3970F017AD1
2AB016CC1A385134D4D463904133C74A51272008D69FA383A87CE63BAAF25624
77ABF4E69C49FDA641C0523F0F455DA19D00017F2A47E6637BBE4E4754533C55
03324D5E8E0178DDDAB423A22092912B9BFDE65D60EBB99CCBEC76C83B06A553
9A56F044C0E89B3A6663CE74C7277BB9FF20D718C27A47ED70C6CF3A75E59442
E6D55866CA4349992F2D66BD991B2BFBC2332784ACD575AFF81F6AEE17B2F543
E1FC88FBDF0865FF07F1AAB5CAA875A63904A191ECD708219B02BBDB9E131212
79C23BC5FD48C8FE3B4467F6CD17D791B3571796691794C949B68F14853B41AA
7380A2A65C2AD9BC423E9CA438DC0090999C959C9CC4AB2AC7843808ED404080
635442EFF38D5F23B5E3DE3CD15623836A51E0C38776165008B1B126D2C5183A
B202AF7513C51BF6D762D187A4265E1F806822892DDAB81469ACF3B7B0C486A2
0415625E4B1929178F35354F09D6828F894811C5A72110264AA0EBB96F100348
22519EBF4E3A2E9A1C3DF2F8B157AEFB9A9286A5889C9A5FC65C63EF812BCACB
A2BADB34A92C65A1DC7977BDF40F924E929BC9AA374F1E90C7E154C2A5394338
F021AAA65A88C9412767C72A16BBBCFDA7B09675426A23C12476DA6798A9389B
6812F05C413C77D99B7EBBE8EAB2E3900FF4948C8083DB4EBCE10600301995CA
9617B0C2E5AA637288BDFFB49984AF1843AC25C2D67ED11B3D5BBB1BD92BD06D
6975BE5DAEFF151C3DAF75FAC749E0C1AECB71772EF7B6B75B41204707E94F2B
3AA57BD0089D6202DFE105307366E22964D0810EA05DBEDC288863E09935178B
61CB12B9F709D1F7C1E46564E6776081C4045975D75E32DF9A158012F066A1B3
931381CDBBE48F98D8287FFE8081D2394E27F02E673E83530E4F66AC07E126B3
D68AE5B1AC8E3A791C5D7F80DD8B3E87895BFE946F66F770DA9B507643A8ACC4
17F550
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSS9
%!PS-AdobeFont-1.0: CMSS9 003.002
%%Title: CMSS9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSS9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSS9 known{/CMSS9 findfont dup/UniqueID known{dup
/UniqueID get 5000802 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSS9 def
/FontBBox {-63 -250 1027 760 }readonly def
/UniqueID 5000802 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSS9.) readonly def
/FullName (CMSS9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 64 /at put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 108 /l put
dup 110 /n put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C295470093CA270C5165C6545D6DD11
633CB01CF6EE3B37AA823D92F442576C06EA48520F0F737DD7E36EFF1436913D
7B55347D27E02EC93D8F98260A4CA0D41D684DC6D2CCA5746F13A862CA42419F
FC585050BB153883D3924F26A261CB59E945236BF818D1067BEB62B89F25B57A
C81D10844C89A1A648EFABD92B5C8FC1671A9361602E52B9EAEEB8A603C8945A
F8295D0706DA6CF8964B671F90DBB3949ACDDD20530134FBEFE9D1F1C429097B
2A8AF2818951D34F2798A46FE02C69BCE1A2B4C11DF1D8FE0610BD9FD2016D3A
ABFB483773ED4255C1B00B9484918BB10893DB86FABB84B063B0F287AB61C16D
6751C62EF5CDC87DD0A92D85A316BE8C707249B5FDD5B61C1906445E2B04C689
6A8E764A825A75424F14E0CD2BA99AC4746E8E0DF4C4C682F7A0900A2218135D
E5E58CA35D1ACB83255F683AAAEF8092CB082A8CB0D779673F065D7408FDA080
4E12BA4729806B39E930A9FF2280D603F9F2EF1067461193BF703BB5383FFD53
6F67E20F0A88A204DC683CBE272E7E8489AC886630624DC40BE31A47B8AB6484
0014D5A9F629CABF60681786A720D84713972B0D590F2E22A666756EC35876A2
37E893690099F6F9F0449187021D72A7B13E04B6FA937F7C2E840FB766EEC767
5BB4F23E26CBBC216F73770B50F992386A289574CD6F8F4C9B7588BBF8482DC2
3B33E5257C797790810BE889DEFA050B290D6381943A222F1D2560CD26B72FED
A2013E359EBD486CA5034784707060F17E257BDCC5798315E7699EE7EB576FE5
8D35505C808ED586C153AF420529F113ED9A05EF1C7F1F606F62BD2FE1303F82
3F483CB2EFEEA499D3EE8684DF5EC36B4E9035E56D5180211A849FE222D99210
8A3CCB004CC1457C3647FC73F64CBD2B02D692E0E9B7EABCF1A29740EF0DC8A2
CBBEFA563DB9D3BF920E504EEFDD56036217B61D8E08103405A9781A9CA6B9CB
FAF508A835E2D49BC7CE894F9D0B7B8E759660BD7D53492AA89CD26D603458C0
776258F3A478BDC8E4D9C55C92F38C0A336C8FA39D52533A4439945B045CED20
A2D9C64EA02D34FB4CD7B377BE5B4C8C110924DC0F71DC4E0C5ADFBA8D9BADBD
4EE8588E139E55570360D11E05A4B233DD8749DDA75E8D53DB3FB331B156D437
5D2BD10C724ECD919780AF578C696A53765533FD4D2527DD2DAC8FB7A3CA703D
B34003DD72E3D20DA315CE4B62018C685D071E9E866A224B2E72C4C417E62FAB
A678429808F95F98207C4A48621F6431DDCBDA2D137C43D765D02EC4A724C0D6
4DF9E07A9666A85DC95DA2D39DB3F90F69BA2A717796D1C87F5D1A22B7537740
63846E8CCB48F3250885A8D3F83BD9DF1A8C14AAEAA670D438D47420F6DCD38C
8884C761985EF58B8BE65C9FD1703F24BDAA827F7FFA56E5828E1DED1CAA75F9
6E00B8AE3127204BF420593221D6E7C35EDBDF8C1135A326A43CA14CFA2EB30F
A3D2AD65DB0E6E8F1D242F69D4B5B4A1DCC937A129923070CF0BCD8C016BAE0D
9CD293BE8446BD1E4C3627506E78A346E2B20107DB58F0696193A02F4C54603E
CBE96510F306101B5C3F86EB222743244573B84919C8683831F3034112CACDE4
6B9FD23FA96BF3BEBD96198B2F19D0622FCBA58AFE129420C374BF6EBCDDB1A9
99829124589CA5564BD5622BE33A1E3BF0FC7D1E6FB699A3D553D86CF2C3B748
CEC5E58E948537DB684BD8C57B1C5B6BE0BF32C1F958147792DE58A9CBD010B0
6F4FC27A1AB18C78A83926A627A8191DB14152B424A87AB752F8979DBDF02537
B6AEFEE65D271F9E3BFCC90C0B082C3D1F77D2E1AF27C1091ACB90FDADD69B21
7F8925C8232136784E63A90A5226D9C46DEEA7A7AD477BD3CC6BCC772A6A7CE9
DDDE578B6B71C73E60E3B588A76C4276A3B68C9E4FB771530139344ECE15CB77
048108E56E60C55781FF4D9B63E43E606187C430FF2CA43B35373556D060E693
628C9C33327DABF70C169CADDD89392636D1F6636692D1DD600D7DE98F73975A
9C3CF72D5552794EFA5210F3941D39A567352B083533E9CB9FFCB07304F60F05
38BC6E9B96B1381E84C3EDDD5DCEEF9B328B5CAA147BD686063B686856E77A2B
C7E29ABE94452AEB3B68C28DF3417A411DBB6FC328F182C1573CDA9AE2B53A94
2F964CFF55479F3AC5472D794B2AFE97F34FD09E487AEB96A5E643C9AF82F6BF
1FBF5305A7334A8E90DB30C3275FD3058E30C6B8C7B0473CD97D91C8451947B3
763E2998318E0C180AF566A836DCC5E4C22F18BEAAC6CCB9AA98B156B59265DE
661A3049AD676BDACC9E431E0C4C0A3F1C794570436D827D8B4AEE442DF6D9A0
EA4B7BCC5F0CA377A914C1B49B66707F2D37D5AAD8357B831A052B65901CA3AC
2D476E711D708860666413CDF348E496DC8373ADC3BB8B4A15F157D1E3E50A48
9235EE6CF156185E5FB4A8893138E97B4468E54B8E5CBE6E1541DF97558D27DE
902516C70F1298F7C17E5FD19D34F3E38169E1D6DAD860109CB3A116B13EE719
D9A6F56F92DA250D5912EBDBC64AAD62B6727539487816DB2C2CB1502BF67C55
4A22868F50CBA1CB020C2BBA91C327106DCFEF15A41511777B30EF6D9E830D33
5551A85BC5F175E1F1E4E6E7477D347A066A881E1AF8073163CECDA77AF62BC8
FC634137FEF052367138D6893B03CFB5D8BE8DD201C94375A2E2CC9898AFD52F
A98A7B235F743A9E5D3D7DA8779B032D42D30C8B685CF74241935CA8CF4E32D0
0AE9E91C4935D4C8F1D4B04731C6D325BB778A9661A42738DE1E63D85CAAC9EE
4C8F26FBB61365A8D1B3E9E4A2020A7302594E7C992C56E5D21F421254857807
293F58F42B00098741959B71A1F1E7FC98EBF7EF23DFB49096DBA6FC5A4704A2
81F71E86FBF54B08436BA1F55B3B9671F0490350411678A09CEE903A37720311
D10E6823DE99D94ACC54D6FF08BB079C36E667DA778D09574B027BB6FEC2105E
FE6A3DE580C763EEC8FC59FB9D6AB81BD0C64CAD73D9857A10E505ABCD075260
6A9F554864259B158FF14B6D5EB894AF5CB2593A4D443C5E2C5C99834F29C96C
4167148BA7CCE6BFA0A131763994D268CD2BE565DF6DCA3BED6E821C39004EE1
9E40EA741038E7A49B01A302A09F3C3E046A91A782DDBD82DF0474246D41BE12
3F301640DA56FFEE5CF6A605767E3036AADBD0867D0C630432955618784AABE2
A1E731E8B7FE85517C1FE08AC5FBF317144C734A8E4CDF19383CE61C8537AD84
F1D43F1DDE40B704EF8EB3512F2D002AE1EE8474BD0A12107B41A96DA9996F6B
AD780CBAE845CC2F4233B23BDC2C959003F997072F7456BDC5D0546A3191C924
66452283578E5035448686E7DE488E5E217F59A8FA2324F3A35FEC7A8AD8A26D
98A16BDA35F72B91B0F6ABC2400D99A88384AF8B832F91AC003FBDD76005E349
188CB97BD3CF741C01CA3129F113E0F79CD219700C4A3F84CEEE93C0BABACE19
A3501BBF66A5C20E8D2FDBAF482B96CA9678C3C353F65400A21EBF181984A8D8
62C1E3466594C967C45026E1362AF24965A0DABDDC3952FEC1B5C93C733E1617
4692A56563706A8C4EC7510D06C0D4543F5AB4C61B3D976B93AAEBF4897F9070
FB433CC9A67D862616CBB4DBABAA7A8FF4958094A6122360884BE9B9C5E73B6E
9A35415DD62FB25B7F1C188FCF933B6EF4993A4EB946941594655D7309E1E50D
836ACB570698265A59152511AA53EDCFD29D72A8632EBDEFED79F2F8E1D2BBAB
8DBCA5BF77C99CC911398867A0984CC649BA5EBD5323110AC8AD48FD0CD45C89
C5AE9DA169F2BFA676E2A9BDB5BF8A95ED2851E215304B2E4473B68AA7F2A9C2
910D865CE15D189BCA09436BA7570E56E67BBC702344F52E046987068FB853D2
2E45A6F483E27416C97EB8D72491D01C0955E10CA5C70359B8F90CAF67768B5E
61AB2612A5EBAC73029597E0AB924AEEE0240ECCA73949AB3722E8BEB2A16361
8497722FF6382C6978891680B6861DBCEF320E8DE457F4704A62ED2943DE2382
7E2BA30649030D92B3CEF2DE55AF4770FE275E57034C9D9D7112A1A0F8F2DDC3
6F391D18A15F6E0693B9DC7CA095C3209CCE0D13697CC084CE310BF499701BEC
1E1C13010A34C6FBCD44AC3BAC9FE70A2C065A1B5243E26755033E2DB0255D68
2431942FB598A96611B77A877F230B06AB3E28DC01A585DB605AC6C3044EF2D9
DCA7CECA07CBB4FA4718E57F26B520291C46A9A8AA8D3BB7394111096D932741
495A858901BD8674A21208E163160F727F122D4BC5632D2B30C9EF10AB2F4A42
72E9E62AC44CD0CCB50B25E30EC2B90D9A46CB8CC749EDA7A5F5A1C1734AC556
3DB253D56657EAC24097E94045A4BC969BD5ADFB577F5A5005F742CD2615DA9F
6E5F65A02FA47A8A36CBBFAF2442C01B42EF9950D02E05EC3CA855569FB13389
90ECF476259754C8BDE5B1E7816C64288352EAEDD488ACB3D0219C14C457F665
C5947F08EC99F8DFD2DEBA6E6972D4125E2EBF88AEF6DF06C5996E48D52DCA99
365E2040D066081368AB6D0D2429C2FCBBCF6FE387A01B7BF00C66E6D21FF951
EDA6893B597C4B2278C8B4EFBA21B34DCF3D866A7536BD9874FBFE52E77339B5
28B291E1D519938578FFBF2B9FCF7948449BA8EC6E99714BA5CEF7E6BEABEF7D
B5D4475631CE1C48A51D7EAE0F048C6118882586B04DAEBF9C7D319ADF3CEC6D
FF712845E670BEC0DE8D506183CD8A9D26435247C1CDF5FC50A8C6EE8DD2ED26
27EA1B6EFDB91C272C5CB7444F11D655E6D745BF3A9DB8CA1B3441C142F1507C
0CA0CB1C2CE663FB337E7DDCED1F42C76119CA71E372B57818CEDE3D151C91BE
E09644B62EB1064630EBE55F55F99B68C746D3D053B6F4CD8D96E3D6C4092ED1
A9C1D3B79C611520BF8C1163528E3E446E72762A625C1C3FF4B7391D6031EBCE
FD5B5C4B08C0A3124FBC40DB6908828CCFDECF732182B953913EB2B12134F1BB
2843FB7FA3EB1945FEF24587799BDE5C6FF70FB819C49B42A3FC2B18AB885A91
2ADCD162D466095C7439BAC2733937729D26209ACC1264DE0F3EF0AFF7F5069E
74B80B63D79F6FBF2FE45DCD7C69B7EE9CCAB68F0BD33DA003F11EB930861A56
A5188E014E40B9F8D4026C7B1888A966D1B229C037C1DC3D5D575D62D4A885E1
9DA31DF09746BB0FDE16EFAC1A801B110852EF0EEFE8E5B592366A05544D46EA
8B0F2D661DDC5B400A37DFF7848E75E9EAB21BD4A65241B72EEB2E59B0A96924
D633132043F78A3B53E348E34681382BE6BA2F91615563FD3C01F33C37F75792
0BCE0D9AECDF7478E1920355F207F039B7CCB5B8300693E1433DE4511D10D8F1
CA0776F16F3DEAB2B501B702A52A7B428E584DF52222F0AAF87CD854422E2099
BAE68FEE0D7C5CF7E98748862699A80B721273F3C62BF79CCC1A162F056FFA4C
32E7E588AC0A41B5579E799FF6616583C368DC0088DEC148036B41B30AC6D7D2
F0F299DC247A23A22E0BAED4C0CDE249D3785A1FED11292D09DC9474E7461531
F015D902341361EFA48B3E3B467D06937BB604CBFC1EE38C9F6935026ECF3DA3
9F13CB250618CD5AC65CA27C30B7924DE91138AAC8BD82859696DC7F5A91BD5F
851D954C8FA91DD27611532070464DF076DED556A3546C08C5F8459407A667C6
499E8B616A72D295FB1C390DAC790EE4FEFDF9B896440B1E137CBB99967897E5
1C9D327E5E5497DB6ADD53A27C34CAAD56DBDAAA095A74467227777094D0341D
4DCED59A5B00BA39CA41EAD203FB02143EBD9D0DF7844F20C0D82477B39218F7
B04926DD29415B50892EB3A39F8C89D2CD0399DE3BB46D8386BC7D94FC0A8C3D
C26618B0FA59E3D37CB50A89C9D9BF211EAE4D2C10082D8AAA8FB3FF63D7B066
107BD3135521EE8A81DFB2C9DDB74772994414D00CC15D933E0B6BBCA75EE095
EC676ACC85BE5189EA312B5EBC6127BF225AA9CC77004DE668139276DEEC76D4
C2C0C036B504DD0F24D968FE18E2F6ACFF15D4966BFFF45D22DF3013A7B88382
1C627E439603EA4A13B176CAE39192489CBAF53A53E726A584D0A1C0864E32E2
8C0E6A93BBA2A17119301AA7F819AEB987821914ED04B7C18B6611D4B2255292
0C55279D75A15A6531F56D2DF3FA26CD795C9F39F000BE8BE5064F5F57F57167
50621D833DA20AC483DE71ED28B1D258A7F18381CFDBB3D2C3D6F8142CB50870
8BC52CACE65295C5CF87E242C83E3967DE730C1CFC11FDCAF71826620E4D8983
621FFE03D497B51EE2DB2CB803666619A32D417BCB8A95964E9BBD0C6D444BC8
C1FB896901ABF6E6EFF1C1F3573C36520EF22D159C66F150049B64F008B06150
75350FEF34634EF2FACEEBA06182D06CC5683874117179913942ABB12FF3F371
BF6FF699E5A1476752AFF326B068F8B6129CBB1571A0C8C3D5F95336D6DA1496
7D34B965420BAAEBAB6978043D37588E9183CB12DB4C45852F56B21C8BE60EEB
D3D9082BC2990BDDA7E64763F1763BD63EE91F59E81E22D1AD5D9914EB8C876D
B851CC304A5DD190A21220802F815EEE957803C06B822C9518649C5DB417B103
0CF11737BB3CB1E73E38D2626FDABE3246B40D1DF0EF74BE428CE04EDD6410CA
38D760A23FEF9B8018191F92562D5AF172B3D6945AACE4F7E54F588CEB27CF5C
7F934CB1FEA1FF69D758ABCC1B316D1C432858CD8A2111A96799DFDF62F63F87
0D259021FDA53AE71FCE676578F27D1F0D90C0C51CFAFDA3BC017F504CB17D9A
D52ED77876B204AC36B7EA59CDF9C5C401BDFF97FC2A3A942ADADE2C969341B9
2216FE4C4E501EEAB32131F64BA99002BE4869B50FCF99BDE45C1091DAABB160
3AE7F32CE9FE116A1DDBF7BFED23F8F6FA29F1411F1366D5A11EAB224EFE2425
8D3D30124A9150D9BCC9A8008ECBA81E69F230EBA9206584F5E02E245C65C9CE
88C0936B2FF8918C970CEEFAC6208B48ED3E85B7A70E9ED3043725A1D96A949D
50C6B68E16C3496D5D32A9B2249087AE16101825C43CD992108A3C833EC6498B
FBBFC294E223A312B81020125942528F13F3B8CA23455DCA7D15A7D69F72BD94
60AB07097FC343C97BCA64C0B51B7FCE961A249AA0E882CE620DA64BBAA3317B
36CD2D983D2D9B9B928CFAEE346D92E922FA44B8E430EDFED946E408994747CD
63A0BA185784741890CF07EF9DE2E7255EF360948D16590CC44144CD4B5C9C7F
621CF194373879A0991C84EC2E6FD6321A158104E3BC2DE6DFE1AEF1A96F3D32
12E74B14DB1A6A96F81C47A049FE9BB5E89631F30E848D1AFE47D1D887C09EC8
0D2C2139EDF5B678C9F63CD57D169A0DF52CBCB3117627A075A39FC431128570
2C987DDEAE3945E9958A2C2E933FEE805DA7E2CC4085CA382CB2C9AD1C06F639
E12BD609B9E3484ED50F708C8D7E94441BDD49137A001C18CB2F644E9E7AB94D
5C03C56EA770A9DCB8B8D958CCA0EFFDE199BD4AD7957B1029301D2273AA4BE8
F2804EA60A603EDA3C4FCC3BDE1BF95EDACAC458CCDCFD7AA052BF8DD79CFF86
E57B0B07912D33CD236087BACAA8202D431703C9B96FCBA8308E19E19C1A99C5
738E554DAB1CD1F342E1EB86825002D131730148E2EB5564FE42D2E1AB86E7AF
3A0B8D60EA289A878B9F22F2EAB7B9A5642D142A3C3CF0FCCE0E75753C1D8373
F824AE7A60BA3B1B9C0456C37678AF6661E63FF8CE13E1AABDD1CD90B57260CA
E36E35E6CDF1422D825ED95BC5042B80702F04AB2B64EC307C8EE6ADB8658C35
D8171F1194C10F9FE98A8C77FE8B2061655030EBC9D0A7C62D6C1EFFC000DAE4
67B93336ADD7402F1101A697AF52D0FD3F35390405D6A9D16C8682CED4752DFC
6FA41F7B4CAE3B0FEB1B59B66F44DE3FAA204BA1E5446B31CE005A995647F750
508B0076DF1028AB74393AB3183B6CFFE1D0E2948B24D2A7E6AA5F482B52010B
061C7F0254C3748F9E454972BD3714C8195F99F5CC33D3C54813C07AB4C7AB3F
D6364C7DAB892DB3015DE0D1789F73E4CCD51A57D75896296D1D70E3483DF062
61AF145E221E3FF10B03A973F8FD23D8D592812AC8D3627192AF5C3BE2C4935F
447054FA8DD21A86F86D593D4A3C79F154F991514890C94D3224E75B57643900
F05BCD7986B7FB6F9C8B7F4BAD58EC9D92CADFA3ADF5AEECD2F9665F571E15A8
85FD162E472785F56B5BBDF4C2E595A660E135E1E96D15597F673722E6B5CA3A
5C510283CF5C3DAA53344060EF58C6C15A63075D8C9FA3F313A44BD11C208968
F9382DCBCE17548CE17C1D2CB10EF979E24D3F3059D0E3A2C018AB113C59DD30
2765E0581A153BEFDC9804A078CCD4230B3ECA9E7C3F4A9BCE056853F9CFB905
154FB743A342A8161CA9BFA186029096BD31F5FE08920B0E1BB74E869D282DF4
C5161858C343918120D3719B14FFF59DC47011A99B14349738D3DA1A0FD47C2A
837D976344F4E38ADD0EDC24BADDF4567AE2A8C09C89D93E155BBC43EBC7C45D
5D828E4DE2E0A00B9C9983F77EEA31957A3312654256A6EE4560D0E3FE7E808D
33B928D88754B5FD3893C77D648C07142E327F0B6D790637E319C15FD0E65382
29A62305B09829F936A65C655EE14C645F74FD940865613F9EC1E927B5620FDC
2194690088F415EDB95FF9CEC0A5F5E9A4CAD4EB43A13144CDDE564685FF9C7C
2B515D7E1B84D1BD2CC45653B815D217B8CECDDFA8A70E7720E191B7B0A561AE
A039861A23896A2EABB6B62453EC6DA910525374178E304C16B06A240F27E925
AE2C3EB3BF06374C2AADAA24486F3E109BFB8BBC89D3B592AE8048A58FABACA4
0306D7A716B6559492475291EC35EA151A1A69AA7B05A1EF1089C998B5E6E8A6
CEE5B19AD58BC28ADD9F5BA7BC12DB39C0C9A20C8C4C022637C09FC2F27AABE0
D4CA747C23C68C6756FB2CB23A6BD4F81AC30762B7E0091FCE94054EA8CBEFB7
3A9DE9BF792CB635E87D786FD5E8D9CF7F10936718B2C807B5BCF30D11B6AF76
D52EDC83E3AE04AF20C3F8C57B578A7B91AA0733737944EB4A32054153695362
B16A99E4D57736EF36FEE82B40EE654AC47FB006F2D0F54FB8C051A4002B32B7
2AF68F22C069615AB9A86488B997733E41D99A9AE8E9D60E06A3E1CA71EA8727
87927EB15C8A4499180D8AA75F398E10C75E46B8C7E3C04CACB03DC0E46B6D95
5627800BC68AE881895EB749A7C90FAB7FD9D3514AD289A4BEDFB535B128A905
23E3B23D0618E425544B735B9FDA2BEEFCC1E2EAD9C3ECD5FFD4169A0FE91F9C
6D137DA11B33F40BEA1754A248776CA18E8A5BC29F4809CFADEBB98E3899D551
855AB9287FC543FD69CF88EC012FF20C9C8F71064346B11D5C458A25D775E09D
F85D746040508F37F9520C259AC9EFD0A9C81E8D2408A46E85EE50BE3A887CE9
74B41E58283670A9A16035F1C4E62978D0CF788C8C23E5A620F4FD9D6F1FC663
BEAA9D1BBDFF1749E46ECCF41AE469B882AF6D3F242CA750C4CAE1F50A8D81F2
44776ADF31205207199E00E3A08B400B8914444CE0126DF12DA16DD5C499A437
6FD59835CAEB4CE60D6FF02F49BB7C561FB1E29855A6F65F1F5D16117BBEC727
234E6A7E35F1D9D226A592A4C7FB495CF3676004725096366D159868DC1BB42B
F9FB2D5A9C3DE390BAD566D371D6C2F6774889D0CAFAC9957F4631077ACA682F
DC767CC622037AA8EDEAFD15FC98824954C610FA7D093D1FD4BFC943A223939A
FFCD021C151CD78F48F448D6DA7E4D58F2E7D295081A69722E302848C73B90BD
1DD3707A9372FB3ADBA61EB7A21D9EA3C62970559B83B46A4EA37E3DF44BB103
A04B98BB92434687B3DA60D8D2F636C00F8FF71BE2EF8D240DBFA21F0FCE3099
C6CC5C1F13B1DC560FA833C1B40090541C6C0C375904DA22349A847A4BDFD9C9
79644D8BCEA2E19EB44F9709565494F961E34892A9604DFD4912B0D40A92A15E
1E9C7879544EA50EF61EF4FB78D707CEE6BFCF6B35A0D39FC47E01BB11BC7732
9CCB5D88DF75469D3673A7B528AC406DBB399B1F747F1354E70EC99B95A9B7EC
798707B4976D50DF8A089976C525F1764C8FEE505A48A9C8E1D3F2DA6CBA456F
27513298090C5CA61A9E214C55CCC01FD7866F2102AA3FFF87E03E7C1FC03424
50FC944788CEC0076129C5838D5D5F3E78D4F09CA7149D716C1D3A1B1CEE74ED
CC502B708F2E7AF98E4F7D9C1C1F5CD17D4151C51417ED1AF35E8CB9A484C2A6
26911B614742DA618C62B735F858E45B062270B9C0C67F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/UniqueID 5096651 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 3 /asteriskmath put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70EB02A
60651FC2E263002D3986B7B20CC2AA08330B9FC2E26765CD52266969A86EE30E
71E0B41B6C1C6DA423D3A7E1553D2FAF26EF40DC183099322D362E4965695C52
9FC3E5BD7ABD743CDCB717DB10372A722A39CE53FABB454EADE2179C4CBFC016
A8E893C28EF549CA1692C8D8ADFC471DCCDE266FB4E97A1F3035801F3F034D44
AE6ADA0192657E8078A1D27420093FEBA111333314658021B90DA4E7A8D4B829
F1795501020D5FF0AD25584C1D45499A585CAB3807A07279D977556EC6AABD93
2DBC998B0EDF127D030B6DA474DDA1BB79AA4AFE5E1DB4F246F198FA5FEFA145
E9D3741D1FA19304D320DF38D7499B0FC3C9C838E5D7E8817461770F2E73B562
ABCFDD32FE59887D0646650B2407BC4ADF3CAEC1863ADDE9A6B0F0D2E4CEAC76
53A842849A0C63DC6514A74AA6D3FBCF5C8B7911EE1A5CFF9EED8AEF7B6C18BB
CA642F6B5F64B0D66F2D4A415EF274F48291D56FDBE709AEF8A95F7D03F55D87
12FDE2290503BD648A94B4DCE33FD440D802782A34AFFB9A6AD1D26193B04AE2
3A854C8D03891F0D76190F12A8EA33F54ED43DA22F904647226B05F7FE1C3B47
48D0A496FB188276AB1CDBC72E2E9D965499F1CE613818802E689802BD96CDB7
0D8FAD80BE2F3E639DD0D3BE20
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (paper.dvi)
@start /Fa 138[28 14 1[19 12[22 101[{TeXBase1Encoding ReEncodeFont}4
49.8132 /Times-BoldItalic rf /Fb 143[25 2[36 11[25 12[28
6[41 77[{TeXBase1Encoding ReEncodeFont}5 49.8132 /Times-Italic
rf /Fc 138[28 17 1[22 12[22 101[{TeXBase1Encoding ReEncodeFont}4
49.8132 /Times-Bold rf /Fd 184[31 1[10 42 68[{}3 49.8132
/wld rf /Fe 192[22 63[{}1 41.511 /CMTT8 rf /Ff 223[75
32[{}1 74.7198 /MSAM10 rf /Fg 165[0 90[{}1 74.7198 /stmary9
rf /Fh 155[111 8[85 7[64 11[85 64 7[68 68 68 68 68 68
68 28[58 58 26[{}14 74.7198 /CMEX9 rf /Fi 206[28 5[43
43[{}2 41.511 /CMR5 rf /Fj 139[39 67[18 48[{}2 41.511
/CMSY5 rf /Fk 139[14 1[17 2[25 25 4[14 25 1[17 22 51[25
49[{TeXBase1Encoding ReEncodeFont}9 49.8132 /Times-Roman
rf /Fl 145[37 2[31 1[22 105[{}3 41.511 /CMMI5 rf /Fm
192[44 32[51 30[{}2 49.8132 /MSBM7 rf /Fn 137[31 7[38
54 1[33 25 22 4[32 3[26 33[48 1[48 19 19 27[37 1[29 6[37
2[29 18[{}16 49.8132 /CMMI6 rf /Fo 161[30 32[47 2[18
5[30 30 30 30 30 4[47 1[24 24 38[50 38{}13 49.8132 /CMR6
rf /Fp 167[43 2[43 37 33 40 8[20 6[40 43 65[{
TeXBase1Encoding ReEncodeFont}8 59.7758 /Times-Roman
rf /Fq 192[58 32[66 30[{}2 74.7198 /MSBM10 rf /Fr 139[27
44[46 1[16 63 68[{}4 74.7198 /wld rf /Fs 161[38 21 1[21
29[60 1[21 21 2[38 1[38 1[38 38 38 38 4[60 1[30 30 17[38
20[64 48{}18 74.7198 /CMR9 rf /Ft 133[36 38 44 1[37 5[39
1[46 68 1[40 31 26 4[40 18[61 49 10[57 63 55 4[60 1[60
21 21 27[46 1[34 6[45 2[36 18[{}24 74.7198 /CMMI9 rf
/Fu 137[60 1[51 9[21 30 30 38 38 5[47 26[41 59 10[43
43 0 4[51 77 7[77 7[77 77 3[77 2[60 60 3[60 1[60 2[38
38 12[21 60{}27 74.7198 /CMSY9 rf /Fv 133[33 37 37 54
37 42 25 29 33 42 42 37 42 62 21 42 25 21 42 37 25 33
42 33 42 37 9[75 54 54 50 42 54 1[46 58 54 1[50 1[37
29 58 1[46 50 54 54 50 54 1[37 5[37 37 37 37 37 37 37
37 37 37 1[19 25 19 40[42 42 2[{TeXBase1Encoding ReEncodeFont}61
74.7198 /Times-Bold rf /Fw 131[39 2[39 39 39 39 39 39
39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39
39 7[39 39 1[39 1[39 39 1[39 39 39 39 39 39 2[39 2[39
39 39 39 39 39 1[39 39 39 39 39 39 7[39 39 39 1[39 39
39 39 1[39 39 1[39 3[39 39 33[{}62 74.7198 /CMTT9 rf
/Fx 107[42 42 24[29 33 33 50 33 37 21 29 29 37 37 37
37 54 21 33 21 21 37 37 21 33 37 33 37 37 3[29 1[29 6[42
37 46 1[46 3[42 1[33 25 1[54 46 2[50 46 46 6[25 1[37
37 37 37 37 1[37 37 37 1[19 25 19 40[37 37 2[{
TeXBase1Encoding ReEncodeFont}56 74.7198 /Times-Italic
rf /Fy 137[35 11[35 6[35 1[35 97[{}4 66.4176 /CMTT8 rf
/Fz 133[29 29 4[42 12[32 32 32[33 48 12[0 6[18 14[61
29[32 1[19 1[{}12 49.8132 /CMSY6 rf /FA 134[29 2[29 33
18 26 26 1[33 33 33 48 18 1[18 18 33 33 18 29 33 29 33
33 12[37 33 2[41 48 1[55 37 1[29 22 2[41 41 1[44 1[41
6[22 12[22 42[33 2[{TeXBase1Encoding ReEncodeFont}36
66.4176 /Times-Italic rf /FB 75[22 11[22 16[66 33 27[29
33 33 48 33 33 18 26 22 1[33 33 33 52 18 33 18 18 33
33 22 29 33 29 33 29 3[22 1[22 3[63 48 48 41 37 44 1[37
48 48 59 41 48 26 22 48 48 37 41 48 44 44 48 1[29 3[18
18 33 33 33 33 33 33 33 33 33 33 1[17 22 17 4[22 8[22
27[37 2[{TeXBase1Encoding ReEncodeFont}72 66.4176 /Times-Roman
rf /FC 134[33 1[50 1[42 21 29 29 1[37 37 42 58 21 1[21
21 1[37 1[33 37 33 37 37 12[46 42 7[50 3[54 2[54 50 67[{
TeXBase1Encoding ReEncodeFont}25 74.7198 /Times-BoldItalic
rf /FD 134[46 46 66 46 51 30 36 41 1[51 46 51 76 25 51
1[25 51 46 30 41 51 41 51 46 9[91 2[61 51 66 3[66 3[46
36 3[61 66 66 61 66 7[46 46 46 46 46 46 46 46 46 46 1[23
30 45[{TeXBase1Encoding ReEncodeFont}47 91.3242 /Times-Bold
rf /FE 138[40 28 29 26 3[40 1[18 4[38 1[34 40 34 1[37
32[51 17[21 46[{}13 74.7198 /CMSS9 rf /FF 105[37 1[33
33 24[33 37 37 54 37 37 21 29 25 37 37 37 37 58 21 37
21 21 37 37 25 33 37 33 37 33 3[25 1[25 1[54 1[71 54
54 46 42 50 1[42 54 54 66 46 54 29 25 54 54 42 46 54
50 50 54 1[33 3[21 21 37 37 37 37 37 37 37 37 37 37 21
19 25 19 2[25 25 25 1[62 1[37 31[42 42 2[{TeXBase1Encoding ReEncodeFont}
78 74.7198 /Times-Roman rf /FG 138[46 25 36 30 2[46 46
1[25 2[25 1[46 1[41 3[41 12[56 51 61 5[56 10[66 65[{
TeXBase1Encoding ReEncodeFont}16 91.3242 /Times-Roman
rf /FH 139[32 1[39 1[58 58 58 90 32 2[32 58 2[52 1[52
1[52 12[71 1[78 40[39 39 40[{TeXBase1Encoding ReEncodeFont}16
116.231 /Times-Roman rf /FI 252[42 3[{}1 83.022 /CMSY10
rf /FJ 134[75 2[75 1[50 58 66 1[83 1[83 124 42 2[42 1[75
1[66 83 66 1[75 9[149 2[100 83 8[75 34[50 39[{
TeXBase1Encoding ReEncodeFont}20 149.44 /Times-Bold rf
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 562 161 a FJ(T)-14 b(aming)52 b(W)m(ildcards)h
(in)f(J)n(a)l(v)o(a')-6 b(s)51 b(T)-11 b(ype)52 b(System)3276
118 y FI(\003)1233 360 y FH(T)-8 b(echnical)28 b(Report)h
(\(incomplete\))320 609 y FG(Ross)21 b(T)-7 b(ate)-35
734 y FF(Uni)n(v)o(ersity)19 b(of)g(California,)g(San)f(Die)o(go)214
834 y FE(rtate@cs.ucsd.edu)1725 609 y FG(Alan)23 b(Leung)1410
734 y FF(Uni)n(v)o(ersity)c(of)g(California,)f(San)h(Die)o(go)1632
834 y FE(aleung@cs.ucsd.edu)3155 609 y FG(Sorin)j(Lerner)2854
734 y FF(Uni)n(v)o(ersity)e(of)e(California,)h(San)g(Die)o(go)3090
834 y FE(lerner@cs.ucsd.edu)-150 1313 y FD(Abstract)-150
1429 y FF(W)m(ildcards)29 b(ha)o(v)o(e)h(become)g(an)g(important)g
(part)f(of)h(Ja)o(v)n(a')l(s)f(type)h(system)-150 1512
y(since)23 b(their)g(introduction)h(7)g(years)f(ago.)h(Y)-7
b(et)22 b(there)h(are)g(still)f(man)o(y)i(open)-150 1595
y(problems)g(with)e(Ja)o(v)n(a')l(s)h(wildcards.)g(F)o(or)f(e)o
(xample,)h(there)g(are)g(no)g(kno)n(wn)-150 1678 y(sound)31
b(and)f(complete)g(algorithms)f(for)h(subtyping)g(\(and)g(consequently)
-150 1761 y(type)25 b(checking\))h(Ja)o(v)n(a)e(wildcards,)h(and)g(in)f
(f)o(act)h(subtyping)h(is)e(suspected)-150 1844 y(to)g(be)h
(undecidable)h(because)g(wildcards)f(are)f(a)h(form)f(of)h(bounded)h(e)
o(xis-)-150 1927 y(tential)17 b(types.)h(Furthermore,)f(some)h(Ja)o(v)n
(a)g(types)g(with)f(wildcards)h(ha)o(v)o(e)g(no)-150
2010 y(joins,)e(making)i(inference)f(of)f(type)h(ar)o(guments)h(for)e
(generic)h(methods)h(par)o(-)-150 2093 y(ticularly)e(dif)n(\002cult.)f
(Although)j(there)e(has)g(been)h(progress)g(on)g(these)g(fronts,)-150
2176 y(we)23 b(ha)o(v)o(e)g(identi\002ed)h(signi\002cant)f
(shortcomings)h(of)g(the)f(current)g(state)g(of)-150
2259 y(the)c(art,)f(along)i(with)e(ne)n(w)i(problems)f(that)g(ha)o(v)o
(e)g(not)h(been)f(addressed.)-50 2342 y(In)26 b(this)f(paper)m(,)i(we)e
(illustrate)h(ho)n(w)g(these)g(shortcomings)i(re\003ect)d(the)-150
2426 y(subtle)e(comple)o(xity)i(of)e(the)g(problem)h(domain,)g(and)g
(then)f(present)h(major)-150 2509 y(impro)o(v)o(ements)k(to)e(the)h
(current)f(algorithms)h(for)g(wildcards)f(by)h(making)-150
2592 y(slight)18 b(restrictions)f(on)i(the)f(usage)g(of)g(wildcards.)g
(Our)g(surv)o(e)o(y)g(of)g(e)o(xisting)-150 2675 y(Ja)o(v)n(a)28
b(programs)i(suggests)f(that)f(realistic)f(code)i(should)h(already)e
(satisfy)-150 2758 y(our)20 b(restrictions)g(without)f(an)o(y)i
(modi\002cations.)f(W)-6 b(e)19 b(present)h(a)g(simple)g(al-)-150
2841 y(gorithm)i(for)g(subtyping)h(which)g(is)e(both)h(sound)h(and)g
(complete)f(with)g(our)-150 2924 y(restrictions,)29 b(an)h(algorithm)g
(for)f(lazily)h(joining)g(types)g(with)f(wildcards)-150
3007 y(which)18 b(addresses)h(some)f(of)f(the)h(shortcomings)h(of)f
(prior)f(w)o(ork,)h(and)g(tech-)-150 3090 y(niques)25
b(for)e(impro)o(ving)i(the)f(Ja)o(v)n(a)g(type)g(system)g(as)g(a)f
(whole.)h(Lastly)-5 b(,)23 b(we)-150 3173 y(describe)e(v)n(arious)h(e)o
(xtensions)f(to)f(wildcards)h(that)f(w)o(ould)i(be)e(compatible)-150
3256 y(with)f(our)g(algorithms.)-150 3398 y FC(Categories)51
b(and)f(Subject)f(Descriptors)67 b FB(D.3.1)44 b([)p
FA(Pr)m(o)o(gr)o(amming)h(Lan-)-150 3481 y(gua)o(g)o(es)p
FB(]:)h(F)o(ormal)e(De\002nitions)h(and)g(Theory;)51
b(D.3.2)43 b([)p FA(Pr)m(o)o(gr)o(amming)h(Lan-)-150
3564 y(gua)o(g)o(es)p FB(]:)g(Language)g(Classi\002cations\227Ja)o(v)n
(a;)91 b(D.3.3)41 b([)p FA(Pr)m(o)o(gr)o(amming)i(Lan-)-150
3647 y(gua)o(g)o(es)p FB(]:)19 b(Language)g(Constructs)f(and)g
(Features\227Polymorphism)-150 3789 y FC(General)h(T)-7
b(erms)75 b FF(Algorithms,)18 b(Design,)h(Languages,)i(Theory)-150
3932 y FC(K)n(eyw)o(ords)76 b FF(W)m(ildcards,)38 b(Subtyping,)i
(Existential)e(types,)h(P)o(arametric)-150 4015 y(types,)19
b(Joins,)g(T)-6 b(ype)19 b(inference,)h(Single-instantiation)f
(inheritance)-150 4220 y FD(1.)91 b(Intr)n(oduction)-150
4336 y FF(Ja)o(v)n(a)30 b(5,)g(released)h(in)f(2004,)h(introduced)h(a)e
(v)n(ariety)g(of)h(features)f(to)g(the)-150 4419 y(Ja)o(v)n(a)20
b(programming)i(language,)f(most)f(notably)h(a)f(major)g(o)o(v)o
(erhaul)h(of)f(the)-150 4502 y(type)d(system)h(for)f(the)g(purposes)h
(of)f(supporting)i(generics.)e(Although)h(Ja)o(v)n(a)-150
4585 y(has)g(under)o(gone)g(se)n(v)o(eral)g(re)n(visions)g(since,)f(Ja)
o(v)n(a)g(generics)h(ha)o(v)o(e)f(remained)-150 4668
y(unchanged)j(since)d(the)o(y)h(were)f(originally)h(introduced)g(into)g
(the)f(language.)-50 4751 y(Ja)o(v)n(a)32 b(generics)h(were)f(a)g
(long-a)o(w)o(aited)i(impro)o(v)o(ement)f(to)f(Ja)o(v)n(a)h(and)-150
4834 y(ha)o(v)o(e)25 b(been)i(tremendously)f(useful,)g(leading)g(to)f
(a)g(signi\002cant)g(reduction)-150 4917 y(in)h(the)g(amount)g(of)g
(unsafe)h(type)f(casts)g(found)h(in)f(Ja)o(v)n(a)g(code.)g(Ho)n(we)n(v)
o(er)m(,)-150 5000 y(while)h(Ja)o(v)n(a)h(generics)g(impro)o(v)o(ed)h
(the)e(language,)i(the)o(y)f(also)g(made)g(type)-150
5083 y(checking)37 b(e)o(xtremely)g(comple)o(x.)f(In)g(particular)m(,)g
(Ja)o(v)n(a)g(generics)h(came)p -150 5183 997 3 v -150
5234 a Fz(\003)-106 5258 y FB(This)24 b(w)o(ork)h(w)o(as)f(supported)i
(by)e(NSF)g(grant)h(CCF-0644306)h(and)e(a)h(Microsoft)-150
5333 y(Research)19 b(PhD)e(Fello)n(wship.)-150 5406 y
Fz(y)-109 5430 y FB(When)g(we)g(refer)h(to)g Fy(javac)g
FB(we)f(mean)g(v)o(ersion)h(1.6.0)p 1166 5430 20 4 v
24 w(22.)2042 1313 y FF(with)e Fx(wildcar)m(ds)p FF(,)i(a)f
(sophisticated)h(type)f(feature)g(designed)h(to)f(address)h(the)2042
1396 y(limitations)g(of)h(plain)g(parametric)g(polymorphism)i([19)q(].)
2141 1479 y(W)m(ildcards)32 b(are)g(a)h(simple)f(form)g(of)g(e)o
(xistential)g(types.)g(F)o(or)g(e)o(xam-)2042 1562 y(ple,)2178
1562 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2178 1562 a Fw(List<?>)2178 1562 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2178 1562 a
232 w FF(represents)c(a)e(\223list)g(of)h(unkno)n(wns\224,)h(namely)g
(a)e(list)g(of)h(ob-)2042 1645 y(jects,)e(all)h(of)h(which)f(ha)o(v)o
(e)h(the)f(same)h(unkno)n(wn)h(static)e(type.)g(Similarly)-5
b(,)2042 1728 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2042 1728 a Fw(List<?)40 b(extends)h(Number>)2042
1728 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2042 1728 a 674 w FF(is)27 b(a)g(list)f(of)i(objects)f(of)h
(some)f(unkno)n(wn)j(static)2042 1811 y(type,)h(b)o(ut)g(this)g(unkno)n
(wn)j(static)c(type)i(must)f(be)h(a)f(subtype)i(of)3839
1811 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3839 1811 a Fw(Number)3839 1811 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3839 1811 a
177 w FF(.)2042 1894 y(W)m(ildcards)26 b(are)g(a)g(v)o(ery)h(po)n
(werful)g(feature)g(that)f(is)g(used)h(perv)n(asi)n(v)o(ely)g(in)2042
1977 y(Ja)o(v)n(a.)j(The)o(y)h(can)g(be)g(used)g(to)g(encode)h
(use-site)f(v)n(ariance)g(of)g(paramet-)2042 2060 y(ric)j(types)i([7,)e
(17)q(\22619)q(],)g(and)i(ha)o(v)o(e)f(been)g(used)h(to)f(safely)g
(type)g(check)2042 2143 y(lar)o(ge)29 b(parts)h(of)g(the)f(standard)i
(library)f(without)f(using)i(type)f(casts.)f(Un-)2042
2226 y(fortunately)-5 b(,)18 b(the)h(addition)g(of)f(wildcards)g(mak)o
(es)i(Ja)o(v)n(a')l(s)e(type)g(system)h(e)o(x-)2042 2309
y(tremely)c(comple)o(x.)g(In)g(this)f(paper)h(we)g(illustrate)f(and)h
(address)h(three)f(issues)2042 2392 y(of)j(wildcards:)f(subtyping,)i
(type-ar)o(gument)g(inference,)g(and)f(inconsisten-)2042
2475 y(cies)h(in)f(the)h(design)h(of)f(the)g(type)g(system.)2141
2558 y(Subtyping)30 b(with)d(wildcards)i(is)f(surprisingly)h
(challenging.)g(In)f(f)o(act,)2042 2641 y(there)c(are)g(no)g(kno)n(wn)i
(sound)f(and)g(complete)f(subtyping)i(algorithms)e(for)2042
2724 y(Ja)o(v)n(a,)32 b(soundness)h(meaning)g(the)f(algorithm)g
(accepts)h(only)f(subtypings)2042 2807 y(permitted)18
b(by)h(Ja)o(v)n(a)g(and)g(completeness)h(meaning)g(the)e(algorithm)h
(al)o(w)o(ays)2042 2890 y(terminates)e(and)i(accepts)f(all)f
(subtypings)i(permitted)f(by)g(Ja)o(v)n(a.)f(Subtyping)2042
2973 y(with)22 b(wildcards)i(is)e(e)n(v)o(en)i(suspected)g(to)f(be)g
(undecidable,)i(being)f(closely)2042 3056 y(related)d(to)g(the)g
(undecidable)i(problem)f(of)f(subtyping)i(with)e(bounded)i(e)o(x-)2042
3139 y(istential)i(types)h([21].)f(In)h(Section)f(3)h(we)g(will)e
(illustrate)h(this)g(challenge,)2042 3226 y(including)18
b(e)o(xamples)g(of)f(programs)i(which)e(mak)o(e)h Fw(javac)3590
3194 y Fz(y)3641 3226 y FF(suf)n(fer)g(a)f(stack)2042
3309 y(o)o(v)o(er\003o)n(w)-5 b(.)23 b(In)g(Section)g(4)g(we)g(will)f
(present)h(our)g(simple)g(subtyping)i(algo-)2042 3392
y(rithm)18 b(which)i(is)e(sound)i(and)g(complete)g(gi)n(v)o(en)f
(certain)g(restrictions.)2141 3475 y(Ja)o(v)n(a)29 b(also)g(includes)h
(type-ar)o(gument)g(inference)g(for)e(generic)i(meth-)2042
3558 y(ods,)21 b(which)h(again)g(is)f(particularly)h(challenging)h
(with)e(wildcards.)g(W)m(ith-)2042 3641 y(out)e(type-ar)o(gument)i
(inference,)f(a)f(programmer)i(w)o(ould)f(ha)o(v)o(e)g(to)f(pro)o(vide)
2042 3724 y(type)h(ar)o(guments)g(each)h(time)e(a)h(generic)g(method)h
(is)e(used.)h(Thus,)g(to)f(mak)o(e)2042 3807 y(generic)f(methods)g(con)
m(v)o(enient,)g(Ja)o(v)n(a)g(infers)f(type)g(ar)o(guments)h(at)f
(method-)2042 3890 y(in)m(v)o(ocation)23 b(sites.)e(Furthermore,)h(Ja)o
(v)n(a)h(can)f(infer)g(types)h(not)f(e)o(xpressible)2042
3973 y(by)k(users,)g(so)g(that)f(e)o(xplicit)h(annotation)h(is)e(not)h
(al)o(w)o(ays)h(an)f(option.)g(Un-)2042 4056 y(fortunately)-5
b(,)23 b(there)g(is)f(no)i(kno)n(wn)g(sound)g(and)f(complete)h(type-ar)
o(gument)2042 4139 y(inference)c(algorithm.)g(Plus,)f(type-ar)o(gument)
h(inference)h(can)f(e)n(v)o(en)g(af)n(fect)2042 4222
y(the)h(semantics)g(of)g(a)g(program.)h(W)-6 b(e)20 b(illustrate)h
(these)g(issues)g(in)g(Section)g(5)2042 4305 y(and)e(present)h(our)f
(impro)o(v)o(ements)h(on)f(the)g(state)g(of)g(the)g(art)g(in)f(Section)
h(6.)2141 4388 y(W)m(ildcards)29 b(also)g(introduce)h(a)f(v)n(ariety)g
(of)g(complications)g(to)g(Ja)o(v)n(a')l(s)2042 4471
y(type)19 b(system)g(as)g(a)g(whole.)g(While)f(Ja)o(v)n(a)h(attempts)g
(to)g(address)h(these)f(com-)2042 4555 y(plications,)g(there)h(are)f
(yet)h(man)o(y)g(to)f(be)h(resolv)o(ed.)g(In)f(some)h(cases)g(Ja)o(v)n
(a)f(is)2042 4638 y(o)o(v)o(erly)f(restricti)n(v)o(e,)f(while)h(in)g
(others)g(Ja)o(v)n(a)g(is)f(o)o(v)o(erly)i(relax)o(ed.)f(In)f(f)o(act,)
h(the)2042 4721 y(type-checking)23 b(algorithm)f(used)g(by)g
Fw(javac)h FF(is)e(non-deterministic)h(from)2042 4804
y(the)f(user')l(s)h(perspecti)n(v)o(e)g(due)h(to)e(wildcards.)g(In)h
(Section)f(7)h(we)f(will)g(illus-)2042 4887 y(trate)d(these)h(issues,)g
(and)h(in)f(Section)g(8)g(we)f(will)g(present)i(our)f(solutions.)2141
4970 y(A)34 b(fe)n(w)g(of)f(our)i(solutions)f(in)m(v)o(olv)o(e)g
(imposing)h(restrictions)f(on)g(the)2042 5053 y(Ja)o(v)n(a)c(language.)
g(Naturally)g(one)g(w)o(onders)h(whether)f(these)g(restrictions)2042
5136 y(are)19 b(practical.)h(As)f(such,)h(we)f(ha)o(v)o(e)h(analyzed)h
(9.2)f(million)f(lines)h(of)f(open-)2042 5219 y(source)25
b(Ja)o(v)n(a)f(code)h(and)g(determined)h(that)e Fx(none)h
FF(of)f(our)h(restrictions)f(are)2042 5302 y(violated.)17
b(W)-6 b(e)16 b(present)h(our)g(\002ndings)g(in)g(Section)f(9,)h(along)
g(with)f(a)h(number)2042 5385 y(of)i(interesting)g(statistics)f(on)h
(ho)n(w)h(wildcards)f(are)g(used)h(in)e(practice.)p eop
end
%%Page: 2 2
TeXDict begin 2 1 bop -50 66 a FF(Ja)o(v)n(a)29 b(is)g(an)h(e)n(v)o
(olving)g(language,)h(and)f(ideally)f(our)h(algorithms)g(can)-150
149 y(e)n(v)o(olv)o(e)23 b(with)f(it.)g(In)g(Section)h(10)g(we)f
(present)h(a)f(v)n(ariety)h(of)g(e)o(xtensions)g(to)-150
232 y(Ja)o(v)n(a)k(which)f(preliminary)h(in)m(v)o(estigations)g
(indicate)g(w)o(ould)g(be)g(compat-)-150 315 y(ible)i(with)g(our)g
(algorithms.)h(These)f(e)o(xtensions)h(also)g(suggest)g(that)f(our)-150
399 y(algorithms)19 b(could)h(apply)g(to)f(other)g(languages)h(such)g
(as)f(C#)g(and)g(Scala.)-50 482 y(Man)o(y)d(of)f(the)g(abo)o(v)o(e)i
(dif)n(\002culties)d(of)i(wildcards)f(are)h(by)f(no)h(means)g(ne)n(w)
-150 565 y(and)k(ha)o(v)o(e)g(been)g(discussed)h(in)f(a)f(v)n(ariety)h
(of)g(papers)g([4,)f(9)q(,)g(14,)g(21)q(].)g(In)h(re-)-150
648 y(sponse)g(to)e(these)h(challenges,)h(researchers)f(ha)o(v)o(e)g(e)
o(xplored)h(se)n(v)o(eral)f(w)o(ays)-150 731 y(of)f(\002xing)f
(wildcards.)h(The)g(w)o(ork)g(by)g(Smith)f(and)h(Cartwright)f([14)q(])g
(in)h(par)o(-)-150 814 y(ticular)h(made)h(signi\002cant)g(progress)h
(on)f(impro)o(ving)g(algorithms)g(for)g(type)-150 897
y(checking)30 b(Ja)o(v)n(a.)f(Throughout)h(this)e(paper)i(we)e(will)g
(identify)h(the)g(man)o(y)-150 980 y(contrib)o(utions)24
b(of)f(these)g(w)o(orks.)h(Ho)n(we)n(v)o(er)m(,)f(we)g(will)f(also)h
(identify)h(their)-150 1063 y(shortcomings,)16 b(moti)n(v)n(ating)h
(the)e(need)h(for)f(our)h(impro)o(v)o(ements.)g(Although)-150
1146 y(this)j(paper)g(does)h(not)f(solv)o(e)h(all)e(the)h(problems)h
(with)f(type)g(checking)h(Ja)o(v)n(a,)-150 1229 y(it)d(does)i
(signi\002cantly)f(impro)o(v)o(e)g(the)g(state)g(of)f(the)h(art,)f(pro)
o(viding)i(concrete)-150 1312 y(solutions)h(to)e(man)o(y)i(of)f(the)g
(open)h(issues)f(with)g(wildcards.)-150 1490 y FD(2.)91
b(Backgr)n(ound)-150 1606 y FF(In)31 b(early)f(proposals)i(for)e
(adding)i(parametric)f(polymorphism)h(to)e(Ja)o(v)n(a,)-150
1689 y(namely)16 b(GJ)g([1],)f(one)h(could)g(operate)h(on)935
1689 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 935 1689 a Fw(List<String>)935 1689 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 935 1689
a 368 w FF(or)f(on)1471 1689 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1471 1689 a Fw(List<Number>)1471
1689 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1471 1689 a 353 w FF(,)-150 1773 y(yet)36 b(operating)g(on)h
(arbitrary)e(lists)g(w)o(as)h(incon)m(v)o(enient)h(because)g(there)-150
1856 y(w)o(as)f(no)h(form)f(of)f(v)n(ariance.)i(One)f(had)h(to)f
(de\002ne)g(a)g(method)h(with)e(a)-150 1939 y(polymorphic)h(v)n
(ariable)538 1939 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 538 1939 a Fw(P)538 1939 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 538 1939
a 64 w FF(and)e(a)g(parameter)h(of)f(type)1401 1939 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

1401 1939 a Fw(List<P>)1401 1939 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1401 1939 a 206 w
FF(,)g(which)-150 2022 y(seems)18 b(natural)g(e)o(xcept)g(that)f(this)g
(had)i(to)e(be)h(done)g(e)n(v)o(en)h(when)f(the)f(type)h(of)-150
2105 y(the)e(list)f(contents)i(did)g(not)f(matter)l(.)f(That)h(is,)f
(there)i(w)o(as)f(no)g(w)o(ay)h(no)g(refer)e(to)-150
2188 y(all)i(lists)f(re)o(gardless)i(of)f(their)g(elements.)g(This)g
(can)h(be)f(especially)h(limiting)-150 2271 y(for)e(parametric)g
(classes)g(such)g(as)741 2271 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 741 2271 a Fw(Class<P>)741
2271 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 741 2271 a 251 w FF(for)g(which)g(the)g(type)g(parameter)-150
2354 y(is)j(not)g(central)g(to)g(its)f(usage.)i(Thus,)f(Ja)o(v)n(a)g(w)
o(anted)h(a)f(type)g(system)h(be)o(yond)-150 2437 y(standard)g
(parametric)f(polymorphism)i(to)d(address)i(these)f(limitations.)-150
2574 y Fv(2.1)75 b(W)o(ildcards)-150 2690 y FF(W)m(ildcards)35
b(were)g(introduced)h(as)f(a)g(solution)h(to)e(the)i(abo)o(v)o(e)f
(problem)-150 2773 y(among)28 b(others)f([19].)458 2773
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 458 2773 a Fw(List<?>)458 2773 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 458 2773 a 233 w FF(stands)g(for)f
(a)h(list)f(whose)h(elements)g(ha)o(v)o(e)-150 2856 y(an)43
b(arbitrary)f(unkno)n(wn)i(static)e(type.)g(T)-6 b(ypes)43
b(such)g(as)1471 2856 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1471 2856 a Fw(List<String>)1471
2856 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1471 2856 a 353 w FF(,)-150 2939 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -150 2939 a
Fw(List<Number>)-150 2939 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -150 2939 a 353 w FF(,)31
b(and)391 2939 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 391 2939 a Fw(List<List<String>>)391
2939 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 391 2939 a 561 w FF(can)g(all)g(be)g(used)h(as)f(a)1618
2939 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1618 2939 a Fw(List<?>)1618 2939 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1618 2939 a
206 w FF(.)-150 3022 y(The)-9 3022 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -9 3022 a Fw(?)-9
3022 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -9 3022 a 54 w FF(is)25 b(called)g(a)g(wildcard)g(since)g(it)f
(can)i(stand)f(for)g(an)o(y)g(type)h(and)f(the)-150 3105
y(user)d(has)f(to)g(handle)i(it)d(re)o(gardless)i(of)f(what)g(type)h
(it)f(stands)h(for)l(.)e(One)i(can)-150 3188 y(operate)d(on)h(a)233
3188 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 233 3188 a Fw(List<?>)233 3188 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 233 3188 a 225
w FF(as)f(the)o(y)g(w)o(ould)h(an)o(y)f(list)f(so)h(long)g(as)g(the)o
(y)g(mak)o(e)h(no)-150 3271 y(assumptions)i(about)f(the)g(type)g(of)g
(its)f(elements.)g(One)h(can)g(get)g(its)f(length,)-150
3354 y(clear)i(its)f(contents,)h(and)h(e)n(v)o(en)f(get)800
3354 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 800 3354 a Fw(Object)800 3354 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 800 3354 a 177
w FF(s)f(from)h(it)f(since)i(in)e(Ja)o(v)n(a)h(all)g(in-)-150
3437 y(stances)c(belong)h(to)379 3437 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 379 3437 a Fw(Object)379
3437 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 379 3437 a 177 w FF(.)e(As)g(such,)h(one)g(might)g(mistak)o(e)g
(a)1482 3437 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1482 3437 a Fw(List<?>)1482 3437 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1482
3437 a 223 w FF(for)f(a)-150 3520 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -150 3520 a Fw(List<Object>)-150
3520 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -150 3520 a 353 w FF(;)g(ho)n(we)n(v)o(er)m(,)h(unlik)o(e)730
3520 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 730 3520 a Fw(List<Object>)730 3520 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 730 3520
a 353 w FF(,)f(one)h(cannot)g(add)g(arbitrary)-150 3603
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -150 3603 a Fw(Object)-150 3603 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -150 3603 a 177 w
FF(s)27 b(to)h(a)230 3603 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 230 3603 a Fw(List<?>)230
3603 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 230 3603 a 234 w FF(since)g(it)f(might)i(represent)f(a)1279
3603 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1279 3603 a Fw(List<String>)1279 3603 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1279 3603
a 381 w FF(which)-150 3686 y(only)20 b(accepts)240 3686
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 240 3686 a Fw(String)240 3686 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 240 3686 a 177 w FF(s)e(or)h(a)597
3686 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 597 3686 a Fw(List<Number>)597 3686 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 597 3686
a 372 w FF(which)g(only)h(accepts)1560 3686 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1560 3686
a Fw(Number)1560 3686 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1560 3686 a 177 w FF(s.)-50 3769
y(W)m(ildcards)h(can)g(also)g(be)h(constrained)g(in)f(order)g(to)g(con)
m(v)o(e)o(y)i(restricted)-150 3852 y(use)34 b(of)g(the)g(type.)g(F)o
(or)f(e)o(xample,)h(the)g(type)1112 3852 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1112 3852
a Fw(List<?)41 b(extends)f(Number>)1112 3852 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1112 3852
a 681 w FF(is)-150 3935 y(often)18 b(used)g(to)f(indicate)g(read-only)i
(lists)d(of)1023 3935 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1023 3935 a Fw(Number)1023 3935
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1023 3935 a 177 w FF(s.)g(This)h(is)g(because)i(one)-150
4018 y(can)28 b(get)g(elements)g(of)g(the)f(list)g(and)i(statically)e
(kno)n(w)i(the)o(y)f(are)1618 4018 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1618 4018 a Fw(Number)1618
4018 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1618 4018 a 177 w FF(s,)-150 4101 y(b)o(ut)g(one)h(cannot)g(add)
471 4101 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 471 4101 a Fw(Number)471 4101 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 471 4101 a
176 w FF(s)f(to)h(the)f(list)f(since)i(the)f(list)f(may)i(actually)-150
4184 y(represent)f(a)211 4184 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 211 4184 a Fw(List<Integer>)211
4184 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 211 4184 a 409 w FF(which)g(does)g(not)f(accept)h(arbitrary)1618
4184 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1618 4184 a Fw(Number)1618 4184 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1618 4184 a
177 w FF(s.)-150 4267 y(Similarly)-5 b(,)166 4267 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 166
4267 a Fw(List<?)40 b(super)h(Number>)166 4267 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 166
4267 a 612 w FF(is)23 b(often)i(used)f(to)g(indicate)g(write-only)-150
4350 y(lists.)h(This)h(time,)g(one)h(cannot)g(get)829
4350 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 829 4350 a Fw(Number)829 4350 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 829 4350 a 176
w FF(s)f(from)h(the)f(list)g(since)g(it)g(may)-150 4433
y(actually)20 b(be)h(a)250 4433 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 250 4433 a Fw(List<Object>)250
4433 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 250 4433 a 353 w FF(,)e(b)o(ut)h(one)h(can)f(add)1134
4433 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1134 4433 a Fw(Number)1134 4433 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1134 4433 a
177 w FF(s)g(to)g(the)g(list.)f(Note,)-150 4516 y(though,)37
b(that)e(this)g(read-only/write-only)i(usage)f(is)f(only)i(con)m(v)o
(ention)-150 4599 y(and)e(not)f(actually)h(enforced)g(by)f(the)h(type)f
(system.)g(One)h(can)f(mutate)-150 4682 y(a)-89 4682
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -89 4682 a Fw(List<?)40 b(extends)h(Number>)-89 4682
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -89 4682 a 675 w FF(via)28 b(the)824 4682 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 824 4682
a Fw(clear)824 4682 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 824 4682 a 175 w FF(method)g(and)h(one)g(can)f
(read)g(a)-150 4765 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -150 4765 a Fw(List<?)41 b(super)f(Number>)-150
4765 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -150 4765 a 622 w FF(via)34 b(the)722 4765 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 722
4765 a Fw(length)722 4765 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 722 4765 a 210 w FF(method)h(since)f
(neither)g(method)-150 4848 y(uses)19 b(the)g(type)h(parameter)f(for)
678 4848 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 678 4848 a Fw(List)678 4848 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 678 4848 a 118
w FF(.)-50 4932 y(Ja)o(v)n(a')l(s)24 b(subtyping)i(for)e(types)g(with)g
(wildcards)g(is)g(v)o(ery)h(\003e)o(xible.)e(Not)-150
5015 y(only)34 b(can)g(a)220 5015 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 220 5015 a Fw(List<Error>)220
5015 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 220 5015 a 356 w FF(be)g(used)g(as)g(a)1012 5015
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1012 5015 a Fw(List<?)41 b(extends)g(Error>)1012 5015
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1012 5015 a 618 w FF(,)33 b(b)o(ut)g(a)-150 5098 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

-150 5098 a Fw(List<?)41 b(extends)f(Error>)-150 5098
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -150 5098 a 633 w FF(can)15 b(e)n(v)o(en)h(be)g(used)g(as)f(a)1117
5098 y
 currentpoint currentpoint translate .74 1.1 scale neg exch neg exch
translate
 1117 5098 a Fw(List<?)40 b(extends)h(Throwable>)1117
5098 y
 currentpoint currentpoint translate 1 .74 div 1 1.1 div scale neg
exch neg exch translate
 1117 5098 a -150 5181 a FF(since)31 5181 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 31
5181 a Fw(Error)31 5181 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 31 5181 a 175 w FF(is)27 b(a)h(subclass)g(of)
710 5181 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 710 5181 a Fw(Throwable)710 5181 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 710 5181
a 265 w FF(.)f(Similarly)-5 b(,)27 b(a)1401 5181 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1401
5181 a Fw(List<Throwable>)1401 5181 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1401 5181 a -150
5264 a FF(can)j(be)f(used)h(as)g(a)402 5264 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 402 5264
a Fw(List<?)41 b(super)f(Throwable>)402 5264 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 402 5264
a 706 w FF(which)30 b(can)f(be)h(used)g(as)f(a)-150 5347
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -150 5347 a Fw(List<?)41 b(super)f(Error>)-150 5347
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -150 5347 a 559 w FF(.)18 b(Thus)g(by)h(constraining)g(wildcards)g
(abo)o(v)o(e)g(one)g(gets)-150 5430 y(co)o(v)n(ariant)h(subtyping,)h
(and)f(by)f(constraining)i(wildcards)e(belo)n(w)h(one)g(gets)2042
66 y(contra)o(v)n(ariant)15 b(subtyping.)h(This)e(is)h(kno)n(wn)g(as)g
(use-site)g(v)n(ariance)g([17)q(])f(and)2042 149 y(is)24
b(one)i(of)e(the)h(basic)g(challenges)h(of)f(subtyping)h(with)e
(wildcards.)h(Ho)n(w-)2042 232 y(e)n(v)o(er)m(,)18 b(it)g(is)g(only)h
(the)f(be)o(ginning)i(of)e(the)g(dif)n(\002culties)g(for)g(subtyping,)i
(as)e(we)2042 315 y(will)i(demonstrate)i(in)f(Section)g(3.)g(Before)g
(that,)f(we)h(discuss)h(the)f(connec-)2042 399 y(tion)h(between)h
(wildcards)g(and)f(e)o(xistential)h(types)f(as)h(it)e(is)h(useful)h
(for)f(un-)2042 482 y(derstanding)e(and)g(formalizing)f(the)g(man)o(y)h
(subtleties)f(within)f(wildcards.)2042 618 y Fv(2.2)75
b(Existential)18 b(T)-6 b(ypes)2042 734 y FF(Since)28
b(their)g(inception,)h(wildcards)g(ha)o(v)o(e)g(been)g(recognized)h(as)
f(a)f(form)2042 817 y(of)i(e)o(xistential)f(types)i([4,)e(5)q(,)g(7,)h
(9,)f(18)q(,)g(19)q(,)g(21)q(].)g(The)h(wildcard)3855
817 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3855 817 a Fw(?)3855 817 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3855 817 a 59 w FF(rep-)2042
900 y(resents)c(an)g(e)o(xistentially)g(quanti\002ed)h(type)f(v)n
(ariable,)g(so)g(that)3753 900 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3753 900 a Fw(List<?>)3753
900 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3753 900 a 231 w FF(is)2042 983 y(shorthand)c(for)e(the)g(e)o
(xistentially)g(quanti\002ed)h(type)g Fu(9)3470 983 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

3470 983 a Fw(X)3470 983 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3470 983 a 29 w Ft(:)3541
983 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3541 983 a Fw(List<X>)3541 983 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3541 983 a 206
w FF(.)e(Existen-)2042 1066 y(tial)k(quanti\002cation)i(is)e(dual)i(to)
f(uni)n(v)o(ersal)h(quanti\002cation;)f(a)g Fu(8)3754
1066 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3754 1066 a Fw(X)3754 1066 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3754 1066 a 29 w
Ft(:)3828 1066 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3828 1066 a Fw(List<X>)3828 1066 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3828
1066 a 2042 1149 a FF(can)h(be)h(used)g(as)f(a)2573 1149
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2573 1149 a Fw(List<String>)2573 1149 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2573 1149 a
378 w FF(by)g(instantiating)3445 1149 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3445 1149 a Fw(X)3445
1149 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3445 1149 a 54 w FF(to)3582 1149 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3582 1149 a
Fw(String)3582 1149 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3582 1149 a 176 w FF(,)g(and)h(du-)2042
1232 y(ally)d(a)2233 1232 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2233 1232 a Fw(List<String>)2233
1232 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2233 1232 a 376 w FF(can)h(be)g(used)g(as)f(an)h
Fu(9)3212 1232 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3212 1232 a Fw(X)3212 1232 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3212 1232
a 29 w Ft(:)3285 1232 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3285 1232 a Fw(List<X>)3285 1232
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3285 1232 a 229 w FF(by)g(instantiating)4005 1232 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

4005 1232 a Fw(X)4005 1232 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 4005 1232 a 2042 1315 a
FF(to)2124 1315 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2124 1315 a Fw(String)2124 1315 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2124
1315 a 176 w FF(.)f(In)h(particular)m(,)g(an)o(y)g(list)f(can)h(be)h
(used)f(as)g(an)g Fu(9)3604 1315 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3604 1315 a Fw(X)3604
1315 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3604 1315 a 29 w Ft(:)3678 1315 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3678 1315 a
Fw(List<X>)3678 1315 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3678 1315 a 206 w FF(,)f(just)2042
1398 y(lik)o(e)2173 1398 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2173 1398 a Fw(List<?>)2173
1398 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2173 1398 a 205 w FF(.)d(The)f(con)m(v)o(ersion)i(from)f
(concrete)g(instantiation)g(to)g(e)o(xisten-)2042 1481
y(tial)d(quanti\002cation)h(is)g(often)g(done)h(with)e(an)h(e)o
(xplicit)g Fx(pac)o(k)h FF(operation,)f(b)o(ut)2042 1565
y(in)h(this)f(setting)h(all)g(packs)g(are)g(implicit)g(in)f(the)h
(subtype)h(system.)2141 1648 y(Bounded)29 b(wildcards)d(are)h
(represented)h(using)f(bounded)i(quanti\002ca-)2042 1731
y(tion.)k(The)h(wildcard)g(type)2817 1731 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2817 1731
a Fw(List<?)41 b(extends)g(Number>)2817 1731 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2817 1731
a 681 w FF(is)34 b(represented)h(by)2042 1814 y Fu(9)2085
1814 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2085 1814 a Fw(X)k(extends)i(Number)2085 1814
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2085 1814 a 470 w Ft(:)2600 1814 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2600 1814 a Fw(List<X>)2600
1814 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2600 1814 a 206 w FF(.)23 b(A)g(list)f(belongs)j(to)e(this)h(e)o
(xistential)f(type)h(if)2042 1897 y(its)d(element)h(type)g(is)g(a)f
(subtype)i(of)3006 1897 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3006 1897 a Fw(Number)3006
1897 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3006 1897 a 177 w FF(.)e(Examples)h(are)3652 1897
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3652 1897 a Fw(List<Integer>)3652 1897 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3652 1897
a 2042 1980 a FF(and)2168 1980 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2168 1980 a Fw(List<Double>)2168
1980 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2168 1980 a 353 w FF(,)c(which)g(also)h(belong)g(to)3194
1980 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3194 1980 a Fw(List<?)41 b(extends)g(Number>)3194
1980 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3194 1980 a 666 w FF(as)18 b(e)o(x-)2042 2063
y(pected.)g(Once)g(again)g(this)f(is)h(dual)g(to)f(bounded)j(uni)n(v)o
(ersal)f(quanti\002cation.)2141 2146 y(Ev)o(en)28 b(subtyping)g(of)f
(wildcards)g(can)h(be)f(formalized)h(by)f(e)o(xistential)2042
2229 y(subsumption)17 b(\(dual)f(to)g(uni)n(v)o(ersal)h(subsumption)g
([8,)f(10,)g(11]\).)f(F)o(or)h(e)o(xam-)2042 2312 y(ple,)e
Fu(9)2209 2312 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2209 2312 a Fw(X)39 b(extends)i(Error)2209
2312 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2209 2312 a 441 w Ft(:)2686 2312 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2686 2312 a
Fw(List<X>)2686 2312 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2686 2312 a 220 w FF(subsumes)16
b Fu(9)3254 2312 y
 currentpoint currentpoint translate .73 1.1 scale neg exch neg exch
translate
 3254 2312 a Fw(Y)39 b(extends)i(Throwable)3254
2312 y
 currentpoint currentpoint translate 1 .73 div 1 1.1 div scale neg
exch neg exch translate
 3254 2312 a 544 w Ft(:)3834 2312 y
 currentpoint currentpoint translate .73 1.1 scale neg exch neg exch
translate
 3834 2312 a
Fw(List<Y>)3834 2312 y
 currentpoint currentpoint translate 1 .73 div 1 1.1 div scale neg
exch neg exch translate
 3834 2312 a 2042 2395 a FF(because)23
b(the)f(type)g(v)n(ariable)2823 2395 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2823 2395 a Fw(Y)2823
2395 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2823 2395 a 51 w FF(can)h(be)f(instantiated)g(to)g(the)f(type)
3801 2395 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3801 2395 a Fw(X)3801 2395 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3801 2395 a
51 w FF(which)2042 2478 y(is)j(a)h(subtype)h(of)2518
2478 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2518 2478 a Fw(Throwable)2518 2478 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2518 2478
a 289 w FF(because)3069 2478 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3069 2478 a Fw(X)3069
2478 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3069 2478 a 54 w FF(is)e(constrained)i(to)f(be)g(a)g(subtype)
2042 2561 y(of)2130 2561 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2130 2561 a Fw(Error)2130
2561 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2130 2561 a 174 w FF(which)i(is)f(a)g(subclass)h(of)3012
2561 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3012 2561 a Fw(Throwable)3012 2561 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3012 2561
a 265 w FF(.)f(Often)g(this)g(subsumption)2042 2644 y(relation)18
b(is)h(accomplished)h(by)f(e)o(xplicit)g Fx(open)g FF(and)h
Fx(pac)o(k)g FF(operations.)f(The)2042 2727 y(left)k(side)h(is)g
(opened,)h(mo)o(ving)g(its)e(v)n(ariables)i(and)g(their)f(constraints)g
(into)2042 2810 y(the)g(general)g(conte)o(xt,)g(and)g(then)g(the)g
(types)g(in)g(the)g(opened)h(left)e(side)h(are)2042 2893
y(pack)o(ed)19 b(into)e(the)g(v)n(ariables)h(bound)g(in)f(the)g(right)g
(side)h(and)f(the)h(constraints)2042 2976 y(are)i(check)o(ed)i(to)f
(hold)g(for)f(those)h(pack)o(ed)h(types.)e(In)h(the)f(conte)o(xt)h(of)g
(wild-)2042 3059 y(cards,)e(the)h(opening)h(process)f(is)g(called)f
(wildcard)h(capture)g([6,)f(19)q(])g(and)h(is)2042 3142
y(actually)f(part)g(of)g(the)g(speci\002cation)g(for)g(subtyping)h([6)q
(:)e(Chapter)h(4.10.2].)2042 3278 y Fv(2.3)75 b(Implicit)18
b(Constraints)2042 3395 y FF(This)29 b(means)i(that)f(implicit)f
(constraints)i(of)n(fer)f(more)g(than)g(just)g(con)m(v)o(e-)2042
3478 y(nience;)18 b(the)o(y)g(actually)g(increase)h(the)f(e)o(xpressi)n
(v)o(eness)h(of)f(wildcards,)g(pro-)2042 3561 y(ducing)g(a)g
(compromise)g(between)g(the)g(friendly)f(syntax)h(of)g(wildcards)f(and)
2042 3644 y(the)26 b(e)o(xpressi)n(v)o(e)i(po)n(wer)f(of)g(bounded)h(e)
o(xistential)f(types.)f(Ho)n(we)n(v)o(er)m(,)h(this)2042
3727 y(e)o(xpressi)n(v)o(eness)19 b(comes)g(at)e(the)h(cost)g(of)f
(comple)o(xity)i(and)f(is)g(the)g(source)g(of)2042 3810
y(man)o(y)h(of)g(the)g(subtleties)g(behind)h(wildcards.)2042
3946 y Fv(2.4)75 b(Notation)2042 4063 y FF(F)o(or)16
b(traditional)g(e)o(xistential)h(types)g(in)f(which)h(all)f
(constraints)h(are)g(e)o(xplicit,)2042 4146 y(we)27 b(will)f(use)h(the)
h(syntax)g Fu(9)p Fs(\000)23 b(:)i(\001)p Ft(:)i(\034)9
b FF(.)26 b(The)h(set)g Fs(\000)g FF(is)f(the)i(set)e(of)i(bound)2042
4229 y(v)n(ariables,)22 b(and)h(the)f(set)f Fs(\001)h
FF(is)g Fx(all)f FF(constraints)i(on)f(those)h(v)n(ariables.)f(Con-)
2042 4312 y(straints)30 b(in)h Fs(\001)g FF(ha)o(v)o(e)h(the)f(form)g
Ft(v)47 b(<)p Fs(::)e Ft(\034)3214 4280 y Fz(0)3267 4312
y FF(analogous)33 b(to)3690 4312 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3690 4312 a Fw(extends)3690
4312 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3690 4312 a 236 w FF(and)2042 4395 y Ft(v)42 b
Fs(::)p Ft(>)d(\034)2305 4363 y Fz(0)2355 4395 y FF(analogous)30
b(to)2772 4395 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2772 4395 a Fw(super)2772 4395 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2772
4395 a 147 w FF(.)e(Thus)g(we)g(denote)i(the)e(traditional)g(e)o(x-)
2042 4478 y(istential)g(type)i(for)f(the)g(wildcard)g(type)3149
4478 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3149 4478 a Fw(SortedList<?)42 b(super)e(Integer>)3149
4478 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3149 4478 a 823 w FF(as)2042 4561 y Fu(9)2085
4561 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2085 4561 a Fw(X)2085 4561 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2085 4561 a 37 w
Fs(:)2152 4561 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2152 4561 a Fw(X)2152 4561 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2152 4561
a 51 w Fs(::)q Ft(>)2327 4561 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2327 4561 a Fw(Integer)2327
4561 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2327 4561 a 206 w Ft(;)2567 4561 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2567 4561 a
Fw(X)2567 4561 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2567 4561 a 51 w Ft(<)p Fs(::)2741 4561
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2741 4561 a Fw(Comparable<X>)2741 4561 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2741 4561
a 383 w Ft(:)3164 4561 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3164 4561 a Fw(SortedList<X>)3164
4561 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3164 4561 a 382 w FF(.)2141 4644 y(F)o(or)34 b(an)g(e)o(xample)g
(with)f(multiple)h(bound)h(v)n(ariables,)f(consider)h(the)2042
4727 y(follo)n(wing)19 b(class)g(declaration)h(that)f(we)f(will)g(use)i
(throughout)g(this)f(paper:)2597 4848 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2597 4848 a Fw(class)41
b(Super<P,)g(Q)e(extends)i(P>)3696 4839 y
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 3696 4839 a
Fu(fg)3696 4839 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 3696 4839 a 2597 4848 a
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2597 4848 a
2042 4969 a FF(W)-6 b(e)32 b(denote)i(the)f(traditional)g(e)o
(xistential)f(type)i(for)f(the)g(wildcard)g(type)2042
5052 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2042 5052 a Fw(Super<?,?>)2042 5052 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2042 5052
a 313 w FF(as)19 b Fu(9)2479 5052 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2479 5052 a Fw(X)2479
5052 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2479 5052 a 29 w Ft(;)2542 5052 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2542 5052 a
Fw(Y)2542 5052 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2542 5052 a 38 w Fs(:)2610 5052 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2610
5052 a Fw(Y)2610 5052 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2610 5052 a 50 w Ft(<)p Fs(::)2784
5052 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2784 5052 a Fw(X)2784 5052 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2784 5052 a 30 w
Ft(:)2854 5052 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2854 5052 a Fw(Super<X,Y>)2854 5052
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2854 5052 a 294 w FF(.)2042 5230 y FD(3.)91 b(Non-T)-8
b(ermination)21 b(in)i(Subtyping)2042 5347 y FF(The)c(major)h
(challenge)h(of)f(subtyping)h(wildcards)f(is)f(non-termination.)i(In)
2042 5430 y(particular)m(,)c(with)f(wildcards)h(it)g(is)f(possible)i
(for)f(a)f(subtyping)j(algorithm)e(to)p eop end
%%Page: 3 3
TeXDict begin 3 2 bop 214 56 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 214 56 a Fw(class)41 b(C)e(implements)j
(List<List<?)f(super)g(C>>)1823 47 y
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 1823 47 a Fu(fg)1823
47 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 1823 47 a 214 56 a
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 214 56 a 342 197 a Fv(Is)419
197 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 419 197 a Fw(C)419 197 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 419 197 a 48 w Fv(a)19
b(subtype)f(of)872 197 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 872 197 a Fw(List<?)40 b(super)h(C>)872
197 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 872 197 a 441 w Fv(?)-113 340 y FF(Step)19 b(0\))228
340 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 228 340 a Fw(C)228 340 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 228 340 a 51 w Ft(<)319
333 y
 currentpoint currentpoint translate .45 .45 scale neg exch neg exch
translate
 319 333 a Fw(?)319 333 y
 currentpoint currentpoint translate 1 .45 div 1 .45 div scale neg
exch neg exch translate
 319 333 a 332 340 a Fs(:)375
340 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 375 340 a Fw(List<?)40 b(super)h(C>)375 340 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 375
340 a -113 423 a FF(Step)19 b(1\))228 423 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 228 423 a
Fw(List<List<?)42 b(super)e(C>>)228 423 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 228 423 a 639
w Ft(<)907 416 y
 currentpoint currentpoint translate .45 .45 scale neg exch neg exch
translate
 907 416 a Fw(?)907 416 y
 currentpoint currentpoint translate 1 .45 div 1 .45 div scale neg
exch neg exch translate
 907 416 a 921
423 a Fs(:)963 423 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 963 423 a Fw(List<?)h(super)f(C>)963
423 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 963 423 a 460 w FF(\(inheritance\))-113 506 y(Step)19
b(2\))228 506 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 228 506 a Fw(C)228 506 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 228 506 a 51
w Ft(<)319 499 y
 currentpoint currentpoint translate .45 .45 scale neg exch neg exch
translate
 319 499 a Fw(?)319 499 y
 currentpoint currentpoint translate 1 .45 div 1 .45 div scale neg
exch neg exch translate
 319 499 a 332
506 a Fs(:)375 506 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 375 506 a Fw(List<?)40 b(super)h(C>)375
506 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 375 506 a 460 w FF(\(checking)20 b(wildcard)1428
506 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1428 506 a Fw(?)40 b(super)g(C)1428 506 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1428
506 a 265 w FF(\))-113 589 y(Step)19 b(.)11 b(.)g(.)110
b(\(c)o(ycle)19 b(fore)n(v)o(er\))p -150 708 1993 3 v
-21 793 a Fv(Figur)o(e)f(1.)37 b FF(Example)19 b(of)g(c)o(yclic)g
(dependenc)o(y)j(in)c(subtyping)j([9])82 1025 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 82 1025
a Fw(class)40 b(C<P>)g(implements)i(List<List<?)g(super)e(C<C<P>>>>)
2043 1016 y
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 2043 1016 a Fu(fg)2043 1016 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 2043 1016 a
82 1025 a
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 82 1025 a 166 1166 a Fv(Is)242 1166 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 242 1166
a Fw(C<Byte>)242 1166 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 242 1166 a 225 w Fv(a)19 b(subtype)f(of)872
1166 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 872 1166 a Fw(List<?)40 b(super)h(C<Byte>>)872
1166 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 872 1166 a 618 w Fv(?)-146 1309 y FF(Step)19 b(0\))133
1309 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 133 1309 a Fw(C<Byte>)133 1309 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 133 1309 a 227
w Ft(<)400 1302 y
 currentpoint currentpoint translate .45 .45 scale neg exch neg exch
translate
 400 1302 a Fw(?)400 1302 y
 currentpoint currentpoint translate 1 .45 div 1 .45 div scale neg
exch neg exch translate
 400 1302
a 413 1309 a Fs(:)456 1309 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 456 1309 a Fw(List<?)40
b(super)h(C<Byte>>)456 1309 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 456 1309 a -146 1392 a
FF(Step)19 b(1\))133 1392 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 133 1392 a Fw(List<List<?)41
b(super)g(C<C<Byte>>>>)133 1392 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 133 1392 a 904 w Ft(<)1077
1385 y
 currentpoint currentpoint translate .45 .45 scale neg exch neg exch
translate
 1077 1385 a Fw(?)1077 1385 y
 currentpoint currentpoint translate 1 .45 div 1 .45 div scale neg
exch neg exch translate
 1077 1385 a 1090
1392 a Fs(:)1132 1392 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1132 1392 a Fw(List<?)g(super)f(C<Byte>>)1132
1392 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1132 1392 a -146 1475 a FF(Step)19 b(2\))133 1475
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 133 1475 a Fw(C<Byte>)133 1475 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 133 1475 a 227 w Ft(<)400
1468 y
 currentpoint currentpoint translate .45 .45 scale neg exch neg exch
translate
 400 1468 a Fw(?)400 1468 y
 currentpoint currentpoint translate 1 .45 div 1 .45 div scale neg
exch neg exch translate
 400 1468 a 413 1475
a Fs(:)456 1475 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 456 1475 a Fw(List<?)40 b(super)h(C<C<Byte>>>)456
1475 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 456 1475 a -146 1558 a FF(Step)19 b(3\))133 1558
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 133 1558 a Fw(List<List<?)41 b(super)g(C<C<Byte>>>>)133
1558 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 133 1558 a 904 w Ft(<)1077 1551 y
 currentpoint currentpoint translate .45 .45 scale neg exch neg exch
translate
 1077 1551 a
Fw(?)1077 1551 y
 currentpoint currentpoint translate 1 .45 div 1 .45 div scale neg
exch neg exch translate
 1077 1551 a 1090 1558 a Fs(:)1132 1558
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1132 1558 a Fw(List<?)g(super)f(C<C<Byte>>>)1132 1558
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1132 1558 a -146 1641 a FF(Step)19 b(4\))133 1641 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

133 1641 a Fw(C<C<Byte>>)133 1641 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 133 1641 a 315 w
Ft(<)488 1634 y
 currentpoint currentpoint translate .45 .45 scale neg exch neg exch
translate
 488 1634 a Fw(?)488 1634 y
 currentpoint currentpoint translate 1 .45 div 1 .45 div scale neg
exch neg exch translate
 488 1634 a
501 1641 a Fs(:)544 1641 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 544 1641 a Fw(List<?)41 b(super)f
(C<C<Byte>>>)544 1641 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 544 1641 a -146 1724 a FF(Step)19
b(.)11 b(.)g(.)48 b(\(e)o(xpand)20 b(fore)n(v)o(er\))p
-150 1843 1993 3 v 44 1928 a Fv(Figur)o(e)e(2.)38 b FF(Example)19
b(of)g(ac)o(yclic)g(proofs)h(in)f(subtyping)h([9])-150
2170 y(al)o(w)o(ays)d(be)g(making)h(progress)g(and)f(yet)g(still)f(run)
h(fore)n(v)o(er)l(.)f(This)h(is)f(because)-150 2253 y(there)26
b(are)g(man)o(y)h(sources)g(of)f(in\002nity)g(in)g(Ja)o(v)n(a')l(s)g
(type)h(system,)f(none)h(of)-150 2336 y(which)j(are)g(apparent)h(at)f
(\002rst)f(glance.)h(These)h(sources)f(arise)g(from)g(the)-150
2419 y(f)o(act)20 b(that)f(wildcards)h(are,)f(in)g(terms)g(of)h(e)o
(xistential)f(types,)h(impredicati)n(v)o(e.)-150 2502
y(That)30 b(is,)116 2502 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 116 2502 a Fw(List<?>)116
2502 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 116 2502 a 236 w FF(is)g(itself)g(a)g(type)h(and)g(can)g(be)g
(used)g(in)g(nearly)g(e)n(v)o(ery)-150 2585 y(location)22
b(a)g(type)g(without)g(wildcards)g(could)g(be)g(used.)g(F)o(or)f(e)o
(xample,)h(the)-150 2668 y(type)9 2668 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 9 2668 a Fw(List<List<?>>)9
2668 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 9 2668 a 412 w FF(stands)31 b(for)755 2668 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 755
2668 a Fw(List<)755 2668 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 755 2668 a 147 w Fu(9)945
2668 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 945 2668 a Fw(X)945 2668 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 945 2668 a 30 w Ft(:)1026
2668 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1026 2668 a Fw(List<X>>)1026 2668 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1026 2668
a 235 w FF(,)f(whereas)h(it)e(w)o(ould)-150 2751 y(represent)20
b(simply)f Fu(9)408 2751 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 408 2751 a Fw(X)408 2751 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate

408 2751 a 29 w Ft(:)477 2751 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 477 2751 a Fw(List<List<X>>)477
2751 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 477 2751 a 401 w FF(in)g(a)g(predicati)n(v)o(e)g(system.)-50
2834 y(W)-6 b(e)25 b(ha)o(v)o(e)i(identi\002ed)f(three)g(sources)h(of)f
(in\002nity)g(due)h(to)f(impredica-)-150 2917 y(ti)n(vity)18
b(of)h(wildcards,)f(in)h(particular)f(due)h(to)g(wildcards)g(in)f(the)h
(inheritance)-150 3000 y(hierarchy)j(and)g(in)f(type-parameter)h
(constraints.)g(The)f(\002rst)g(source)h(is)f(in-)-150
3083 y(\002nite)c(proofs)h(of)g(subtyping.)g(The)g(second)g(source)h
(is)e(wildcard)g(types)h(that)-150 3166 y(represent)28
b(in\002nite)e(traditional)h(e)o(xistential)g(types.)h(The)f(third)g
(source)h(is)-150 3249 y(proofs)f(that)e(are)h(\002nite)g(when)g(e)o
(xpressed)h(using)g(wildcards)f(b)o(ut)g(in\002nite)-150
3332 y(using)d(traditional)e(e)o(xistential)h(types.)g(Here)g(we)g
(illustrate)f(each)h(of)g(these)-150 3415 y(challenges)e(for)f
(creating)g(a)g(terminating)g(subtyping)i(algorithm.)-150
3570 y Fv(3.1)75 b(In\002nite)17 b(Pr)o(oofs)-150 3686
y FF(K)n(ennedy)j(and)g(Pierce)e(pro)o(vide)i(e)o(xcellent)f(simple)g
(e)o(xamples)h(illustrating)-150 3769 y(some)27 b(basic)f(dif)n
(\002culties)g(with)g(wildcards)h([9])f(caused)h(by)g(the)f(f)o(act)g
(that)-150 3852 y(wildcards)i(can)h(be)f(used)h(in)e(the)i(inheritance)
f(hierarchy)-5 b(.)29 b(In)f(particular)m(,)-150 3935
y(their)21 b(e)o(xamples)h(demonstrate)g(that)f(with)g(wildcards)g(it)g
(is)f(quite)i(possible)-150 4018 y(for)32 b(the)h(question)g(of)g
(whether)f Ft(\034)41 b FF(is)32 b(a)g(subtype)i(of)e
Ft(\034)1369 3987 y Fz(0)1423 4018 y FF(to)h(recursi)n(v)o(ely)-150
4101 y(depend)38 b(on)f(whether)g Ft(\034)44 b FF(is)36
b(a)h(subtype)g(of)g Ft(\034)1134 4070 y Fz(0)1192 4101
y FF(in)f(a)g(non-tri)n(vial)h(w)o(ay)-5 b(.)-150 4184
y(Consider)21 b(the)f(program)g(in)g(Figure)g(1)g(and)h(the)f(question)
h(\223Is)1491 4184 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1491 4184 a Fw(C)1491 4184 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1491
4184 a 50 w FF(is)e(subtype)-150 4267 y(of)-55 4267 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

-55 4267 a Fw(List<?)40 b(super)h(C>)-55 4267 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -55 4267
a 441 w FF(?\224.)32 b(The)h(bottom)g(part)g(of)f(the)h(\002gure)g
(contains)g(the)-150 4350 y(steps)18 b(in)g(a)g(potential)g(proof)h
(for)f(answering)g(this)g(question.)h(W)-6 b(e)17 b(start)h(with)-150
4433 y(the)23 b(goal)g(of)f(sho)n(wing)i(that)608 4433
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 608 4433 a Fw(C)608 4433 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 608 4433 a 52 w FF(is)e(a)h(subtype)g(of)
1127 4433 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1127 4433 a Fw(List<?)41 b(super)f(C>)1127
4433 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1127 4433 a 441 w FF(.)22 b(F)o(or)h(this)-150
4516 y(goal)c(to)g(hold,)245 4516 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 245 4516 a Fw(C)245
4516 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 245 4516 a 29 w FF(')l(s)f(superclass)668 4516
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 668 4516 a Fw(List<List<?)42 b(super)e(C>>)668 4516
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 668 4516 a 637 w FF(must)19 b(be)g(a)g(subtype)-150
4599 y(of)-61 4599 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -61 4599 a Fw(List<?)40 b(super)h(C>)-61
4599 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -61 4599 a 468 w FF(\(Step)26 b(1\).)g(F)o(or)g(this)h(to)g
(hold,)1225 4599 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1225 4599 a Fw(List<List<?)41 b(super)g(C>>)1225
4599 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1225 4599 a -150 4682 a FF(must)29 b(be)123 4682
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 123 4682 a Fw(List)123 4682 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 123 4682 a 146 w FF(of)g(some)g
(supertype)h(of)956 4682 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 956 4682 a Fw(C)956 4682 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate

956 4682 a 29 w FF(,)e(so)1127 4682 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1127 4682 a Fw(C)1127
4682 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1127 4682 a 58 w FF(must)h(be)g(a)f(subtype)i(of)-150
4765 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -150 4765 a Fw(List<?)41 b(super)f(C>)-150 4765
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -150 4765 a 460 w FF(\(Step)18 b(2\).)h(This)f(w)o(as)h(our)h
(original)f(question,)g(though,)h(so)-150 4848 y(whether)110
4848 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 110 4848 a Fw(C)110 4848 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 110 4848 a 50 w FF(is)f(a)h(subtype)h
(of)617 4848 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 617 4848 a Fw(List<?)40 b(super)g(C>)617
4848 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 617 4848 a 461 w FF(actually)20 b(depends)i(on)e(itself)-150
4932 y(non-tri)n(vially)-5 b(.)22 b(This)e(means)i(that)f(we)g(can)h
(actually)g(pro)o(v)o(e)1435 4932 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1435 4932 a Fw(C)1435
4932 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1435 4932 a 50 w FF(is)f(a)g(subtype)-150 5015
y(of)-69 5015 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -69 5015 a Fw(List<?)41 b(super)f(C>)-69
5015 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -69 5015 a 460 w Fx(pr)m(o)o(vided)22 b FF(we)d(use)g(an)g
(in\002nite)g(proof.)-50 5098 y(The)h(proof)g(for)g(Figure)g(1)h
(repeats)f(itself,)f(b)o(ut)h(there)g(are)g(e)n(v)o(en)h(subtyp-)-150
5181 y(ing)j(proofs)g(that)f(e)o(xpand)i(fore)n(v)o(er)f(without)f(e)n
(v)o(er)h(repeating)g(themselv)o(es.)-150 5264 y(F)o(or)e(e)o(xample,)h
(consider)h(the)f(program)g(in)g(Figure)g(2,)f(which)h(is)g(a)f(simple)
-150 5347 y(modi\002cation)27 b(of)f(the)g(program)g(in)g(Figure)g(1.)g
(The)g(major)g(dif)n(ference)h(is)-150 5430 y(that)-11
5430 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -11 5430 a Fw(C)-11 5430 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -11 5430 a 56 w FF(no)n(w)h(has)g(a)f
(type)g(parameter)867 5430 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 867 5430 a Fw(P)867 5430
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 867 5430 a 56 w FF(and)h(in)f(the)h(superclass)g(the)f(type)2042
66 y(ar)o(gument)18 b(to)2415 66 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2415 66 a Fw(C)2415
66 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2415 66 a 47 w FF(is)2529 66 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2529 66 a Fw(C<P>)2529
66 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2529 66 a 135 w FF(\(which)f(could)h(just)g(as)f(easily)h(be)3555
66 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3555 66 a Fw(List<P>)3555 66 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3555 66 a 223 w FF(or)3858
66 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3858 66 a Fw(Set<P>)3858 66 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3858 66 a 2042 149
a FF(without)23 b(af)n(fecting)g(the)g(structure)g(of)g(the)f(proof\).)
h(This)g(is)f(kno)n(wn)i(as)f(e)o(x-)2042 232 y(pansi)n(v)o(e)j
(inheritance)g([9)q(,)e(20)q(])h(since)h(the)f(type)h(parameter)3653
232 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3653 232 a Fw(P)3653 232 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3653 232 a 54 w FF(e)o(xpands)h(to)
2042 315 y(the)h(type)g(ar)o(gument)2626 315 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2626 315
a Fw(C<P>)2626 315 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2626 315 a 145 w FF(corresponding)i(to)e(that)g
(same)g(type)h(parame-)2042 399 y(ter)2141 399 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2141
399 a Fw(P)2141 399 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2141 399 a 29 w FF(.)20 b(Because)i(of)e(this)h
(e)o(xpansion,)h(the)e(proof)i(repeats)f(itself)e(e)n(v)o(ery)j(four)
2042 482 y(steps)d(e)o(xcept)g(with)g(an)g(e)o(xtra)2830
482 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2830 482 a Fw(C<->)2830 482 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2830 482 a 137 w
FF(layer)g(so)g(that)f(the)h(proof)h(is)e(ac)o(yclic.)2141
565 y(Ja)o(v)n(a)k(rejects)g(all)f(in\002nite)g(proofs)h([6)q(:)f
(Chapter)h(4.10],)g(and)g Fw(javac)g FF(at-)2042 648
y(tempts)i(to)g(enforce)h(this)f(decision,)g(rejecting)h(the)f(program)
h(in)f(Figure)g(1)2042 731 y(b)o(ut)i(suf)n(fering)h(a)f(stack)g(o)o(v)
o(er\003o)n(w)h(on)g(the)f(program)h(in)f(Figure)g(2.)g(Thus,)2042
814 y(neither)18 b(of)f(the)h(subtypings)h(in)f(Figures)f(1)h(and)h(2)e
(hold)i(according)g(to)e(Ja)o(v)n(a.)2042 897 y(Although)32
b(this)f(seems)g(natural,)g(as)h(induction)g(is)f(generally)h
(preferred)2042 980 y(o)o(v)o(er)19 b(coinduction,)h(it)e(seems)h(that)
f(for)h(Ja)o(v)n(a)g(this)f(is)g(actually)i(an)e(inconsis-)2042
1063 y(tent)h(choice)g(for)g(reasons)h(we)f(will)f(illustrate)g(in)h
(Section)g(3.3.)f(In)h(our)h(type)2042 1146 y(system,)j(in\002nite)f
(proofs)i(are)e(not)h(e)n(v)o(en)h(possible,)f(a)o(v)o(oiding)h(the)e
(need)i(to)2042 1229 y(choose)i(whether)f(to)g(accept)h(or)f(reject)g
(in\002nite)f(proofs.)h(Our)g(simple)g(re-)2042 1312
y(cursi)n(v)o(e)19 b(subtyping)i(algorithm)e(terminates)g(because)h(of)
f(this.)2042 1465 y Fv(3.2)75 b(Implicitly)18 b(In\002nite)f(T)-6
b(ypes)2042 1582 y FF(W)g(ehr)21 b(and)g(Thiemann)h(pro)o(v)o(ed)g
(that)f(subtyping)h(of)g(bounded)h(impredica-)2042 1665
y(ti)n(v)o(e)18 b(e)o(xistential)f(types)i(is)e(undecidable)j([21)q(].)
d(W)m(ildcards)h(are)f(a)h(restricted)2042 1748 y(form)h(of)h(e)o
(xistential)f(types)h(though,)g(so)g(their)f(proof)h(does)g(not)g
(imply)f(that)2042 1831 y(subtyping)31 b(of)e(wildcards)g(is)g
(undecidable.)i(Ho)n(we)n(v)o(er)m(,)f(we)f(ha)o(v)o(e)h(deter)o(-)2042
1914 y(mined)j(that)f(there)g(are)h(wildcard)f(types)h(that)f(actually)
h(cannot)g(be)g(e)o(x-)2042 1997 y(pressed)22 b(by)h(W)-6
b(ehr)21 b(and)i(Thiemann')l(s)f(type)g(system.)g(In)g(particular)m(,)f
(W)-6 b(ehr)2042 2080 y(and)26 b(Thiemann)h(use)f Fx(\002nite)g
FF(e)o(xistential)f(types)i(in)e(which)h(all)g(constraints)2042
2163 y(are)i(e)o(xplicit,)f(b)o(ut)h(making)h(all)f(implicit)f
(constraints)i(on)g(wildcards)f(e)o(x-)2042 2246 y(plicit)e(can)h
(actually)f(result)h(in)f(an)h Fx(in\002nite)f FF(traditional)h(e)o
(xistential)f(type.)2042 2329 y(That)c(is,)g(wildcard)h(types)h(can)f
(implicitly)f(represent)i(in\002nite)e(traditional)2042
2412 y(e)o(xistential)d(types.)2141 2495 y(Consider)h(the)f(follo)n
(wing)g(class)g(declaration:)2450 2621 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2450 2621 a
Fw(class)41 b(Infinite<P)g(extends)g(Infinite<?>>)3941
2612 y
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 3941 2612 a Fu(fg)3941 2612 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 3941 2612 a 2450
2621 a
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2450 2621 a 2042 2748 a FF(The)15 b(wildcard)h(type)2594
2748 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2594 2748 a Fw(Infinite<?>)2594 2748 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2594 2748
a 339 w FF(translates)g(to)f(an)h(in\002nite)f(traditional)h(e)o(x-)
2042 2831 y(istential)f(type)i(because)h(its)d(implicit)h(constraints)h
(must)f(be)h(made)g(e)o(xplicit.)2042 2914 y(In)25 b(one)i(step)e(it)g
(translates)h(to)f Fu(9)2909 2914 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2909 2914 a Fw(X)2909
2914 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2909 2914 a 51 w Fs(:)3002 2914 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3002 2914 a
Fw(X)3002 2914 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3002 2914 a 64 w Ft(<)p Fs(::)3202 2914
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3202 2914 a Fw(Infinite<?>)3202 2914 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3202 2914 a
324 w Ft(:)3573 2914 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3573 2914 a Fw(Infinite<X>)3573
2914 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3573 2914 a 323 w FF(,)g(b)o(ut)2042 2997 y(then)18
b(the)g(nested)2505 2997 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2505 2997 a Fw(Infinite<?>)2505
2997 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2505 2997 a 341 w FF(needs)h(to)e(be)h(recursi)n(v)o(ely)h
(translated)f(which)2042 3080 y(repeats)27 b(ad)f(in\002nitum.)g(Thus)
2871 3080 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2871 3080 a Fw(Infinite<?>)2871 3080 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2871
3080 a 349 w FF(is)g(implicitly)g(in\002nite.)g(Inter)o(-)2042
3163 y(estingly)-5 b(,)19 b(this)g(type)g(is)f(actually)i(inhabitable)f
(by)h(the)f(follo)n(wing)g(class:)2480 3290 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2480 3290
a Fw(class)40 b(Omega)g(extends)h(Infinite<Omega>)3892
3281 y
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 3892 3281 a Fu(fg)3892 3281 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 3892 3281 a 2480
3290 a
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2480 3290 a 2141 3416 a FF(This)22 b(means)h(that)f(wildcards)h
(are)f(e)n(v)o(en)h(more)g(challenging)h(than)e(had)2042
3499 y(been)17 b(belie)n(v)o(ed)g(so)f(f)o(ar)l(.)f(In)h(f)o(act,)g(a)g
(modi\002cation)g(lik)o(e)g(the)h(one)f(for)g(Figure)g(2)2042
3582 y(can)25 b(be)h(applied)g(to)f(get)g(a)g(wildcard)h(type)f(which)h
(implicitly)e(represents)2042 3665 y(an)32 b(ac)o(yclically)f
(in\002nite)g(type.)h(Because)g(of)g(implicitly)f(in\002nite)g(types,)
2042 3748 y(one)20 b(cannot)h(e)o(xpect)f(structural)f(recursion)i
(using)f(implicit)f(constraints)h(to)2042 3831 y(terminate,)e(se)n(v)o
(erely)i(limiting)e(techniques)i(for)f(a)f(terminating)i(subtyping)2042
3914 y(algorithm.)d(Our)h(e)o(xample)g(illustrating)f(this)h(problem)g
(is)f(comple)o(x,)h(so)g(we)2042 3998 y(lea)o(v)o(e)24
b(it)g(until)g(Section)g(4.4.)g(Nonetheless,)h(we)g(were)f(able)h(to)f
(surmount)2042 4081 y(this)f(challenge)h(by)g(e)o(xtracting)f(implicit)
g(constraints)h(lazily)f(and)h(relying)2042 4164 y(only)19
b(on)h(\002niteness)f(of)g(the)g(e)o(xplicit)f(type.)2042
4317 y Fv(3.3)75 b(Implicitly)18 b(In\002nite)f(Pr)o(oofs)2042
4433 y FF(Possibly)e(the)h(most)g(interesting)f(aspect)h(of)g(Ja)o(v)n
(a')l(s)f(wildcards)h(is)f(that)h(\002nite)2042 4516
y(proofs)24 b(of)g(subtyping)h(wildcards)f(can)h(actually)f(e)o(xpress)
g(in\002nite)f(proofs)2042 4599 y(of)14 b(subtyping)j(traditional)d(e)o
(xistential)h(types.)f(This)h(means)g(that)g(subtyping)2042
4682 y(with)23 b(wildcards)h(is)g(actually)g(more)g(po)n(werful)h(than)
f(traditional)g(systems)2042 4765 y(for)33 b(subtyping)i(with)f(e)o
(xistential)f(types)h(because)h(traditional)f(systems)2042
4848 y(only)18 b(permit)g(\002nite)f(proofs.)h(Lik)o(e)g(before,)g
(implicitly)g(in\002nite)f(proofs)i(can)2042 4932 y(e)o(xist)f(because)
j(of)e(implicit)f(constraints)h(on)h(wildcards.)2141
5015 y(T)-6 b(o)16 b(witness)g(ho)n(w)h(implicitly)f(in\002nite)f
(proofs)i(arise,)f(consider)h(the)f(pro-)2042 5098 y(grams)21
b(and)g(proofs)g(in)f(Figure)g(3.)h(On)f(the)h(left,)e(we)h(pro)o(vide)
i(the)e(program)2042 5181 y(and)e(proof)g(in)g(terms)f(of)h(wildcards.)
g(On)f(the)h(right,)f(we)h(pro)o(vide)g(the)g(trans-)2042
5264 y(lation)e(of)g(that)h(program)g(and)g(proof)g(to)f(traditional)g
(e)o(xistential)h(types.)f(The)2042 5347 y(left)21 b(proof)h(is)g
(\002nite,)f(whereas)h(the)g(right)g(proof)g(is)g(in\002nite.)f(The)h
(k)o(e)o(y)g(dif-)2042 5430 y(ference)h(stems)f(from)g(the)g(f)o(act)g
(that)g(Ja)o(v)n(a)h(does)f(not)h(check)g(implicit)f(con-)p
eop end
%%Page: 4 4
TeXDict begin 4 3 bop 573 65 a FD(J)o(a)n(v)o(a)20 b(W)n(ildcards)317
206 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 317 206 a Fw(class)40 b(C)g(extends)g(Super<Super<?,?>,C>)1729
197 y
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 1729 197 a Fu(fg)1729 197 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 1729 197 a 317 206
a
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 317 206 a 445 349 a Fv(Is)521 349 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 521 349 a Fw(C)521
349 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 521 349 a 48 w Fv(a)20 b(subtype)d(of)974 349 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

974 349 a Fw(Super<?,?>)974 349 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 974 349 a 294 w Fv(?)190
515 y FF(Steps)h(of)h(Proof)p 190 543 1371 4 v 190 601
a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 190 601 a Fw(C)190 601 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 190 601 a 51 w Ft(<)281 594
y
 currentpoint currentpoint translate .45 .45 scale neg exch neg exch
translate
 281 594 a Fw(?)281 594 y
 currentpoint currentpoint translate 1 .45 div 1 .45 div scale neg
exch neg exch translate
 281 594 a 294 601 a Fs(:)336
601 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 336 601 a Fw(Super<?,?>)336 601 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 336 601 a 190
684 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 190 684 a Fw(Super<Super<?,?>,C>)190 684 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 190
684 a 580 w Ft(<)810 677 y
 currentpoint currentpoint translate .45 .45 scale neg exch neg exch
translate
 810 677 a Fw(?)810 677 y
 currentpoint currentpoint translate 1 .45 div 1 .45 div scale neg
exch neg exch translate
 810
677 a 823 684 a Fs(:)866 684 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 866 684 a Fw(Super<?,?>)866
684 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 866 684 a 313 w FF(\(inheritance\))190 767 y(\(completes\))2445
63 y FD(T)-7 b(raditional)23 b(Existential)g(T)-7 b(ypes)2242
204 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2242 204 a Fw(class)40 b(C)g(extends)g(Super<)2242
204 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2242 204 a 647 w Fu(9)2932 204 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2932 204 a Fw(X)2932
204 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2932 204 a 29 w Ft(;)2995 204 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2995 204 a Fw(Y)2995
204 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2995 204 a 38 w Fs(:)3063 204 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3063 204 a Fw(Y)3063
204 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3063 204 a 51 w Ft(<)p Fs(::)3238 204 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3238 204
a Fw(X)3238 204 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3238 204 a 29 w Ft(:)3307 204 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3307
204 a Fw(Super<X,Y>)3307 204 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3307 204 a 3601 204 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

3601 204 a Fw(,C>)3758 195 y
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 3758 195 a Fu(fg)3758 195
y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 3758 195 a 3601 204 a
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3601 204 a 2302 348 a Fv(Is)2379
348 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2379 348 a Fw(C)2379 348 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2379 348 a 48 w Fv(a)19
b(subtype)f(of)h Fu(9)2875 348 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2875 348 a Fw(X)2875
348 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2875 348 a 2904 316 a Fz(0)2927 348 y Ft(;)2961
348 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2961 348 a Fw(Y)2961 348 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2961 348 a 2990 316
a Fz(0)3021 348 y Fs(:)3051 348 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3051 348 a Fw(Y)3051
348 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3051 348 a 3080 316 a Fz(0)3124 348 y Ft(<)p Fs(::)3248
348 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3248 348 a Fw(X)3248 348 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3248 348 a 3277 316
a Fz(0)3300 348 y Ft(:)3340 348 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3340 348 a Fw(Super<X)3340
348 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3340 348 a 3545 316 a Fz(0)3568 348 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3568 348
a Fw(,Y)3568 348 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3568 348 a 3627 316 a Fz(0)3649 348
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3649 348 a Fw(>)3649 348 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3649 348 a 29 w Fv(?)2039
514 y FF(Steps)g(of)f(Proof)p 2039 542 1941 4 v 2039
602 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2039 602 a Fw(C)2039 602 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2039 602 a 51 w Ft(<)2130
595 y
 currentpoint currentpoint translate .45 .45 scale neg exch neg exch
translate
 2130 595 a Fw(?)2130 595 y
 currentpoint currentpoint translate 1 .45 div 1 .45 div scale neg
exch neg exch translate
 2130 595 a 2143 602
a Fs(:)j Fu(9)2228 602 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2228 602 a Fw(X)2228 602 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2228
602 a 2258 570 a Fz(0)2280 602 y Ft(;)2314 602 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2314
602 a Fw(Y)2314 602 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2314 602 a 2343 570 a Fz(0)2374
602 y Fs(:)2404 602 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2404 602 a Fw(Y)2404 602 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2404
602 a 2434 570 a Fz(0)2477 602 y Ft(<)p Fs(::)2601 602
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2601 602 a Fw(X)2601 602 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2601 602 a 2631 570 a Fz(0)2653
602 y Ft(:)2693 602 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2693 602 a Fw(Super<X)2693 602
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2693 602 a 2899 570 a Fz(0)2921 602 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2921 602 a Fw(,Y)2921
602 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2921 602 a 2980 570 a Fz(0)3002 602 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3002 602
a Fw(>)3002 602 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3002 602 a 2039 686 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2039 686 a Fw(Super<)2039
686 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2039 686 a 176 w Fu(9)2258 686 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2258 686 a Fw(X)2258
686 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2258 686 a 30 w Ft(;)2322 686 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2322 686 a Fw(Y)2322
686 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2322 686 a 38 w Fs(:)2390 686 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2390 686 a Fw(Y)2390
686 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2390 686 a 50 w Ft(<)p Fs(::)2564 686 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2564 686
a Fw(X)2564 686 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2564 686 a 29 w Ft(:)2633 686 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2633
686 a Fw(Super<X,Y>)2633 686 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2633 686 a 2928 686 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

2928 686 a Fw(,C>)2928 686 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2928 686 a 109 w Ft(<)3077
679 y
 currentpoint currentpoint translate .45 .45 scale neg exch neg exch
translate
 3077 679 a Fw(?)3077 679 y
 currentpoint currentpoint translate 1 .45 div 1 .45 div scale neg
exch neg exch translate
 3077 679 a 3090 686
a Fs(:)h Fu(9)3176 686 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3176 686 a Fw(X)3176 686 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3176
686 a 3205 654 a Fz(0)3227 686 y Ft(;)3262 686 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3262
686 a Fw(Y)3262 686 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3262 686 a 3291 654 a Fz(0)3322
686 y Fs(:)3352 686 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3352 686 a Fw(Y)3352 686 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3352
686 a 3381 654 a Fz(0)3425 686 y Ft(<)p Fs(::)3549 686
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3549 686 a Fw(X)3549 686 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3549 686 a 3578 654 a Fz(0)3600
686 y Ft(:)3640 686 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3640 686 a Fw(Super<X)3640 686
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3640 686 a 3846 654 a Fz(0)3869 686 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3869 686 a Fw(,Y)3869
686 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3869 686 a 3928 654 a Fz(0)3950 686 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3950 686
a Fw(>)3950 686 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3950 686 a 2039 769 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2039 769 a Fw(C)2039
769 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2039 769 a 51 w Ft(<)2130 762 y
 currentpoint currentpoint translate .45 .45 scale neg exch neg exch
translate
 2130 762 a Fw(?)2130
762 y
 currentpoint currentpoint translate 1 .45 div 1 .45 div scale neg
exch neg exch translate
 2130 762 a 2143 769 a Fs(:)f Fu(9)2228 769 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2228
769 a Fw(X)2228 769 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2228 769 a 30 w Ft(;)2292 769 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

2292 769 a Fw(Y)2292 769 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2292 769 a 38 w Fs(:)2360
769 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2360 769 a Fw(Y)2360 769 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2360 769 a 50 w Ft(<)p
Fs(::)2534 769 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2534 769 a Fw(X)2534 769 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2534 769
a 29 w Ft(:)2603 769 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2603 769 a Fw(Super<X,Y>)2603
769 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2603 769 a 2039 852 a FF(\(repeats)e(fore)n(v)o(er\))p
-150 913 4185 3 v 1046 998 a Fv(Figur)o(e)f(3.)38 b FF(Example)19
b(of)g(an)g(implicitly)f(in\002nite)h(subtyping)h(proof)109
1246 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 109 1246 a Fw(class)41 b(C<P)f(extends)g(List<?)h(super)f
(C<D>>>)h(implements)g(List<P>)2345 1237 y
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 2345 1237
a Fu(fg)2345 1237 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 2345 1237 a 109 1246 a
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 109 1246 a
-150 1329 a FF(Decl.)18 b(1\))109 1329 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 109 1329 a Fw(class)41
b(D)e(implements)j(List<C<?>>)1286 1320 y
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 1286 1320 a
Fu(fg)1286 1320 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 1286 1320 a 109 1329 a
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 109 1329 a -150
1412 a FF(Decl.)18 b(2\))109 1412 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 109 1412 a Fw(class)41
b(D)e(implements)j(List<C<?)f(extends)g(List<?)f(super)g(C<D>>>>)2345
1403 y
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 2345 1403 a Fu(fg)2345 1403 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 2345 1403 a 109
1412 a
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 109 1412 a 537 1555 a Fv(Is)613 1555 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 613 1555
a Fw(C<D>)613 1555 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 613 1555 a 137 w Fv(a)19 b(v)o(alid)g(type?)531
1695 y(Using)f(Declaration)h(1)p -19 1723 1730 4 v -19
1781 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -19 1781 a Fw(D)-19 1781 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -19 1781 a 48 w Ft(<)69
1774 y
 currentpoint currentpoint translate .45 .45 scale neg exch neg exch
translate
 69 1774 a Fw(?)69 1774 y
 currentpoint currentpoint translate 1 .45 div 1 .45 div scale neg
exch neg exch translate
 69 1774 a 83 1781 a Fs(:)123
1781 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 123 1781 a Fw(List<?)40 b(super)g(C<D>>)123 1781
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 123 1781 a 548 w FF(\(check)20 b(constraint)f(on)1295
1781 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1295 1781 a Fw(P)1295 1781 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1295 1781 a 30 w
FF(\))-19 1864 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -19 1864 a Fw(List<C<?>>)-19 1864 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate

-19 1864 a 313 w Ft(<)334 1857 y
 currentpoint currentpoint translate .45 .45 scale neg exch neg exch
translate
 334 1857 a Fw(?)334
1857 y
 currentpoint currentpoint translate 1 .45 div 1 .45 div scale neg
exch neg exch translate
 334 1857 a 347 1864 a Fs(:)387 1864 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 387 1864
a Fw(List<?)41 b(super)f(C<D>>)387 1864 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 387 1864 a
549 w FF(\(inheritance\))-19 1947 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -19 1947 a Fw(C<D>)-19
1947 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -19 1947 a 137 w Ft(<)158 1940 y
 currentpoint currentpoint translate .45 .45 scale neg exch neg exch
translate
 158 1940 a Fw(?)158
1940 y
 currentpoint currentpoint translate 1 .45 div 1 .45 div scale neg
exch neg exch translate
 158 1940 a 171 1947 a Fs(:)211 1947 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 211 1947
a Fw(C<?>)211 1947 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 211 1947 a 136 w FF(\(check)20 b(wildcard)845
1947 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 845 1947 a Fw(?)40 b(super)g(C<D>)845 1947 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 845
1947 a 353 w FF(\))-19 2030 y(Accepted)20 b(\(implicitly)e(assumes)884
2030 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 884 2030 a Fw(C<D>)884 2030 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 884 2030 a 136 w
FF(is)h(v)n(alid\))531 2196 y Fv(Using)f(Declaration)h(2)p
-19 2225 1730 4 v -19 2283 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -19 2283 a Fw(D)-19 2283
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -19 2283 a 48 w Ft(<)69 2276 y
 currentpoint currentpoint translate .45 .45 scale neg exch neg exch
translate
 69 2276 a Fw(?)69 2276
y
 currentpoint currentpoint translate 1 .45 div 1 .45 div scale neg
exch neg exch translate
 69 2276 a 83 2283 a Fs(:)123 2283 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 123 2283 a Fw(List<?)40
b(super)g(C<D>>)123 2283 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 123 2283 a -19 2366 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -19
2366 a Fw(List<C<?)h(extends)g(List<?)g(super)f(C<D>>>>)-19
2366 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -19 2366 a 1108 w Ft(<)1129 2359 y
 currentpoint currentpoint translate .45 .45 scale neg exch neg exch
translate
 1129 2359 a
Fw(?)1129 2359 y
 currentpoint currentpoint translate 1 .45 div 1 .45 div scale neg
exch neg exch translate
 1129 2359 a 1142 2366 a Fs(:)1182 2366
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1182 2366 a Fw(List<?)g(super)h(C<D>>)1182 2366 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1182
2366 a -19 2449 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -19 2449 a Fw(C<D>)-19 2449 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -19 2449
a 137 w Ft(<)158 2442 y
 currentpoint currentpoint translate .45 .45 scale neg exch neg exch
translate
 158 2442 a Fw(?)158 2442 y
 currentpoint currentpoint translate 1 .45 div 1 .45 div scale neg
exch neg exch translate
 158
2442 a 171 2449 a Fs(:)211 2449 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 211 2449 a Fw(C<?)f(extends)h(List<?)
f(super)g(C<D>>>)211 2449 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 211 2449 a -19 2532 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -19
2532 a Fw(D)-19 2532 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -19 2532 a 48 w Ft(<)69 2525 y
 currentpoint currentpoint translate .45 .45 scale neg exch neg exch
translate

69 2525 a Fw(?)69 2525 y
 currentpoint currentpoint translate 1 .45 div 1 .45 div scale neg
exch neg exch translate
 69 2525 a 83 2532 a Fs(:)123
2532 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 123 2532 a Fw(List<?)g(super)g(C<D>>)123 2532
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 123 2532 a -19 2615 a FF(Rejected)19 b(\(implicit)f(assumption)j(abo)
o(v)o(e)e(is)g(e)o(xplicit)g(here\))p -150 2734 1993
3 v -150 2819 a Fv(Figur)o(e)e(4.)37 b FF(Example)18
b(of)f(the)h(inconsistenc)o(y)h(of)e(rejecting)h(in\002nite)f(proofs)
-150 3105 y(straints)e(on)h(wildcards)g(when)g(the)o(y)f(are)h
(instantiated,)f(whereas)h(these)g(con-)-150 3188 y(straints)i(are)h
(made)g(e)o(xplicit)f(in)g(the)h(translation)g(to)f(traditional)g(e)o
(xistential)-150 3271 y(types)h(and)h(so)f(need)h(to)f(be)g(check)o
(ed,)h(leading)g(to)f(an)g(in\002nite)f(proof.)-50 3354
y(T)-6 b(o)28 b(understand)i(why)e(this)g(happens,)i(we)e(need)i(to)e
(discuss)h(implicit)-150 3437 y(constraints)g(more.)g(Unlik)o(e)h(e)o
(xplicit)e(constraints,)i(implicit)e(constraints)-150
3520 y(on)21 b(wildcards)f(do)h(not)g(need)g(to)f(be)h(check)o(ed)h
(after)e(instantiation)h(in)f(order)-150 3603 y(to)15
b(ensure)g(soundness)i(because)f(those)f(implicit)f(constraints)i(must)
f(already)-150 3686 y(hold)26 b Fx(pr)m(o)o(vided)i FF(the)e(subtype)g
(is)f(a)g(v)n(alid)h(type)g(\(meaning)g(its)f(type)g(ar)o(gu-)-150
3769 y(ments)c(satisfy)g(the)g(criteria)g(for)f(the)i(type)f
(parameters\).)g(Ho)n(we)n(v)o(er)m(,)h(while)-150 3852
y(determining)e(whether)g(a)g(type)g(is)f(v)n(alid)g(Ja)o(v)n(a)h(uses)
g(subtyping)h(which)f(im-)-150 3935 y(plicitly)31 b(assumes)g(all)g
(types)g(in)m(v)o(olv)o(ed)h(are)f(v)n(alid,)g(potentially)h(leading)
-150 4018 y(to)23 b(an)g(implicitly)f(in\002nite)g(proof.)h(In)g
(Figure)g(3,)1155 4018 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1155 4018 a Fw(Super<Super<?,?>,C>)1155
4018 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1155 4018 a 582 w FF(is)f(a)-150 4101 y(v)n(alid)17
b(type)h(pro)o(vided)441 4101 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 441 4101 a Fw(C)441 4101
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 441 4101 a 47 w FF(is)f(a)g(subtype)h(of)933 4101 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

933 4101 a Fw(Super<?,?>)933 4101 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 933 4101 a 294 w
FF(.)f(By)g(inheritance,)h(this)-150 4184 y(reduces)28
b(to)f(whether)458 4184 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 458 4184 a Fw(Super<Super<?,?>,C>)458
4184 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 458 4184 a 586 w FF(is)g(a)g(subtype)h(of)1530
4184 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1530 4184 a Fw(Super<?,?>)1530 4184 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1530 4184
a 294 w FF(.)-150 4267 y(The)36 b(implicit)g(constraints)h(on)f(the)h
(wildcards)f(in)1289 4267 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1289 4267 a Fw(Super<?,?>)1289
4267 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1289 4267 a 331 w FF(are)g(not)-150 4350 y(check)o(ed)31
b(because)f(Ja)o(v)n(a)f(implicitly)f(assumes)1143 4350
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1143 4350 a Fw(Super<Super<?,?>,C>)1143 4350 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1143
4350 a 588 w FF(is)g(a)-150 4433 y(v)n(alid)c(type.)g(Thus)g(the)f
(proof)i(that)800 4433 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 800 4433 a Fw(Super<Super<?,?>,C>)800
4433 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 800 4433 a 582 w FF(is)f(v)n(alid)g(implic-)-150
4516 y(itly)17 b(assumes)i(that)363 4516 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 363 4516 a
Fw(Super<Super<?,?>,C>)363 4516 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 363 4516 a 577 w FF(is)e(v)n(alid,)h
(which)g(is)g(the)g(source)g(of)-150 4599 y(in\002nity)f(after)h
(translation.)f(This)h(e)o(xample)g(can)g(be)g(modi\002ed)g(similarly)f
(to)-150 4682 y(Figure)i(2)g(to)g(produce)h(a)f(proof)g(that)g(is)g
(implicitly)f(ac)o(yclically)h(in\002nite.)-50 4765 y(Implicitly)h
(in\002nite)h(proofs)g(are)g(the)g(reason)h(why)f(Ja)o(v)n(a')l(s)g
(rejection)g(of)-150 4848 y(in\002nite)h(proofs)h(is)g(an)g
(inconsistent)g(choice.)g(The)g(programs)g(and)h(proofs)-150
4932 y(in)j(Figure)f(4)h(are)g(a)f(concrete)i(e)o(xample)f
(illustrating)f(the)h(inconsistenc)o(y)-5 b(.)-150 5015
y(W)f(e)26 b(pro)o(vide)g(tw)o(o)h(declarations)f(for)g(class)1034
5015 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1034 5015 a Fw(D)1034 5015 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1034 5015 a 56 w
FF(which)g(dif)n(fer)g(only)h(in)e(that)-150 5098 y(the)18
b(constraint)g(on)g(the)g(wildcard)f(is)h(implicit)e(in)i(the)g
(\002rst)e(declaration)j(and)-150 5181 y(e)o(xplicit)28
b(in)g(the)h(second)g(declaration.)g(Thus,)f(one)h(w)o(ould)g(e)o
(xpect)g(these)-150 5264 y(tw)o(o)f(programs)g(to)f(be)h(equi)n(v)n
(alent)h(in)e(that)h(one)g(w)o(ould)g(be)g(v)n(alid)g(if)f(and)-150
5347 y(only)32 b(if)f(the)h(other)g(is)f(v)n(alid.)h(Ho)n(we)n(v)o(er)m
(,)g(this)f(is)g(not)h(the)g(case)g(in)f(Ja)o(v)n(a)-150
5430 y(because)25 b(Ja)o(v)n(a)f(rejects)g(in\002nite)g(proofs.)g(The)g
(\002rst)f(program)i(is)e(accepted)2042 1246 y(because)28
b(the)e(proof)h(that)2749 1246 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2749 1246 a Fw(C<D>)2749
1246 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2749 1246 a 144 w FF(is)f(a)g(v)n(alid)h(type)g(is)f(\002nite.)g
(Ho)n(we)n(v)o(er)m(,)h(the)2042 1329 y(second)h(program)g(is)f
(rejected)g(because)i(the)e(proof)g(that)3605 1329 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

3605 1329 a Fw(C<D>)3605 1329 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3605 1329 a 145 w FF(is)g(a)g(v)n(alid)
2042 1412 y(type)16 b(is)f(in\002nite.)g(In)h(f)o(act,)f
Fw(javac)i FF(accepts)f(the)g(\002rst)f(program)i(b)o(ut)e(suf)n(fers)h
(a)2042 1495 y(stack)j(o)o(v)o(er\003o)n(w)g(on)g(the)g(second)h
(program.)f(Thus)g(Ja)o(v)n(a')l(s)f(choice)i(to)e(reject)2042
1578 y(in\002nite)27 b(proofs)g(is)g(inconsistent)h(with)f(its)g(use)g
(of)g(implicit)g(constraints.)2042 1662 y(Interestingly)-5
b(,)33 b(when)g(e)o(xpressed)h(using)f(traditional)f(e)o(xistential)h
(types,)2042 1745 y(the)22 b(\(in\002nite\))g(proof)h(for)g(the)f
(\002rst)g(program)h(is)f(e)o(xactly)h(the)g(same)g(as)f(the)2042
1828 y(\(in\002nite\))f(proof)i(for)e(the)h(second)i(program)e(as)g
(one)h(w)o(ould)g(e)o(xpect)f(gi)n(v)o(en)2042 1911 y(that)k(the)o(y)h
(only)h(dif)n(fer)f(syntactically)-5 b(,)27 b(af)n(\002rming)f(that)h
(e)o(xistential)g(types)2042 1994 y(are)19 b(a)g(suitable)g
(formalization)g(of)g(wildcards.)2141 2077 y(Note)h(that)g(none)h(of)g
(the)f(wildcard)g(types)g(in)g(Figures)g(3)h(and)f(4)g(are)h(im-)2042
2160 y(plicitly)c(in\002nite.)f(This)h(means)h(that,)f(e)n(v)o(en)i(if)
d(one)i(were)g(to)f(pre)n(v)o(ent)h(proofs)2042 2243
y(that)e(are)h(in\002nite)f(using)i(subtyping)g(rules)f(for)f
(wildcards)i(and)f(pre)n(v)o(ent)h(im-)2042 2326 y(plicitly)k
(in\002nite)g(wildcard)h(types)g(so)g(that)g(one)g(could)g(translate)g
(to)f(tradi-)2042 2409 y(tional)15 b(e)o(xistential)h(types,)g(a)f
(subtyping)i(algorithm)f(can)g(still)f(al)o(w)o(ays)h(mak)o(e)2042
2492 y(progress)21 b(and)g(yet)g(run)g(fore)n(v)o(er)l(.)g(Our)f
(algorithm)h(a)o(v)o(oids)f(these)h(problems)2042 2575
y(by)e(not)g(translating)g(to)g(traditional)g(or)g(e)n(v)o(en)h
(\002nite)e(e)o(xistential)h(types.)2042 2790 y FD(4.)91
b(Impr)n(o)o(v)o(ed)21 b(Subtyping)2042 2906 y FF(No)n(w)h(that)f(we)h
(ha)o(v)o(e)g(presented)h(the)f(man)o(y)g(non-termination)h(challenges)
2042 2989 y(in)c(subtyping)h(wildcards,)g(we)f(present)g(our)h
(subtyping)g(rules)g(with)e(a)h(sim-)2042 3072 y(ple)k(sound)i(and)f
(complete)g(subtyping)g(algorithm)g(which)g(al)o(w)o(ays)g(termi-)2042
3155 y(nates)k(e)n(v)o(en)h(when)g(the)f(wildcard)g(types)h(and)g
(proofs)g(in)m(v)o(olv)o(ed)f(are)h(im-)2042 3238 y(plicitly)22
b(in\002nite.)g(W)-6 b(e)22 b(impose)h(tw)o(o)g(simple)g(restrictions,)
f(which)h(in)g(Sec-)2042 3321 y(tion)k(9)h(we)f(demonstrate)i(already)f
(hold)g(in)f(e)o(xisting)h(code)g(bases.)g(W)m(ith)2042
3404 y(these)19 b(restrictions,)g(our)g(subtype)i(system)e(has)h(the)f
(property)h(that)f(all)g(pos-)2042 3487 y(sible)24 b(proofs)i(are)e
(\002nite,)g(although)i(the)o(y)f(may)g(still)e(translate)i(to)g
(in\002nite)2042 3570 y(proofs)d(using)g(subtyping)h(rules)f(for)f
(traditional)h(e)o(xistential)f(types.)h(Ev)o(en)2042
3653 y(without)15 b(restrictions,)g(our)h(algorithm)g(impro)o(v)o(es)g
(on)g(the)f(e)o(xisting)h(subtyp-)2042 3736 y(ing)23
b(algorithm)g(since)g Fw(javac)g FF(f)o(ails)f(to)h(type)g(check)h(the)
e(simple)h(program)2042 3819 y(in)k(Figure)g(5)h(that)f(our)h
(algorithm)g(determines)g(is)f(v)n(alid.)g(Here)h(we)f(pro-)2042
3902 y(vide)17 b(the)g(core)g(aspects)h(of)f(our)g(subtyping)h(rules)f
(and)h(algorithms;)f(the)g(full)2042 3985 y(details)i(can)g(be)g(found)
h(in)f(Section)g(A.)2042 4151 y Fv(4.1)75 b(Existential)18
b(F)n(ormalization)2042 4267 y FF(W)-6 b(e)28 b(formalize)h(wildcards)f
(using)i(e)o(xistential)e(types.)h(Ho)n(we)n(v)o(er)m(,)g(we)g(do)2042
4350 y(not)22 b(use)h(traditional)f(e)o(xistential)g(types.)g(Our)h
(insight)f(is)g(to)g(use)h(a)f(v)n(ariant)2042 4433 y(that)j(bridges)g
(the)g(gap)h(between)f(wildcards,)g(where)h(constraints)f(can)h(be)2042
4516 y(implicit,)14 b(and)h(traditional)g(e)o(xistential)g(types,)g
(where)g(all)g(constraints)g(must)2042 4599 y(be)36 b(e)o(xplicit.)g(W)
-6 b(e)36 b(pro)o(vide)h(the)g(grammar)g(for)f(our)h(e)o(xistential)f
(types,)2042 4682 y(represented)20 b(by)2514 4650 y Fr(E)2498
4682 y Ft(\034)9 b FF(,)18 b(in)h(Figure)g(6.)2141 4765
y(Note)30 b(that)f(there)h(are)f(tw)o(o)g(sets)h(of)f(constraints)h(so)
g(that)f(we)g(denote)2042 4848 y(our)d(e)o(xistential)f(types)i(as)e
Fu(9)p Fs(\000)d(:)g(\001\(\001)-43 b Fu(\001)21 b Fs(\))p
Ft(:)3175 4816 y Fr(E)3159 4848 y Ft(\034)9 b FF(.)25
b(The)g(constraints)i Fs(\001)e FF(are)h(the)2042 4932
y(constraints)f(corresponding)h(to)e(traditional)h(e)o(xistential)f
(types,)g(combin-)2042 5015 y(ing)16 b(both)g(the)f(implicit)g(and)h(e)
o(xplicit)g(constraints)g(on)g(wildcards.)f(The)h(con-)2042
5098 y(straints)22 b Fs(\001)-43 b Fu(\001)44 b FF(are)22
b(those)h(corresponding)i(to)d(e)o(xplicit)g(constraints)h(on)g(wild-)
2042 5181 y(cards,)g(with)f(the)h(parenthetical)h(indicating)f(that)g
(only)g(those)h(constraints)2042 5264 y(need)c(to)e(be)i(check)o(ed)g
(during)g(subtyping.)2141 5347 y(Our)32 b(types)f(are)g(a)g(mix)h(of)f
(inducti)n(v)o(e)h(and)g(coinducti)n(v)o(e)g(structures,)2042
5430 y(meaning)22 b(\002nite)e(and)h(in\002nite.)f(Most)h(components)h
(are)f(inducti)n(v)o(e)g(so)g(that)p eop end
%%Page: 5 5
TeXDict begin 5 4 bop -36 58 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -36 58 a Fw(class)40 b(C<P)g(extends)h
(Number>)g(extends)f(ArrayList<P>)1807 49 y
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 1807 49 a
Fu(fg)1807 49 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 1807 49 a -36 58 a
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -36 58 a -36 141 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

-36 141 a Fw(List<?)g(extends)h(List<?)g(extends)f(Number>>)i
(cast\(List<C<?>>)g(list\))-36 141 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -36 141 a -36 224
a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -36 224 a 42 215 a
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 42 215 a Fu(f)42 215 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 42 215 a
80 224 a Fw(return)f(list;)550 215 y
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 550 215 a Fu(g)550
215 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 550 215 a -36 224 a
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -36 224 a -150 343 1993 3 v
-98 428 a Fv(Figur)o(e)18 b(5.)38 b FF(Example)19 b(of)g(subtyping)h
(incorrectly)g(rejected)f(by)g Fw(javac)p 2117 62 99
4 v 2117 168 4 106 v 2160 111 a Fr(E)2145 143 y Ft(\034)p
2212 168 V 2117 171 99 4 v 2638 26 a Fr(E)2623 58 y Ft(\034)2684
55 y Fs(:)2700 58 y(=)f Ft(v)25 b Fu(j)c(9)p Fs(\000)9
b(:)g(\001\(\001\))p Ft(:)18 b(C)3299 58 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3299 58 a
Fw(<)3299 58 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3299 58 a 3344 26 a Fr(E)3329 58 y Ft(\034)3372
58 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3372 58 a Fw(,)38 b(...,)3372 58 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3372 58 a 3592
26 a Fr(E)3577 58 y Ft(\034)3620 58 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3620 58 a Fw(>)3620
58 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3620 58 a 2617 141 a Fs(\000)2684 138 y(:)2700 141
y(=)18 b Fq(?)k Fu(j)f Fs(\000)p Ft(;)13 b(v)2601 224
y Fs(\001)2684 221 y(:)2700 224 y(=)18 b Fq(?)k Fu(j)f
Fs(\001)p Ft(;)13 b(v)25 b(<)p Fs(::)3199 192 y Fr(E)3184
224 y Ft(\034)k Fu(j)22 b Fs(\001)p Ft(;)13 b(v)24 b
Fs(::)q Ft(>)3589 192 y Fr(E)3573 224 y Ft(\034)p 2042
343 1993 3 v 2176 428 a Fv(Figur)o(e)18 b(6.)38 b FF(Grammar)19
b(of)g(our)g(e)o(xistential)g(types)g(\(coinducti)n(v)o(e\))p
3484 576 550 4 v 3484 689 4 114 v 3513 660 a Fr(G)i Fs(:)h
Fr(D)f Fu(`)3791 628 y Fr(E)3775 660 y Ft(\034)30 b(<)p
Fs(:)3957 628 y Fr(E)3941 660 y Ft(\034)3984 629 y Fz(0)p
4031 689 V 3484 692 550 4 v 847 759 a FF(S)t Fp(U)t(B)t
FF(-)t(E)t Fp(X)t(I)t(S)t(T)t(S)1641 b FF(S)t Fp(U)t(B)t
FF(-)t(V)-5 b Fp(A)t(R)305 850 y Ft(C)365 850 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 365 850
a Fw(<)365 850 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 365 850 a 29 w Ft(P)443 858 y Fo(1)478
850 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 478 850 a Fw(,)39 b(...,)478 850 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 478 850 a 206
w Ft(P)733 858 y Fn(m)791 850 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 791 850 a Fw(>)791 850
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 791 850 a 49 w FF(is)18 b(a)h(subclass)h(of)f Ft(D)1374
850 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1374 850 a Fw(<)1374 850 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1374 850 a 1408 826
a Fs(\026)1419 818 y Fr(E)1403 850 y Ft(\034)1437 858
y Fo(1)1472 850 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1472 850 a Fw(,)39 b(...,)1472 850
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1472 850 a 1682 826 a Fs(\026)1693 818 y Fr(E)1678
850 y Ft(\034)1712 858 y Fn(n)1754 850 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1754 850 a Fw(>)1754
850 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1754 850 a -84 952 a Fr(G)p Ft(;)13 b Fs(\000)96
909 y Fm(?)66 952 y Fu( )-43 b(\000)21 b Fs(\000)229
920 y Fz(0)273 952 y Fu(`)g Ft(D)406 952 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 406 952 a
Fw(<)406 952 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 406 952 a 440 928 a Fs(\026)451 920 y
Fr(E)436 952 y Ft(\034)470 960 y Fo(1)504 952 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 504 952
a Fw(,)40 b(...,)504 952 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 504 952 a 714 928 a Fs(\026)726
920 y Fr(E)710 952 y Ft(\034)744 960 y Fn(n)787 952 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

787 952 a Fw(>)787 952 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 787 952 a 29 w Fs([)p Ft(P)886
960 y Fo(1)921 952 y Fu(7!)1013 920 y Fr(E)998 952 y
Ft(\034)1032 960 y Fo(1)1066 952 y Ft(;)13 b(:)g(:)h(:)f(;)g(P)1286
960 y Fn(m)1344 952 y Fu(7!)1437 920 y Fr(E)1421 952
y Ft(\034)1455 960 y Fn(m)1514 952 y Fs(])21 b Fu(\031)1616
961 y Fn(\022)1645 972 y Fl(i)1697 952 y Ft(D)1762 952
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1762 952 a Fw(<)1762 952 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1762 952 a 1808 920 a Fr(E)1792
952 y Ft(\034)1835 920 y Fz(0)1826 965 y Fo(1)1861 952
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1861 952 a Fw(,)39 b(...,)1861 952 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1861 952 a 2082
920 a Fr(E)2066 952 y Ft(\034)2109 920 y Fz(0)2100 965
y Fn(n)2143 952 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2143 952 a Fw(>)2143 952 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2143 952
a 251 1039 a FF(for)19 b(all)f Ft(v)490 1007 y Fz(0)531
1039 y FF(in)h Fs(\000)656 1007 y Fz(0)678 1039 y Ft(;)32
b FF(e)o(xists)19 b Ft(i)g FF(in)g(1)g(to)g Ft(n)g FF(with)f
Ft(\022)r Fs(\()p Ft(v)1498 1007 y Fz(0)1521 1039 y Fs(\))j(=)g
Ft(\022)1689 1047 y Fn(i)1715 1039 y Fs(\()p Ft(v)1785
1007 y Fz(0)1807 1039 y Fs(\))23 1133 y FF(for)e(all)f
Ft(i)h FF(in)g(1)g(to)g Ft(n;)51 b Fr(G)p Ft(;)13 b Fs(\000)22
b(:)f Fr(D)p Ft(;)13 b Fs(\001)22 b Fu(`)1042 1109 y
Fs(\026)1053 1101 y Fr(E)1038 1133 y Ft(\034)1072 1141
y Fn(i)1098 1133 y Fs([)p Ft(P)1168 1141 y Fo(1)1203
1133 y Fu(7!)1295 1101 y Fr(E)1280 1133 y Ft(\034)1314
1141 y Fo(1)1348 1133 y Ft(;)13 b(:)g(:)h(:)f(;)g(P)1568
1141 y Fn(m)1626 1133 y Fu(7!)1719 1101 y Fr(E)1703 1133
y Ft(\034)1737 1141 y Fn(m)1796 1133 y Fs(])1838 1113
y Fu(\030)1838 1137 y Fs(=)1935 1101 y Fr(E)1919 1133
y Ft(\034)1962 1101 y Fz(0)1953 1147 y Fn(i)1984 1133
y Fs([)p Ft(\022)r Fs(])290 1235 y FF(for)19 b(all)g
Ft(v)24 b(<)p Fs(::)679 1212 y(^)690 1203 y Fr(E)675
1235 y Ft(\034)j FF(in)18 b Fs(\001)-42 b Fu(\001)876
1204 y Fz(0)899 1235 y Ft(;)50 b Fr(G)p Ft(;)14 b Fs(\000)21
b(:)h Fr(D)p Ft(;)13 b Fs(\001)21 b Fu(`)g Ft(\022)r
Fs(\()p Ft(v)s Fs(\))g Ft(<)p Fs(:)1679 1212 y(^)1690
1203 y Fr(E)1675 1235 y Ft(\034)9 b Fs([)p Ft(\022)r
Fs(])290 1338 y FF(for)19 b(all)g Ft(v)24 b Fs(::)q Ft(>)679
1314 y Fs(^)690 1306 y Fr(E)675 1338 y Ft(\034)j FF(in)18
b Fs(\001)-42 b Fu(\001)876 1307 y Fz(0)899 1338 y Ft(;)50
b Fr(G)p Ft(;)14 b Fs(\000)21 b(:)h Fr(D)p Ft(;)13 b
Fs(\001)21 b Fu(`)1417 1314 y Fs(^)1429 1306 y Fr(E)1413
1338 y Ft(\034)9 b Fs([)p Ft(\022)r Fs(])22 b Ft(<)p
Fs(:)f Ft(\022)r Fs(\()p Ft(v)s Fs(\))p -140 1376 2369
4 v -20 1451 a Fr(G)h Fs(:)g Fr(D)f Fu(`)g(9)p Fs(\000)9
b(:)g(\001\(\001)-44 b Fu(\001)22 b Fs(\))p Ft(:)d(C)660
1451 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 660 1451 a Fw(<)660 1451 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 660 1451 a 705 1419
a Fr(E)689 1451 y Ft(\034)723 1459 y Fo(1)758 1451 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

758 1451 a Fw(,)39 b(...,)758 1451 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 758 1451 a 979 1419
a Fr(E)964 1451 y Ft(\034)998 1459 y Fn(m)1056 1451 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

1056 1451 a Fw(>)1056 1451 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1056 1451 a 51 w Ft(<)p
Fs(:)21 b Fu(9)p Fs(\000)1300 1419 y Fz(0)1331 1451 y
Fs(:)9 b(\001)1425 1419 y Fz(0)1447 1451 y Fs(\(\001)-43
b Fu(\001)1541 1419 y Fz(0)1563 1451 y Fs(\))p Ft(:)19
b(D)1698 1451 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1698 1451 a Fw(<)1698 1451 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1698 1451
a 1743 1419 a Fr(E)1728 1451 y Ft(\034)1771 1419 y Fz(0)1762
1464 y Fo(1)1796 1451 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1796 1451 a Fw(,)40 b(...,)1796
1451 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1796 1451 a 2018 1419 a Fr(E)2002 1451 y Ft(\034)2045
1419 y Fz(0)2036 1464 y Fn(n)2079 1451 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2079 1451 a
Fw(>)2079 1451 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2079 1451 a 2746 858 579 4 v 2802 926
a Fr(G)22 b Fs(:)f Fr(D)g Fu(`)h Ft(v)i(<)p Fs(:)d Ft(v)2540
1094 y(v)j(<)p Fs(::)2740 1062 y Fr(E)2725 1094 y Ft(\034)j
FF(in)18 b Fr(D)112 b(G)22 b Fs(:)g Fr(D)f Fu(`)3315
1062 y Fr(E)3300 1094 y Ft(\034)30 b(<)p Fs(:)3482 1062
y Fr(E)3466 1094 y Ft(\034)3509 1063 y Fz(0)p 2484 1117
1104 4 v 2790 1192 a Fr(G)21 b Fs(:)h Fr(D)f Fu(`)g Ft(v)k(<)p
Fs(:)3231 1160 y Fr(E)3216 1192 y Ft(\034)3259 1160 y
Fz(0)2528 1353 y Ft(v)g Fs(::)p Ft(>)2729 1321 y Fr(E)2713
1353 y Ft(\034)2756 1322 y Fz(0)2797 1353 y FF(in)19
b Fr(D)111 b(G)22 b Fs(:)g Fr(D)f Fu(`)3327 1321 y Fr(E)3311
1353 y Ft(\034)30 b(<)p Fs(:)3493 1321 y Fr(E)3477 1353
y Ft(\034)3520 1322 y Fz(0)p 2472 1376 1126 4 v 2801
1448 a Fr(G)21 b Fs(:)h Fr(D)f Fu(`)3079 1416 y Fr(E)3063
1448 y Ft(\034)30 b(<)p Fs(:)22 b Ft(v)p -150 1488 4185
3 v 196 1572 a Fv(Figur)o(e)c(7.)38 b FF(Subtyping)20
b(rules)f(for)f(our)i(e)o(xistential)e(types)i(\(inducti)n(v)o(e)f(and)
h(coinducti)n(v)o(e)g(de\002nitions)g(coincide)f(gi)n(v)o(en)h
(restrictions\))-150 1821 y(we)28 b(may)h(do)f(structural)h(recursion)g
(and)g(still)e(ha)o(v)o(e)h(termination.)g(Ho)n(w-)-150
1904 y(e)n(v)o(er)m(,)22 b(the)g(combined)h(constraints)g
Fs(\001)f FF(are)f(coinducti)n(v)o(e.)j(This)d(essentially)-150
1987 y(means)e(that)g(the)o(y)f(are)h(constructed)h(on)f(demand)g
(rather)g(than)g(all)f(ahead)h(of)-150 2070 y(time.)j(This)g
(corresponds)i(to)e(only)h(performing)g(wildcard)g(capture)g(when)-150
2153 y(it)17 b(is)h(absolutely)h(necessary)-5 b(.)19
b(In)f(this)f(w)o(ay)i(we)f(can)g(handle)h(wildcards)f(rep-)-150
2236 y(resenting)i(implicitly)e(in\002nite)g(types)i(as)f(in)g(Section)
f(3.2.)-150 2408 y Fv(4.2)75 b(Existential)18 b(Subtyping)-150
2524 y FF(W)-6 b(e)17 b(pro)o(vide)i(the)f(subtyping)i(rules)e(for)g
(our)g(e)o(xistential)g(types)g(in)g(Figure)g(7)-150
2607 y(\(for)23 b(sak)o(e)h(of)f(simplicity)-5 b(,)22
b(throughout)j(this)e(paper)g(we)g(assume)h(all)f(prob-)-150
2690 y(lems)16 b(with)g(name)h(hiding)g(are)f(tak)o(en)i(care)e(of)g
(implicitly\).)g(The)g(judgement)-150 2773 y Fr(G)26
b Fs(:)h Fr(D)e Fu(`)147 2741 y Fr(E)131 2773 y Ft(\034)34
b(<)p Fs(:)322 2741 y Fr(E)306 2773 y Ft(\034)349 2741
y Fz(0)392 2773 y FF(means)22 b(that)753 2741 y Fr(E)737
2773 y Ft(\034)30 b FF(is)21 b(a)g(subtype)i(of)1278
2741 y Fr(E)1263 2773 y Ft(\034)1306 2741 y Fz(0)1349
2773 y FF(in)e(the)g(conte)o(xt)h(of)-150 2856 y(type)i(v)n(ariables)h
Fr(G)f FF(with)f(constraints)h Fr(D)p FF(.)f(The)h(subtyping)h(rules)f
(are)g(syn-)-150 2939 y(tax)h(directed)h(and)g(so)f(are)g(easily)g
(adapted)h(into)g(an)f(algorithm.)g(Further)o(-)-150
3022 y(more,)17 b(gi)n(v)o(en)h(the)g(restrictions)f(we)g(impose)h(in)f
(Section)g(4.4,)g(the)g(inducti)n(v)o(e)-150 3105 y(and)25
b(coinducti)n(v)o(e)i(de\002nitions)e(coincide,)g(meaning)h(there)f(is)
f(no)h(distinc-)-150 3188 y(tion)g(between)g(\002nite)f(and)i
(in\002nite)e(proofs.)h(From)g(this,)f(we)g(deduce)i(that)-150
3271 y(our)19 b(algorithm)h(terminates)e(since)i(all)e(proofs)i(are)f
(\002nite.)-50 3354 y(The)e(b)o(ulk)h(of)g(our)g(algorithm)g(lies)f(in)
j(S)t Fp(U)t(B)t FF(-)t(E)t Fp(X)t(I)t(S)t(T)t(S)r FF(,)13
b(since)20 b(S)t Fp(U)t(B)t FF(-)t(V)-5 b Fp(A)t(R)-150
3437 y FF(just)22 b(applies)h(assumed)h(constraints)f(on)h(the)e(type)h
(v)n(ariable)h(at)e(hand.)h(The)-150 3520 y(\002rst)16
b(premise)i(of)h(S)t Fp(U)t(B)t FF(-)t(E)t Fp(X)t(I)t(S)t(T)t(S)c
FF(e)o(xamines)j(the)f(inheritance)h(hierarchy)f(to)-150
3603 y(determine)25 b(which,)g(if)f(an)o(y)-5 b(,)25
b(in)m(v)o(ocations)g(of)g Ft(D)h FF(that)f Ft(C)k FF(is)24
b(a)h(subclass)g(or)-150 3686 y(subinterf)o(ace)19 b(of)f(\(including)h
(re\003e)o(xi)n(vity)f(and)g(transiti)n(vity\).)f(F)o(or)h(Ja)o(v)n(a)g
(this)-150 3769 y(in)m(v)o(ocation)k(is)f(al)o(w)o(ays)h(unique,)h
(although)f(this)f(is)g(not)h(necessary)h(for)e(our)-150
3852 y(algorithm.)d(The)g(second)i(and)e(third)h(premises)f(adapt)h
(uni\002cation)f(to)g(e)o(xis-)-150 3935 y(tential)d(types)h
(permitting)g(equi)n(v)n(alence)i(and)e(including)h(the)e(pre)n(v)o
(ention)i(of)-150 4018 y(escaping)25 b(type)f(v)n(ariables.)g(The)g
(fourth)g(premise)g(checks)h(that)f(each)g(pair)-150
4101 y(of)j(corresponding)i(type)e(ar)o(guments)h(are)f(equi)n(v)n
(alent)h(for)f(some)g(chosen)-150 4184 y(de\002nition)19
b(of)h(equi)n(v)n(alence)h(such)e(as)h(simple)f(syntactic)g(equality)h
(or)f(more)-150 4267 y(po)n(werful)h(de\002nitions)g(as)g(discussed)h
(in)f(Sections)f(7.3)h(and)h(8.3.)e(The)h(\002fth)-150
4350 y(and)28 b(sixth)g(premises)g(recursi)n(v)o(ely)h(check)g(that)e
(the)h(e)o(xplicit)g(constraints)-150 4433 y(in)19 b(the)g(supertype)i
(hold)f(after)f(instantiation.)g(Note)g(that)g(only)h(the)f(e)o
(xplicit)-150 4516 y(constraints)f Fs(\001)-42 b Fu(\001)255
4485 y Fz(0)295 4516 y FF(in)18 b(the)g(supertype)h(are)e(check)o(ed,)j
(whereas)e(the)g(combined)-150 4599 y(implicit)d(and)i(e)o(xplicit)f
(constraints)h Fs(\001)f FF(in)g(the)g(subtype)i(are)e(assumed.)h(This)
-150 4682 y(separation)j(is)e(what)h(enables)h(termination)f(and)h
(completeness.)-50 4765 y(W)-6 b(e)19 b(ha)o(v)o(e)g(no)h(rule)g
(indicating)g(that)f(all)g(types)h(are)g(subtypes)h(of)1647
4765 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1647 4765 a Fw(Object)1647 4765 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1647 4765 a
177 w FF(.)-150 4848 y(This)34 b(is)f(because)i(our)g(e)o(xistential)f
(type)g(system)g(is)g(designed)h(so)f(that)-150 4932
y(such)f(a)g(rule)f(arises)h(as)f(a)h(consequence)i(of)d(other)h
(properties.)g(In)g(this)-150 5015 y(case,)e(it)g(arises)h(from)f(the)h
(f)o(act)744 5015 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 744 5015 a Fw(Object)744 5015 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 744
5015 a 208 w FF(is)f(a)g(superclass)i(of)e(all)g(classes)-150
5098 y(and)g(interf)o(aces)g(in)g(Ja)o(v)n(a)f(and)h(the)g(f)o(act)g
(that)f(all)g(v)n(ariables)h(in)g(Ja)o(v)n(a)f(are)-150
5181 y(implicitly)16 b(constrained)i(abo)o(v)o(e)g(by)803
5181 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 803 5181 a Fw(Object)803 5181 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 803 5181 a 176
w FF(.)e(In)h(general,)h(the)f(separation)g(of)-150 5264
y(implicit)g(and)h(e)o(xplicit)g(constraints)g(enables)g(our)g(e)o
(xistential)g(type)g(system)-150 5347 y(to)f(adapt)h(to)g(ne)n(w)f
(settings,)g(including)i(settings)e(outside)h(of)g(Ja)o(v)n(a.)f
(General)-150 5430 y(re\003e)o(xi)n(vity)28 b(and)g(transiti)n(vity)g
(are)g(also)f(consequences)k(of)d(our)g(rules.)f(In)p
2042 1758 550 4 v 2042 1871 4 114 v 2070 1842 a Fr(G)22
b Fs(:)f Fr(D)g Fu(`)h Ft(\034)29 b(<)p Fs(:)22 b Ft(\034)2542
1811 y Fz(0)p 2588 1871 V 2042 1874 550 4 v 2841 1982
a FF(S)t Fp(U)t(B)t FF(-)t(E)t Fp(X)t(I)t(S)t(T)t(S)2299
2058 y Ft(C)2359 2058 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2359 2058 a Fw(<)2359 2058 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate

2359 2058 a 29 w Ft(P)2437 2066 y Fo(1)2472 2058 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2472
2058 a Fw(,)39 b(...,)2472 2058 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2472 2058 a 206 w Ft(P)2727
2066 y Fn(m)2785 2058 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2785 2058 a Fw(>)2785 2058 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate

2785 2058 a 49 w FF(is)18 b(a)h(subclass)h(of)f Ft(D)3368
2058 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3368 2058 a Fw(<)3368 2058 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3368 2058 a 34 w
Fs(\026)-43 b Ft(\034)3431 2066 y Fo(1)3466 2058 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3466
2058 a Fw(,)39 b(...,)3466 2058 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3466 2058 a 210 w Fs(\026)-42
b Ft(\034)3706 2066 y Fn(n)3748 2058 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3748 2058 a Fw(>)3748
2058 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3748 2058 a 2388 2145 a Fx(e)o(xplicit)o Fs(\()2649
2104 y
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 2649 2104 a Fw(?)2649 2104 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 2649 2104 a 2636
2145 a Ft(\034)2678 2153 y Fo(1)2713 2145 y Ft(;)13 b(:)g(:)g(:)h(;)
2897 2104 y
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 2897 2104 a Fw(?)2897 2104 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 2897 2104 a
2884 2145 a Ft(\034)2926 2153 y Fn(m)2985 2145 y Fs(\))21
b(=)g Fu(h)p Fs(\000;)13 b(\001)-43 b Fu(\001)22 b Fs(;)13
b Ft(\034)3361 2153 y Fo(1)3395 2145 y Ft(;)h(:)f(:)g(:)g(;)g(\034)3600
2153 y Fn(m)3659 2145 y Fu(i)2381 2239 y Fx(e)o(xplicit)p
Fs(\()2643 2198 y
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 2643 2198 a Fw(?)2643 2198 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 2643 2198
a 2630 2239 a Ft(\034)2672 2200 y Fz(0)2672 2252 y Fo(1)2707
2239 y Ft(;)g(:)g(:)g(:)g(;)2891 2198 y
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 2891 2198 a Fw(?)2891
2198 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 2891 2198 a 2877 2239 a Ft(\034)2920 2200 y Fz(0)2920
2252 y Fn(n)2962 2239 y Fs(\))21 b(=)h Fu(h)p Fs(\000)3173
2207 y Fz(0)3195 2239 y Fs(;)13 b(\001)-43 b Fu(\001)3293
2207 y Fz(0)3315 2239 y Fs(;)13 b Ft(\034)3392 2207 y
Fz(0)3383 2252 y Fo(1)3418 2239 y Ft(;)g(:)g(:)g(:)g(;)g(\034)3631
2207 y Fz(0)3622 2252 y Fn(n)3665 2239 y Fu(i)2557 2326
y Fx(implicit)o Fs(\(\000;)g Ft(C)5 b Fs(;)13 b Ft(\034)3025
2334 y Fo(1)3060 2326 y Ft(;)g(:)g(:)g(:)g(;)h(\034)3265
2334 y Fn(m)3323 2326 y Fs(\))21 b(=)g(\001)3471 2322
y
 currentpoint currentpoint translate .7 .7 scale neg exch neg exch
translate
 3471 2322 a Fu(\016)3471 2322 y
 currentpoint currentpoint translate 1 .7 div 1 .7 div scale neg exch
neg exch translate
 3471 2322 a 2248 2413
a FF(for)e(all)f Ft(i)h FF(in)g(1)g(to)g Ft(n;)36 b Fs(\026)-42
b Ft(\034)2835 2421 y Fn(i)2861 2413 y Fs([)p Ft(P)2931
2421 y Fo(1)2966 2413 y Fu(7!)p Ft(\034)3077 2421 y Fo(1)3111
2413 y Ft(;)13 b(:)h(:)f(:)g(;)g(P)3331 2421 y Fn(m)3390
2413 y Fu(7!)o Ft(\034)3500 2421 y Fn(m)3559 2413 y Fs(])22
b(=)f Ft(\034)3726 2382 y Fz(0)3717 2427 y Fn(i)3747
2413 y Fs([)p Ft(\022)r Fs(])2276 2501 y FF(for)d(all)h
Ft(v)24 b(<)p Fs(::)i(^)-42 b Ft(\034)27 b FF(in)19 b
Fs(\001)-43 b Fu(\001)2862 2469 y Fz(0)2884 2501 y Ft(;)51
b Fr(G)p Ft(;)13 b Fs(\000)21 b(:)h Fr(D)p Ft(;)13 b
Fs(\001)3261 2497 y
 currentpoint currentpoint translate .7 .7 scale neg exch neg exch
translate
 3261 2497 a Fu(\016)3261 2497 y
 currentpoint currentpoint translate 1 .7 div 1 .7 div scale neg exch
neg exch translate
 3261
2497 a 3309 2501 a Ft(;)g Fs(\001)-43 b Fu(\001)43 b(`)22
b Ft(\022)r Fs(\()p Ft(v)s Fs(\))f Ft(<)p Fs(:)k(^)-42
b Ft(\034)2276 2588 y FF(for)18 b(all)h Ft(v)24 b Fs(::)q
Ft(>)h Fs(^)-42 b Ft(\034)27 b FF(in)19 b Fs(\001)-43
b Fu(\001)2862 2556 y Fz(0)2884 2588 y Ft(;)51 b Fr(G)p
Ft(;)13 b Fs(\000)21 b(:)h Fr(D)p Ft(;)13 b Fs(\001)3261
2584 y
 currentpoint currentpoint translate .7 .7 scale neg exch neg exch
translate
 3261 2584 a Fu(\016)3261 2584 y
 currentpoint currentpoint translate 1 .7 div 1 .7 div scale neg exch
neg exch translate
 3261 2584 a 3309
2588 a Ft(;)g Fs(\001)-43 b Fu(\001)43 b(`)26 b Fs(^)-42
b Ft(\034)29 b(<)p Fs(:)22 b Ft(\022)r Fs(\()p Ft(v)s
Fs(\))p 2192 2625 1693 4 v 2347 2708 a Fr(G)g Fs(:)g
Fr(D)f Fu(`)g Ft(C)2670 2708 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2670 2708 a Fw(<)2670
2708 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2670 2708 a 2713 2667 a
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 2713 2667 a Fw(?)2713
2667 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 2713 2667 a 2700 2708 a Ft(\034)2742 2716 y Fo(1)2777
2708 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2777 2708 a Fw(,)39 b(...,)2777 2708 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2777 2708
a 2996 2667 a
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 2996 2667 a Fw(?)2996 2667 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 2996 2667
a 2983 2708 a Ft(\034)3025 2716 y Fn(m)3084 2708 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3084
2708 a Fw(>)3084 2708 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3084 2708 a 50 w Ft(<)p Fs(:)22
b Ft(D)3302 2708 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3302 2708 a Fw(<)3302 2708 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3302
2708 a 3345 2667 a
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 3345 2667 a Fw(?)3345 2667 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 3345
2667 a 3332 2708 a Ft(\034)3374 2669 y Fz(0)3374 2721
y Fo(1)3408 2708 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3408 2708 a Fw(,)40 b(...,)3408 2708
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3408 2708 a 3628 2667 a
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 3628 2667 a Fw(?)3628 2667
y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 3628 2667 a 3614 2708 a Ft(\034)3657 2669 y Fz(0)3657
2721 y Fn(n)3699 2708 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3699 2708 a Fw(>)3699 2708 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate

3699 2708 a 2890 2854 a FF(S)t Fp(U)t(B)t FF(-)t(V)-5
b Fp(A)t(R)p 2750 2920 579 4 v 2807 2988 a Fr(G)21 b
Fs(:)h Fr(D)f Fu(`)g Ft(v)k(<)p Fs(:)c Ft(v)2069 3088
y(v)k(<)p Fs(::)c Ft(\034)27 b FF(in)19 b Fr(D)74 b(G)9
b Fs(:)g Fr(D)21 b Fu(`)g Ft(\034)30 b(<)p Fs(:)21 b
Ft(\034)2975 3056 y Fz(0)p 2052 3111 950 4 v 2281 3186
a Fr(G)h Fs(:)f Fr(D)g Fu(`)h Ft(v)i(<)p Fs(:)d Ft(\034)2750
3154 y Fz(0)3073 3088 y Ft(v)j Fs(::)q Ft(>)d(\034)3301
3056 y Fz(0)3342 3088 y FF(in)d Fr(D)74 b(G)9 b Fs(:)g
Fr(D)21 b Fu(`)g Ft(\034)30 b(<)p Fs(:)21 b Ft(\034)4001
3056 y Fz(0)p 3056 3111 973 4 v 3307 3179 a Fr(G)h Fs(:)g
Fr(D)f Fu(`)g Ft(\034)30 b(<)p Fs(:)21 b Ft(v)p 2042
3250 1993 3 v 2258 3335 a Fv(Figur)o(e)d(8.)38 b FF(Subtyping)20
b(rules)f(specialized)g(for)g(wildcards)2042 3580 y(f)o(act,)26
b(the)h(omission)h(of)f(transiti)n(vity)f(is)h(actually)g(a)g(k)o(e)o
(y)h(reason)f(that)g(the)2042 3663 y(inducti)n(v)o(e)20
b(and)f(coinducti)n(v)o(e)h(de\002nitions)g(coincide.)2141
3746 y(Although)27 b(we)e(do)h(not)f(need)h(the)g(full)e(generality)i
(of)g(our)f(e)o(xistential)2042 3829 y(types)17 b(and)g(proofs)h(to)e
(handle)i(wildcards,)e(this)h(generality)g(informs)g(which)2042
3912 y(v)n(ariations)k(of)f(wildcards)h(and)g(e)o(xistential)g(types)g
(w)o(ould)g(still)e(ensure)j(our)2042 3995 y(algorithm)30
b(terminates.)f(In)g(Section)h(10,)f(we)h(will)e(present)i(a)g(fe)n(w)f
(such)2042 4078 y(e)o(xtensions)20 b(compatible)g(with)e(our)h(e)o
(xistential)g(types)g(and)h(proofs.)2042 4234 y Fv(4.3)75
b(W)o(ildcard)17 b(Subtyping)2042 4350 y FF(While)i(the)h(e)o
(xistential)g(formalization)h(is)f(useful)g(for)g(understanding)i(and)
2042 4433 y(generalizing)30 b(wildcards,)f(we)g(can)h(specialize)f(the)
g(algorithm)h(to)f(wild-)2042 4516 y(cards)34 b(for)f(a)g(more)h
(direct)g(solution.)f(W)-6 b(e)33 b(present)h(this)f(specialization)
2042 4599 y(of)j(our)g(algorithm)h(in)f(Figure)g(8,)g(with)g
Ft(\034)44 b FF(representing)37 b(a)f(Ja)o(v)n(a)h(type)2042
4682 y(and)2193 4641 y
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 2193 4641 a Fw(?)2193 4641 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 2193
4641 a 2180 4682 a Ft(\034)h FF(representing)31 b(a)f(Ja)o(v)n(a)g
(type)h(ar)o(gument)f(which)h(may)f(be)h(a)f(\(con-)2042
4765 y(strained\))24 b(wildcard.)h(The)f(function)h Fx(e)o(xplicit)g
FF(tak)o(es)g(a)f(list)g(of)g(type)h(ar)o(gu-)2042 4848
y(ments)17 b(that)g(may)h(be)g(\(e)o(xplicitly)f(bound\))i(wildcards,)e
(con)m(v)o(erts)h(wildcards)2042 4932 y(to)26 b(type)h(v)n(ariables,)g
(and)g(outputs)g(the)f(list)g(of)g(fresh)h(type)f(v)n(ariables,)h(e)o
(x-)2042 5015 y(plicit)f(bounds)i(on)f(those)g(type)g(v)n(ariables,)g
(and)g(the)f(possibly)i(con)m(v)o(erted)2042 5098 y(type)19
b(ar)o(guments.)h(F)o(or)f(e)o(xample,)g Fx(e)o(xplicit)p
Fs(\()3197 5098 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3197 5098 a Fw(Numbers<?)41 b(super)f(Integer>)3197
5098 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3197 5098 a 706 w Fs(\))18 b FF(re-)2042 5181
y(turns)f Fu(h)2238 5181 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2238 5181 a Fw(X)2238 5181
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2238 5181 a 30 w Fs(;)2302 5181 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2302 5181 a Fw(X)2302
5181 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2302 5181 a 51 w Fs(::)p Ft(>)2476 5181 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2476
5181 a Fw(Integer)2476 5181 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2476 5181 a 206 w Fs(;)2716
5181 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2716 5181 a Fw(Numbers<X>)2716 5181 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2716 5181
a 295 w Fu(i)o FF(.)g(The)h(function)g Fx(implicit)g
FF(tak)o(es)g(a)f(list)2042 5264 y(of)k(constrainable)i(type)f(v)n
(ariables,)g(a)f(class)h(or)f(interf)o(ace)h(name)g Ft(C)5
b FF(,)21 b(and)h(a)2042 5347 y(list)17 b(of)h(type)h(ar)o(guments,)f
(and)h(outputs)g(the)f(constraints)g(on)h(those)f(type)h(ar)o(-)2042
5430 y(guments)k(that)g(are)g(constrainable)g(type)g(v)n(ariables)h(as)
e(prescribed)i(by)f(the)p eop end
%%Page: 6 6
TeXDict begin 6 5 bop -22 58 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -22 58 a Fw(class)41 b(C<P)f(extends)g
(List<List<?)i(extends)f(List<?)g(super)f(C<?>>>>>)-22
58 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -22 58 a -22 141 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -22 141 a 79 w Fw(implements)h(List<P>)802
132 y
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 802 132 a Fu(fg)802 132 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 802 132 a -22 141 a
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -22
141 a 18 284 a Fv(Is)95 284 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 95 284 a Fw(C<?>)95 284
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 95 284 a 137 w Fv(a)19 b(subtype)e(of)636 284 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 636
284 a Fw(List<?)41 b(extends)g(List<?)f(super)h(C<?>>>)636
284 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 636 284 a 1001 w Fv(?)-144 427 y FF(Steps)19 b(of)g(Proof)p
-144 455 1980 4 v -144 513 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -144 513 a Fw(C<?>)-144
513 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -144 513 a 137 w Ft(<)33 506 y
 currentpoint currentpoint translate .45 .45 scale neg exch neg exch
translate
 33 506 a Fw(?)33
506 y
 currentpoint currentpoint translate 1 .45 div 1 .45 div scale neg
exch neg exch translate
 33 506 a 46 513 a Fs(:)86 513 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 86 513 a Fw(List<?)41
b(extends)f(List<?)h(super)f(C<?>>>)86 513 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 86 513 a
-35 596 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -35 596 a Fw(C<?>)-35 596 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -35 596 a 136 w
Fu(7!)197 596 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 197 596 a Fw(C<X>)197 596 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 197 596 a
136 w FF(with)485 596 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 485 596 a Fw(X)485 596 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 485
596 a 51 w Ft(<)p Fs(::)659 596 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 659 596 a Fw(List<List<?)i(extends)f
(List<?)f(super)h(C<?>>>>)659 596 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 659 596 a -144 679
a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -144 679 a Fw(C<X>)-144 679 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -144 679 a 137 w Ft(<)33
672 y
 currentpoint currentpoint translate .45 .45 scale neg exch neg exch
translate
 33 672 a Fw(?)33 672 y
 currentpoint currentpoint translate 1 .45 div 1 .45 div scale neg
exch neg exch translate
 33 672 a 46 679 a Fs(:)86
679 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 86 679 a Fw(List<?)g(extends)f(List<?)h(super)f(C<?>>>)86
679 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 86 679 a -144 762 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -144 762 a Fw(X)-144 762 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate

-144 762 a 49 w Ft(<)-55 755 y
 currentpoint currentpoint translate .45 .45 scale neg exch neg exch
translate
 -55 755 a Fw(?)-55 755
y
 currentpoint currentpoint translate 1 .45 div 1 .45 div scale neg
exch neg exch translate
 -55 755 a -42 762 a Fs(:)-2 762 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -2 762 a Fw(List<?)g(super)h(C<?>>)
-2 762 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -2 762 a -144 845 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -144 845 a Fw(List<List<?)h(extends)f
(List<?)g(super)f(C<?>>>>)-144 845 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -144 845 a 1196
w Ft(<)1092 838 y
 currentpoint currentpoint translate .45 .45 scale neg exch neg exch
translate
 1092 838 a Fw(?)1092 838 y
 currentpoint currentpoint translate 1 .45 div 1 .45 div scale neg
exch neg exch translate
 1092 838
a 1105 845 a Fs(:)1145 845 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1145 845 a Fw(List<?)h(super)f(C<?>>)1145
845 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1145 845 a -144 928 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -144 928 a Fw(C<?>)-144 928
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -144 928 a 137 w Ft(<)33 921 y
 currentpoint currentpoint translate .45 .45 scale neg exch neg exch
translate
 33 921 a Fw(?)33 921
y
 currentpoint currentpoint translate 1 .45 div 1 .45 div scale neg
exch neg exch translate
 33 921 a 46 928 a Fs(:)86 928 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 86 928 a Fw(List<?)h(extends)f
(List<?)h(super)f(C<?>>>)86 928 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 86 928 a -144 1011
a FF(\(repeats)20 b(fore)n(v)o(er\))p -150 1130 1993
3 v -150 1215 a Fv(Figur)o(e)d(9.)38 b FF(Example)18
b(of)g(in\002nite)g(proof)h(due)g(to)f(implicitly)f(in\002nite)h(types)
-150 1444 y(requirements)f(of)f(the)g(corresponding)i(type)e
(parameters)g(of)g Ft(C)5 b FF(,)16 b(constrain-)-150
1527 y(ing)24 b(a)g(type)h(v)n(ariable)f(by)540 1527
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 540 1527 a Fw(Object)540 1527 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 540 1527 a 200 w FF(if)g(there)g(are)
g(no)g(other)h(constraints.)f(F)o(or)-150 1610 y(e)o(xample,)19
b Fx(implicit)p Fs(\()398 1610 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 398 1610 a Fw(X)398
1610 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 398 1610 a 29 w Fs(;)461 1610 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 461 1610 a Fw(Numbers)461
1610 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 461 1610 a 206 w Fs(;)701 1610 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 701 1610 a Fw(X)701
1610 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 701 1610 a 30 w Fs(\))f FF(returns)1006 1610 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

1006 1610 a Fw(X)1006 1610 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1006 1610 a 50 w Ft(<)p
Fs(::)1180 1610 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1180 1610 a Fw(Number)1180 1610 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1180
1610 a 177 w FF(.)g(Thus,)h(applying)-150 1693 y Fx(e)o(xplicit)g
FF(and)g(then)g Fx(implicit)g FF(accomplishes)h(wildcard)f(capture.)g
(Note)f(that)-150 1776 y(for)h(the)g(most)g(part)g Fs(\001)380
1772 y
 currentpoint currentpoint translate .7 .7 scale neg exch neg exch
translate
 380 1772 a Fu(\016)380 1772 y
 currentpoint currentpoint translate 1 .7 div 1 .7 div scale neg exch
neg exch translate
 380 1772 a 447 1776
a FF(and)h Fs(\001)-43 b Fu(\001)41 b FF(combined)20
b(act)f(as)g Fs(\001)f FF(does)i(in)f(Figure)g(7.)-150
1924 y Fv(4.4)75 b(T)-7 b(ermination)-150 2040 y FF(Unfortunately)i(,)
22 b(our)g(algorithm)g(does)g(not)f(terminate)h(without)f(imposing)-150
2123 y(restrictions)26 b(on)h(the)f(Ja)o(v)n(a)h(language.)g(F)o
(ortunately)-5 b(,)27 b(the)f(restrictions)g(we)-150
2206 y(impose)f(are)g(simple,)f(as)h(well)f(as)g(practical)h(as)g(we)f
(will)g(demonstrate)h(in)-150 2289 y(Section)19 b(9.)g(Our)f(\002rst)g
(restriction)h(is)g(on)g(the)g(inheritance)h(hierarchy)-5
b(.)476 2429 y Fv(Inheritance)18 b(Restriction)-123 2510
y Fx(F)-8 b(or)24 b(e)o(very)g(declar)o(ation)g(of)g(a)f(dir)m(ect)h
(super)m(class)h(or)f(superinterface)h Ft(\034)-123 2593
y Fx(of)17 b(a)g(class)g(or)g(interface)o(,)h(the)f(syntax)871
2593 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 871 2593 a Fw(?)40 b(super)871 2593 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 871 2593
a 223 w Fx(must)17 b(not)g(occur)h(within)e Ft(\034)9
b Fx(.)-50 2723 y FF(Note)20 b(that)h(the)g(programs)h(leading)f(to)g
(in\002nite)f(proofs)i(in)e(Section)h(3.1)-150 2806 y(\(and)k(in)g(the)
g(upcoming)i(Section)e(4.5\))g(violate)g(our)g(inheritance)h(restric-)
-150 2889 y(tion.)f(This)h(restriction)f(is)h(most)g(similar)f(to)g(a)h
(signi\002cant)g(relaxation)g(of)-150 2972 y(the)21 b(contra)o(v)n
(ariance)h(restriction)f(that)g(K)n(ennedy)h(and)g(Pierce)e(sho)n(wed)i
(en-)-150 3055 y(ables)28 b(decidable)h(subtyping)g(for)e
(declaration-site)h(v)n(ariance)h([9].)e(Their)-150 3138
y(restriction)18 b(prohibits)g(contra)o(v)n(ariance)i(altogether)m(,)e
(whereas)h(we)f(only)h(re-)-150 3221 y(strict)k(its)h(usage.)h
(Furthermore,)f(as)g(K)n(ennedy)i(and)f(Pierce)f(mention)h([9],)-150
3304 y(wildcards)c(are)f(a)g(more)h(e)o(xpressi)n(v)o(e)g(domain)g
(than)g(declaration-site)f(v)n(ari-)-150 3387 y(ance.)f(W)-6
b(e)19 b(will)f(discuss)h(these)g(connections)i(more)e(in)g(Section)g
(10.1.)-50 3470 y(Constraints)27 b(on)h(type)f(parameters)h(also)g
(pose)g(problems)g(for)f(termi-)-150 3553 y(nation.)20
b(The)g(constraint)g(conte)o(xt)g(can)h(simulate)e(inheritance,)i(so)e
(by)i(con-)-150 3636 y(straining)26 b(a)f(type)h(parameter)672
3636 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 672 3636 a Fw(P)672 3636 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 672 3636 a 55 w FF(to)f(e)o(xtend)
1033 3636 y
 currentpoint currentpoint translate .7 1.1 scale neg exch neg exch
translate
 1033 3636 a Fw(List<List<?)42 b(super)e(P>>)1033
3636 y
 currentpoint currentpoint translate 1 .7 div 1 1.1 div scale neg exch
neg exch translate
 1033 3636 a 602 w FF(we)25 b(en-)-150 3719 y(counter)j(the)f
(same)g(problem)h(as)f(in)f(Figure)h(1)g(b)o(ut)g(this)g(time)f(e)o
(xpressed)-150 3802 y(in)i(terms)g(of)g(type-parameter)h(constraints.)f
(Constraints)g(can)h(also)f(pro-)-150 3885 y(duce)21
b(implicitly)f(in\002nite)g(types)h(that)f(enable)h(in\002nite)f
(proofs)h(e)n(v)o(en)h(when)-150 3968 y(our)j(inheritance)h
(restriction)f(is)f(satis\002ed,)h(such)g(as)g(in)g(Figure)g(9)g
(\(which)-150 4051 y(again)h(causes)h Fw(javac)g FF(to)f(suf)n(fer)g(a)
g(stack)g(o)o(v)o(er\003o)n(w\).)g(T)-6 b(o)26 b(pre)n(v)o(ent)h(prob-)
-150 4134 y(lematic)f(forms)g(of)g(constraint)h(conte)o(xts)f(and)h
(implicitly)f(in\002nite)f(types,)-150 4217 y(we)19 b(restrict)f(the)h
(constraints)g(that)g(can)h(be)f(placed)g(on)h(type)f(parameters.)491
4357 y Fv(P)o(arameter)h(Restriction)-129 4438 y Fx(F)-8
b(or)14 b(e)o(very)h(par)o(ameterization)692 4438 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 692
4438 a Fw(<)692 4438 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 692 4438 a 30 w Ft(P)771 4446
y Fo(1)805 4438 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 805 4438 a 39 w Fw(extends)805 4438
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 805 4438 a 265 w Ft(\034)1104 4446 y Fo(1)1138 4438
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1138 4438 a Fw(,)40 b(...,)1138 4438 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1138 4438 a
206 w Ft(P)1393 4446 y Fn(n)1436 4438 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1436 4438 a 39
w Fw(extends)1436 4438 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1436 4438 a 265 w Ft(\034)1735
4446 y Fn(n)1777 4438 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1777 4438 a Fw(>)1777 4438 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate

1777 4438 a 29 w Fx(,)-129 4521 y(e)o(very)21 b(syntactic)g(occurr)m
(ence)h(in)f Ft(\034)804 4529 y Fn(i)850 4521 y Fx(of)f(a)h(type)g
Ft(C)1191 4521 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1191 4521 a Fw(<...,)40 b(?)g(super)1191
4521 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1191 4521 a 412 w Ft(\034)1646 4521 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1646 4521
a Fw(,)e(...>)1646 4521 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1646 4521 a -129 4604 a Fx(must)19
b(be)g(at)g(a)g(co)o(variant)h(location)g(in)f Ft(\034)932
4612 y Fn(i)958 4604 y Fx(.)-50 4724 y FF(Note)i(that)h(our)g
(parameter)g(restriction)g(still)f(allo)n(ws)h(type)g(parameters)-150
4807 y(to)k(be)h(constrained)h(to)e(e)o(xtend)i(types)f(such)g(as)1147
4807 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1147 4807 a Fw(Comparable<?)42 b(super)e(P>)1147
4807 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1147 4807 a 617 w FF(,)26 b(a)-150 4890 y(well)14
b(kno)n(wn)j(design)f(pattern.)f(Also)f(note)i(that)f(the)g
(inheritance)h(restriction)-150 4973 y(is)24 b(actually)h(the)g
(conjunction)h(of)f(the)f(parameter)i(restriction)e(and)h(Ja)o(v)n(a')l
(s)-150 5057 y(restriction)i(that)g(no)g(direct)g(superclass)h(or)f
(superinterf)o(ace)h(may)f(ha)o(v)o(e)g(a)-150 5140 y(wildcard)19
b(as)g(a)g(type)g(ar)o(gument)h([6:)e(Chapters)i(8.1.4)f(and)g(8.1.5].)
-50 5223 y(W)m(ith)f(these)h(restrictions)g(we)g(can)g(\002nally)g
(state)f(our)h(k)o(e)o(y)h(theorem.)-150 5347 y Fv(Subtyping)30
b(Theor)o(em.)50 b Fx(Given)32 b(the)g(inheritance)h(and)g(par)o
(ameter)f(r)m(e-)-150 5430 y(strictions,)18 b(the)g(algorithm)h(pr)m
(escribed)h(by)f(the)f(rules)h(in)f(F)m(igur)m(e)g(8)h(always)2043
66 y
 currentpoint currentpoint translate .725 1.1 scale neg exch neg exch
translate
 2043 66 a Fw(class)41 b(C<P,)f(Q)f(extends)i(P>)f(implements)h
(List<List<?)h(super)e(C<List<Q>,?>>>)4711 57 y
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 4711
57 a Fu(fg)4711 57 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 4711 57 a 2043 66 a
 currentpoint currentpoint translate 1 .725 div 1 1.1 div scale neg
exch neg exch translate
 2043 66 a 2387
216 a Fv(Is)2464 216 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2464 216 a Fw(C<?,?>)2464 216
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2464 216 a 195 w Fv(a)19 b(subtype)f(of)3064 216 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

3064 216 a Fw(List<?)40 b(super)h(C<?,?>>)3064 216 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate

3064 216 a 588 w Fv(?)2042 365 y FF(Constraints)187 b(Subtyping)20
b(\(wildcard)f(capture)h(done)g(automatically\))p 2042
394 1993 4 v 2042 452 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2042 452 a Fw(X)2042 452 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2042
452 a 2071 460 a Fo(1)2127 452 y Ft(<)p Fs(::)2251 452
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2251 452 a Fw(X)2251 452 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2251 452 a 2280 460 a Fo(0)2569
452 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2569 452 a Fw(C<X)2569 452 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2569 452 a 2658 460
a Fo(0)2692 452 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2692 452 a Fw(,X)2692 452 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2692 452
a 2751 467 a Fo(1)2786 452 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2786 452 a Fw(>)2786 452
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2786 452 a 50 w Ft(<)2876 445 y
 currentpoint currentpoint translate .45 .45 scale neg exch neg exch
translate
 2876 445 a Fw(?)2876
445 y
 currentpoint currentpoint translate 1 .45 div 1 .45 div scale neg
exch neg exch translate
 2876 445 a 2890 452 a Fs(:)2932 452 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2932 452
a Fw(List<?)41 b(super)f(C<?,?>>)2932 452 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2932 452
a 2042 535 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2042 535 a Fw(Y)2042 535 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2042 535 a 2071
543 a Fo(1)2127 535 y Ft(<)p Fs(::)2251 535 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2251 535
a Fw(Y)2251 535 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2251 535 a 2280 543 a Fo(0)2569 535
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2569 535 a Fw(C<Y)2569 535 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2569 535 a 2658 543 a
Fo(0)2692 535 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2692 535 a Fw(,Y)2692 535 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2692 535
a 2751 550 a Fo(1)2786 535 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2786 535 a Fw(>)2786 535
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2786 535 a 50 w Ft(<)2876 528 y
 currentpoint currentpoint translate .45 .45 scale neg exch neg exch
translate
 2876 528 a Fw(?)2876
528 y
 currentpoint currentpoint translate 1 .45 div 1 .45 div scale neg
exch neg exch translate
 2876 528 a 2890 535 a Fs(:)2932 535 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2932 535
a Fw(List<?)h(super)f(C<List<X)2932 535 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2932 535 a
3550 557 a Fo(1)3585 535 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3585 535 a Fw(>,?>>)3585 535
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3585 535 a 2042 618 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2042 618 a Fw(X)2042 618 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2042
618 a 2071 626 a Fo(2)2127 618 y Ft(<)p Fs(::)2251 618
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2251 618 a Fw(List<X)2251 618 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2251 618 a 2427 626
a Fo(1)2462 618 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2462 618 a Fw(>)2462 618 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2462 618
a 2569 618 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2569 618 a Fw(C<List<X)2569 618 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2569 618
a 2805 626 a Fo(1)2839 618 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2839 618 a Fw(>,X)2839 618
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2839 618 a 2928 633 a Fo(2)2962 618 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2962 618 a Fw(>)2962
618 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2962 618 a 51 w Ft(<)3053 611 y
 currentpoint currentpoint translate .45 .45 scale neg exch neg exch
translate
 3053 611 a Fw(?)3053
611 y
 currentpoint currentpoint translate 1 .45 div 1 .45 div scale neg
exch neg exch translate
 3053 611 a 3066 618 a Fs(:)3109 618 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3109 618
a Fw(List<?)g(super)h(C<List<Y)3109 618 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3109 618 a
3727 640 a Fo(1)3761 618 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3761 618 a Fw(>,?>>)3761 618
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3761 618 a 2042 701 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2042 701 a Fw(Y)2042 701 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2042
701 a 2071 709 a Fo(2)2127 701 y Ft(<)p Fs(::)2251 701
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2251 701 a Fw(List<Y)2251 701 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2251 701 a 2427 709
a Fo(1)2462 701 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2462 701 a Fw(>)2462 701 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2462 701
a 2569 701 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2569 701 a Fw(C<List<Y)2569 701 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2569 701
a 2805 709 a Fo(1)2839 701 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2839 701 a Fw(>,Y)2839 701
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2839 701 a 2928 716 a Fo(2)2962 701 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2962 701 a Fw(>)2962
701 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2962 701 a 51 w Ft(<)3053 694 y
 currentpoint currentpoint translate .45 .45 scale neg exch neg exch
translate
 3053 694 a Fw(?)3053
694 y
 currentpoint currentpoint translate 1 .45 div 1 .45 div scale neg
exch neg exch translate
 3053 694 a 3066 701 a Fs(:)3109 701 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3109 701
a Fw(List<?)f(super)h(C<List<X)3109 701 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3109 701 a
3727 723 a Fo(2)3761 701 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3761 701 a Fw(>,?>>)3761 701
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3761 701 a 2042 784 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2042 784 a Fw(X)2042 784 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2042
784 a 2071 792 a Fo(3)2127 784 y Ft(<)p Fs(::)2251 784
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2251 784 a Fw(List<X)2251 784 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2251 784 a 2427 792
a Fo(2)2462 784 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2462 784 a Fw(>)2462 784 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2462 784
a 2569 784 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2569 784 a Fw(C<List<X)2569 784 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2569 784
a 2805 792 a Fo(2)2839 784 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2839 784 a Fw(>,X)2839 784
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2839 784 a 2928 799 a Fo(3)2962 784 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2962 784 a Fw(>)2962
784 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2962 784 a 51 w Ft(<)3053 777 y
 currentpoint currentpoint translate .45 .45 scale neg exch neg exch
translate
 3053 777 a Fw(?)3053
777 y
 currentpoint currentpoint translate 1 .45 div 1 .45 div scale neg
exch neg exch translate
 3053 777 a 3066 784 a Fs(:)3109 784 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3109 784
a Fw(List<?)f(super)h(C<List<Y)3109 784 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3109 784 a
3727 806 a Fo(2)3761 784 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3761 784 a Fw(>,?>>)3761 784
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3761 784 a 2042 867 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2042 867 a Fw(Y)2042 867 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2042
867 a 2071 875 a Fo(3)2127 867 y Ft(<)p Fs(::)2251 867
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2251 867 a Fw(List<Y)2251 867 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2251 867 a 2427 875
a Fo(2)2462 867 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2462 867 a Fw(>)2462 867 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2462 867
a 2569 867 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2569 867 a Fw(C<List<Y)2569 867 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2569 867
a 2805 875 a Fo(2)2839 867 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2839 867 a Fw(>,Y)2839 867
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2839 867 a 2928 882 a Fo(3)2962 867 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2962 867 a Fw(>)2962
867 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2962 867 a 51 w Ft(<)3053 860 y
 currentpoint currentpoint translate .45 .45 scale neg exch neg exch
translate
 3053 860 a Fw(?)3053
860 y
 currentpoint currentpoint translate 1 .45 div 1 .45 div scale neg
exch neg exch translate
 3053 860 a 3066 867 a Fs(:)3109 867 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3109 867
a Fw(List<?)f(super)h(C<List<X)3109 867 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3109 867 a
3727 889 a Fo(3)3761 867 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3761 867 a Fw(>,?>>)3761 867
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3761 867 a 2042 950 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2042 950 a Fw(X)2042 950 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2042
950 a 2071 958 a Fo(4)2127 950 y Ft(<)p Fs(::)2251 950
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2251 950 a Fw(List<X)2251 950 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2251 950 a 2427 958
a Fo(3)2462 950 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2462 950 a Fw(>)2462 950 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2462 950
a 2569 950 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2569 950 a Fw(C<List<X)2569 950 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2569 950
a 2805 958 a Fo(3)2839 950 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2839 950 a Fw(>,X)2839 950
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2839 950 a 2928 965 a Fo(4)2962 950 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2962 950 a Fw(>)2962
950 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2962 950 a 51 w Ft(<)3053 943 y
 currentpoint currentpoint translate .45 .45 scale neg exch neg exch
translate
 3053 943 a Fw(?)3053
943 y
 currentpoint currentpoint translate 1 .45 div 1 .45 div scale neg
exch neg exch translate
 3053 943 a 3066 950 a Fs(:)3109 950 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3109 950
a Fw(List<?)f(super)h(C<List<Y)3109 950 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3109 950 a
3727 972 a Fo(3)3761 950 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3761 950 a Fw(>,?>>)3761 950
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3761 950 a 2769 1033 a FF(\(continue)20 b(fore)n(v)o(er\))p
2042 1152 1993 3 v 2102 1236 a Fv(Figur)o(e)e(10.)38
b FF(Example)19 b(of)g(e)o(xpansion)i(through)f(implicit)e(constraints)
2042 1480 y Fx(terminates.)d(Furthermor)m(e)h(it)f(is)g(a)h(sound)g
(and)h(complete)e(implementation)2042 1563 y(of)j(the)h(subtyping)h
(rules)e(in)h(the)f(J)m(ava)i(langua)o(g)o(e)h(speci\002cation)f([6:)f
(Chap-)2042 1646 y(ter)j(4.10.2])h(pr)m(o)o(vided)h(all)e(types)h(ar)m
(e)g(valid)g(accor)m(ding)h(to)f(the)f(J)m(ava)i(lan-)2042
1732 y(gua)o(g)o(e)d(speci\002cation)f([6:)f(Chapter)h(4.5].)3153
1701 y Fz(z)2042 1902 y Fx(Pr)m(oof.)28 b FF(Here)g(we)g(only)h
(discuss)g(the)f(reasons)h(for)f(our)g(restrictions;)g(the)2042
1985 y(full)c(proofs)i(can)f(be)h(found)g(in)f(Section)g(B.)f(The)h
(\002rst)f(thing)h(to)g(notice)g(is)2042 2069 y(that,)c(for)g(the)g
(most)h(part,)f(the)g(supertype)i(shrinks)f(through)g(the)f(recursi)n
(v)o(e)2042 2152 y(calls.)32 b(There)g(are)h(only)g(tw)o(o)f(w)o(ays)h
(in)g(which)f(it)g(can)h(gro)n(w:)g(applying)2042 2235
y(a)f(lo)n(wer)o(-bound)i(constraint)f(on)g(a)f(type)h(v)n(ariable)g
(via)h(S)t Fp(U)t(B)t FF(-)t(V)-5 b Fp(A)t(R)p FF(,)31
b(and)2042 2318 y(checking)23 b(an)g(e)o(xplicit)f(lo)n(wer)g(bound)h
(on)g(a)f(wildcard)g(via)i(S)t Fp(U)t(B)t FF(-)t(E)t
Fp(X)t(I)t(S)t(T)t(S)o FF(.)2042 2401 y(The)19 b(former)g(does)h(not)g
(cause)g(problems)g(because)g(of)f(the)h(limited)e(w)o(ays)i(a)2042
2484 y(type)f(v)n(ariable)g(can)g(get)g(a)f(lo)n(wer)h(bound.)g(The)g
(latter)f(is)g(the)h(k)o(e)o(y)g(challenge)2042 2567
y(because)29 b(it)e(essentially)h(sw)o(aps)g(the)g(subtype)h(and)g
(supertype)g(which,)f(if)2042 2650 y(unrestricted,)c(can)h(cause)g
(non-termination.)g(Ho)n(we)n(v)o(er)m(,)f(we)g(determined)2042
2733 y(that)34 b(there)h(are)f(only)h(tw)o(o)g(w)o(ays)g(to)f(increase)
h(the)g(number)g(of)f(sw)o(aps)2042 2816 y(that)f(can)i(happen:)g
(inheritance,)f(and)g(constraints)g(on)h(type)f(v)n(ariables.)2042
2899 y(Our)e(inheritance)g(and)h(parameter)f(restrictions)g(pre)n(v)o
(ent)g(this,)g(capping)2042 2982 y(the)k(number)g(of)g(sw)o(aps)g(that)
g(can)g(happen)i(from)d(the)h(be)o(ginning)h(and)2042
3065 y(guaranteeing)20 b(termination.)p 3980 3065 4 51
v 3984 3018 45 4 v 3984 3065 V 4028 3065 4 51 v 2042
3235 a Fv(4.5)75 b(Expansi)o(v)o(e)19 b(Inheritance)2042
3351 y FF(Smith)d(and)i(Cartwright)f(conjectured)h(that)f(prohibiting)h
(e)o(xpansi)n(v)o(e)g(inher)o(-)2042 3434 y(itance)f(as)g(de\002ned)g
(by)h(K)n(ennedy)g(and)g(Pierce)e([9])h(w)o(ould)g(pro)o(vide)h(a)f
(sound)2042 3517 y(and)25 b(complete)g(subtyping)i(algorithm)e([14].)f
(This)g(is)h(because)g(K)n(ennedy)2042 3600 y(and)f(Pierce)f(b)o(uilt)g
(of)n(f)h(the)f(w)o(ork)i(by)f(V)l(iroli)e([20)q(])h(to)g(pro)o(v)o(e)i
(that,)e(by)h(pro-)2042 3683 y(hibiting)k(e)o(xpansi)n(v)o(e)h
(inheritance,)f(an)o(y)g(in\002nite)f(proof)h(of)g(subtyping)h(in)2042
3766 y(their)18 b(setting)h(w)o(ould)g(ha)o(v)o(e)g(to)g(repeat)g
(itself;)e(thus)i(a)g(sound)h(and)f(complete)2042 3849
y(algorithm)g(could)h(be)f(de\002ned)h(by)f(detecting)h(repetitions.)
2141 3932 y(Unfortunately)-5 b(,)28 b(we)f(ha)o(v)o(e)g(determined)g
(that)g(prohibiting)h(e)o(xpansi)n(v)o(e)2042 4015 y(inheritance)23
b(as)f(de\002ned)i(by)f(K)n(ennedy)h(and)f(Pierce)f(does)h(not)g(imply)
f(that)2042 4098 y(all)15 b(in\002nite)g(proofs)h(repeat.)f(Thus,)h
(their)f(algorithm)h(adapted)g(to)g(wildcards)2042 4181
y(does)31 b(not)g(terminate.)f(The)g(problem)h(is)g(that)f(implicit)g
(constraints)h(can)2042 4264 y(cause)19 b(an)h(indirect)f(form)g(of)f
(e)o(xpansion)j(that)e(is)f(unaccounted)k(for)l(.)2141
4347 y(Consider)28 b(the)g(class)f(declaration)h(in)f(Figure)g(10.)g
(According)i(to)e(the)2042 4430 y(de\002nition)22 b(by)g(K)n(ennedy)i
(and)e(Pierce)f([9)q(],)g(this)g(is)h(not)g(e)o(xpansi)n(v)o(e)h
(inheri-)2042 4513 y(tance)h(since)2400 4513 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2400 4513
a Fw(List<Q>)2400 4513 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2400 4513 a 230 w FF(is)f(the)h(type)g(ar)o
(gument)g(corresponding)i(to)3807 4513 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3807 4513 a
Fw(P)3807 4513 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3807 4513 a 53 w FF(rather)2042 4597
y(than)20 b(to)2267 4597 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2267 4597 a Fw(Q)2267 4597
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2267 4597 a 30 w FF(.)f(Ho)n(we)n(v)o(er)m(,)h(the)g(proof)g(in)g
(Figure)f(10)h(ne)n(v)o(er)h(repeats)f(itself.)e(The)2042
4680 y(k)o(e)o(y)23 b(observ)n(ation)h(to)e(mak)o(e)h(is)f(that)g(the)g
(conte)o(xt,)h(which)f(w)o(ould)h(be)g(\002x)o(ed)2042
4763 y(in)k(K)n(ennedy)i(and)e(Pierce')l(s)g(setting,)g(is)f
(continually)i(e)o(xpanding)h(in)e(this)2042 4846 y(setting.)c(In)h
(the)f(last)g(step)h(we)g(display)-5 b(,)24 b(the)f(second)i(type)f(ar)
o(gument)g(of)4005 4846 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 4005 4846 a Fw(C)4005 4846
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 4005 4846 a 2042 4929 a FF(is)h(a)g(subtype)h(of)2519
4929 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2519 4929 a Fw(List<?)41 b(extends)g(List<?)f(extends)h
(List<?>>>)2519 4929 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2519 4929 a 1148 w FF(,)24 b(which)i(will)2042
5012 y(k)o(eep)21 b(gro)n(wing)f(as)g(the)g(proof)g(continues.)g(Thus)g
(Smith)f(and)i(Cartwright')l(s)2042 5095 y(conjecture)h(for)e(a)h
(terminating)g(subtyping)h(algorithm)f(does)h(not)f(hold.)g(In)2042
5178 y(our)d(technical)g(report)g(we)g(identify)g(syntactic)h
(restrictions)e(that)h(w)o(ould)h(be)2042 5261 y(necessary)j
(\(although)h(possibly)f(still)f(not)h(suf)n(\002cient\))f(to)g(adapt)h
(K)n(ennedy)p 2042 5355 997 3 v 2042 5406 a Fz(z)2083
5430 y FB(See)17 b(Section)i(7.4)e(for)g(a)g(clari\002cation)k(on)c
(type)h(v)n(alidity)l(.)p eop end
%%Page: 7 7
TeXDict begin 7 6 bop -80 58 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -80 58 a Fw(class)40 b(Var)312
49 y
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 312 49 a Fu(f)312 49 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 312 49 a -80 58 a
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -80 58
a -80 141 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -80 141 a 78 w Fw(boolean)h(mValue;)-80 141
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -80 141 a -80 224 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -80 224 a 78 w Fw(void)f(addTo\(List<?)i(super)e
(Var>)h(trues,)f(List<?)h(super)f(Var>)g(falses\))-80
224 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -80 224 a -80 307 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -80 307 a 76 298 a
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 76 298 a
Fu(f)76 298 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 76 298 a 115 307 a Fw(\(mValue)h(?)e(trues)h(:)g
(falses\).add\(this\);)1523 298 y
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 1523 298 a Fu(g)1523
298 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 1523 298 a -80 307 a
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -80 307 a -80 390 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -80 390
a -80 381 a
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 -80 381 a Fu(g)-80 381 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 -80 381 a -80 390
a
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -80 390 a -150 509 1993 3 v -137 594 a Fv(Figur)o(e)18
b(11.)37 b FF(Example)20 b(of)f(v)n(alid)g(code)h(erroneously)g
(rejected)f(by)h Fw(javac)-150 957 y FF(and)28 b(Pierce')l(s)e
(algorithm)i(to)f(wildcards)h([16].)f(Ho)n(we)n(v)o(er)m(,)g(these)h
(restric-)-150 1040 y(tions)19 b(are)h(signi\002cantly)f(more)h(comple)
o(x)g(than)g(ours,)f(and)h(the)f(adapted)i(al-)-150 1123
y(gorithm)26 b(w)o(ould)h(be)f(strictly)f(more)i(comple)o(x)f(than)h
(ours,)f(so)g(we)g(do)g(not)-150 1206 y(e)o(xpect)20
b(this)e(to)h(be)g(a)g(practical)g(alternati)n(v)o(e.)-150
1495 y FD(5.)91 b(Challenges)21 b(of)i(T)-7 b(ype-Ar)o(gument)21
b(Infer)n(ence)-150 1612 y FF(So)k(f)o(ar)f(we)h(ha)o(v)o(e)g
(discussed)h(only)g(one)f(major)g(challenge)h(of)f(wildcards,)-150
1695 y(subtyping,)36 b(and)g(our)f(solution)h(to)f(this)g(challenge.)h
(No)n(w)f(we)g(present)-150 1778 y(another)21 b(major)f(challenge)h(of)
f(wildcards,)g(inference)g(of)g(type)h(ar)o(guments)-150
1861 y(for)e(generic)g(methods,)h(with)e(our)i(techniques)g(to)f(follo)
n(w)g(in)g(Section)f(6.)-150 2076 y Fv(5.1)75 b(J)o(oins)-150
2192 y FF(Ja)o(v)n(a)30 b(has)g(the)f(e)o(xpression)606
2192 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 606 2192 a Fw(cond)40 b(?)g(t)f(:)g(f)606 2192
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 606 2192 a 382 w FF(which)30 b(e)n(v)n(aluates)h(to)1591
2192 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1591 2192 a Fw(t)1591 2192 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1591 2192 a 59 w
FF(if)1725 2192 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1725 2192 a Fw(cond)1725 2192 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1725
2192 a -150 2275 a FF(e)n(v)n(aluates)i(to)246 2275 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

246 2275 a Fw(true)246 2275 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 246 2275 a 118 w FF(,)f(and)g(to)644
2275 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 644 2275 a Fw(f)644 2275 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 644 2275 a 62 w FF(otherwise.)g(In)g
(order)g(to)h(determine)f(the)-150 2358 y(type)k(of)f(this)h(e)o
(xpression,)g(it)f(is)g(useful)h(to)f(be)h(able)f(to)h(combine)g(the)
-150 2441 y(types)31 b(determined)h(for)523 2441 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 523
2441 a Fw(t)523 2441 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 523 2441 a 59 w FF(and)721 2441
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 721 2441 a Fw(f)721 2441 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 721 2441 a 60 w FF(using)f(a)g
Fx(join)p Fs(\()p Ft(\034)t(;)13 b(\034)1298 2409 y Fz(0)1320
2441 y Fs(\))30 b FF(function)i(which)-150 2524 y(returns)38
b(the)f(most)h(precise)g(common)h(supertype)f(of)g Ft(\034)45
b FF(and)39 b Ft(\034)1649 2492 y Fz(0)1670 2524 y FF(.)e(Un-)-150
2607 y(fortunately)-5 b(,)41 b(not)g(all)f(pairs)h(of)f(types)i(with)e
(wildcards)h(ha)o(v)o(e)g(a)f(join)-150 2690 y(\(e)n(v)o(en)30
b(if)f(we)h(allo)n(w)g(intersection)g(types\).)f(F)o(or)h(e)o(xample,)g
(consider)g(the)-150 2773 y(types)52 2773 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 52 2773 a
Fw(List<String>)52 2773 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 52 2773 a 397 w FF(and)601
2773 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 601 2773 a Fw(List<Integer>)601 2773 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 601 2773
a 383 w FF(,)43 b(where)1273 2773 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1273 2773 a Fw(String)1273
2773 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1273 2773 a 221 w FF(implements)-150 2856 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -150
2856 a Fw(Comparable<String>)-150 2856 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -150 2856 a
545 w FF(and)518 2856 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 518 2856 a Fw(Integer)518 2856
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 518 2856 a 222 w FF(implements)1104 2856 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1104 2856
a Fw(Comparable<Integer>)1104 2856 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1104 2856 a 559
w FF(.)15 b(Both)-150 2939 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -150 2939 a Fw(List<String>)-150
2939 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -150 2939 a 385 w FF(and)374 2939 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 374 2939 a
Fw(List<Integer>)374 2939 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 374 2939 a 415 w FF(are)32
b(a)976 2939 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 976 2939 a Fw(List)976 2939 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 976 2939
a 150 w FF(of)g(something,)h(call)e(it)1794 2939 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1794
2939 a Fw(X)1794 2939 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1794 2939 a 30 w FF(,)-150 3022
y(and)h(in)f(both)h(cases)f(that)573 3022 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 573 3022
a Fw(X)573 3022 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 573 3022 a 60 w FF(is)g(a)g(subtype)i(of)1135
3022 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1135 3022 a Fw(Comparable<X>)1135 3022 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1135
3022 a 382 w FF(.)e(So)g(while)-150 3105 y(both)5 3105
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 5 3105 a Fw(List<String>)5 3105 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 5 3105 a 374 w FF(and)509
3105 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 509 3105 a Fw(List<Integer>)509 3105 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 509 3105
a 404 w FF(are)22 b(subtypes)h(of)f(simply)1618 3105
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1618 3105 a Fw(List<?>)1618 3105 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1618 3105 a 206
w FF(,)-150 3188 y(the)o(y)44 b(are)g(also)g(subtypes)i(of)732
3188 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 732 3188 a Fw(List<?)40 b(extends)h(Comparable<?>>)732
3188 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 732 3188 a 897 w FF(and)j(of)-150 3271 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -150
3271 a Fw(List<?)d(extends)f(Comparable<?)i(extends)f(Comparable<?>>>)
-150 3271 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -150 3271 a 1519 w FF(and)20 b(so)f(on.)g(Thus)-150
3354 y(their)36 b(join)h(using)g(only)h(wildcards)f(is)f(the)h
(undesirable)h(in\002nite)e(type)-150 3437 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -150 3437
a Fw(List<?)41 b(extends)f(Comparable<?)i(extends)f(Comparable<?)h
(extends)f(...>>>)-150 3437 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -150 3437 a 1853 w FF(.)-50
3520 y Fw(javac)29 b FF(addresses)g(this)f(by)h(using)g(an)f(algorithm)
h(for)f(\002nding)h Fx(some)-150 3603 y FF(common)d(supertype)g(of)e
Ft(\034)33 b FF(and)25 b Ft(\034)779 3571 y Fz(0)825
3603 y FF(which)g(is)f(not)g(necessarily)i(the)e(most)-150
3686 y(precise.)h(This)f(strate)o(gy)i(is)e(incomplete,)h(as)g(we)g(e)n
(v)o(en)h(sa)o(w)f(in)f(the)h(class-)-150 3769 y(room)20
b(when)h(it)e(f)o(ailed)h(to)g(type)h(check)g(the)f(code)g(in)g(Figure)
g(11.)g(This)g(sim-)-150 3852 y(ple)g(program)h(f)o(ails)e(to)h(type)g
(check)h(because)g Fw(javac)f FF(determines)h(that)e(the)-150
3935 y(type)k(of)86 3935 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 86 3935 a Fw(\(mValue)41 b(?)e(trues)i(:)e
(falses\))86 3935 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 86 3935 a 758 w FF(is)917 3935 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

917 3935 a Fw(List<?>)917 3935 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 917 3935 a 228 w FF(rather)23
b(than)g(the)g(ob)o(vious)-150 4018 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -150 4018 a Fw(List<?)41
b(super)f(Var>)-150 4018 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -150 4018 a 500 w FF(.)18
b(In)h(particular)m(,)g Fw(javac)p FF(')l(s)h(algorithm)f(may)g(e)n(v)o
(en)h(f)o(ail)e(to)-150 4101 y(return)h Ft(\034)27 b
FF(when)20 b(both)f(ar)o(guments)h(are)f(the)g(same)g(type)g
Ft(\034)9 b FF(.)-50 4184 y(Smith)16 b(and)h(Cartwright)g(tak)o(e)g(a)g
(dif)n(ferent)g(approach)i(to)e(joining)g(types.)-150
4267 y(The)o(y)g(e)o(xtend)g(the)g(type)g(system)g(with)g(union)g
(types)g([14)q(].)f(That)h(is,)f(the)g(join)-150 4350
y(of)-70 4350 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -70 4350 a Fw(List<String>)-70 4350 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate

-70 4350 a 370 w FF(and)426 4350 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 426 4350 a Fw(List<Integer>)426
4350 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 426 4350 a 400 w FF(is)h(just)1019 4350 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1019
4350 a Fw(List<String>)42 b(|)d(List<Integer>)1019 4350
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1019 4350 a -150 4433 a FF(in)24 b(their)g(system.)f
Ft(\034)385 4433 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 385 4433 a 39 w Fw(|)385 4433 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 385
4433 a 88 w Ft(\034)516 4402 y Fz(0)562 4433 y FF(is)g(de\002ned)i(to)f
(be)g(a)g(supertype)h(of)f(both)h Ft(\034)32 b FF(and)-150
4516 y Ft(\034)-107 4485 y Fz(0)-60 4516 y FF(and)26
b(a)g(subtype)h(of)f(all)f(common)i(supertypes)g(of)e
Ft(\034)34 b FF(and)27 b Ft(\034)1542 4485 y Fz(0)1563
4516 y FF(.)e(Thus,)h(it)-150 4599 y(is)21 b(by)h(de\002nition)g(the)g
(join)g(of)f Ft(\034)30 b FF(and)22 b Ft(\034)895 4568
y Fz(0)938 4599 y FF(in)g(their)f(e)o(xtended)i(type)f(system.)-150
4682 y(This)k(w)o(orks)h(for)f(the)g(code)h(in)g(Figure)f(11,)g(b)o(ut)
g(in)g(Section)h(5.2)f(we)g(will)-150 4765 y(demonstrate)20
b(the)f(limitations)f(of)h(this)g(solution.)-50 4848
y(Another)25 b(direction)h(w)o(ould)f(be)g(to)g(\002nd)g(a)g(form)g(of)
g(e)o(xistential)g(types)-150 4932 y(be)o(yond)43 b(wildcards)f(for)f
(which)h(joins)g(al)o(w)o(ays)g(e)o(xist.)f(F)o(or)g(e)o(xample,)-150
5015 y(using)h(traditional)f(e)o(xistential)g(types)h(the)g(join)f(of)
1340 5015 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1340 5015 a Fw(List<String>)1340 5015 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1340
5015 a 395 w FF(and)-150 5098 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -150 5098 a Fw(List<Integer>)-150
5098 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -150 5098 a 412 w FF(is)29 b(just)g Fu(9)521 5098
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 521 5098 a Fw(X)521 5098 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 521 5098 a 71 w Fs(:)655
5098 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 655 5098 a Fw(X)655 5098 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 655 5098 a 72 w Ft(<)p
Fs(::)871 5098 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 871 5098 a Fw(Comparable<X>)871 5098
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 871 5098 a 382 w Ft(:)1304 5098 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1304 5098 a Fw(List<X>)1304
5098 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1304 5098 a 206 w FF(.)g(Ho)n(we)n(v)o(er)m(,)-150
5181 y(our)19 b(in)m(v)o(estigations)h(suggest)g(that)f(it)f(may)i(be)f
(impossible)h(for)f(an)g(e)o(xisten-)-150 5264 y(tial)k(type)g(system)h
(to)f(ha)o(v)o(e)h(both)g(joins)f(and)h(decidable)h(subtyping)g(while)
-150 5347 y(being)e(e)o(xpressi)n(v)o(e)g(enough)h(to)d(handle)i
(common)h(Ja)o(v)n(a)e(code.)g(Therefore,)-150 5430 y(our)d(solution)h
(will)e(dif)n(fer)g(from)h(all)g(of)g(the)g(abo)o(v)o(e.)2111
58 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2111 58 a Fw(<P>)40 b(P)g(getFirst\(List<P>)j(list\))3249
49 y
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 3249 49 a Fu(f)3249 49 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 3249 49 a 3287 58 a Fw(return)e
(list.get\(0\);)4030 49 y
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 4030 49 a Fu(g)4030 49 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 4030
49 a 2111 58 a
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2111 58 a 2111 141 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2111 141 a Fw(Number)g
(getFirstNumber\(List<?)j(extends)d(Number>)g(nums\))2111
141 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2111 141 a 2111 224 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2111 224 a 2190 215 a
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 2190
215 a Fu(f)2190 215 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 2190 215 a 2228 224 a Fw(return)g
(getFirst\(nums\);)3088 215 y
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 3088 215 a Fu(g)3088 215
y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 3088 215 a 2111 224 a
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2111 224 a 2111 307 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2111 307
a Fw(Object)g(getFirstNonEmpty\(List<String>)46 b(strs,)40
b(List<Object>)i(obs\))2111 307 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2111 307 a 2111 390
a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2111 390 a 2190 381 a
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 2190 381 a Fu(f)2190 381 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 2190
381 a 2228 390 a Fw(return)f(getFirst\(!strs.isEmpty\(\))j(?)c(strs)g
(:)f(obs\);)4031 381 y
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 4031 381 a Fu(g)4031 381 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 4031
381 a 2111 390 a
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2111 390 a 2111 473 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2111 473 a Fw(Object)i
(getFirstNonEmpty2\(List<String>)46 b(strs,)40 b(List<Integer>)i
(ints\))2111 473 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2111 473 a 2111 556 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2111 556 a 2190
547 a
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 2190 547 a Fu(f)2190 547 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 2190 547 a 2228 556
a Fw(return)f(getFirst\(!strs.isEmpty\(\))j(?)c(strs)g(:)f(ints\);)4070
547 y
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 4070 547 a Fu(g)4070 547 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 4070 547 a 2111 556
a
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2111 556 a 2042 675 1993 3 v 2380 760 a Fv(Figur)o(e)18
b(12.)38 b FF(Examples)19 b(of)g(capture)g(con)m(v)o(ersion)2042
985 y Fv(5.2)75 b(Captur)o(e)18 b(Con)m(v)o(ersion)2042
1101 y FF(Ja)o(v)n(a)35 b(has)g(generic)g(methods)h(as)e(well)g(as)h
(generic)g(classes)g([6)q(:)f(Chap-)2042 1184 y(ter)18
b(8.4.4].)g(F)o(or)f(e)o(xample,)i(the)g(method)3111
1184 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3111 1184 a Fw(getFirst)3111 1184 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3111 1184
a 253 w FF(in)g(Figure)f(12)g(is)g(generic)2042 1267
y(with)h(respect)h(to)2503 1267 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2503 1267 a Fw(P)2503
1267 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2503 1267 a 29 w FF(.)g(Ja)o(v)n(a)f(attempts)h(to)g(infer)f
(type)i(ar)o(guments)f(for)g(in)m(v)o(oca-)2042 1350
y(tions)h(of)h(generic)g(methods)g([6)q(:)f(Chapter)g(15.12.2.7],)h
(hence)h(the)e(uses)h(of)2042 1433 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2042 1433 a Fw(getFirst)2042
1433 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2042 1433 a 256 w FF(inside)f(the)g(v)n(arious)h(methods)g(in)e
(Figure)h(12)h(do)f(not)g(need)h(to)f(be)2042 1516 y(annotated)g(with)f
(the)g(appropriate)h(instantiation)f(of)3447 1516 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3447
1516 a Fw(P)3447 1516 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3447 1516 a 30 w FF(.)f(Interestingly)-5
b(,)20 b(this)2042 1599 y(enables)15 b(Ja)o(v)n(a)g(to)g(infer)g(type)g
(ar)o(guments)g(that)g(cannot)h(be)f(e)o(xpressed)h(by)f(the)2042
1682 y(user)l(.)j(Consider)2487 1682 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2487 1682 a Fw(getFirstNumber)
2487 1682 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2487 1682 a 412 w FF(.)g(This)g(method)h(is)f(accepted)i
(by)f Fw(javac)p FF(;)4005 1682 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 4005 1682 a Fw(P)4005
1682 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 4005 1682 a 2042 1765 a FF(is)e(instantiated)g(to)g(the)g(type)h
(v)n(ariable)f(for)g(the)h(wildcard)3545 1765 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3545
1765 a Fw(?)39 b(extends)i(Number)3545 1765 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3545 1765
a 471 w FF(,)2042 1848 y(an)17 b(instantiation)h(of)2596
1848 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2596 1848 a Fw(P)2596 1848 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2596 1848 a 46 w
FF(that)f(the)h(programmer)g(cannot)h(e)o(xplicitly)e(annotate)2042
1931 y(because)e(the)g(programmer)h(cannot)f(e)o(xplicitly)f(name)h
(the)g(wildcard.)f(Thus,)2042 2014 y(Ja)o(v)n(a)i(is)f(implicitly)g
(opening)i(the)f(e)o(xistential)g(type)3387 2014 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3387
2014 a Fw(List<?)41 b(extends)f(Number>)3387 2014 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3387
2014 a 2042 2097 a FF(to)2120 2097 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2120 2097 a Fw(List<X>)2120
2097 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2120 2097 a 226 w FF(with)2499 2097 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2499 2097
a Fw(X)2499 2097 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2499 2097 a 54 w Ft(<)p Fs(::)2679
2097 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2679 2097 a Fw(Number)2679 2097 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2679 2097 a
197 w FF(and)21 b(then)g(instantiating)3543 2097 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3543
2097 a Fw(P)3543 2097 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3543 2097 a 49 w FF(as)3675 2097
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3675 2097 a Fw(X)3675 2097 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3675 2097 a 49 w FF(so)g(that)f(the)2042
2180 y(return)28 b(type)h(is)2483 2180 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2483 2180 a
Fw(X)2483 2180 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2483 2180 a 57 w FF(which)g(is)f(a)g(subtype)i(of)3241
2180 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3241 2180 a Fw(Number)3241 2180 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3241 2180 a
177 w FF(.)d(This)h(ability)g(to)h(im-)2042 2263 y(plicitly)22
b(capture)h(wildcards,)g(kno)n(wn)g(as)g(capture)g(con)m(v)o(ersion)h
([6)q(:)e(Chap-)2042 2346 y(ter)e(5.1.10],)g(is)g(important)g(to)g(w)o
(orking)i(with)d(wildcards)i(b)o(ut)f(means)h(type)2042
2429 y(inference)e(has)h(to)f(determine)g(when)h(to)e(open)i(a)f
(wildcard)g(type.)2141 2512 y(Smith)14 b(and)h(Cartwright)f(de)n(v)o
(eloped)j(an)d(algorithm)h(for)f(type-ar)o(gument)2042
2595 y(inference)20 b(intended)h(to)e(impro)o(v)o(e)h(upon)h
Fw(javac)f FF([14)q(].)f(Before)h(going)g(into)2042 2678
y(their)i(algorithm)h(and)g(sho)n(wing)h(some)f(of)f(its)g
(limitations,)f(let)h(us)h(\002rst)f(go)2042 2761 y(back)k(to)g(Figure)
f(11.)h(Notice)g(that)g(the)f(e)o(xample)i(there,)e(although)i(origi-)
2042 2844 y(nally)f(presented)i(as)e(a)g(join)g(e)o(xample,)h(can)g(be)
f(thought)i(of)e(as)g(an)h(infer)o(-)2042 2927 y(ence)d(e)o(xample)h
(by)f(considering)h(the)3063 2927 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3063 2927 a Fw(?)39
b(:)3063 2927 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3063 2927 a 112 w FF(operator)24 b(to)g(be)g(lik)o(e)g
(a)f(generic)2042 3010 y(method.)32 b(In)g(f)o(act,)f(Smith)g(and)i
(Cartwright)e(ha)o(v)o(e)h(already)g(sho)n(wn)h(that)2042
3093 y(type-ar)o(gument)d(inference)f(inherently)h(requires)f
(\002nding)h(common)g(su-)2042 3176 y(pertypes)21 b(of)f(tw)o(o)g
(types)h([14],)f(a)g(process)h(that)f(is)g(often)g(performed)h(using)
2042 3259 y(joins.)g(Thus)i(the)f(ability)f(to)h(join)g(types)h(is)e
(closely)h(intertwined)g(with)g(the)2042 3342 y(ability)h(to)f(do)i
(type-ar)o(gument)g(inference.)g(Smith)e(and)i(Cartwright')l(s)e(ap-)
2042 3425 y(proach)j(for)e(type-ar)o(gument)i(inference)g(is)e(based)i
(on)f(their)f(union)i(types,)2042 3508 y(which)h(we)f(e)o(xplained)i
(in)e(Section)g(5.1.)h(Their)f(approach)i(to)e(type)h(infer)o(-)2042
3591 y(ence)c(w)o(ould)h(succeed)g(on)g(the)f(e)o(xample)h(from)f
(Figure)f(11,)i(because)g(the)o(y)2042 3674 y(use)c(a)g(union)h(type,)f
(whereas)g Fw(javac)h FF(incorrectly)f(rejects)g(that)g(program.)2141
3758 y(Although)d(Smith)e(and)i(Cartwright')l(s)e(approach)i(to)e
(type-ar)o(gument)i(in-)2042 3841 y(ference)21 b(impro)o(v)o(es)h(on)f
(Ja)o(v)n(a')l(s)g(approach,)i(their)d(approach)j(is)e(not)g(strictly)
2042 3924 y(better)32 b(than)h(Ja)o(v)n(a')l(s.)f(Consider)h(the)f
(method)3317 3924 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3317 3924 a Fw(getFirstNonEmpty)3317
3924 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3317 3924 a 502 w FF(in)h(Fig-)2042 4007 y(ure)17
b(12.)g Fw(javac)h FF(accepts)2714 4007 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2714 4007 a
Fw(getFirstNonEmpty)2714 4007 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2714 4007 a 471 w FF(,)e(combining)3557
4007 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3557 4007 a Fw(List<String>)3557 4007 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3557 4007
a 369 w FF(and)2042 4090 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2042 4090 a Fw(List<Object>)2042
4090 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2042 4090 a 383 w FF(into)2572 4090 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2572 4090
a Fw(List<?>)2572 4090 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2572 4090 a 237 w FF(and)31
b(then)g(instantiating)3506 4090 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3506 4090 a Fw(P)3506
4090 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3506 4090 a 60 w FF(to)g(the)g(captured)2042 4173
y(wildcard.)h(Smith)g(and)i(Cartwright')l(s)e(technique,)h(on)h(the)e
(other)h(hand,)2042 4256 y(f)o(ails)18 b(to)g(type)g(check)2602
4256 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2602 4256 a Fw(getFirstNonEmpty)2602 4256 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2602
4256 a 471 w FF(.)g(The)o(y)g(combine)3555 4256 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3555
4256 a Fw(List<String>)3555 4256 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3555 4256 a 371 w
FF(and)2042 4339 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2042 4339 a Fw(List<Object>)2042 4339
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2042 4339 a 378 w FF(into)2562 4339 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2562 4339 a Fw(List<String>)42
b(|)d(List<Object>)2562 4339 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2562 4339 a 794 w FF(.)25
b(Ho)n(we)n(v)o(er)m(,)h(there)f(is)h(no)2042 4422 y(instantiation)h
(of)2527 4422 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2527 4422 a Fw(P)2527 4422 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2527 4422
a 56 w FF(so)g(that)2815 4422 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2815 4422 a Fw(List<P>)2815
4422 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2815 4422 a 233 w FF(is)f(a)h(supertype)i(of)e(the)g(union)h
(type)2042 4505 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2042 4505 a Fw(List<String>)42 b(|)d(List<Object>)
2042 4505 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2042 4505 a 794 w FF(,)15 b(so)g(the)o(y)h(reject)f(the)g
(code.)h(What)f(their)g(tech-)2042 4588 y(nique)20 b(f)o(ails)f(to)g
(incorporate)i(in)e(this)g(situation)h(is)f(the)g(capture)i(con)m(v)o
(ersion)2042 4671 y(permitted)30 b(by)g(Ja)o(v)n(a.)g(F)o(or)f(the)h
(same)h(reason,)f(the)o(y)g(also)g(f)o(ail)g(to)f(accept)2042
4754 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2042 4754 a Fw(getFirstNonEmpty2)2042 4754 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2042
4754 a 500 w FF(,)14 b(although)i Fw(javac)f FF(also)g(f)o(ails)f(on)h
(this)f(program)i(for)e(rea-)2042 4837 y(sons)i(that)g(are)g(unclear)g
(gi)n(v)o(en)h(the)f(error)g(message.)g(The)g(approach)h(we)f(will)2042
4920 y(present)j(is)g(able)g(to)g(type)g(check)h(all)e(of)h(these)h(e)o
(xamples.)2042 5064 y Fv(5.3)75 b(Ambiguous)18 b(T)-6
b(ypes)19 b(and)f(Semantics)2042 5181 y FF(In)36 b(Ja)o(v)n(a,)f(the)h
(type)g(of)g(an)g(e)o(xpression)h(can)f(af)n(fect)g(the)g(semantics)g
(of)2042 5264 y(the)25 b(program,)h(primarily)f(due)h(to)f(v)n(arious)h
(forms)f(of)g(o)o(v)o(erloading.)h(This)2042 5347 y(is)j(particularly)h
(problematic)h(when)g(combining)g(wildcards)f(and)h(type-)2042
5430 y(ar)o(gument)i(inference.)f(Consider)h(the)f(program)h(in)f
(Figure)g(13.)g(Notice)p eop end
%%Page: 8 8
TeXDict begin 8 7 bop -147 58 a
 currentpoint currentpoint translate .745 1.1 scale neg exch neg exch
translate
 -147 58 a Fw(<P>)40 b(List<P>)h
(singleton\(P)h(elem\))1030 49 y
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 1030 49 a Fu(f)1030
49 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 1030 49 a 1068 58 a Fw(return)f(null;)1538 49 y
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate

1538 49 a Fu(g)1538 49 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 1538 49 a -147 58 a
 currentpoint currentpoint translate 1 .745 div 1 1.1 div scale neg
exch neg exch translate
 -147 58
a -147 141 a
 currentpoint currentpoint translate .745 1.1 scale neg exch neg exch
translate
 -147 141 a Fw(<Q)f(extends)h(Comparable<?>>)h(Q)e
(foo\(List<?)h(super)f(Q>)g(list\))1972 132 y
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 1972 132
a Fu(f)1972 132 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 1972 132 a 2010 141 a Fw(return)h(null;)2480
132 y
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 2480 132 a Fu(g)2480 132 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 2480 132 a -147 141
a
 currentpoint currentpoint translate 1 .745 div 1 1.1 div scale neg
exch neg exch translate
 -147 141 a -147 224 a
 currentpoint currentpoint translate .745 1.1 scale neg exch neg exch
translate
 -147 224 a Fw(String)g(typeName\(Comparable<?>)
j(c\))1148 215 y
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 1148 215 a Fu(f)1148 215 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 1148 215
a 1186 224 a Fw(return)d("Comparable";)1968 215 y
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 1968
215 a Fu(g)1968 215 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 1968 215 a -147 224 a
 currentpoint currentpoint translate 1 .745 div 1 1.1 div scale neg
exch neg exch translate
 -147 224
a -147 307 a
 currentpoint currentpoint translate .745 1.1 scale neg exch neg exch
translate
 -147 307 a Fw(String)g(typeName\(String)h(s\))873
298 y
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 873 298 a Fu(f)873 298 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 873 298 a 912 307 a Fw(return)e
("String";)1537 298 y
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 1537 298 a Fu(g)1537 298 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 1537
298 a -147 307 a
 currentpoint currentpoint translate 1 .745 div 1 1.1 div scale neg
exch neg exch translate
 -147 307 a -147 390 a
 currentpoint currentpoint translate .745 1.1 scale neg exch neg exch
translate
 -147 390 a Fw(String)h
(typeName\(Integer)i(i\))912 381 y
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 912 381 a Fu(f)912
381 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 912 381 a 951 390 a Fw(return)d("Integer";)1615
381 y
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 1615 381 a Fu(g)1615 381 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 1615 381 a -147 390
a
 currentpoint currentpoint translate 1 .745 div 1 1.1 div scale neg
exch neg exch translate
 -147 390 a -147 473 a
 currentpoint currentpoint translate .745 1.1 scale neg exch neg exch
translate
 -147 473 a Fw(String)h(typeName\(Calendar)i
(c\))952 464 y
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 952 464 a Fu(f)952 464 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 952 464 a 990
473 a Fw(return)e("Calendar";)1694 464 y
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 1694 464 a Fu(g)1694
464 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 1694 464 a -147 473 a
 currentpoint currentpoint translate 1 .745 div 1 1.1 div scale neg
exch neg exch translate
 -147 473 a -147 556 a
 currentpoint currentpoint translate .745 1.1 scale neg exch neg exch
translate
 -147
556 a Fw(boolean)g(ignore\(\))520 547 y
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 520 547 a Fu(f)520
547 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 520 547 a 559 556 a Fw(...)676 547 y
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 676 547 a
Fu(g)676 547 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 676 547 a 715 556 a Fw(;)-147 556 y
 currentpoint currentpoint translate 1 .745 div 1 1.1 div scale neg
exch neg exch translate
 -147
556 a -147 639 a
 currentpoint currentpoint translate .745 1.1 scale neg exch neg exch
translate
 -147 639 a Fw(String)g(ambiguous\(\))599
630 y
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 599 630 a Fu(f)599 630 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 599 630 a -147 639 a
 currentpoint currentpoint translate 1 .745 div 1 1.1 div scale neg
exch neg exch translate
 -147
639 a -147 722 a
 currentpoint currentpoint translate .745 1.1 scale neg exch neg exch
translate
 -147 722 a 79 w Fw(return)f
(typeName\(foo\(singleton\(ignor)q(e\(\))46 b(?)39 b("Blah")i(:)e
(1\)\)\);)-147 722 y
 currentpoint currentpoint translate 1 .745 div 1 1.1 div scale neg
exch neg exch translate
 -147 722 a -147 805 a
 currentpoint currentpoint translate .745 1.1 scale neg exch neg exch
translate
 -147 805 a
-147 796 a
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 -147 796 a Fu(g)-147 796 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 -147 796 a -147
805 a
 currentpoint currentpoint translate 1 .745 div 1 1.1 div scale neg
exch neg exch translate
 -147 805 a -150 924 1993 3 v -83 1009 a Fv(Figur)o(e)18
b(13.)38 b FF(Example)19 b(of)g(ambiguous)i(typing)e(af)n(fecting)h
(semantics)-150 1261 y(that)32 b(the)h(v)n(alue)g(returned)g(by)698
1261 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 698 1261 a Fw(ambiguous)698 1261 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 698 1261 a
297 w FF(depends)i(solely)d(on)h(the)g(type)-150 1344
y(of)24 b(the)g(ar)o(gument)g(to)437 1344 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 437 1344
a Fw(typeName)437 1344 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 437 1344 a 235 w FF(,)f(which)h(is)g(the)f
(return)h(type)g(of)1548 1344 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1548 1344 a Fw(foo)1548
1344 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1548 1344 a 112 w FF(which)-150 1427 y(depends)19
b(on)e(the)g(inferred)g(type)g(ar)o(guments)h(for)f(the)g(generic)g
(methods)1754 1427 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1754 1427 a Fw(foo)1754 1427 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1754
1427 a -150 1510 a FF(and)-17 1510 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -17 1510 a Fw(singleton)-17
1510 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -17 1510 a 265 w FF(.)24 b(Using)i Fw(javac)p
FF(')l(s)g(typing)g(algorithms,)1345 1510 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1345 1510
a Fw(ambiguous)1345 1510 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1345 1510 a 290 w FF(returns)-150
1593 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -150 1593 a Fw("Comparable")-150 1593 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -150 1593
a 353 w FF(.)18 b(Using)h(Smith)f(and)h(Cartwright')l(s)f(typing)h
(algorithms)g([14)q(],)-150 1676 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -150 1676 a Fw(ambiguous)-150
1676 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -150 1676 a 299 w FF(returns)35 b(either)596 1676
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 596 1676 a Fw("String")596 1676 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 596 1676 a 269 w
FF(or)962 1676 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 962 1676 a Fw("Integer")962 1676 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 962
1676 a 299 w FF(depending)i(on)e(ho)n(w)-150 1760 y(the)28
b(types)h(are)f(\(arbitrarily\))f(ordered)j(internally)-5
b(.)28 b(In)g(f)o(act,)g(the)g(answers)-150 1843 y(pro)o(vided)d(by)e
Fw(javac)h FF(and)g(by)g(Smith)f(and)h(Cartwright)f(are)g(not)g(the)h
(only)-150 1926 y(possible)d(answers.)f(One)h(could)g(just)f(as)g(well)
f(instantiate)1411 1926 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1411 1926 a Fw(P)1411 1926
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1411 1926 a 49 w FF(to)1538 1926 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1538 1926 a Fw(Object)1538
1926 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1538 1926 a 197 w FF(and)-150 2009 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -150 2009
a Fw(Q)-150 2009 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -150 2009 a 59 w FF(to)-3 2009 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -3
2009 a Fw(Calendar)-3 2009 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -3 2009 a 265 w FF(to)30
b(get)471 2009 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 471 2009 a Fw(ambiguous)471 2009 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 471
2009 a 295 w FF(to)f(return)1062 2009 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1062 2009 a Fw("Calendar")1062
2009 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1062 2009 a 294 w FF(,)g(e)n(v)o(en)i(though)g(a)-150
2092 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -150 2092 a Fw(Calendar)-150 2092 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -150 2092
a 254 w FF(instance)20 b(is)e(not)h(e)n(v)o(en)h(present)f(in)g(the)g
(method.)-50 2175 y(The)30 b(abo)o(v)o(e)h(discussion)g(sho)n(ws)g
(that,)f(in)g(f)o(act,)g Fx(all)g(four)i FF(v)n(alues)f(are)-150
2258 y(plausible,)f(and)g(which)g(is)f(returned)h(depends)h(on)f(the)g
(results)f(of)h(type-)-150 2341 y(ar)o(gument)22 b(inference.)h
(Unfortunately)-5 b(,)22 b(the)g(Ja)o(v)n(a)g(speci\002cation)g(does)h
(not)-150 2424 y(pro)o(vide)18 b(clear)e(guidance)i(on)f(what)g(should)
h(be)e(done)i(if)e(there)h(are)f(multiple)-150 2507 y(v)n(alid)i(type)f
(ar)o(guments.)h(It)f(does)g(ho)n(we)n(v)o(er)i(state)e(the)g(follo)n
(wing)h([6:)f(Chap-)-150 2590 y(ter)k(15.12.2.7]:)h(\223The)g
(type-inference)h(algorithm)f(should)g(be)g(vie)n(wed)g(as)-150
2673 y(a)f(heuristic,)f(designed)i(to)f(perform)g(well)g(in)f
(practice.)-5 b(\224)21 b(This)f(w)o(ould)i(lead)-150
2756 y(one)f(to)f(belie)n(v)o(e)h(that,)f(gi)n(v)o(en)h(multiple)f(v)n
(alid)h(type)f(ar)o(guments,)h(an)f(imple-)-150 2839
y(mentation)g(can)g(heuristically)f(pick)h(amongst)g(them,)f(which)h(w)
o(ould)g(actu-)-150 2922 y(ally)f(mak)o(e)h(an)o(y)f(of)g(the)g(four)g
(returned)h(v)n(alues)f(a)g(correct)g(implementation)-150
3005 y(of)-63 3005 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -63 3005 a Fw(ambiguous)-63 3005
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -63 3005 a 265 w FF(.)25 b(This)g(is)g(not)g(only)h(surprising,)g(b)o
(ut)f(also)h(leads)f(to)h(the)f(un-)-150 3088 y(fortunate)18
b(situation)g(that)g(by)g(pro)o(viding)h Fw(javac)g FF(with)e(smarter)h
(static)f(typ-)-150 3171 y(ing)24 b(algorithms)g(one)g(may)g(actually)f
(change)i(the)f(semantics)g(of)f(e)o(xisting)-150 3254
y(programs.)i(This)g(in)f(turn)h(mak)o(es)h(impro)o(ving)f(the)g
(typing)g(algorithms)g(in)-150 3337 y(e)o(xisting)19
b(implementations)h(a)f(risk)o(y)g(proposition.)-150
3543 y FD(6.)91 b(Impr)n(o)o(ving)21 b(T)-7 b(ype-Ar)o(gument)21
b(Infer)n(ence)-150 3659 y FF(Here)k(we)g(present)h(an)g(algorithm)g
(for)f(joining)h(wildcards)f(as)g(e)o(xistential)-150
3742 y(types)e(which)g(addresses)h(the)f(limitations)f(of)h(union)g
(types)g(and)h(which)f(is)-150 3825 y(complete)29 b(pro)o(vided)g(the)g
(construction)g(is)f(used)g(in)h(restricted)f(settings.)-150
3908 y(W)-6 b(e)21 b(also)h(describe)h(preliminary)f(techniques)h(for)e
(pre)n(v)o(enting)i(ambiguity)-150 3991 y(due)d(to)e(type-ar)o(gument)i
(inference)g(as)f(discussed)h(in)f(Section)g(5.3.)-150
4151 y Fv(6.1)75 b(Lazily)19 b(J)o(oining)f(W)o(ildcards)-150
4267 y FF(As)k(we)g(mentioned)h(in)f(Section)g(5.1,)g(it)g(seems)g
(unlik)o(ely)h(that)f(there)g(is)g(an)-150 4350 y(e)o(xistential)30
b(type)g(system)g(for)g(wildcards)g(with)g(both)g(joins)g(and)h(decid-)
-150 4433 y(able)25 b(subtyping.)h(F)o(ortunately)-5
b(,)25 b(we)g(ha)o(v)o(e)g(determined)h(a)f(w)o(ay)h(to)e(e)o(xtend)
-150 4516 y(our)29 b(type)g(system)g(with)f(a)g Fx(lazy)h
FF(e)o(xistential)f(type)h(that)f(solv)o(es)h(man)o(y)g(of)-150
4599 y(our)24 b(problems.)f(Gi)n(v)o(en)h(a)f(potential)g(constraint)h
(on)g(the)f(v)n(ariables)h(bound)-150 4682 y(in)d(a)f(lazy)h(e)o
(xistential)g(type)g(we)g(can)g(determine)g(whether)g(that)g
(constraint)-150 4765 y(holds.)j(Ho)n(we)n(v)o(er)m(,)g(we)f(cannot)i
(enumerate)f(the)g(constraints)g(on)g(the)f(v)n(ari-)-150
4848 y(ables)33 b(bound)i(in)e(a)g(lazy)g(e)o(xistential)g(type,)g(so)h
(lazy)f(e)o(xistential)g(types)-150 4932 y(must)26 b(be)h(used)g(in)f
(a)g(restricted)g(manner)l(.)h(In)f(particular)m(,)g(for)g(an)o(y)h
(use)f(of)-150 5015 y Ft(\034)41 b(<)p Fs(:)33 b Ft(\034)82
4983 y Fz(0)104 5015 y FF(,)24 b(lazy)h(e)o(xistential)g(types)g(may)h
(only)f(be)g(used)h(in)f(co)o(v)n(ariant)h(lo-)-150 5098
y(cations)c(in)g Ft(\034)29 b FF(and)23 b(contra)o(v)n(ariant)f
(locations)g(in)g Ft(\034)1182 5066 y Fz(0)1203 5098
y FF(.)f(Maintaining)i(this)f(in-)-150 5181 y(v)n(ariant)i(means)f
(that)h Ft(\034)471 5149 y Fz(0)515 5181 y FF(will)e(ne)n(v)o(er)i(be)g
(a)f(lazy)h(e)o(xistential)f(type.)g(This)g(is)-150 5264
y(important)g(because)h(applying)i(S)t Fp(U)t(B)t FF(-)t(E)t
Fp(X)t(I)t(S)t(T)t(S)21 b FF(requires)j(checking)g(all)e(of)-150
5347 y(the)i(constraints)g(of)f Ft(\034)440 5315 y Fz(0)462
5347 y FF(,)g(b)o(ut)h(we)f(ha)o(v)o(e)h(no)g(means)g(of)g(enumerating)
h(these)-150 5430 y(constraints)h(for)e(a)h(lazy)h(e)o(xistential)e
(type.)h(F)o(ortunately)-5 b(,)1402 5430 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1402 5430
a Fw(cond)41 b(?)e(t)h(:)f(f)1402 5430 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1402 5430 a
378 w FF(as)2042 66 y(well)19 b(as)h(unambiguous)i(type-ar)o(gument)f
(inference)g(only)f(need)h(a)e(join)h(for)2042 149 y(co)o(v)n(ariant)g
(locations)f(of)g(the)g(return)g(type,)g(satisfying)g(our)h
(requirement.)2141 232 y(So)h(suppose)h(we)e(w)o(ant)h(to)g(construct)g
(the)f(join)h(\()p Fu(t)p FF(\))f(of)h(captured)h(wild-)2042
315 y(card)h(types)g Fu(9)p Fs(\000)9 b(:)g(\001)p Ft(:)18
b(C)2666 315 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2666 315 a Fw(<)2666 315 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2666 315 a
30 w Ft(\034)2730 323 y Fo(1)2764 315 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2764 315 a Fw(,)40
b(...,)2764 315 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2764 315 a 206 w Ft(\034)3004 323 y
Fn(m)3062 315 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3062 315 a Fw(>)3062 315 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3062 315 a
52 w FF(and)24 b Fu(9)p Fs(\000)3336 284 y Fz(0)3373
315 y Fs(:)17 b(\001)3475 284 y Fz(0)3497 315 y Ft(:)23
b(D)3606 315 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3606 315 a Fw(<)3606 315 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3606 315 a
30 w Ft(\034)3679 284 y Fz(0)3670 329 y Fo(1)3704 315
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3704 315 a Fw(,)39 b(...,)3704 315 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3704 315 a 206
w Ft(\034)3953 284 y Fz(0)3944 329 y Fn(n)3986 315 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

3986 315 a Fw(>)3986 315 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3986 315 a 30 w FF(.)2042
399 y(Let)19 b Fu(f)p Ft(E)2256 407 y Fn(i)2282 399 y
Fu(g)2320 408 y Fn(i)13 b Fk(in)f(1)g(to)h Fn(k)2552
399 y FF(be)19 b(the)h(set)f(of)g(minimal)h(ra)o(w)f(superclasses)h
(and)g(super)o(-)2042 486 y(interf)o(aces)j(common)h(to)f
Ft(C)28 b FF(and)23 b Ft(D)r FF(.)g(Let)f(each)i Ft(E)3378
494 y Fn(i)3404 486 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3404 486 a Fw(<)3404 486 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3404
486 a 33 w Fs(\026)-42 b Ft(\034)3476 454 y Fn(i)3467
499 y Fo(1)3502 486 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3502 486 a Fw(,)39 b(...,)3502
486 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3502 486 a 210 w Fs(\026)-42 b Ft(\034)3751 454
y Fn(i)3742 502 y(`)3768 513 y Fl(i)3798 486 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3798 486
a Fw(>)3798 486 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3798 486 a 52 w FF(be)23 b(the)2042
581 y(superclass)g(of)f Ft(C)2515 581 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2515 581 a Fw(<)2515
581 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2515 581 a 30 w Ft(P)2594 589 y Fo(1)2628 581 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

2628 581 a Fw(,)40 b(...,)2628 581 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2628 581 a 206 w
Ft(P)2883 589 y Fn(m)2942 581 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2942 581 a Fw(>)2942
581 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2942 581 a 29 w FF(,)22 b(and)h(each)g Ft(E)3358
589 y Fn(i)3384 581 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3384 581 a Fw(<)3384 581 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3384
581 a 34 w Fs(^)-43 b Ft(\034)3456 549 y Fn(i)3447 594
y Fo(1)3482 581 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3482 581 a Fw(,)40 b(...,)3482 581
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3482 581 a 210 w Fs(^)-42 b Ft(\034)3731 549 y Fn(i)3722
596 y(`)3748 607 y Fl(i)3778 581 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3778 581 a Fw(>)3778
581 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3778 581 a 52 w FF(the)22 b(su-)2042 671 y(perclass)c(of)h
Ft(D)2446 671 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2446 671 a Fw(<)2446 671 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2446 671 a
30 w Ft(P)2536 639 y Fz(0)2525 684 y Fo(1)2559 671 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

2559 671 a Fw(,)40 b(...,)2559 671 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2559 671 a 206 w
Ft(P)2825 639 y Fz(0)2814 684 y Fn(n)2857 671 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2857
671 a Fw(>)2857 671 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2857 671 a 29 w FF(.)18 b(Compute)h(the)f
(anti-uni\002cation)g([12)q(,)g(13])2042 756 y(of)f(all)k
Fs(\026)-42 b Ft(\034)2256 724 y Fn(i)2247 769 y(j)2282
756 y Fs([)p Ft(P)2352 764 y Fo(1)2387 756 y Fu(7!)p
Ft(\034)2498 764 y Fo(1)2532 756 y Ft(;)13 b(:)g(:)g(:)h(;)f(P)2752
764 y Fn(m)2810 756 y Fu(7!)p Ft(\034)2921 764 y Fn(m)2980
756 y Fs(])k FF(with)g(all)k Fs(^)-42 b Ft(\034)3303
724 y Fn(i)3294 769 y(j)3329 756 y Fs([)p Ft(P)3410 724
y Fz(0)3399 769 y Fo(1)3434 756 y Fu(7!)p Ft(\034)3554
724 y Fz(0)3545 769 y Fo(1)3579 756 y Ft(;)13 b(:)g(:)g(:)h(;)f(P)3810
724 y Fz(0)3799 769 y Fn(n)3841 756 y Fu(7!)p Ft(\034)3961
724 y Fz(0)3952 769 y Fn(n)3994 756 y Fs(])q FF(,)2042
845 y(resulting)26 b(in)2415 806 y Fj(t)2412 845 y Ft(\034)2455
814 y Fn(i)2446 859 y(j)2507 845 y FF(with)f(fresh)h(v)n(ariables)g
Fs(\000)3181 853 y Fz(t)3253 845 y FF(and)g(assignments)h
Ft(\022)g FF(and)g Ft(\022)4012 814 y Fz(0)2042 938 y
FF(such)34 b(that)g(each)2530 899 y Fj(t)2528 938 y Ft(\034)2571
906 y Fn(i)2562 952 y(j)2597 938 y Fs([)p Ft(\022)r Fs(])g
FF(equals)k Fs(\026)-42 b Ft(\034)2978 906 y Fn(i)2969
952 y(j)3004 938 y Fs([)p Ft(P)3074 946 y Fo(1)3109 938
y Fu(7!)o Ft(\034)3219 946 y Fo(1)3254 938 y Ft(;)13
b(:)g(:)g(:)g(;)h(P)3474 946 y Fn(m)3532 938 y Fu(7!)p
Ft(\034)3643 946 y Fn(m)3701 938 y Fs(])34 b FF(and)g(each)2044
991 y Fj(t)2042 1030 y Ft(\034)2085 999 y Fn(i)2076 1044
y(j)2110 1030 y Fs([)p Ft(\022)2169 999 y Fz(0)2192 1030
y Fs(])29 b FF(equals)k Fs(^)-42 b Ft(\034)2504 999 y
Fn(i)2495 1044 y(j)2529 1030 y Fs([)p Ft(P)2610 999 y
Fz(0)2599 1043 y Fo(1)2656 1030 y Fu(7!)21 b Ft(\034)2797
999 y Fz(0)2788 1043 y Fo(1)2822 1030 y Ft(;)13 b(:)h(:)f(:)g(;)g(P)
3053 999 y Fz(0)3042 1043 y Fn(n)3106 1030 y Fu(7!)21
b Ft(\034)3247 999 y Fz(0)3238 1043 y Fn(n)3280 1030
y Fs(])q FF(.)27 b(F)o(or)h(e)o(xample,)h(the)f(anti-)2042
1113 y(uni\002cation)23 b(of)g(the)g(types)2763 1113
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2763 1113 a Fw(Map<String,String>)2763 1113 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2763
1113 a 552 w FF(and)3446 1113 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3446 1113 a Fw(Map<Integer,Integer>)
3446 1113 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3446 1113 a 2042 1196 a FF(is)2118 1196 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

2118 1196 a Fw(Map<)2118 1196 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2118 1196 a 118 w Ft(v)2276
1196 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2276 1196 a Fw(,)2276 1196 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2276 1196 a 29 w
Ft(v)2345 1196 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2345 1196 a Fw(>)2345 1196 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2345 1196
a 56 w FF(with)j(assignments)i Ft(v)39 b Fu(7!)3141 1196
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3141 1196 a Fw(String)3141 1196 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3141 1196 a 203 w
FF(and)27 b Ft(v)39 b Fu(7!)3667 1196 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3667 1196 a Fw(Integer)3667
1196 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3667 1196 a 206 w FF(.)26 b(The)2042 1279 y(join,)18
b(then,)h(is)g(the)g(lazy)g(e)o(xistential)g(type)2334
1397 y Fu(9)p Fs(\000)2425 1405 y Fz(t)2491 1397 y Fs(:)j
Fu(h)p Ft(\022)h Fu(7!)f Fs(\000)f(:)g(\001;)14 b Ft(\022)2970
1366 y Fz(0)3013 1397 y Fu(7!)22 b Fs(\000)3160 1366
y Fz(0)3203 1397 y Fs(:)g(\001)3310 1366 y Fz(0)3332
1397 y Fu(i)p Ft(:)2409 1484 y(E)2466 1492 y Fo(1)2500
1484 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2500 1484 a Fw(<)2500 1484 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2500 1484 a 2532
1445 a Fj(t)2529 1484 y Ft(\034)2572 1453 y Fo(1)2563
1498 y(1)2606 1484 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2606 1484 a Fw(,)39 b(...,)2606
1484 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2606 1484 a 2814 1445 a Fj(t)2812 1484 y Ft(\034)2855
1453 y Fo(1)2846 1500 y Fn(`)2872 1510 y Fi(1)2908 1484
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2908 1484 a Fw(>)h(&)f(...)h(&)2908 1484 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2908 1484
a 294 w Ft(E)3259 1493 y Fn(k)3297 1484 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3297 1484 a
Fw(<)3297 1484 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3297 1484 a 3329 1445 a Fj(t)3326 1484
y Ft(\034)3369 1453 y Fn(k)3360 1498 y Fo(1)3407 1484
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3407 1484 a Fw(,)f(...,)3407 1484 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3407 1484 a 3615
1445 a Fj(t)3613 1484 y Ft(\034)3656 1453 y Fn(k)3647
1500 y(`)3673 1512 y Fl(k)3713 1484 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3713 1484 a Fw(>)3713
1484 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3713 1484 a 2042 1613 a FF(The)21 b(lazy)g(constraint)h
Fu(h)p Ft(\022)28 b Fu(7!)d Fs(\000)h(:)g(\001;)13 b
Ft(\022)3093 1582 y Fz(0)3141 1613 y Fu(7!)25 b Fs(\000)3291
1582 y Fz(0)3339 1613 y Fs(:)h(\001)3450 1582 y Fz(0)3473
1613 y Fu(i)20 b FF(indicates)i(that)f(the)2042 1696
y(constraints)15 b(on)g Fs(\000)2517 1704 y Fz(t)2577
1696 y FF(are)g(the)g(constraints)g(that)g(hold)g(in)g(conte)o(xt)g
Fs(\000)21 b(:)h(\001)14 b FF(after)2042 1779 y(substituting)k(with)e
Ft(\022)j FF(and)f(in)f(conte)o(xt)h Fs(\000)3096 1748
y Fz(0)3140 1779 y Fs(:)j(\001)3246 1748 y Fz(0)3286
1779 y FF(after)c(substituting)g(with)g Ft(\022)3993
1748 y Fz(0)4016 1779 y FF(.)2042 1862 y(Thus)i(the)g(total)f(set)h(of)
f(constraints)i(is)e(not)h(computed,)h(b)o(ut)f(there)f(is)h(a)g(w)o
(ay)2042 1945 y(to)g(determine)g(whether)g(a)g(constraint)h(is)e(in)h
(this)g(set.)f(Note)h(that)g(this)f(is)h(the)2042 2028
y(join)g(because)h(Ja)o(v)n(a)f(ensures)h(the)j Fs(\026)-42
b Ft(\034)27 b FF(and)c Fs(^)-42 b Ft(\034)27 b FF(types)20
b(will)e(be)h(unique.)2141 2112 y(Capture)31 b(con)m(v)o(ersion)h(can)e
(be)h(applied)f(to)h(a)f(lazy)g(e)o(xistential)g(type,)2042
2195 y(addressing)d(the)f(k)o(e)o(y)g(limitation)f(of)h(union)h(types)f
(that)g(we)f(identi\002ed)h(in)2042 2278 y(Section)f(5.2.)g(The)g(lazy)
g(constraint)h Fu(h)p Ft(\022)35 b Fu(7!)e Fs(\000)g(:)g(\001;)13
b Ft(\022)3520 2246 y Fz(0)3576 2278 y Fu(7!)33 b Fs(\000)3734
2246 y Fz(0)3789 2278 y Fs(:)g(\001)3907 2246 y Fz(0)3930
2278 y Fu(i)24 b FF(is)2042 2361 y(simply)c(added)h(to)f(the)h(conte)o
(xt.)f(The)g(same)h(is)e(done)i(when)i(S)t Fp(U)t(B)t
FF(-)t(E)t Fp(X)t(I)t(S)t(T)t(S)2042 2444 y FF(applies)17
b(with)g(a)g(lazy)h(e)o(xistential)f(type)g(as)g(the)h(subtype.)g(When)
h(S)t Fp(U)t(B)t FF(-)t(V)-5 b Fp(A)t(R)2042 2527 y FF(applies)23
b(for)h Ft(v)32 b(<)p Fs(:)e Ft(\034)2610 2495 y Fz(0)2655
2527 y FF(with)22 b Ft(v)k FF(constrained)f(by)f(a)f(lazy)g(constraint)
h(rather)2042 2610 y(than)18 b(standard)h(constraints,)g(one)g(checks)g
(that)f(both)g Ft(\022)r Fs(\()p Ft(v)s Fs(\))k Ft(<)p
Fs(:)f Ft(\034)3752 2578 y Fz(0)3774 2610 y Fs([)p Ft(\022)r
Fs(])d FF(holds)2042 2693 y(and)28 b Ft(\022)2215 2661
y Fz(0)2238 2693 y Fs(\()p Ft(v)s Fs(\))38 b Ft(<)p Fs(:)g
Ft(\034)2538 2661 y Fz(0)2560 2693 y Fs([)p Ft(\022)2619
2661 y Fz(0)2641 2693 y Fs(])28 b FF(holds,)g(applying)h(the)f
(substitutions)h(to)e(rele)n(v)n(ant)2042 2776 y(constraints)17
b(in)g(the)h(conte)o(xt)f(as)h(well.)e(A)h(similar)f(adaptation)i(is)f
(also)g(made)2042 2859 y(for)e Ft(\034)30 b(<)p Fs(:)22
b Ft(v)s FF(.)15 b(This)g(e)o(xtended)i(algorithm)f(is)g(still)e
(guaranteed)k(to)d(terminate.)2141 2942 y(W)m(ith)25
b(this)g(technique,)h(we)f(can)h(type)g(check)g(the)f(code)h(in)f
(Figure)h(11)2042 3025 y(that)c Fw(javac)i FF(incorrectly)f(rejects)f
(as)h(well)f(as)h(the)g(code)g(in)g(Figure)f(12)h(in-)2042
3108 y(cluding)h(the)f(methods)i(that)e(Smith)f(and)i(Cartwright')l(s)f
(algorithm)g(incor)o(-)2042 3191 y(rectly)16 b(rejects.)f(F)o(or)h(e)o
(xample,)g(for)2965 3191 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2965 3191 a Fw(getFirstNonEmpty2)2965
3191 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2965 3191 a 516 w FF(we)g(w)o(ould)h(\002rst)e(join)2042
3274 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2042 3274 a Fw(List<String>)2042 3274 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2042 3274
a 372 w FF(and)2540 3274 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2540 3274 a Fw(List<Integer>)2540
3274 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2540 3274 a 401 w FF(as)k(the)g(lazy)g(e)o(xistential)g(type)
2084 3395 y Fu(9)2127 3395 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2127 3395 a Fw(X)2127 3395
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2127 3395 a 50 w Fs(:)j Fu(hf)2288 3395 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2288 3395
a Fw(X)2288 3395 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2288 3395 a 51 w Fu(7!)2437 3395 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

2437 3395 a Fw(String)2437 3395 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2437 3395 a 176 w Fu(g)g(7!)f
Fq(?)h Fs(:)f Fq(?)p Fs(;)13 b Fu(f)3023 3395 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3023
3395 a Fw(X)3023 3395 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3023 3395 a 52 w Fu(7!)3173 3395
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3173 3395 a Fw(Integer)3173 3395 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3173 3395 a 206
w Fu(g)21 b(7!)h Fq(?)f Fs(:)h Fq(?)p Fu(i)p Ft(:)3787
3395 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3787 3395 a Fw(List<X>)3787 3395 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3787 3395 a
2042 3516 a FF(This)e(type)h(w)o(ould)h(then)f(be)g(capture)g(con)m(v)o
(erted)h(so)f(that)g(the)g(type)g(param-)2042 3599 y(eter)2176
3599 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2176 3599 a Fw(P)2176 3599 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2176 3599 a 51 w
FF(of)2311 3599 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2311 3599 a Fw(getFirst)2311 3599 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate

2311 3599 a 257 w FF(w)o(ould)i(be)f(instantiated)g(with)g(the)g
(lazily)g(constrained)2042 3682 y(type)30 b(v)n(ariable)2469
3682 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2469 3682 a Fw(X)2469 3682 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2469 3682 a 29 w
FF(.)g(Although)h(not)f(necessary)h(here,)f(we)g(w)o(ould)h(also)f(be)
2042 3765 y(able)c(to)g(determine)h(that)f(the)g(constraint)3177
3765 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3177 3765 a Fw(X)3177 3765 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3177 3765 a 50 w
Ft(<)p Fs(::)3351 3765 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3351 3765 a Fw(Comparable<X>)3351
3765 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3351 3765 a 408 w FF(holds)h(for)2042 3849 y(the)19
b(lazily)f(constrained)j(type)e(v)n(ariable.)2141 3932
y(Occasionally)f(one)f(has)g(to)g(join)f(a)h(type)g(with)f(a)g(type)h
(v)n(ariable.)g(F)o(or)f(this)2042 4015 y(purpose,)30
b(we)e(introduce)i(a)f(specialization)h(of)e(union)i(types.)f(This)g
(spe-)2042 4098 y(cialization)21 b(looks)h(lik)o(e)g
Ft(\034)2724 4106 y Fz(t)2769 4098 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2769 4098 a Fw(\()2769
4098 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2769 4098 a 30 w Ft(v)2836 4106 y Fo(1)2870 4098
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2870 4098 a 40 w Fw(|)39 b(...)h(|)2870 4098 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2870
4098 a 265 w Ft(v)3172 4106 y Fn(n)3215 4098 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3215 4098
a Fw(\))3215 4098 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3215 4098 a 51 w FF(or)21 b Ft(\034)3383
4106 y Fz(t)3428 4098 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3428 4098 a Fw(\()3428 4098 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate

3428 4098 a 30 w Ft(\034)3501 4098 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3501 4098 a 38 w
Fw(|)3501 4098 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3501 4098 a 87 w Ft(v)3625 4106 y Fo(1)3660
4098 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3660 4098 a 40 w Fw(|)39 b(...)h(|)3660 4098 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate

3660 4098 a 265 w Ft(v)3962 4106 y Fn(n)4005 4098 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 4005
4098 a Fw(\))4005 4098 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 4005 4098 a 2042 4181 a FF(where)28
b(each)g Ft(v)2453 4189 y Fn(i)2507 4181 y FF(is)g(not)g(lazily)f
(constrained)i(and)g Ft(\034)3443 4189 y Fz(t)3516 4181
y FF(is)e(a)h(supertype)h(of)2042 4264 y(some)24 b(wildcard)f(capture)h
(of)f(each)h(upper)h(bound)f(of)g(each)g(type)g(v)n(ariable)2042
4347 y(\(and)f(of)f Ft(\034)31 b FF(if)21 b(present\))i(with)f(the)h
(property)g(that)f(an)o(y)h(other)g(non-v)n(ariable)2042
4430 y Ft(\034)2085 4398 y Fz(0)2132 4430 y FF(which)j(is)f(a)g
(supertype)i(of)e(each)h Ft(v)3075 4438 y Fn(i)3127 4430
y FF(\(and)g Ft(\034)9 b FF(\))24 b(is)h(also)h(a)f(supertype)i(of)2042
4513 y Ft(\034)2076 4521 y Fz(t)2121 4513 y FF(.)20 b(A)g(type)h
Ft(\034)2426 4481 y Fz(0)2468 4513 y FF(is)f(a)g(supertype)i(of)e(this)
g(specialized)h(union)h(type)f(if)e(it)h(is)g(a)2042
4596 y(supertype)i(of)e Ft(\034)2469 4604 y Fz(t)2535
4596 y FF(or)h(of)g(each)g Ft(v)2895 4604 y Fn(i)2942
4596 y FF(\(and)g Ft(\034)9 b FF(\).)19 b(Note)i(that)g
Ft(\034)3534 4604 y Fz(t)3599 4596 y FF(might)g(not)g(be)g(a)2042
4679 y(supertype)d(of)f(an)o(y)h Ft(v)2589 4687 y Fn(i)2632
4679 y FF(or)f(of)g Ft(\034)26 b FF(and)17 b(may)h(instead)f(be)h(the)f
(join)g(of)g(the)g(upper)2042 4762 y(bounds)24 b(of)e(each)h
Ft(v)2560 4770 y Fn(i)2609 4762 y FF(\(plus)g Ft(\034)9
b FF(\))21 b Fx(after)k FF(opening)e(the)g(lazy)g(e)o(xistential)f
(type.)2042 4845 y(This)g(subtlety)i(enables)g(capture)g(con)m(v)o
(ersion)g(to)f(be)h(applied)g(unambigu-)2042 4928 y(ously)d(when)g
(called)g(for)l(.)g(Unfortunately)-5 b(,)21 b(we)g(cannot)g(join)g(a)g
(type)g(with)f(a)2042 5011 y(type)h(v)n(ariable)g(that)f(is)g(lazily)h
(constrained)g(because)h(we)e(cannot)i(enumer)o(-)2042
5094 y(ate)d(its)f(upper)i(bounds.)2042 5230 y Fv(6.2)75
b(Inferring)18 b(Unambiguous)g(T)-6 b(ypes)2042 5347
y FF(W)g(e)20 b(belie)n(v)o(e)h(that)f(the)h(Ja)o(v)n(a)g(language)h
(speci\002cation)f(should)g(be)g(changed)2042 5430 y(to)35
b(pre)n(v)o(ent)g(type-ar)o(gument)h(inference)g(from)f(introducing)h
(ambiguity)p eop end
%%Page: 9 9
TeXDict begin 9 8 bop -150 66 a FF(into)37 b(the)f(semantics)h(of)f
(programs.)i(Since)e(the)g(inferred)h(return)g(type)-150
149 y(is)28 b(what)g(determines)h(the)f(semantics,)g(one)h(w)o(ay)f(to)
g(pre)n(v)o(ent)h(ambiguity)-150 232 y(w)o(ould)34 b(be)g(to)f(permit)g
(type-ar)o(gument)h(inference)g(only)g(when)g(a)f(most)-150
315 y(precise)16 b(return)f(type)h(can)g(be)g(inferred,)f(meaning)i
(the)f(inferred)f(return)h(type)-150 399 y(is)28 b(a)g(subtype)i(of)f
(all)e(other)i(return)g(types)g(that)f(could)h(arise)g(from)f(v)n(alid)
-150 482 y(type)g(ar)o(guments)g(for)f(the)h(in)m(v)o(ocation)g(at)f
(hand.)h(Here)f(we)h(discuss)g(ho)n(w)-150 565 y(such)16
b(a)e(goal)i(af)n(fects)f(the)g(design)h(of)e(type-ar)o(gument)j
(inference.)e(Ho)n(we)n(v)o(er)m(,)-150 648 y(we)33 b(do)h(not)f
(present)g(an)h(actual)f(algorithm)g(since)h(the)f(techniques)h(we)-150
731 y(present)17 b(need)g(to)f(be)h(b)o(uilt)e(upon)j(further)e(to)g
(produce)i(an)e(algorithm)h(which)-150 814 y(pre)n(v)o(ents)j
(ambiguity)g(b)o(ut)e(is)h(also)g(po)n(werful)g(enough)i(to)e(be)g
(practical.)-50 897 y(T)-6 b(ypical)27 b(inference)g(algorithms)g(w)o
(ork)h(by)f(collecting)g(a)g(set)g(of)g(con-)-150 980
y(straints)d(and)h(then)g(attempting)f(to)h(determine)g(a)f(solution)h
(to)f(those)h(con-)-150 1063 y(straints.)16 b(If)f(those)i(constraints)
g(are)f(not)g(guaranteed)i(to)e(be)h(suf)n(\002cient,)f(then)-150
1146 y(an)o(y)22 b(solution)g(is)f(v)o(eri\002ed)g(to)g(be)h(a)f
(correct)g(typing)h(of)g(the)f(e)o(xpression)i(\(in)-150
1229 y(this)29 b(case)h(the)g(generic-method)h(in)m(v)o(ocation\).)f
(Both)f Fw(javac)i FF([6:)e(Chap-)-150 1312 y(ters)18
b(15.12.2.7)h(and)g(15.12.2.8])g(and)f(Smith)g(and)g(Cartwright)g([6])g
(use)h(this)-150 1395 y(approach.)e(Smith)e(and)h(Cartwright)f
(actually)h(collect)f(a)h(set)f(of)h(sets)f(of)h(con-)-150
1478 y(straints,)i(with)h(each)g(set)g(of)g(constraints)g(guaranteed)i
(to)e(be)g(suf)n(\002cient.)-50 1561 y(Ho)n(we)n(v)o(er)m(,)g(to)f(pre)
n(v)o(ent)i(ambiguity)f(due)h(to)e(type-ar)o(gument)i(inference,)-150
1644 y(necessity)32 b(of)f(constraints)h(is)f(important)g(rather)h
(than)f(suf)n(\002cienc)o(y)-5 b(.)32 b(F)o(or)-150 1727
y(the)h(ambiguous)h(program)g(in)f(Figure)g(13,)g(each)g(of)g(the)g
(solutions)g(we)-150 1810 y(described)h(in)f(Section)f(5.3)h(w)o(as)g
(suf)n(\002cient;)g(ho)n(we)n(v)o(er)m(,)g(none)h(of)f(them)-150
1893 y(were)19 b(necessary)-5 b(,)19 b(which)g(w)o(as)g(the)f(source)i
(of)e(ambiguity)-5 b(.)20 b(Unfortunately)-5 b(,)-150
1976 y(Smith)26 b(and)h(Cartwright')l(s)f(algorithm)g(is)g(specialized)
i(to)e(\002nd)g(suf)n(\002cient)-150 2059 y(rather)15
b(than)g(necessary)h(sets)e(of)h(constraints.)f(This)h(is)f(why)h
(their)f(algorithm)-150 2142 y(results)i(in)h(tw)o(o)f(separate)h
(solutions)g(for)g(Figure)f(13.)h(Ho)n(we)n(v)o(er)m(,)g(their)f(algo-)
-150 2225 y(rithm)k(could)i(be)f(altered)f(to)h(sacri\002ce)f(suf)n
(\002cienc)o(y)h(for)g(sak)o(e)g(of)g(necessity)-150
2308 y(by)j(producing)i(a)d(less)h(precise)g(b)o(ut)f(necessary)i
(constraint)f(at)g(each)g(point)-150 2391 y(where)e(the)o(y)h(w)o(ould)
g(currently)f(introduce)h(a)f(disjunction)h(of)f(constraints,)-150
2474 y(which)29 b(actually)g(simpli\002es)f(the)g(algorithm)h(since)g
(it)e(no)i(longer)h(has)e(to)-150 2557 y(propagate)20
b(disjunctions.)-50 2640 y(After)26 b(a)h(necessary)h(set)e(of)h
(constraints)g(has)h(been)f(determined,)h(one)-150 2723
y(then)c(needs)g(to)g(determine)g(a)f(solution.)h(Some)g(constraints)g
(will)e(suggest)-150 2806 y(that)29 b(it)f(is)h(necessary)h(for)f(a)f
(type)i(ar)o(gument)f(to)g(be)g(a)g(speci\002c)g(type,)g(in)-150
2889 y(which)21 b(case)f(one)h(just)f(checks)i(that)e(the)g(speci\002c)
g(type)h(satis\002es)f(the)g(other)-150 2972 y(constraints)j(on)g(that)
f(type)h(ar)o(gument.)f(Ho)n(we)n(v)o(er)m(,)h(other)g(type)g(ar)o
(guments)-150 3055 y(will)32 b(only)i(be)f(constrained)h(abo)o(v)o(e)g
(and/or)g(belo)n(w)g(by)f(other)h(types)f(so)-150 3138
y(that)c(there)g(can)h(be)g(man)o(y)g(types)f(satisfying)h(the)f
(constraints.)h(In)f(order)-150 3221 y(to)19 b(pre)n(v)o(ent)h
(ambiguity)-5 b(,)19 b(one)h(cannot)f(simply)h(choose)g(solutions)f
(for)g(these)-150 3304 y(type)e(ar)o(guments)g(arbitrarily)-5
b(.)16 b(F)o(or)g(e)o(xample,)g(if)g(the)h(parameterized)g(return)-150
3387 y(type)31 b(of)f(the)h(method)g(is)f(co)o(v)n(ariant)h(\(and)g
(not)g(bi)n(v)n(ariant\))g(with)f(respect)-150 3470 y(to)c(a)h(type)g
(parameter)m(,)g(then)f(the)h(solution)g(for)g(the)f(corresponding)j
(type)-150 3553 y(ar)o(gument)i(must)f(be)h(the)f(join)g(of)g(all)g
(its)f(lo)n(wer)h(bounds,)i(ensuring)f(the)-150 3636
y(inferred)20 b(return)g(type)g(is)g(the)g(most)g(precise)g(possible.)g
(F)o(ortunately)-5 b(,)20 b(since)-150 3719 y(such)k(joins)g(w)o(ould)g
(occur)h(co)o(v)n(ariantly)f(in)g(the)f(return)h(type,)g(it)f(is)g
(safe)g(to)-150 3802 y(use)c(the)g(construction)h(described)g(in)f
(Section)g(6.1.)-50 3885 y(Unfortunately)-5 b(,)21 b(requiring)h(the)f
(inferred)g(return)g(type)g(to)g(be)g(the)g(most)-150
3968 y(precise)37 b(possible)f(seems)h(too)f(restricti)n(v)o(e)g(to)g
(be)h(practical.)f(Consider)-150 4051 y(the)-26 4051
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -26 4051 a Fw(singleton)-26 4051 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -26 4051 a 298 w
FF(method)e(in)f(Figure)g(13.)g(Under)h(this)e(restriction,)h(type-)
-150 4134 y(ar)o(gument)19 b(inference)g(w)o(ould)f(ne)n(v)o(er)h(be)g
(permitted)f(for)g(an)o(y)g(in)m(v)o(ocation)h(of)-150
4218 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -150 4218 a Fw(singleton)-150 4218 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -150 4218
a 280 w FF(\(without)c(an)g(e)o(xpected)i(return)e(type\))g(e)n(v)o(en)
h(though)h(the)e(inferred)-150 4301 y(types)26 b(of)f(most)h(such)g(in)
m(v)o(ocations)g(w)o(ould)h(not)e(af)n(fect)h(the)f(semantics)h(of)-150
4384 y(the)16 b(program.)h(In)g(light)f(of)g(this,)g(we)g(belie)n(v)o
(e)h(the)f(unambiguous-inference)-150 4467 y(challenge)21
b(should)h(be)e(addressed)i(by)f(combining)g(the)g(abo)o(v)o(e)g
(techniques)-150 4550 y(with)k(an)h(ability)g(to)g(determine)g(when)g
(choices)h(can)f(actually)g(af)n(fect)g(the)-150 4633
y(semantics)21 b(of)f(the)h(program.)g(W)-6 b(e)20 b(ha)o(v)o(e)g(had)h
(promising)h(\002ndings)f(on)g(this)-150 4716 y(front,)j(b)o(ut)g(more)
h(thorough)h(proofs)f(and)g(e)n(v)n(aluations)h(need)f(to)g(be)g(done,)
-150 4799 y(so)19 b(we)g(lea)o(v)o(e)g(this)f(to)h(future)g(w)o(ork.)
-150 4981 y Fv(6.3)75 b(Remo)o(ving)20 b(Intermediate)e(T)-6
b(ypes)-150 5098 y FF(The)17 b(processes)h(abo)o(v)o(e)h(introduce)f
(ne)n(w)f(kinds)h(of)f(types,)h(namely)g(lazy)f(e)o(x-)-150
5181 y(istential)22 b(types.)h(Ideally)h(these)f(types)g(need)h(not)f
(be)g(a)g(part)g(of)g(the)g(actual)-150 5264 y(type)h(system)h(b)o(ut)e
(rather)h(just)g(be)g(an)g(algorithmic)h(intermediary)-5
b(.)24 b(F)o(ortu-)-150 5347 y(nately)c(this)f(is)g(the)g(case)h(for)f
(lazy)g(e)o(xistential)h(types.)f(By)g(e)o(xamining)i(ho)n(w)-150
5430 y(the)f(lazy)g(e)o(xistential)g(type)h(is)f(used)g(while)g(type)h
(checking)g(the)f(rest)g(of)g(the)2042 66 y(program,)26
b(one)h(can)g(determine)f(ho)n(w)h(to)f(replace)h(it)e(with)h(an)g(e)o
(xistential)2042 149 y(type)h(which)f(may)h(be)g(less)f(precise)h(b)o
(ut)f(with)g(which)h(the)g(program)g(will)2042 232 y(still)g(type)h
(check.)g(This)g(is)f(done)i(by)g(tracking)f(the)g(pairs)g
Ft(v)42 b(<)p Fs(:)c Ft(\034)3877 201 y Fz(0)3926 232
y FF(and)2042 315 y Ft(\034)e(<)p Fs(:)29 b Ft(v)s FF(,)22
b(where)g Ft(v)k FF(is)c(lazily)g(constrained,)i(that)e(are)g(check)o
(ed)j(and)e(found)2042 399 y(to)29 b(hold)g(using)h(the)f(modi\002ed)j
(S)t Fp(U)t(B)t FF(-)t(V)-5 b Fp(A)t(R)28 b FF(rules.)h(After)f(type)i
(checking)2042 482 y(has)18 b(completed,)h(the)f(lazy)g(e)o(xistential)
g(type)h(can)f(be)g(replaced)h(by)g(an)f(e)o(xis-)2042
565 y(tential)k(type)h(using)h(only)f(the)g(track)o(ed)g(constraints)g
(\(or)g(slight)f(v)n(ariations)2042 648 y(thereof)29
b(to)g(pre)n(v)o(ent)h(escaping)h(v)n(ariables\).)e(Proof-tracking)h
(techniques)2042 731 y(can)23 b(also)g(be)g(used)h(to)f(eliminate)g
(intersection)g(types,)g(important)g(for)g(ad-)2042 814
y(dressing)17 b(the)g(non-determinism)i(issues)e(we)f(will)g(discuss)i
(in)e(Section)h(7.2,)2042 897 y(as)i(well)f(as)h(our)g(specialized)h
(union)g(types.)2042 1117 y FD(7.)91 b(Challenges)21
b(of)i(T)-7 b(ype)22 b(Checking)2042 1234 y FF(W)m(ildcards)33
b(pose)h(dif)n(\002culties)e(for)h(type)h(checking)g(in)f(addition)h
(to)f(the)2042 1317 y(subtyping)21 b(and)g(inference)f(challenges)h(we)
f(ha)o(v)o(e)g(discussed)h(so)f(f)o(ar)l(.)f(Here)2042
1400 y(we)28 b(identify)h(undesirable)h(aspects)g(of)f(Ja)o(v)n(a')l(s)
f(type)i(system)f(caused)h(by)2042 1483 y(these)e(dif)n(\002culties,)f
(and)h(in)f(Section)h(8)g(we)f(present)h(simple)g(changes)h(to)2042
1566 y(create)19 b(an)g(impro)o(v)o(ed)h(type)f(system.)2042
1735 y Fv(7.1)75 b(Inferring)18 b(Implicit)g(Constraints)2042
1851 y FF(Ja)o(v)n(a)e(ensures)i(that)e(all)g(types)h(use)g(type)g(ar)o
(guments)g(satisfying)g(the)g(criteria)2042 1934 y(of)24
b(the)h(corresponding)h(type)f(parameters.)g(W)m(ithout)f(wildcards,)h
(enforc-)2042 2017 y(ing)j(this)h(requirement)g(on)g(type)f(ar)o
(guments)i(is)d(f)o(airly)i(straightforw)o(ard.)2042
2100 y(W)m(ildcards,)16 b(ho)n(we)n(v)o(er)m(,)h(complicate)h(matters)e
(signi\002cantly)h(because)h(there)2042 2183 y(may)j(be)g(a)f(w)o(ay)h
(to)f(implicitly)g(constrain)i(wildcards)e(so)h(that)f(the)h(type)g(ar)
o(-)2042 2267 y(guments)i(satisfy)e(their)h(requirements.)g(F)o(or)f(e)
o(xample,)i(consider)g(the)e(fol-)2042 2350 y(lo)n(wing)e(interf)o(ace)
g(declaration:)2274 2484 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2274 2484 a Fw(interface)41
b(SubList<P)g(extends)g(List<?)g(extends)g(Q>,)e(Q>)4235
2475 y
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 4235 2475 a Fu(fg)4235 2475 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 4235 2475 a 2274
2484 a
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2274 2484 a 2042 2619 a FF(Ja)o(v)n(a)18 b(accepts)h(the)f(type)
2682 2619 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2682 2619 a Fw(SubList<?,Number>)2682 2619
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2682 2619 a 518 w FF(because)h(the)f(wildcard)g(can)h(be)2042
2702 y(implicitly)c(constrained)h(to)f(be)h(a)f(subtype)i(of)3239
2702 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3239 2702 a Fw(List<?)41 b(extends)g(Number>)3239
2702 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3239 2702 a 662 w FF(with)2042 2785 y(which)22
b(the)g(requirements)h(of)f(the)g(type)g(parameters)h(are)f
(satis\002ed.)f(Ho)n(w-)2042 2868 y(e)n(v)o(er)m(,)g(Ja)o(v)n(a)f
(rejects)h(the)g(type)2830 2868 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2830 2868 a Fw
(SubList<List<Integer>,?>)2830 2868 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2830 2868 a 726
w FF(e)n(v)o(en)h(though)g(the)2042 2951 y(wildcard)e(can)h(be)g
(implicitly)f(constrained)h(to)f(be)h(a)f(supertype)i(of)3828
2951 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3828 2951 a Fw(Integer)3828 2951 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3828 2951 a
2042 3034 a FF(with)27 b(which)i(the)f(requirements)h(of)f(the)g(type)g
(parameters)g(are)g(satis\002ed)2042 3117 y(\(we)22 b(formalize)g
(design)h(requirements)g(for)f(implicit)f(constraints)i(in)f(Sec-)2042
3200 y(tion)i(C.2\).)f(Thus,)h(Ja)o(v)n(a')l(s)h(implicit-constraint)f
(inference)g(is)g(incomplete)2042 3283 y(and)e(as)f(a)g(consequence)j
(types)d(that)g(could)h(be)g(v)n(alid)g(are)f(nonetheless)h(re-)2042
3366 y(jected)d(by)g(Ja)o(v)n(a.)2141 3449 y(This)30
b(raises)g(the)h(possibility)f(of)h(e)o(xtending)g(Ja)o(v)n(a)g(to)f
(use)g(complete)2042 3532 y(implicit-constraint)22 b(inference)i
(\(assuming)g(the)e(problem)i(is)e(decidable\).)2042
3615 y(Ho)n(we)n(v)o(er)m(,)f(we)f(ha)o(v)o(e)h(determined)h(that)e
(this)h(w)o(ould)g(cause)h(signi\002cant)e(al-)2042 3698
y(gorithmic)i(problems.)h(In)f(particular)m(,)g(complete)h
(implicit-constraint)f(in-)2042 3781 y(ference)d(w)o(ould)h(enable)g
(users)f(to)g(e)o(xpress)h(types)f(that)g(ha)o(v)o(e)g(an)h(implicitly)
2042 3864 y(in\002nite)28 b(body)i(rather)e(than)h(just)f(implicitly)g
(in\002nite)g(constraints.)h(Con-)2042 3947 y(sider)19
b(the)g(follo)n(wing)g(class)g(declaration:)2185 4081
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2185 4081 a Fw(class)41 b(C<P)f(extends)h(List<Q>,)g(Q>)e(extends)i
(List<C<C<?,?>,?>>)4382 4072 y
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 4382 4072 a Fu(fg)4382
4072 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 4382 4072 a 2185 4081 a
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2185 4081 a 2042 4216
a FF(F)o(or)27 b(the)h(type)2447 4216 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2447 4216 a Fw(C<C<?,?>,?>)2447
4216 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2447 4216 a 351 w FF(to)g(be)g(v)n(alid,)3176
4216 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3176 4216 a Fw(C<?,?>)3176 4216 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3176 4216 a
204 w FF(must)g(be)g(a)g(subtype)h(of)2042 4299 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2042
4299 a Fw(List<X>)2042 4299 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2042 4299 a 238 w FF(where)2494
4299 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2494 4299 a Fw(X)2494 4299 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2494 4299 a 62 w
FF(is)j(the)g(last)g(wildcard)h(of)3285 4299 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3285 4299
a Fw(C<C<?,?>,?>)3285 4299 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3285 4299 a 324 w FF(.)f(Since)3858
4299 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3858 4299 a Fw(C<?,?>)3858 4299 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3858 4299 a
2042 4382 a FF(is)27 b(a)h(subtype)h(of)2530 4382 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2530
4382 a Fw(List<C<C<?,?>,?>>)2530 4382 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2530 4382 a 500
w FF(,)e(this)g(implies)3459 4382 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3459 4382 a Fw(X)3459
4382 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3459 4382 a 57 w FF(must)h(be)g(equal)g(to)2042
4465 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2042 4465 a Fw(C<C<?,?>,?>)2042 4465 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2042 4465
a 323 w FF(,)15 b(and)h(with)f(this)g(implicit)g(constraint)h(the)f
(type)h(ar)o(guments)g(sat-)2042 4548 y(isfy)f(the)h(requirements)h(of)
f(the)g(corresponding)i(type)e(parameters.)g(No)n(w)-5
b(,)16 b(if)2042 4631 y(we)21 b(e)o(xpand)i(the)f(implicit)f(equality)h
(on)g(the)f(last)g(wildcard)h(in)3711 4631 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3711 4631
a Fw(C<C<?,?>,?>)3711 4631 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3711 4631 a 2042 4714 a
FF(we)28 b(get)h(the)g(type)2554 4714 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2554 4714 a Fw
(C<C<?,?>,C<C<?,?>,?>>)2554 4714 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2554 4714 a 618 w
FF(,)f(which)h(in)g(turn)g(contains)g(the)2042 4797 y(type)2186
4797 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2186 4797 a Fw(C<C<?,?>,?>)2186 4797 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2186 4797
a 339 w FF(so)15 b(that)g(we)h(can)g(continually)g(e)o(xpand)h(to)e
(get)h(the)g(in\002nite)2042 4880 y(type)2187 4880 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

2187 4880 a Fw(C<C<?,?>,C<C<?,?>,...>>)2187 4880 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2187
4880 a 677 w FF(.)g(As)h(one)g(might)g(suspect,)g(in\002nite)g(types)g
(of)2042 4963 y(this)h(form)h(cause)h(non-termination)g(problems)g(for)
f(man)o(y)g(algorithms.)2141 5046 y(Another)d(problem)f(from)g(a)g
(user')l(s)f(perspecti)n(v)o(e)i(is)e(that)h(the)g(reasons)g(for)2042
5129 y(when)25 b(a)f(type)h(is)f(v)n(alid)h(or)g(in)m(v)n(alid)g(using)
g(complete)g(implicit-constraint)2042 5212 y(inference)32
b(can)g(be)g(rather)f(comple)o(x.)i(T)-6 b(o)31 b(illustrate)g(this,)g
(consider)h(the)2042 5295 y(follo)n(wing)19 b(interf)o(ace)g
(declaration:)2068 5430 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2068 5430 a Fw(interface)41
b(MegaList<P)h(extends)e(List<?)h(extends)g(P>>)f(extends)h(List<P>)
4578 5421 y
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 4578 5421 a Fu(fg)4578 5421 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 4578 5421 a
2068 5430 a
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2068 5430 a eop end
%%Page: 10 10
TeXDict begin 10 9 bop -150 66 a FF(The)41 b(type)177
66 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 177 66 a Fw(SubList<MegaList<?>,?>)177 66 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 177
66 a 688 w FF(w)o(ould)i(be)e(v)n(alid)h(if)f(we)g(allo)n(wed)-150
149 y(in\002nite)h(types)h(or)f(e)o(xistential)h(types)f(with)g(e)o
(xplicit)h(recursi)n(v)o(e)g(con-)-150 232 y(straints,)c(both)g(of)h
(which)f(mak)o(e)h(non-termination)h(e)n(v)o(en)f(more)f(of)g(a)-150
315 y(problem.)24 b(In)g(particular)m(,)f(the)h(implicit)f(constraint)h
(on)g(the)g(second)h(wild-)-150 399 y(card)35 b(w)o(ould)h(be)f(that)g
(it)f(is)h(a)g(supertype)h(of)f(either)f(the)h(in\002nite)g(type)-150
482 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -150 482 a Fw(List<?)41 b(extends)f(List<?)h(extends)g(...>>)-150
482 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -150 482 a 1050 w FF(or)21 b(the)f(e)o(xistential)h(type)g
Fu(9)1613 482 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1613 482 a Fw(X)1613 482 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1613 482 a
40 w Fs(:)1686 482 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1686 482 a Fw(X)1686 482 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1686
482 a 54 w Ft(<)p Fs(::)-150 565 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -150 565 a Fw(List<?)41
b(extends)f(X>)-150 565 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -150 565 a 500 w Ft(:)391 565
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 391 565 a Fw(List<X>)391 565 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 391 565 a 206 w FF(.)19
b(If)h(the)g(parameter)1134 565 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1134 565 a Fw(P)1134
565 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1134 565 a 49 w FF(for)1290 565 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1290 565 a Fw(MegaList)1290
565 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1290 565 a 255 w FF(were)g(con-)-150 648 y(strained)27
b(by)214 648 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 214 648 a Fw(List<?)40 b(extends)h(Number>)214
648 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 214 648 a 673 w FF(instead,)26 b(then)h(the)g(implicit)e(lo)n
(wer)-150 731 y(bound)e(could)g(simply)e(be)562 731 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

562 731 a Fw(Number)562 731 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 562 731 a 177 w FF(.)g(On)g(the)h(other)g
(hand,)g(if)f(the)h(parameter)-150 814 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -150 814 a Fw(P)-150
814 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -150 814 a 53 w FF(for)13 814 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 13 814 a Fw(SubList)13
814 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 13 814 a 230 w FF(were)h(constrained)i(by)877 814
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 877 814 a Fw(List<P>)877 814 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 877 814 a 229 w FF(instead,)f(then)g
(no)g(implicit)-150 897 y(constraint)34 b(is)e(possible.)i(Thus)f
(slight)h(changes)g(to)f(class)g(declarations)-150 980
y(or)26 b(to)f(the)h(type)h(system)f(can)g(af)n(fect)g(whether)g(a)g
(type)g(is)f(v)n(alid)h(often)g(for)-150 1063 y(unintuiti)n(v)o(e)h
(reasons,)h(making)g(the)f(type)g(system)g(fragile)g(and)g(reducing)
-150 1146 y(changeability)20 b(of)f(the)g(code)h(base.)-50
1229 y(In)25 b(light)g(of)g(these)g(observ)n(ations,)i(we)e(will)f
(propose)i(using)g(implicit-)-150 1312 y(constraint)31
b(inference)g(slightly)g(stronger)g(than)g(Ja)o(v)n(a')l(s)g(in)g
(order)g(to)f(ad-)-150 1395 y(dress)22 b(a)f(slight)g(asymmetry)h(in)g
(Ja)o(v)n(a')l(s)f(algorithm)h(while)f(still)f(being)i(user)-150
1478 y(friendly)d(as)g(well)g(as)f(compatible)i(with)f(all)f
(algorithms)h(in)g(this)g(paper)l(.)-150 1644 y Fv(7.2)75
b(Non-Deterministic)18 b(T)-6 b(ype)19 b(Checking)-150
1760 y FF(The)h(type)h(check)o(er)g(in)f Fw(javac)h FF(is)f(currently)g
(non-deterministic)h(from)f(the)-150 1843 y(user')l(s)f(perspecti)n(v)o
(e.)h(Consider)f(the)g(follo)n(wing)h(interf)o(ace)f(declaration:)-6
1976 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -6 1976 a Fw(interface)41 b(Maps<P)g(extends)f(Map<?,String>>)j
(extends)e(List<P>)2190 1967 y
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 2190 1967 a Fu(fg)2190
1967 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 2190 1967 a -6 1976 a
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -6 1976 a -150 2109 a Fw(javac)32
b FF(allo)n(ws)f(one)h(to)g(declare)f(a)h(program)g(v)n(ariable)1395
2109 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1395 2109 a Fw(m)1395 2109 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1395 2109 a 60 w
FF(to)f(ha)o(v)o(e)h(type)-150 2192 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -150 2192 a Fw(Maps<?)41
b(extends)f(Map<String,?>>)-150 2192 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -150 2192 a 853
w FF(.)28 b(The)g(type)h(of)1141 2192 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1141 2192 a Fw(m)1141
2192 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1141 2192 a 29 w FF(,)f(then,)g(has)h(a)f(wildcard)-150
2275 y(which)34 b(is)g(constrained)h(to)e(be)i(a)e(subtype)i(of)f(both)
1319 2275 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1319 2275 a Fw(Map<?,String>)1319 2275 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate

1319 2275 a 416 w FF(and)-150 2358 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -150 2358 a Fw(Map<String,?>)-150
2358 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -150 2358 a 382 w FF(.)15 b(This)h(means)g(that)748
2358 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 748 2358 a Fw(m.get\(0\).entrySet\(\))748 2358
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 748 2358 a 574 w FF(has)g(tw)o(o)g(types,)f(es-)-150
2441 y(sentially)22 b Fu(9)168 2441 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 168 2441 a Fw(X)168
2441 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 168 2441 a 29 w Ft(:)241 2441 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 241 2441 a Fw
(Set<Entry<X,String>>)241 2441 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 241 2441 a 610 w FF(and)i
Fu(9)1025 2441 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1025 2441 a Fw(Y)1025 2441 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1025 2441
a 29 w Ft(:)1097 2441 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1097 2441 a Fw(Set<Entry<String,Y>>)1097
2441 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1097 2441 a 589 w FF(,)d(nei-)-150 2524 y(ther)d(of)g(which)g
(is)g(a)g(subtype)h(of)f(the)g(other)l(.)g(Ho)n(we)n(v)o(er)m(,)g(the)g
(type-checking)-150 2607 y(algorithm)f(for)g Fw(javac)g
FF(is)g(designed)h(under)f(the)g(assumption)h(that)f(this)f(will)-150
2690 y(ne)n(v)o(er)24 b(happen,)h(and)e(as)h(such)g Fw(javac)g
FF(only)g(checks)g(whether)g(one)g(of)f(the)-150 2773
y(tw)o(o)e(options)g(is)g(suf)n(\002cient)f(for)h(type)g(checking)h
(the)f(rest)f(of)h(the)g(program,)-150 2856 y(which)e(is)g(the)g
(source)g(of)g(non-determinism.)-50 2939 y Fw(javac)36
b FF(mak)o(es)g(this)e(assumption)j(because)f(Ja)o(v)n(a)f(imposes)h
(single-)-150 3022 y(instantiation)e(inheritance,)g(meaning)g(a)g
(class)f(\(or)h(interf)o(ace\))f(can)h(e)o(x-)-150 3105
y(tend)e Ft(C)70 3105 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 70 3105 a Fw(<)70 3105 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 70 3105
a 30 w Ft(\034)134 3113 y Fo(1)168 3105 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 168 3105 a
Fw(,)39 b(...,)168 3105 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 168 3105 a 206 w Ft(\034)408
3113 y Fn(n)450 3105 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 450 3105 a Fw(>)450 3105 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 450
3105 a 61 w FF(and)32 b Ft(C)710 3105 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 710 3105 a Fw(<)710
3105 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 710 3105 a 30 w Ft(\034)783 3073 y Fz(0)774 3118
y Fo(1)808 3105 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 808 3105 a Fw(,)39 b(...,)808 3105
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 808 3105 a 206 w Ft(\034)1057 3073 y Fz(0)1048 3118
y Fn(n)1090 3105 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1090 3105 a Fw(>)1090 3105 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1090
3105 a 61 w FF(only)32 b(if)f(each)h Ft(\034)1594 3113
y Fn(i)1652 3105 y FF(equals)-150 3188 y Ft(\034)-107
3156 y Fz(0)-116 3202 y Fn(i)-47 3188 y FF([6:)39 b(Chapter)g(8.1.5])f
(\(in)h(other)g(w)o(ords,)g(prohibiting)h(multiple-in-)-150
3271 y(stantiation)28 b(inheritance)i([9]\).)d(Ho)n(we)n(v)o(er)m(,)i
(it)f(is)g(not)g(clear)h(what)f(single-)-150 3354 y(instantiation)38
b(inheritance)g(should)h(mean)f(in)g(the)f(presence)i(of)f(wild-)-150
3437 y(cards.)33 b(The)g(Ja)o(v)n(a)h(language)g(speci\002cation)g(is)f
(ambiguous)i(in)e(this)g(re-)-150 3520 y(gard)18 b([6:)g(Chapter)g
(4.4],)g(and)g Fw(javac)p FF(')l(s)h(enforcement)g(is)f(too)g(weak)g
(for)g(the)-150 3603 y(assumptions)i(made)g(by)f(its)f(algorithms,)h
(as)g(demonstrated)i(abo)o(v)o(e.)-50 3686 y(Thus,)i(we)h(need)g(to)g
(reconsider)h(single-instantiation)f(inheritance)g(in)-150
3769 y(detail)d(with)g(wildcards)h(in)f(mind.)g(There)h(are)f(tw)o(o)g
(w)o(ays)h(to)g(address)g(this:)-150 3852 y(restrict)d(types)h(in)f
(some)h(w)o(ay)-5 b(,)20 b(or)g(infer)f(from)h(tw)o(o)f(constraints)h
(a)g(stronger)-150 3935 y(constraint)31 b(that)f(is)g(consistent)h
(with)f(single-instantiation)h(inheritance.)-150 4018
y(W)-6 b(e)18 b(consider)i(the)f(latter)f(\002rst)g(since)i(it)e(is)g
(the)h(more)h(e)o(xpressi)n(v)o(e)g(option.)-50 4101
y(Kno)n(wing)40 b(that)g(the)f(wildcard)h(in)946 4101
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 946 4101 a Fw(m)946 4101 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 946 4101 a 29 w FF(')l(s)g(type)g(abo)o(v)
o(e)g(is)f(a)h(subtype)-150 4184 y(of)i(both)128 4184
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 128 4184 a Fw(Map<?,String>)128 4184 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 128 4184 a 425
w FF(and)702 4184 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 702 4184 a Fw(Map<String,?>)702 4184
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 702 4184 a 383 w FF(,)f(single-instantiation)i(in-)-150
4267 y(heritance)h(suggests)g(that)f(the)g(wildcard)h(is)e(actually)i
(a)f(subtype)h(of)-150 4350 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -150 4350 a Fw(Map<String,String>)-150
4350 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -150 4350 a 530 w FF(.)18 b(W)m(ith)g(this)g(more)h(precise)g
(constraint,)g(we)g(can)g(deter)o(-)-150 4433 y(mine)c(that)f(the)g
(type)h(of)465 4433 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 465 4433 a Fw(m.get\(0\).entrySet\(\))465
4433 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 465 4433 a 573 w FF(is)1102 4433 y
 currentpoint currentpoint translate .74 1.1 scale neg exch neg exch
translate
 1102 4433 a
Fw(Set<Entry<String,String>>)1102 4433 y
 currentpoint currentpoint translate 1 .74 div 1 1.1 div scale neg
exch neg exch translate
 1102 4433 a
726 w FF(,)-150 4516 y(which)g(is)f(a)g(subtype)i(of)f(the)f(tw)o(o)h
(alternati)n(v)o(es)f(mentioned)i(earlier)l(.)e(F)o(or)g(this)-150
4599 y(strate)o(gy)k(to)g(w)o(ork,)h(gi)n(v)o(en)f(tw)o(o)h(upper)g
(bounds)g(on)g(a)f(wildcard)g(we)g(ha)o(v)o(e)g(to)-150
4682 y(be)h(able)g(to)g(determine)h(their)e(meet:)h(the)g(most)g
(general)h(common)g(subtype)-150 4765 y(consistent)32
b(with)f(single-instantiation)g(inheritance.)h(Interestingly)-5
b(,)31 b(the)-150 4848 y(meet)18 b(of)f(tw)o(o)h(types)g(may)g(not)g
(be)f(e)o(xpressible)i(by)f(the)f(user)l(.)h(F)o(or)f(e)o(xample,)-150
4932 y(the)i(meet)g(of)205 4932 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 205 4932 a Fw(List<?>)205
4932 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 205 4932 a 224 w FF(and)556 4932 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 556 4932 a
Fw(Set<?>)556 4932 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 556 4932 a 195 w FF(is)g Fu(9)863
4932 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 863 4932 a Fw(X)863 4932 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 863 4932 a 29 w Ft(:)932
4932 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 932 4932 a Fw(List<X>)41 b(&)e(Set<X>)932 4932
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 932 4932 a 471 w FF(.)-50 5015 y(Unfortunately)-5 b(,)23
b(meets)g(encounter)h(man)o(y)f(of)f(the)h(same)g(problems)g(of)-150
5098 y(complete)31 b(implicit-constraint)g(inference)g(that)f(we)h
(discussed)g(in)g(Sec-)-150 5181 y(tion)37 b(7.1.)f(Assuming)h(meets)g
(can)g(al)o(w)o(ays)g(be)g(computed,)h(predicting)-150
5264 y(when)17 b(tw)o(o)f(types)h(ha)o(v)o(e)g(a)f(meet)h(can)g(be)f
(quite)h(challenging.)g(Furthermore,)-150 5347 y(meets)k(pose)g
(algorithmic)g(challenges,)h(such)f(as)g(for)g(equi)n(v)n(alence)h
(check-)-150 5430 y(ing)28 b(since)g(with)f(them)491
5430 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 491 5430 a Fw(Maps<?)41 b(extends)g(Map<String,?>>)491
5430 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 491 5430 a 881 w FF(is)27 b(equi)n(v)n(alent)i(to)2141
58 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2141 58 a Fw(class)41 b(C)e(implements)j(List<D<?)f(extends)g
(List<D<?)g(extends)f(C>>>>)4456 49 y
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 4456 49 a Fu(fg)4456
49 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 4456 49 a 2141 58 a
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2141 58 a 2141 141 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2141 141
a Fw(class)h(D<P)f(extends)g(C>)2965 132 y
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 2965 132 a
Fu(fg)2965 132 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 2965 132 a 2141 141 a
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2141 141 a 2514
283 a Fv(Is)2591 283 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2591 283 a Fw(D<?)g(extends)h(List<D<?)g
(extends)g(C>>>)2591 283 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2591 283 a 2598 366 a Fv(equi)o(v)o(alent)19
b(to)3029 366 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3029 366 a Fw(D<?)39 b(extends)i(C>)3029
366 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3029 366 a 411 w Fv(?)2063 505 y FF(K)n(e)o(y)20
b(Steps)e(of)h(Proof)p 2063 534 1950 4 v 2063 623 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2063
623 a Fw(D<?)40 b(extends)h(List<D<?)g(extends)g(C>>>)2063
623 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2063 623 a 3073 573 a
 currentpoint currentpoint translate .5 .5 scale neg exch neg exch
translate
 3073 573 a Fw(?)3073 573
y
 currentpoint currentpoint translate 1 .5 div 1 .5 div scale neg exch
neg exch translate
 3073 573 a 3053 603 a Fu(\030)3053 627 y Fs(=)3131
623 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3131 623 a Fw(D<?)f(extends)h(C>)3131 623 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3131
623 a 2063 706 a FF(\(Checking)20 b Fs(:)p Ft(>)p FF(\))2518
706 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2518 706 a Fw(D<?)40 b(extends)h(C>)2518 706 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate

2518 706 a 431 w Ft(<)2989 699 y
 currentpoint currentpoint translate .45 .45 scale neg exch neg exch
translate
 2989 699 a Fw(?)2989
699 y
 currentpoint currentpoint translate 1 .45 div 1 .45 div scale neg
exch neg exch translate
 2989 699 a 3002 706 a Fs(:)3042 706 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3042 706
a Fw(D<?)f(extends)g(List<D<?)i(extends)e(C>>>)3042 706
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3042 706 a 2063 789 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2063 789 a Fw(C)2063 789 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2063
789 a 49 w Ft(<)2152 782 y
 currentpoint currentpoint translate .45 .45 scale neg exch neg exch
translate
 2152 782 a Fw(?)2152 782 y
 currentpoint currentpoint translate 1 .45 div 1 .45 div scale neg
exch neg exch translate

2152 782 a 2165 789 a Fs(:)2205 789 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2205 789 a Fw(List<D<?)h(extends)
g(C>>)2205 789 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2205 789 a 2063 872 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2063 872 a Fw(List<D<?)g
(extends)g(List<D<?)g(extends)g(C>>>>)2063 872 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2063
872 a 1167 w Ft(<)3270 865 y
 currentpoint currentpoint translate .45 .45 scale neg exch neg exch
translate
 3270 865 a Fw(?)3270 865
y
 currentpoint currentpoint translate 1 .45 div 1 .45 div scale neg
exch neg exch translate
 3270 865 a 3283 872 a Fs(:)3323 872 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3323 872 a Fw(List<D<?)g
(extends)g(C>>)3323 872 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3323 872 a 2063 970 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2063
970 a Fw(D<?)f(extends)h(List<D<?)g(extends)g(C>>>)2063
970 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2063 970 a 3073 920 a
 currentpoint currentpoint translate .5 .5 scale neg exch neg exch
translate
 3073 920 a Fw(?)3073 920
y
 currentpoint currentpoint translate 1 .5 div 1 .5 div scale neg exch
neg exch translate
 3073 920 a 3053 950 a Fu(\030)3053 974 y Fs(=)3131
970 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3131 970 a Fw(D<?)f(extends)h(C>)3131 970 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3131
970 a 2063 1053 a FF(\(repeat)20 b(fore)n(v)o(er\))p
2042 1172 1993 3 v 2177 1256 a Fv(Figur)o(e)e(14.)38
b FF(Example)19 b(of)g(in\002nite)g(proofs)g(due)h(to)f(equi)n(v)n
(alence)2042 1503 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2042 1503 a Fw(Maps<?)40 b(extends)h
(Map<String,String>>)2042 1503 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2042 1503 a 1017 w FF(e)n(v)o(en)17
b(though)i(neither)e(e)o(xplicit)g(con-)2042 1586 y(straint)h(is)h
(redundant.)2141 1669 y(This)j(problem)h(is)f(not)g(speci\002c)g(to)g
(combining)h(implicit)f(and)g(e)o(xplicit)2042 1752 y(constraints)28
b(on)g(wildcards.)f(Ja)o(v)n(a)g(allo)n(ws)h(type)g(parameters)g(to)f
(be)h(con-)2042 1836 y(strained)j(by)g(intersections)g(of)f(types:)3123
1836 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3123 1836 a Fw(<P)40 b(extends)3123 1836 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3123
1836 a 324 w Ft(\034)3481 1844 y Fo(1)3515 1836 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3515
1836 a 39 w Fw(&)g(...)g(&)3515 1836 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3515 1836 a 265
w Ft(\034)3814 1844 y Fn(n)3856 1836 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3856 1836 a Fw(>)3856
1836 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3856 1836 a 30 w FF(.)30 b(Al-)2042 1919 y(though)d(Ja)o(v)n(a)g
(imposes)f(restrictions)g(on)h(these)f(intersections)h([6:)f(Chap-)2042
2002 y(ter)f(4.4],)g(when)h(wildcards)f(are)h(in)m(v)o(olv)o(ed)g(the)f
(same)h(problems)g(arise)f(as)2042 2085 y(with)c(combining)j(implicit)d
(and)i(e)o(xplicit)f(constraints.)g(So,)f(while)h Fw(javac)2042
2168 y FF(rejects)30 b(the)h(intersection)2768 2168 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

2768 2168 a Fw(Map<?,String>)42 b(&)e(Map<String,?>)2768
2168 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2768 2168 a 853 w FF(,)31 b Fw(javac)g FF(does)2042
2251 y(permit)k(the)h(intersection)2783 2251 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2783 2251
a Fw(Numbers<?>)41 b(&)f(Errors<?>)2783 2251 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2783 2251
a 647 w FF(.)35 b(Should)3731 2251 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3731 2251 a Fw(P)3731
2251 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3731 2251 a 65 w FF(be)h(con-)2042 2334 y(strained)30
b(by)g(this)f(intersection,)h(then)g(due)g(to)f(the)h(implicit)f
(constraints)2042 2417 y(on)c(the)f(wildcards)2571 2417
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2571 2417 a Fw(P)2571 2417 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2571 2417 a 53 w FF(is)g(a)g(subtype)i
(of)e(both)3255 2417 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3255 2417 a Fw(List<?)41 b(extends)f(Number>)
3255 2417 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3255 2417 a 671 w FF(and)2042 2500 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2042
2500 a Fw(List<?)g(extends)h(Error>)2042 2500 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2042
2500 a 618 w FF(,)26 b(which)h(once)g(again)g(introduces)h
(non-determin-)2042 2583 y(ism)18 b(into)h Fw(javac)p
FF(')l(s)h(type)f(checking.)2141 2666 y(As)38 b(a)g(more)g(se)n(v)o
(ere)g(alternati)n(v)o(e,)g(one)h(might)f(consider)g(thro)n(wing)2042
2749 y(out)25 b(single-instantiation)g(inheritance)g(altogether)g(and)g
(redesigning)h(the)2042 2832 y(type)35 b(check)o(er)h(for)e
(multiple-instantiation)h(inheritance,)g(especially)h(if)2042
2915 y(Ja)o(v)n(a)29 b(decided)i(to)e(also)h(thro)n(w)f(out)h(type)g
(erasure.)f(Ho)n(we)n(v)o(er)m(,)h(multiple-)2042 2998
y(instantiation)24 b(inheritance)g(in)g(the)f(presence)i(of)f
(wildcards)g(can)g(actually)2042 3081 y(lead)31 b(to)g(ambiguity)h(in)e
(program)i(semantics.)f(Suppose)h(an)f(object)h(has)2042
3164 y(an)20 b(implementation)h(of)f(both)2856 3164 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

2856 3164 a Fw(List<String>)2856 3164 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2856 3164 a 373
w FF(and)3357 3164 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3357 3164 a Fw(List<Integer>)3357
3164 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3357 3164 a 382 w FF(.)g(That)g(ob-)2042 3247
y(ject)32 b(can)i(be)f(passed)h(as)f(a)2815 3247 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2815
3247 a Fw(List<?>)2815 3247 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2815 3247 a 206 w FF(,)g(b)o(ut)f(which)
3415 3247 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3415 3247 a Fw(List)3415 3247 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3415 3247
a 150 w FF(implementation)2042 3330 y(is)26 b(passed)i(depends)g(on)f
(whether)g(the)g(wildcard)g(w)o(as)g(instantiated)f(with)2042
3413 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2042 3413 a Fw(String)2042 3413 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2042 3413 a
194 w FF(or)2317 3413 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2317 3413 a Fw(Integer)2317 3413
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2317 3413 a 206 w FF(.)18 b(Thus)g(an)h(in)m(v)o(ocation)g(of)3225
3413 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3225 3413 a Fw(get\(0\))3225 3413 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3225 3413
a 195 w FF(to)f(get)h(an)3694 3413 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3694 3413 a Fw(Object)3694
3413 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3694 3413 a 195 w FF(from)2042 3496 y(the)2163
3496 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2163 3496 a Fw(List<?>)2163 3496 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2163 3496 a
235 w FF(\(which)30 b(is)g(v)n(alid)g(since)g(the)g(wildcard)g
(implicitly)f(e)o(xtends)2042 3579 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2042 3579 a Fw(Object)2042
3579 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2042 3579 a 176 w FF(\))d(w)o(ould)g(return)g(dif)n(ferent)g
(results)g(depending)h(on)g(the)f(subtyping)2042 3662
y(proof)h(that)f(w)o(as)h(constructed)h(\(non-deterministically)f(from)
f(the)h(user')l(s)2042 3745 y(perspecti)n(v)o(e\).)j(Thus)h(a)f
(language)h(with)f(wildcards)g(w)o(ould)h(either)f(need)2042
3828 y(to)20 b(use)g(single-instantiation)g(inheritance)h(or)f
(statically)f(determine)h(when)2042 3911 y(subtyping)g(can)g
(ambiguously)g(af)n(fect)f(semantics.)2141 3994 y(After)e(careful)h
(consideration,)g(our)g(solution)f(will)g(be)g(to)g(restrict)g(inter)o
(-)2042 4077 y(sections)k(and)g(e)o(xplicit)f(constraints)h(on)g
(wildcards)g(so)f(that)g(the)o(y)h(are)g(con-)2042 4160
y(sistent)d(with)h(single-instantiation)h(inheritance)f(adapted)h(to)f
(wildcards.)2042 4317 y Fv(7.3)75 b(Equi)o(v)o(alence)2042
4433 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2042 4433 a Fw(Numbers<?>)2042 4433 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2042 4433
a 316 w FF(is)23 b(equi)n(v)n(alent)h(to)2841 4433 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

2841 4433 a Fw(Numbers<?)42 b(extends)e(Number>)2841
4433 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2841 4433 a 758 w FF(because)24 b(of)f(the)2042
4516 y(implicit)32 b(constraint)h(on)g(the)g(wildcard.)g(As)f(such,)h
(one)h(w)o(ould)f(e)o(xpect)2042 4599 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2042 4599 a Fw
(List<Numbers<?>>)2042 4599 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2042 4599 a 490 w FF(to)19
b(be)h(equi)n(v)n(alent)h(to)3104 4599 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3104 4599 a
Fw(List<Numbers<?)42 b(extends)f(Number>>)3104 4599 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate

3104 4599 a 912 w FF(.)2042 4682 y(Ho)n(we)n(v)o(er)m(,)22
b(this)f(is)g(not)h(the)f(case)h(according)h(to)e(the)h(Ja)o(v)n(a)g
(language)h(spec-)2042 4765 y(i\002cation)f([6:)g(Chapters)g(4.5.1.1)h
(and)f(4.10.2])h(and)g(the)f(formalization)h(by)2042
4848 y(T)-6 b(or)o(gersen)32 b(et)f(al.)g([18])h(referenced)g(therein)g
(\(although)h Fw(javac)f FF(mak)o(es)2042 4932 y(some)27
b(attempts)f(to)g(support)i(this\).)d(The)i(reason)g(is)f(that)g(Ja)o
(v)n(a)h(uses)g(syn-)2042 5015 y(tactic)i(equality)h(when)h(comparing)g
(type)f(ar)o(guments,)g(re\003ected)g(in)g(our)2044 5098
y(S)t Fp(U)t(B)t FF(-)t(E)t Fp(X)t(I)t(S)t(T)t(S)17 b
FF(rule)i(by)g(the)g(use)g(of)g Fs(=)g FF(in)f(the)h(sixth)g(premise.)
2141 5181 y(Ideally)28 b(equi)n(v)n(alent)g(types)g(could)f(be)h(used)f
(interchangeably)-5 b(.)29 b(Thus,)2042 5264 y(during)h(subtyping)h(Ja)
o(v)n(a)e(should)i(only)f(require)g(type)f(ar)o(guments)i(to)e(be)2042
5347 y(equi)n(v)n(alent)37 b(rather)e(than)i(strictly)e(syntactically)h
(identical.)f(The)h(ob)o(vi-)2042 5430 y(ous)c(w)o(ay)h(to)e(implement)
i(this)e(is)h(to)g(simply)g(check)h(that)f(the)g(type)g(ar)o(-)p
eop end
%%Page: 11 11
TeXDict begin 11 10 bop 310 117 a Fx(e)o(xplicit)o Fs(\()571
75 y
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 571 75 a Fw(?)571 75 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 571 75 a 558 117 a Ft(\034)600
125 y Fo(1)635 117 y Ft(;)13 b(:)g(:)g(:)h(;)819 75 y
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate

819 75 a Fw(?)819 75 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 819 75 a 806 117 a Ft(\034)848
125 y Fn(m)907 117 y Fs(\))21 b(=)g Fu(h)p Fs(\000;)13
b(\001)-43 b Fu(\001)22 b Fs(;)13 b Ft(\034)1283 125
y Fo(1)1317 117 y Ft(;)h(:)f(:)g(:)g(;)g(\034)1522 125
y Fn(m)1581 117 y Fu(i)650 b Fx(e)o(xplicit)p Fs(\()2523
75 y
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 2523 75 a Fw(?)2523 75 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 2523 75 a 2510 117 a Ft(\034)2552
77 y Fz(0)2552 130 y Fo(1)2587 117 y Ft(;)13 b(:)g(:)g(:)g(;)2771
75 y
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 2771 75 a Fw(?)2771 75 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 2771 75 a 2757 117 a Ft(\034)2800
77 y Fz(0)2800 130 y Fn(n)2842 117 y Fs(\))21 b(=)h Fu(h)p
Fs(\000)3053 85 y Fz(0)3075 117 y Fs(;)13 b(\001)-43
b Fu(\001)3173 85 y Fz(0)3195 117 y Fs(;)13 b Ft(\034)3272
85 y Fz(0)3263 130 y Fo(1)3298 117 y Ft(;)g(:)g(:)g(:)g(;)g(\034)3511
85 y Fz(0)3502 130 y Fn(n)3545 117 y Fu(i)40 297 y FF(for)19
b(all)233 144 y Fh(8)233 211 y(<)233 345 y(:)302 211
y Ft(C)362 211 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 362 211 a Fw(<)362 211 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 362 211 a 29
w Ft(P)440 219 y Fo(1)475 211 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 475 211 a Fw(,...,)475
211 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 475 211 a 147 w Ft(P)671 219 y Fn(m)730 211 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 730
211 a Fw(>)730 211 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 730 211 a 48 w FF(is)f(a)h(subclass)h(of)f
Ft(E)1308 211 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1308 211 a Fw(<)1308 211 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1308 211 a
33 w Fs(\026)-42 b Ft(\034)1371 219 y Fo(1)1405 211 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

1405 211 a Fw(,...,)1405 211 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1405 211 a 152 w Fs(\026)f
Ft(\034)1586 220 y Fn(k)1624 211 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1624 211 a Fw(>)1624
211 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1624 211 a 924 294 a FF(and)307 378 y Ft(D)372
378 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 372 378 a Fw(<)372 378 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 372 378 a 30 w Ft(P)462
347 y Fz(0)451 392 y Fo(1)486 378 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 486 378 a Fw(,...,)486
378 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 486 378 a 147 w Ft(P)693 347 y Fz(0)682 392 y Fn(n)724
378 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 724 378 a Fw(>)724 378 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 724 378 a 48 w FF(is)19
b(a)g(subclass)g(of)g Ft(E)1302 378 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1302 378 a Fw(<)1302
378 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1302 378 a 34 w Fs(\026)-42 b Ft(\034)1375 347
y Fz(0)1366 392 y Fo(1)1400 378 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1400 378 a Fw(,...,)1400
378 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1400 378 a 151 w Fs(\026)g Ft(\034)1590 347 y Fz(0)1581
394 y Fn(k)1619 378 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1619 378 a Fw(>)1619 378 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1619
378 a 1654 144 a Fh(9)1654 211 y(=)1654 345 y(;)1735
297 y FF(and)19 b Ft(i)g FF(in)g(1)g(to)g Ft(k)r(;)36
b Fs(\026)-42 b Ft(\034)2245 305 y Fn(i)2271 297 y Fs([)p
Ft(P)2341 305 y Fo(1)2376 297 y Fu(7!)p Ft(\034)2487
305 y Fo(1)2521 297 y Ft(;)14 b(:)f(:)g(:)g(;)g(P)2741
305 y Fn(m)2800 297 y Fu(7!)o Ft(\034)2910 305 y Fn(m)2969
297 y Fs(])22 b(=)j(\026)-42 b Ft(\034)3136 265 y Fz(0)3127
311 y Fn(i)3157 297 y Fs([)p Ft(P)3238 265 y Fz(0)3227
310 y Fo(1)3262 297 y Fu(7!)p Ft(\034)3382 265 y Fz(0)3373
310 y Fo(1)3408 297 y Ft(;)13 b(:)g(:)g(:)g(;)g(P)3638
265 y Fz(0)3627 310 y Fn(n)3670 297 y Fu(7!)p Ft(\034)3790
265 y Fz(0)3781 310 y Fn(n)3823 297 y Fs(])p -16 432
3917 4 v 1266 514 a Fr(G)22 b Fs(:)g Fr(D)f Fu(`)g Ft(C)1589
514 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1589 514 a Fw(<)1589 514 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1589 514 a 1632 473
a
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 1632 473 a Fw(?)1632 473 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 1632 473 a 1619 514 a Ft(\034)1661
522 y Fo(1)1696 514 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1696 514 a Fw(,)39 b(...,)1696
514 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1696 514 a 1915 473 a
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 1915 473 a Fw(?)1915 473
y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 1915 473 a 1902 514 a Ft(\034)1944 522 y Fn(m)2003
514 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2003 514 a Fw(>)2003 514 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2003 514 a 50 w Fu(t)-36
b(\001)37 b Ft(D)2191 514 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2191 514 a Fw(<)2191 514
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2191 514 a 2234 473 a
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 2234 473 a Fw(?)2234 473 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 2234
473 a 2221 514 a Ft(\034)2263 475 y Fz(0)2263 527 y Fo(1)2298
514 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2298 514 a Fw(,)i(...,)2298 514 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2298 514 a 2517
473 a
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 2517 473 a Fw(?)2517 473 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 2517 473 a 2504 514
a Ft(\034)2546 475 y Fz(0)2546 527 y Fn(n)2588 514 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

2588 514 a Fw(>)2588 514 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2588 514 a -150 605 4185 3
v 1094 690 a Fv(Figur)o(e)18 b(15.)38 b FF(De\002nition)19
b(of)g(when)g(tw)o(o)g(types)h(join)f(concretely)-150
938 y(guments)33 b(are)g(subtypes)g(of)g(each)g(other)m(,)f(as)g
(proposed)i(by)f(Smith)f(and)-150 1021 y(Cartwright)17
b([14)q(].)f(Y)-7 b(et,)17 b(to)g(our)h(surprise,)f(this)h(introduces)g
(another)h(source)-150 1104 y(of)27 b(in\002nite)f(proofs)i(and)f
(potential)g(for)g(non-termination.)h(W)-6 b(e)26 b(gi)n(v)o(e)i(one)
-150 1187 y(such)f(e)o(xample)g(in)g(Figure)f(14,)h(and,)f(as)h(with)f
(prior)g(e)o(xamples,)h(this)f(e)o(x-)-150 1270 y(ample)j(can)h(be)f
(modi\002ed)g(so)g(that)g(the)g(in\002nite)f(proof)h(is)g(ac)o(yclic.)g
(This)-150 1353 y(e)o(xample)17 b(is)g(particularly)g(problematic)g
(since)g(it)f(satis\002es)g(both)i(our)f(inher)o(-)-150
1436 y(itance)k(and)h(parameter)f(restrictions.)g(W)-6
b(e)20 b(will)g(address)i(this)f(problem)h(by)-150 1519
y(canonicalizing)e(types)g(prior)f(to)g(syntactic)g(comparison.)-150
1706 y Fv(7.4)75 b(Inheritance)18 b(Consistency)-150
1822 y FF(Lastly)-5 b(,)24 b(for)g(sak)o(e)i(of)e(completeness)i(we)e
(discuss)h(a)g(problem)g(which,)g(al-)-150 1905 y(though)d(not)f(of)n
(\002cially)g(addressed)h(by)g(the)f(Ja)o(v)n(a)g(language)h
(speci\002cation,)-150 1988 y(appears)k(to)f(already)g(be)h(addressed)g
(by)g Fw(javac)p FF(.)f(In)g(particular)m(,)g(the)g(type)-150
2071 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -150 2071 a Fw(Numbers<?)41 b(super)g(String>)-150
2071 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -150 2071 a 696 w FF(poses)21 b(an)f(interesting)h(problem.)f
(The)g(wildcard)-150 2154 y(is)26 b(constrained)i(e)o(xplicitly)e(belo)
n(w)h(by)912 2154 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 912 2154 a Fw(String)912 2154 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 912
2154 a 203 w FF(and)g(implicitly)e(abo)o(v)o(e)j(by)-150
2237 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -150 2237 a Fw(Number)-150 2237 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -150 2237 a
177 w FF(.)d(Should)i(this)f(type)g(be)g(opened,)i(then)e(transiti)n
(vity)g(w)o(ould)h(imply)-150 2320 y(that)-9 2320 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -9
2320 a Fw(String)-9 2320 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -9 2320 a 205 w FF(is)i(a)g(subtype)h(of)689
2320 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 689 2320 a Fw(Number)689 2320 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 689 2320 a 177
w FF(,)e(which)i(is)f(inconsistent)h(with)e(the)-150
2403 y(inheritance)d(hierarchy)-5 b(.)25 b(One)f(might)h(ar)o(gue)f
(that)h(this)f(is)f(sound)j(because)-150 2486 y(we)d(are)g(opening)h
(an)f(uninhabitable)i(type)e(and)h(so)f(the)g(code)h(is)e(unreach-)-150
2569 y(able)27 b(an)o(yw)o(ays.)h(Ho)n(we)n(v)o(er)m(,)g(this)f(type)g
(is)g(inhabitable)h(because)g(Ja)o(v)n(a)g(al-)-150 2652
y(lo)n(ws)12 2652 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 12 2652 a Fw(null)12 2652 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 12 2652
a 140 w FF(to)23 b(ha)o(v)o(e)g(an)o(y)g(type.)g(F)o(ortunately)-5
b(,)23 b Fw(javac)g FF(appears)h(to)f(already)-150 2735
y(prohibit)18 b(such)g(types,)f(pre)n(v)o(enting)i(unsoundness)g(in)f
(the)f(language.)h(Com-)-150 2818 y(pleteness)25 b(of)f(our)g
(subtyping)i(algorithm)f(actually)f(assumes)h(such)g(types)-150
2901 y(are)20 b(rejected;)h(we)f(did)h(not)g(state)f(this)g(as)g(an)h
(e)o(xplicit)f(requirement)h(of)g(our)-150 2984 y(theorem)f(because)g
(it)e(already)h(holds)h(for)f(Ja)o(v)n(a)g(as)g(it)f(e)o(xists)h(in)g
(practice.)-150 3231 y FD(8.)91 b(Impr)n(o)o(v)o(ed)21
b(T)-7 b(ype)22 b(System)-150 3347 y FF(Here)i(we)g(present)h(a)f(v)n
(ariety)g(of)h(slight)f(changes)h(to)f(Ja)o(v)n(a')l(s)g(type)h(system)
-150 3430 y(re)o(garding)e(wildcards)g(in)f(order)h(to)f(rid)g(it)g(of)
h(the)f(undesirable)i(properties)-150 3513 y(discussed)c(in)f(Section)g
(7.)-150 3699 y Fv(8.1)75 b(Implicit)18 b(Lo)o(wer)h(Bounds)-150
3815 y FF(Although)25 b(we)f(sho)n(wed)i(in)e(Section)g(7.1)g(that)g
(using)h(complete)g(implicit-)-150 3898 y(constraint)32
b(inference)h(is)f(problematic,)g(we)g(still)f(belie)n(v)o(e)h(Ja)o(v)n
(a)g(should)-150 3981 y(use)24 b(a)h(slightly)f(stronger)g(algorithm.)h
(In)f(particular)m(,)g(consider)h(the)f(types)-150 4064
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -150 4064 a Fw(Super<Number,?>)-150 4064 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -150 4064
a 456 w FF(and)429 4064 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 429 4064 a Fw(Super<?,Integer>)429
4064 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 429 4064 a 471 w FF(.)14 b(The)h(former)h(is)e(accepted)j(by)e
(Ja)o(v)n(a)-150 4147 y(whereas)30 b(the)f(latter)g(is)f(rejected.)i
(Ho)n(we)n(v)o(er)m(,)f(should)h(Ja)o(v)n(a)g(permit)f(type)-150
4230 y(parameters)22 b(to)f(ha)o(v)o(e)h(lo)n(wer)o(-bound)g
(requirements,)g(then)g(the)f(class)1695 4230 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1695
4230 a Fw(Super)1695 4230 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1695 4230 a -150 4313 a FF(might)e(also)g
(be)g(declared)h(as)435 4456 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 435 4456 a Fw(class)40
b(Super<P)h(super)g(Q,)e(Q>)1455 4447 y
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 1455 4447 a Fu(fg)1455
4447 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 1455 4447 a 435 4456 a
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 435 4456 a -150 4599 a
FF(Using)26 b(Ja)o(v)n(a')l(s)g(completely)g(syntactic)g(approach)i(to)
d(implicit-constraint)-150 4682 y(inference,)e(under)g(this)g
(declaration)g(no)n(w)995 4682 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 995 4682 a Fw(Super<Number,?>)995
4682 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 995 4682 a 463 w FF(w)o(ould)h(be)f(re-)-150 4765
y(jected)28 b(and)192 4765 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 192 4765 a Fw(Super<?,Integer>)192
4765 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 192 4765 a 499 w FF(w)o(ould)g(be)h(accepted.)g(This)e(is)h(the)
g(oppo-)-150 4848 y(site)17 b(of)h(before,)h(e)n(v)o(en)f(though)h(the)
f(tw)o(o)g(class)g(declarations)h(are)f(conceptu-)-150
4932 y(ally)f(equi)n(v)n(alent.)h(In)g(light)f(of)g(this,)g
(implicit-constraint)g(inference)h(should)-150 5015 y(also)j(infer)f
(implicit)g(lo)n(wer)o(-bound)i(constraints)f(for)f(an)o(y)h(wildcard)g
(corre-)-150 5098 y(sponding)c(to)e(a)g(type)g(parameter)h
Ft(P)25 b FF(with)15 b(another)g(type)h(parameter)f Ft(Q)g
FF(con-)-150 5181 y(strained)j(to)f(e)o(xtend)i Ft(P)11
b FF(.)16 b(This)h(slight)h(strengthening)h(addresses)f(the)g(asym-)
-150 5264 y(metry)29 b(in)g(Ja)o(v)n(a')l(s)g(syntactic)g(approach)h
(while)f(still)f(ha)o(ving)i(predictable)-150 5347 y(beha)o(vior)21
b(from)g(a)f(user')l(s)h(perspecti)n(v)o(e)h(and)f(also)g(being)g
(compatible)h(with)-150 5430 y(our)d(algorithms)h(e)n(v)o(en)f(with)g
(the)g(language)h(e)o(xtensions)g(in)f(Section)g(10.)2042
938 y Fv(8.2)75 b(Single-Instantiation)17 b(Inheritance)2042
1055 y FF(W)-6 b(e)29 b(ha)o(v)o(e)g(determined)i(an)e(adaptation)i(of)
e(single-instantiation)h(inheri-)2042 1138 y(tance)c(to)g(e)o
(xistential)f(types,)h(and)h(consequently)h(wildcards,)e(which)g(ad-)
2042 1221 y(dresses)19 b(the)g(non-determinism)h(issues)g(raised)f(in)g
(Section)f(7.2:)2327 1409 y Fx(F)-8 b(or)19 b(all)f(types)i
Ft(\034)27 b Fx(and)19 b(class)g(or)h(interface)f(names)g
Ft(C)5 b Fx(,)2327 1492 y(if)18 b Ft(\034)27 b Fx(has)20
b(a)f(supertype)h(of)f(the)g(form)f Fu(9)p Fs(\000)9
b(:)g(\001)p Ft(:)18 b(C)3575 1492 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3575 1492 a Fw(<...>)3575
1492 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3575 1492 a 148 w Fx(,)2327 1575 y(then)d Ft(\034)23
b Fx(has)15 b(a)g(most)g(pr)m(ecise)h(supertype)g(of)f(that)f(form.)
2042 1777 y FF(Should)19 b(this)f(be)h(ensured,)h(whene)n(v)o(er)f(a)g
(v)n(ariable)g(of)g(type)g Ft(\034)27 b FF(is)18 b(used)h(as)g(an)2042
1860 y(instance)j(of)f Ft(C)26 b FF(the)c(type)f(check)o(er)i(can)f
(use)f(the)h(most)f(precise)h(supertype)2042 1943 y(of)g
Ft(\034)30 b FF(with)22 b(the)g(appropriate)h(form)f(without)g(ha)o
(ving)g(to)g(w)o(orry)h(about)g(an)o(y)2042 2026 y(alternati)n(v)o(e)c
(supertypes.)2141 2109 y(Ja)o(v)n(a)36 b(only)g(ensures)g
(single-instantiation)g(inheritance)h(with)e(wild-)2042
2192 y(cards)22 b(when)h Ft(\034)30 b FF(is)22 b(a)g(class)g(or)g
(interf)o(ace)g(type,)g(b)o(ut)g(not)g(when)h Ft(\034)30
b FF(is)22 b(a)g(type)2042 2275 y(v)n(ariable.)g(T)-6
b(ype)23 b(v)n(ariables)g(can)g(either)f(be)h(type)g(parameters)g(or)f
(captured)2042 2358 y(wildcards,)g(so)g(we)f(need)i(to)f(ensure)g
(single-instantiation)h(inheritance)f(in)2042 2441 y(both)d(cases.)g
(In)g(order)g(to)g(do)g(this,)f(we)h(introduce)h(a)e(concept)i(we)f
(call)g(con-)2042 2524 y(cretely)g(joining)g(types,)g(de\002ned)h(in)f
(Figure)g(15.)2141 2607 y(Conceptually)-5 b(,)28 b(tw)o(o)f(types)h
(join)f(concretely)h(if)e(the)o(y)h(ha)o(v)o(e)g(no)h(wild-)2042
2690 y(cards)f(in)g(common.)g(More)h(formally)-5 b(,)26
b(for)h(an)o(y)g(common)h(superclass)g(or)2042 2773 y(superinterf)o
(ace)21 b Ft(C)5 b FF(,)19 b(there)h(is)g(a)g(most)g(precise)g(common)h
(supertype)g(of)f(the)2042 2856 y(form)28 b Ft(C)2275
2856 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2275 2856 a Fw(<)2275 2856 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2275 2856 a 30 w
Ft(\034)2339 2864 y Fo(1)2373 2856 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2373 2856 a Fw(,)40
b(...,)2373 2856 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2373 2856 a 206 w Ft(\034)2613 2864
y Fn(n)2656 2856 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2656 2856 a Fw(>)2656 2856 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2656
2856 a 57 w FF(\(i.e.)28 b(none)h(of)g(the)g(type)g(ar)o(guments)g(is)f
(a)h(wild-)2042 2939 y(card\).)19 b(In)g(other)g(w)o(ords,)g(their)g
(join)g(is)f(a)h(\(set)g(of\))f(concrete)i(types.)2141
3022 y(Using)i(this)e(ne)n(w)h(concept,)h(we)f(say)g(that)g(tw)o(o)g
(types)g(v)n(alidly)g(intersect)2042 3105 y(each)e(other)f(if)g(either)
g(is)f(a)h(subtype)i(of)e(the)g(other)h(or)f(the)o(y)g(join)g
(concretely)-5 b(.)2042 3188 y(F)o(or)19 b(Ja)o(v)n(a)h(speci\002cally)
-5 b(,)20 b(we)g(should)g(impose)h(additional)f(requirements)h(in)2042
3271 y(Figure)29 b(15:)g Ft(C)34 b FF(or)29 b Ft(D)i
FF(must)e(be)g(an)g(interf)o(ace)h(to)e(re\003ect)h(single)g(inheri-)
2042 3354 y(tance)23 b(of)f(classes)h([6:)f(Chapter)h(8.1.4],)f(and)h
Ft(C)28 b FF(and)23 b Ft(D)h FF(cannot)g(ha)o(v)o(e)f(an)o(y)2042
3437 y(common)17 b(methods)g(with)e(the)h(same)g(signature)h(b)o(ut)f
(dif)n(ferent)g(return)g(types)2042 3520 y(\(after)21
b(erasure\))h(to)f(re\003ect)g(the)h(f)o(act)f(that)h(no)g(class)g(w)o
(ould)g(be)g(able)g(to)f(e)o(x-)2042 3603 y(tend)g(or)f(implement)h
(both)g Ft(C)26 b FF(and)21 b Ft(D)h FF([6)q(:)e(Chapter)g(8.1.5].)h(W)
m(ith)e(this,)h(we)2042 3686 y(can)f(impose)f(our)h(restriction)f
(ensuring)h(single-instantiation)g(inheritance)2042 3769
y(for)27 b(type)i(parameters)f(and)g(captured)h(wildcard)f(type)g(v)n
(ariables)g(so)g(that)2042 3852 y(single-instantiation)19
b(inheritance)h(holds)g(for)e(the)h(entire)g(type)h(system.)2661
4067 y Fv(Intersection)f(Restriction)2144 4148 y Fx(F)-8
b(or)14 b(e)o(very)h(syntactically)g(occurring)h(inter)o(section)f
Ft(\034)3538 4156 y Fo(1)3573 4148 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3573 4148 a 39 w
Fw(&)39 b(...)h(&)3573 4148 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3573 4148 a 264 w Ft(\034)3871
4156 y Fn(n)3914 4148 y Fx(,)2144 4231 y(e)o(very)17
b Ft(\034)2355 4239 y Fn(i)2399 4231 y Fx(must)g(validly)g(inter)o
(sect)g(with)g(e)o(very)h(other)f Ft(\034)3582 4239 y
Fn(j)3615 4231 y Fx(.)f(F)-8 b(or)18 b(e)o(very)2144
4314 y(e)o(xplicit)j(upper)j(bound)g Ft(\034)30 b Fx(on)23
b(a)g(wildcar)m(d,)f Ft(\034)31 b Fx(must)22 b(validly)h(inter)o(-)2144
4397 y(sect)c(with)f(all)h(other)g(upper)h(bounds)h(on)e(that)g
(wildcar)m(d.)2141 4599 y FF(This)d(restriction)g(has)h(an)f(ancillary)
h(bene\002t)f(as)g(well.)f(Concretely)i(join-)2042 4682
y(ing)28 b(types)g(ha)o(v)o(e)g(the)g(property)h(that)f(their)f(meet,)h
(as)g(discussed)h(in)f(Sec-)2042 4765 y(tion)19 b(7.2,)f(is)h(simply)g
(the)g(intersection)g(of)g(the)g(types.)g(This)g(is)g(not)g(the)g(case)
2042 4848 y(for)2161 4848 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2161 4848 a Fw(List<?>)2161
4848 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2161 4848 a 237 w FF(with)2563 4848 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2563 4848
a Fw(Set<?>)2563 4848 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2563 4848 a 177 w FF(,)31 b(whose)i(meet)f(is)g
Fu(9)3315 4848 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3315 4848 a Fw(X)3315 4848 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3315 4848
a 29 w Ft(:)3397 4848 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3397 4848 a Fw(List<X>)41 b(&)e(Set<X>)3397
4848 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3397 4848 a 471 w FF(.)31 b(Our)2042 4932 y(intersection)25
b(restriction)g(then)h(implies)f(that)g(all)g(intersections)g(coincide)
2042 5015 y(with)c(their)g(meet,)g(and)h(so)f(intersection)h
Fx(types)f FF(are)h(actually)f(unnecessary)2042 5098
y(in)f(our)g(system.)g(That)f(is,)g(the)h(syntax)3055
5098 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3055 5098 a Fw(P)39 b(extends)3055 5098 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3055
5098 a 294 w Ft(\034)3383 5106 y Fo(1)3417 5098 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3417
5098 a 40 w Fw(&)g(...)h(&)3417 5098 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3417 5098 a 265
w Ft(\034)3716 5106 y Fn(n)3778 5098 y FF(can)20 b(sim-)2042
5181 y(ply)f(be)g(interpreted)g(as)2668 5181 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2668 5181
a Fw(P)40 b(extends)2668 5181 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2668 5181 a 294 w Ft(\034)2996
5189 y Fn(i)3041 5181 y FF(for)19 b(each)g Ft(i)g FF(in)g(1)g(to)f
Ft(n)h FF(without)g(intro-)2042 5264 y(ducing)28 b(an)e(actual)h(type)g
Ft(\034)2762 5272 y Fo(1)2797 5264 y
 currentpoint currentpoint translate .74 1.1 scale neg exch neg exch
translate
 2797 5264 a 39 w
Fw(&)39 b(...)h(&)2797 5264 y
 currentpoint currentpoint translate 1 .74 div 1 1.1 div scale neg
exch neg exch translate
 2797 5264 a 261 w Ft(\034)3092
5272 y Fn(n)3134 5264 y FF(.)26 b(Thus)h(our)g(solution)g(addresses)
2042 5347 y(the)19 b(non-determinism)i(issues)e(discussed)h(in)f
(Section)g(7.2)h(and)g(simpli\002es)2042 5430 y(the)f(formal)g(type)g
(system.)p eop end
%%Page: 12 12
TeXDict begin 12 11 bop 335 109 a Fu(`)21 b Ft(\034)30
b Fg(Z)p Fu(\))25 b Fs(\026)-42 b Ft(\034)120 b Fu(`)21
b Ft(\034)830 77 y Fz(0)873 109 y Fg(Z)p Fu(\))26 b Fs(\026)-42
b Ft(\034)1015 77 y Fz(0)1153 109 y Fs(\026)f Ft(\034)30
b Fs(=)25 b(\026)-42 b Ft(\034)1336 77 y Fz(0)p 279 128
1136 4 v 610 203 a Fr(G)22 b Fs(:)f Fr(D)h Fu(`)f Ft(\034)937
184 y Fu(\030)937 207 y Fs(=)1018 203 y Ft(\034)1061
172 y Fz(0)p 96 278 1500 7 v 96 295 V 212 429 a Fx(e)o(xplicit)p
Fs(\()474 388 y
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 474 388 a Fw(?)474 388 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 474 388 a 461
429 a Ft(\034)503 437 y Fo(1)537 429 y Ft(;)13 b(:)h(:)f(:)g(;)721
388 y
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 721 388 a Fw(?)721 388 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 721 388 a 708 429 a Ft(\034)750
437 y Fn(n)793 429 y Fs(\))21 b(=)g Fu(h)p Fs(\000;)13
b(\001)-43 b Fu(\001)22 b Fs(;)13 b Ft(\034)1169 437
y Fo(1)1204 429 y Ft(;)g(:)g(:)g(:)g(;)g(\034)1408 437
y Fn(n)1451 429 y Fu(i)373 516 y Fx(implicit)p Fs(\(\000;)f
Ft(C)5 b Fs(;)14 b Ft(\034)842 524 y Fo(1)876 516 y Ft(;)f(:)g(:)h(:)f
(;)g(\034)1081 524 y Fn(n)1123 516 y Fs(\))21 b(=)g(\001)1271
512 y
 currentpoint currentpoint translate .7 .7 scale neg exch neg exch
translate
 1271 512 a Fu(\016)1271 512 y
 currentpoint currentpoint translate 1 .7 div 1 .7 div scale neg exch
neg exch translate
 1271 512 a -16 603
a Fu(f)p Ft(v)k(<)p Fs(::)h(^)-43 b Ft(\034)27 b FF(in)19
b Fs(\001)-42 b Fu(\001)43 b(j)21 b FF(for)e(no)g Ft(v)25
b(<)p Fs(::)h(^)-42 b Ft(\034)901 572 y Fz(0)941 603
y FF(in)19 b Fs(\001)1033 599 y
 currentpoint currentpoint translate .7 .7 scale neg exch neg exch
translate
 1033 599 a Fu(\016)1033
599 y
 currentpoint currentpoint translate 1 .7 div 1 .7 div scale neg exch
neg exch translate
 1033 599 a 1082 603 a Ft(;)32 b Fu(`)25 b Fs(^)-42
b Ft(\034)1246 572 y Fz(0)1289 603 y Ft(<)-17 b Fu(\001)25
b Fs(^)-42 b Ft(\034)9 b Fu(g)21 b Fs(=)g(\001)-42 b
Fu(\001)1621 611 y Fn(<)p Fo(::)-16 691 y Fu(f)p Ft(v)25
b Fs(::)p Ft(>)h Fs(^)-43 b Ft(\034)27 b FF(in)19 b Fs(\001)-42
b Fu(\001)43 b(j)21 b FF(for)e(no)g Ft(v)25 b Fs(::)p
Ft(>)h Fs(^)-42 b Ft(\034)901 659 y Fz(0)941 691 y FF(in)19
b Fs(\001)1033 687 y
 currentpoint currentpoint translate .7 .7 scale neg exch neg exch
translate
 1033 687 a Fu(\016)1033 687 y
 currentpoint currentpoint translate 1 .7 div 1 .7 div scale neg exch
neg exch translate
 1033
687 a 1082 691 a Ft(;)32 b Fu(`)25 b Fs(^)-42 b Ft(\034)30
b(<)-18 b Fu(\001)26 b Fs(^)-42 b Ft(\034)1395 659 y
Fz(0)1417 691 y Fu(g)21 b Fs(=)g(\001)-42 b Fu(\001)1621
699 y Fo(::)o Fn(>)413 778 y FF(for)19 b(all)g Ft(i)g
FF(in)f(1)h(to)g Ft(n;)32 b Fu(`)22 b Ft(\034)1069 786
y Fn(i)1116 778 y Fg(Z)p Fu(\))f Ft(\034)1257 746 y Fz(0)1248
792 y Fn(i)56 865 y Fu(f)p Ft(v)k(<)p Fs(::)h(^)-42 b
Ft(\034)323 833 y Fz(0)366 865 y Fu(j)22 b Ft(v)i(<)p
Fs(::)i(^)-42 b Ft(\034)27 b FF(in)19 b Fs(\001)-43 b
Fu(\001)796 873 y Fn(<)p Fo(::)901 865 y FF(and)41 b
Fu(`)26 b Fs(^)-42 b Ft(\034)29 b Fg(Z)p Fu(\))c Fs(^)-42
b Ft(\034)1322 833 y Fz(0)1344 865 y Fu(g)22 b Fs(=)f(\001)-43
b Fu(\001)1549 833 y Fz(0)1549 878 y Fn(<)p Fo(::)56
952 y Fu(f)p Ft(v)25 b Fs(::)q Ft(>)g Fs(^)-42 b Ft(\034)323
920 y Fz(0)366 952 y Fu(j)22 b Ft(v)i Fs(::)q Ft(>)h
Fs(^)-42 b Ft(\034)27 b FF(in)19 b Fs(\001)-43 b Fu(\001)796
960 y Fo(::)o Fn(>)901 952 y FF(and)41 b Fu(`)26 b Fs(^)-42
b Ft(\034)29 b Fg(Z)p Fu(\))c Fs(^)-42 b Ft(\034)1322
920 y Fz(0)1344 952 y Fu(g)22 b Fs(=)f(\001)-43 b Fu(\001)1549
920 y Fz(0)1549 965 y Fo(::)o Fn(>)76 1046 y Fu(h)p Fs(\000;)13
b(\001)-43 b Fu(\001)252 1014 y Fz(0)252 1059 y Fn(<)p
Fo(::)339 1046 y Ft(;)13 b Fs(\001)-43 b Fu(\001)437
1014 y Fz(0)437 1059 y Fo(::)o Fn(>)524 1046 y Fs(;)13
b Ft(\034)601 1014 y Fz(0)592 1059 y Fo(1)627 1046 y
Ft(;)g(:)g(:)g(:)g(;)g(\034)840 1014 y Fz(0)831 1059
y Fn(n)874 1046 y Fu(i)21 b Fs(=)g Fx(e)o(xplicit)o Fs(\()1268
1004 y
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 1268 1004 a Fw(?)1268 1004 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 1268 1004 a 1254
1046 a Ft(\034)1297 1007 y Fz(0)1297 1059 y Fo(1)1331
1046 y Ft(;)13 b(:)h(:)f(:)g(;)1515 1004 y
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 1515 1004
a Fw(?)1515 1004 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 1515 1004 a 1502 1046 a Ft(\034)1544
1007 y Fz(0)1544 1059 y Fn(n)1587 1046 y Fs(\))p -72
1083 1837 4 v 266 1166 a Fu(`)21 b Ft(C)394 1166 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 394
1166 a Fw(<)394 1166 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 394 1166 a 437 1125 a
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 437 1125
a Fw(?)437 1125 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 437 1125 a 423 1166 a Ft(\034)466 1174
y Fo(1)500 1166 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 500 1166 a Fw(,)40 b(...,)500 1166
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 500 1166 a 720 1125 a
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 720 1125 a Fw(?)720 1125 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 720
1125 a 706 1166 a Ft(\034)749 1174 y Fn(n)791 1166 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

791 1166 a Fw(>)791 1166 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 791 1166 a 51 w Fg(Z)p Fu(\))21
b Ft(C)1000 1166 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1000 1166 a Fw(<)1000 1166 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1000
1166 a 1043 1125 a
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 1043 1125 a Fw(?)1043 1125 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 1043
1125 a 1030 1166 a Ft(\034)1072 1127 y Fz(0)1072 1179
y Fo(1)1107 1166 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1107 1166 a Fw(,)39 b(...,)1107 1166
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1107 1166 a 1326 1125 a
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 1326 1125 a Fw(?)1326 1125
y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 1326 1125 a 1313 1166 a Ft(\034)1355 1127 y Fz(0)1355
1179 y Fn(n)1397 1166 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1397 1166 a Fw(>)1397 1166 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate

1397 1166 a 656 1258 380 4 v 712 1325 a Fu(`)22 b Ft(v)i
Fg(Z)p Fu(\))d Ft(v)p 96 1408 1500 7 v 96 1424 V 212
1559 a Fx(e)o(xplicit)p Fs(\()474 1517 y
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 474 1517 a Fw(?)474
1517 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 474 1517 a 461 1559 a Ft(\034)503 1567 y Fo(1)537
1559 y Ft(;)13 b(:)h(:)f(:)g(;)721 1517 y
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 721 1517 a
Fw(?)721 1517 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 721 1517 a 708 1559 a Ft(\034)750 1567
y Fn(n)793 1559 y Fs(\))21 b(=)g Fu(h)p Fs(\000;)13 b(\001)-43
b Fu(\001)22 b Fs(;)13 b Ft(\034)1169 1567 y Fo(1)1204
1559 y Ft(;)g(:)g(:)g(:)g(;)g(\034)1408 1567 y Fn(n)1451
1559 y Fu(i)190 1653 y Fx(e)o(xplicit)o Fs(\()451 1611
y
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 451 1611 a Fw(?)451 1611 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 451 1611 a 438 1653 a Ft(\034)480
1613 y Fz(0)480 1666 y Fo(1)515 1653 y Ft(;)g(:)g(:)g(:)h(;)699
1611 y
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 699 1611 a Fw(?)699 1611 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 699 1611 a 686 1653
a Ft(\034)728 1613 y Fz(0)728 1666 y Fn(n)771 1653 y
Fs(\))21 b(=)g Fu(h)p Fs(\000)981 1621 y Fz(0)1003 1653
y Fs(;)13 b(\001)-43 b Fu(\001)1101 1621 y Fz(0)1123
1653 y Fs(;)14 b Ft(\034)1201 1621 y Fz(0)1192 1666 y
Fo(1)1226 1653 y Ft(;)f(:)g(:)g(:)h(;)f(\034)1440 1621
y Fz(0)1431 1666 y Fn(n)1473 1653 y Fu(i)-50 1740 y FF(for)18
b(all)h Ft(i)g FF(in)g(1)g(to)f Ft(n;)33 b FF(if)18 b
Ft(\034)610 1708 y Fz(0)601 1754 y Fn(i)650 1740 y FF(in)h
Fs(\000)775 1708 y Fz(0)816 1740 y FF(then)h Ft(\034)998
1748 y Fn(i)1045 1740 y Fs(=)h Ft(\034)1169 1708 y Fz(0)1160
1754 y Fn(i)1191 1740 y Fs([)p Ft(\022)r Fs(])e FF(else)g
Ft(\034)1459 1748 y Fn(i)1504 1740 y FF(not)g(in)g Fs(\000)373
1827 y Fx(implicit)p Fs(\(\000;)12 b Ft(C)5 b Fs(;)14
b Ft(\034)842 1835 y Fo(1)876 1827 y Ft(;)f(:)g(:)h(:)f(;)g(\034)1081
1835 y Fn(n)1123 1827 y Fs(\))21 b(=)g(\001)1271 1823
y
 currentpoint currentpoint translate .7 .7 scale neg exch neg exch
translate
 1271 1823 a Fu(\016)1271 1823 y
 currentpoint currentpoint translate 1 .7 div 1 .7 div scale neg exch
neg exch translate
 1271 1823 a -24 1914
a FF(for)e(all)f Ft(v)25 b(<)p Fs(::)h(^)-43 b Ft(\034)28
b FF(in)18 b Fs(\001)-42 b Fu(\001)562 1882 y Fz(0)585
1914 y Ft(;)32 b(\022)r Fs(\()p Ft(v)s Fs(\))21 b Ft(<)p
Fs(::)k(^)-42 b Ft(\034)963 1882 y Fz(0)1004 1914 y FF(in)19
b Fs(\001)1096 1910 y
 currentpoint currentpoint translate .7 .7 scale neg exch neg exch
translate
 1096 1910 a Fu(\016)1096 1910 y
 currentpoint currentpoint translate 1 .7 div 1 .7 div scale neg exch
neg exch translate

1096 1910 a 1145 1914 a Ft(;)13 b Fs(\001)-43 b Fu(\001)40
b FF(with)g Fu(`)26 b Fs(^)-42 b Ft(\034)1546 1882 y
Fz(0)1589 1914 y Ft(<)-18 b Fu(\001)26 b Fs(^)-42 b Ft(\034)-24
2001 y FF(for)19 b(all)f Ft(v)25 b Fs(::)p Ft(>)h Fs(^)-43
b Ft(\034)28 b FF(in)18 b Fs(\001)-42 b Fu(\001)562 1969
y Fz(0)585 2001 y Ft(;)32 b(\022)r Fs(\()p Ft(v)s Fs(\))21
b(::)p Ft(>)k Fs(^)-42 b Ft(\034)963 1969 y Fz(0)1004
2001 y FF(in)19 b Fs(\001)1096 1997 y
 currentpoint currentpoint translate .7 .7 scale neg exch neg exch
translate
 1096 1997 a Fu(\016)1096
1997 y
 currentpoint currentpoint translate 1 .7 div 1 .7 div scale neg exch
neg exch translate
 1096 1997 a 1145 2001 a Ft(;)13 b Fs(\001)-43
b Fu(\001)40 b FF(with)g Fu(`)26 b Fs(^)-42 b Ft(\034)29
b(<)-17 b Fu(\001)26 b Fs(^)-42 b Ft(\034)1695 1969 y
Fz(0)p -106 2039 1906 4 v 272 2122 a Fu(`)21 b Ft(C)400
2122 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 400 2122 a Fw(<)400 2122 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 400 2122 a 443 2080
a
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 443 2080 a Fw(?)443 2080 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 443 2080 a 430 2122 a Ft(\034)472
2130 y Fo(1)507 2122 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 507 2122 a Fw(,)39 b(...,)507
2122 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 507 2122 a 726 2080 a
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 726 2080 a Fw(?)726 2080
y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 726 2080 a 713 2122 a Ft(\034)755 2130 y Fn(n)798 2122
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 798 2122 a Fw(>)798 2122 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 798 2122 a 50 w Ft(<)-17
b Fu(\001)22 b Ft(C)994 2122 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 994 2122 a Fw(<)994 2122
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 994 2122 a 1037 2080 a
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 1037 2080 a Fw(?)1037 2080 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate

1037 2080 a 1023 2122 a Ft(\034)1066 2082 y Fz(0)1066
2135 y Fo(1)1100 2122 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1100 2122 a Fw(,)40 b(...,)1100
2122 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1100 2122 a 1320 2080 a
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 1320 2080 a Fw(?)1320
2080 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 1320 2080 a 1306 2122 a Ft(\034)1349 2082 y Fz(0)1349
2135 y Fn(n)1391 2122 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1391 2122 a Fw(>)1391 2122 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate

1391 2122 a 663 2213 367 4 v 719 2281 a Fu(`)21 b Ft(v)j(<)-17
b Fu(\001)22 b Ft(v)p -150 2362 1993 3 v 33 2447 a Fv(Figur)o(e)c(16.)
38 b FF(Rules)19 b(for)g(equi)n(v)n(alence)i(via)e(canonicalization)
-150 2703 y Fv(8.3)75 b(Canonicalization)-150 2819 y
FF(In)26 b(order)h(to)f(support)g(interchangeability)i(of)e(equi)n(v)n
(alent)h(types)g(we)f(can)-150 2902 y(apply)20 b(canonicalization)h
(prior)e(to)g(all)g(checks)h(for)f(syntactic)h(equality)-5
b(.)19 b(T)-6 b(o)-150 2985 y(enable)20 b(this)e(approach,)j(we)d
(impose)i(one)f(last)g(restriction.)466 3138 y Fv(Equi)o(v)o(alence)g
(Restriction)-54 3234 y Fx(F)-8 b(or)14 b(e)o(very)h(e)o(xplicit)f
(upper)h(bound)h Ft(\034)23 b Fx(on)15 b(a)g(wildcar)m(d,)f
Ft(\034)23 b Fx(must)14 b(not)h(be)-54 3317 y(a)i(strict)e(supertype)j
(of)e(any)h(other)g(upper)h(bound)g(on)e(that)h(wildcar)m(d.)-54
3400 y(F)-8 b(or)20 b(e)o(very)g(e)o(xplicit)f(lower)g(bound)i
Ft(\034)28 b Fx(on)20 b(a)g(wildcar)m(d,)g Ft(\034)28
b Fx(must)19 b(be)h(a)-54 3483 y(supertype)g(of)f(e)o(very)g(other)h
(lower)f(bound)h(on)g(that)e(wildcar)m(d.)-50 3623 y
FF(W)m(ith)h(this)g(restriction,)g(we)h(can)g(canonicalize)h(wildcard)f
(types)g(by)h(re-)-150 3706 y(mo)o(ving)31 b(redundant)g(e)o(xplicit)e
(constraints)h(under)h(the)f(assumption)g(that)-150 3789
y(the)h(type)g(is)f(v)n(alid.)g(By)h(assuming)h(type)f(v)n(alidity)-5
b(,)30 b(we)h(do)g(not)g(ha)o(v)o(e)f(to)-150 3872 y(check)22
b(equi)n(v)n(alence)g(of)f(type)h(ar)o(guments,)f(enabling)h(us)f(to)f
(a)o(v)o(oid)h(the)g(full)-150 3955 y(challenges)28 b(that)e(subtyping)
i(f)o(aces.)f(This)f(means)i(that)e(the)h(type)g(v)n(alida-)-150
4038 y(tor)19 b(must)g(check)h(original)f(types)g(rather)g(than)h
(canonicalized)g(types.)f(Sub-)-150 4121 y(typing)h(may)h(be)e(used)i
(inside)f(these)g(v)n(alidity)g(checks)g(which)g(may)h(in)e(turn)-150
4204 y(use)d(canonicalization)h(possibly)g(assuming)g(type)f(v)n
(alidity)g(of)f(the)h(type)g(be-)-150 4287 y(ing)h(check)o(ed,)g(b)o
(ut)f(such)h(indirect)g(recursi)n(v)o(e)f(assumptions)i(are)e
(acceptable)-150 4370 y(since)j(our)h(formalization)f(permits)g
(implicitly)f(in\002nite)g(proofs.)-50 4453 y(Our)25
b(canonicalization)i(algorithm)f(is)f(formalized)h(as)f(the)h
Fg(Z)p Fu(\))f FF(opera-)-150 4536 y(tion)i(in)g(Figure)g(16.)g(Its)f
(basic)i(strate)o(gy)f(is)f(to)h(identify)h(and)f(remo)o(v)o(e)h(all)
-150 4620 y(redundant)f(constraints.)f(The)g(primary)g(tool)g(is)g(the)
g Ft(<)-18 b Fu(\001)26 b FF(relation,)g(an)g(im-)-150
4703 y(plementation)j(of)g(subtyping)g(specialized)g(to)g(be)f(sound)i
(and)f(complete)-150 4786 y(between)23 b(class)g(and)g(interf)o(ace)f
(types)h(only)g(if)f Ft(\034)31 b FF(is)22 b(a)g(supertype)i(of)e
Ft(\034)1736 4754 y Fz(0)1780 4786 y FF(or)-150 4869
y(the)o(y)d(join)g(concretely)-5 b(.)-150 4999 y Fv(Equi)o(v)o(alence)
17 b(Theor)o(em.)38 b Fx(Given)17 b(the)g(par)o(ameter)h(r)m
(estriction,)g(the)f(algo-)-150 5082 y(rithm)27 b(pr)m(escribed)h(by)g
(the)f(rules)g(in)g(F)m(igur)m(e)g(16)h(terminates.)f(Given)g(the)-150
5165 y(inter)o(section)22 b(and)h(equivalence)g(r)m(estrictions,)e(the)
h(algorithm)g(is)f(further)o(-)-150 5248 y(mor)m(e)g(a)f(sound)i(and)f
(nearly)h(complete)e(implementation)h(of)g(type)f(equiva-)-150
5331 y(lence)k(pr)m(o)o(vided)g(all)f(types)h(ar)m(e)f(valid)h(accor)m
(ding)h(to)e(the)g(J)m(ava)i(langua)o(g)o(e)-150 5414
y(speci\002cation)20 b([6)q(:)e(Chapter)i(4.5].)2042
66 y(Pr)m(oof.)28 b FF(Here)18 b(we)f(only)h(discuss)g(ho)n(w)f(our)h
(restrictions)f(enable)h(soundness)2042 149 y(and)i(completeness;)h
(the)f(full)g(proofs)g(can)h(be)f(found)h(in)f(our)g(technical)g(re-)
2042 232 y(port)g([16].)g(The)f(equi)n(v)n(alence)j(restriction)e(pro)o
(vides)g(soundness)i(and)f(near)2042 315 y(completeness)g(by)f
(ensuring)h(the)f(assumptions)i(made)e(by)g(the)g Ft(<)-17
b Fu(\001)20 b FF(relation)2042 399 y(hold.)i(The)h(intersection)f
(restriction)g(pro)o(vides)i(completeness)f(by)g(ensur)o(-)2042
482 y(ing)15 b(that)f(non-redundant)j(e)o(xplicit)e(bounds)h(are)f
(unique)h(up)f(to)f(equi)n(v)n(alence)2042 565 y(so)23
b(that)g(syntactic)h(equality)f(after)g(recursi)n(v)o(ely)h(remo)o
(ving)g(all)f(redundant)2042 648 y(constraints)c(is)g(a)g(complete)g
(means)h(for)f(determining)g(equi)n(v)n(alence.)p 3980
648 4 51 v 3984 600 45 4 v 3984 648 V 4028 648 4 51 v
2141 861 a(W)-6 b(e)31 b(say)h(our)g(algorithm)g(is)g(nearly)g
(complete)g(because)h(it)e(is)g(com-)2042 944 y(plete)d(on)g(class)g
(and)h(interf)o(ace)f(types)h(b)o(ut)f(not)g(on)g(type)h(v)n(ariables.)
f(Our)2042 1027 y(algorithm)k(will)f(only)h(determine)g(that)g(a)g
(type)g(v)n(ariable)g(is)g(equi)n(v)n(alent)2042 1110
y(to)c(itself.)f(While)h(type)g(parameters)h(can)g(only)g(be)f(equi)n
(v)n(alent)i(to)e(them-)2042 1193 y(selv)o(es,)20 b(captured)i
(wildcard)f(type)g(v)n(ariables)g(can)g(be)g(equi)n(v)n(alent)h(to)f
(other)2042 1276 y(types.)f(Consider)h(the)f(type)2788
1276 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2788 1276 a Fw(Numbers<?)41 b(super)g(Number>)2788
1276 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2788 1276 a 697 w FF(in)20 b(which)g(the)h(wild-)2042
1359 y(card)g(is)f(constrained)h(e)o(xplicitly)g(belo)n(w)g(by)3222
1359 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3222 1359 a Fw(Number)3222 1359 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3222 1359 a
197 w FF(and)g(implicitly)f(abo)o(v)o(e)2042 1442 y(by)2137
1442 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2137 1442 a Fw(Number)2137 1442 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2137 1442 a
196 w FF(so)h(that)f(the)h(wildcard)f(is)h(equi)n(v)n(alent)g(to)3422
1442 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3422 1442 a Fw(Number)3422 1442 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3422 1442 a
176 w FF(.)f(Using)h(our)f(al-)2042 1525 y(gorithm,)2315
1525 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2315 1525 a Fw(Numbers<?)42 b(super)e(Number>)2315
1525 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2315 1525 a 695 w FF(is)18 b(not)h(a)f(subtype)i(of)3574
1525 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3574 1525 a Fw(Numbers<Number>)3574 1525 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3574
1525 a 442 w FF(,)2042 1608 y(which)25 b(w)o(ould)h(be)g(subtypes)g
(should)h(one)f(use)f(a)g(complete)h(equi)n(v)n(alence)2042
1691 y(algorithm.)i(While)f(from)h(a)g(theoretical)h(perspecti)n(v)o(e)
g(this)e(seems)i(to)f(be)2042 1774 y(a)c(weakness,)h(as)f(Summers)g(et)
g(al.)g(ha)o(v)o(e)h(ar)o(gued)f([15)q(],)g(from)g(a)g(practical)2042
1857 y(perspecti)n(v)o(e)h(it)f(is)g(a)g(strength)h(since)f(it)g
(forces)h(programmers)g(to)f(use)h(the)2042 1940 y(more)d(precise)h
(type)g(whene)n(v)o(er)h(the)o(y)e(actually)h(rely)g(on)f(that)h(e)o
(xtra)f(preci-)2042 2023 y(sion)e(rather)g(than)h(obscure)g(it)e
(through)i(implicit)f(equi)n(v)n(alences.)h(Plus,)f(our)2042
2106 y(weak)o(er)j(notion)g(of)f(equi)n(v)n(alence)i(is)e(still)f
(strong)i(enough)g(to)g(achie)n(v)o(e)g(our)2042 2189
y(goal)e(of)g(allo)n(wing)g(equi)n(v)n(alent)h(types)f(to)g(be)g(used)g
(interchangeably)i(\(pro-)2042 2272 y(vided)c(the)o(y)h(satisfy)e(all)h
(applicable)g(restrictions\).)g(As)f(such,)h(we)g(consider)2042
2355 y(our)d(nearly)g(complete)g(equi)n(v)n(alence)h(algorithm)f(to)g
(be)f(suf)n(\002cient)h(and)g(e)n(v)o(en)2042 2438 y(preferable)j(to)g
(a)g(totally)g(complete)g(algorithm.)2042 2657 y FD(9.)91
b(Ev)o(aluation)22 b(of)h(Restrictions)2042 2773 y FF(One)e(might)g
(consider)h(man)o(y)f(of)g(the)g(e)o(xamples)h(in)e(this)h(paper)h(to)e
(be)i(con-)2042 2856 y(tri)n(v)o(ed.)e(Indeed,)h(a)f(signi\002cant)g
(contrib)o(ution)h(of)f(our)h(w)o(ork)g(is)e(identifying)2042
2939 y(restrictions)i(that)h(reject)f(such)h(contri)n(v)o(ed)h(e)o
(xamples)g(b)o(ut)e(still)g(permit)g(the)2042 3022 y(Ja)o(v)n(a)f(code)
h(that)g(actually)f(occurs)h(in)g(practice.)f(Before)g(imposing)i(our)e
(re-)2042 3105 y(strictions)26 b(on)i(Ja)o(v)n(a,)f(it)f(is)g
(important)h(to)g(ensure)h(that)f(the)o(y)g(are)g(actually)2042
3188 y(compatible)20 b(with)e(e)o(xisting)h(code)h(bases)g(and)f
(design)h(patterns.)2141 3271 y(T)-6 b(o)26 b(this)f(end,)h(we)f
(conducted)i(a)f(lar)o(ge)f(surv)o(e)o(y)h(of)g(open-source)h(Ja)o(v)n
(a)2042 3354 y(code.)35 b(W)-6 b(e)35 b(e)o(xamined)i(a)e(total)f(of)i
(10)f(projects,)h(including)g(NetBeans)2042 3437 y(\(3.9)22
b(MLOC\),)f(Eclipse)h(\(2.3)g(MLOC\),)f(OpenJDK)h(6)g(\(2.1)g(MLOC\),)f
(and)2042 3520 y(Google)h(W)-6 b(eb)21 b(T)-6 b(oolkit)21
b(\(0.4)h(MLOC\).)e(As)h(one)h(of)g(these)f(projects)h(we)f(in-)2042
3603 y(cluded)i(our)f(o)n(wn)g(Ja)o(v)n(a)g(code)h(from)f(a)g(prior)g
(research)g(project)h(because)g(it)2042 3686 y(made)h(hea)o(vy)g(use)g
(of)g(generics)g(and)g(rather)g(comple)o(x)h(use)f(of)f(wildcards.)2042
3769 y(Altogether)e(the)g(projects)g(totalled)f(9.2)h(million)g(lines)f
(of)h(Ja)o(v)n(a)g(code)g(with)2042 3852 y(3,041)26 b(generic)g
(classes)f(and)h(interf)o(aces)g(out)g(of)f(94,781)h(total)f
(\(ignoring)2042 3935 y(anon)o(ymous)34 b(classes\).)f(T)-6
b(o)32 b(e)o(xamine)h(our)g(benchmark)h(suite,)e(we)h(aug-)2042
4018 y(mented)27 b(the)f(OpenJDK)g(6)g(compiler)h(to)f(collect)g
(statistics)f(on)h(the)g(code)2042 4101 y(it)18 b(compiled.)h(Here)g
(we)g(present)h(our)f(\002ndings.)2141 4184 y(T)-6 b(o)26
b(e)n(v)n(aluate)i(our)e(inheritance)h(restriction,)f(we)g(analyzed)h
(all)f(decla-)2042 4267 y(rations)f(of)g(direct)f(superclasses)i(and)g
(superinterf)o(aces)g(that)e(occurred)i(in)2042 4350
y(our)c(suite.)f(In)h(Figure)f(17,)h(we)g(present)g(in)g(logarithmic)f
(scale)h(ho)n(w)g(man)o(y)2042 4433 y(of)g(the)h(118,918)h(declared)f
(superclasses)h(and)f(superinterf)o(aces)h(had)f(type)2042
4516 y(ar)o(guments)18 b(and)g(used)h(wildcards)f(and)g(with)f(what)h
(kind)g(of)g(constraints.)g(If)2042 4599 y(a)f(class)h(or)g(interf)o
(ace)g(declared)g(multiple)g(direct)f(superclasses)i(and)f(super)o(-)
2042 4682 y(interf)o(aces,)h(we)h(counted)g(each)g(declaration)g
(separately)-5 b(.)20 b(Out)g(of)f(all)g(these)2042 4765
y(declarations,)g Fx(none)h FF(of)f(them)g(violated)h(our)f
(inheritance)h(restriction.)2141 4848 y(T)-6 b(o)37 b(e)n(v)n(aluate)g
(our)g(parameter)g(restriction,)f(we)h(analyzed)h(all)e(con-)2042
4932 y(straints)16 b(on)i(type)f(parameters)h(for)f(classes,)g(interf)o
(aces,)g(and)g(methods)h(that)2042 5015 y(occurred)23
b(in)f(our)g(suite.)f(In)h(Figure)g(18,)g(we)g(break)g(do)n(wn)h(ho)n
(w)f(the)g(2,003)2042 5098 y(parameter)33 b(constraints)g(used)g(type)g
(ar)o(guments,)g(wildcards,)f(and)i(con-)2042 5181 y(strained)26
b(wildcards.)h(Only)f(36)h(type-parameter)g(constraints)g(contained)
2042 5264 y(the)d(syntax)2375 5264 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2375 5264 a Fw(?)39
b(super)2375 5264 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2375 5264 a 206 w FF(.)23 b(W)-6
b(e)23 b(manually)i(inspected)f(these)g(36)g(cases)h(and)f(de-)2042
5347 y(termined)i(that)g(out)g(of)g(all)f(type-parameter)i
(constraints,)f Fx(none)h FF(of)f(them)2042 5430 y(violated)c(our)h
(parameter)g(restriction.)e(Interestingly)-5 b(,)23 b(we)f(found)h(no)g
(case)p eop end
%%Page: 13 13
TeXDict begin 13 12 bop -150 745 a @beginspecial 0 @llx
0 @lly 144 @urx 108 @ury 1180 @rwi 885 @rhi @setspecial
%%BeginDocument: superclasses.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: superclasses.pdf
%%Creator: Adobe Acrobat 9.4.2
%%For: Sorin Lerner
%%CreationDate: 24/03/2011, 15:53:43
%%BoundingBox: 0 0 144 108
%%HiResBoundingBox: 0 0 144 108
%%CropBox: 0 0 144 108
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 550 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.1-c043 52.372728, 2009/01/18-15:08:04        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreateDate="2011-03-23T12:44:06-07:00"
   xmp:ModifyDate="2011-03-23T12:44:06-07:00"
   pdf:Producer="GPL Ghostscript 8.71"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -108 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 108 li
144 108 li
144 0 li
cp
clp
[1 0 0 1 0 0 ]ct
0 108 mo
144 108 li
144 0 li
0 0 li
cp
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
0 sep
ef
.72 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
77.0398 27.7199 mo
77.0398 97.0801 li
89.5199 27.7199 mo
89.5199 97.0801 li
101.88 27.7199 mo
101.88 97.0801 li
114.24 27.7199 mo
114.24 97.0801 li
126.72 27.7199 mo
126.72 97.0801 li
139.08 27.7199 mo
139.08 97.0801 li
1 /0 /CSD get_res sepcs
1 sep
@
.96 lw
64.6801 97.0801 mo
139.08 97.0801 li
139.08 27.7199 li
64.6801 27.7199 li
cp
@
64.6801 37.4398 mo
139.56 37.4398 li
139.56 31.9199 li
64.6801 31.9199 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
gsave
64.5602 97.6801 mo
139.68 97.6801 li
139.68 27.7199 li
64.5602 27.7199 li
cp
eclp
64.6801 37.4398 mo
139.56 37.4398 li
139.56 31.9199 li
64.6801 31.9199 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
64.6801 51.3602 mo
126 51.3602 li
126 45.72 li
64.6801 45.72 li
cp
ef
gsave
64.5602 97.6801 mo
139.68 97.6801 li
139.68 27.7199 li
64.5602 27.7199 li
cp
eclp
64.6801 51.3602 mo
126 51.3602 li
126 45.72 li
64.6801 45.72 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
64.6801 65.1602 mo
99 65.1602 li
99 59.6399 li
64.6801 59.6399 li
cp
ef
gsave
64.5602 97.6801 mo
139.68 97.6801 li
139.68 27.7199 li
64.5602 27.7199 li
cp
eclp
64.6801 65.1602 mo
99 65.1602 li
99 59.6399 li
64.6801 59.6399 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
64.6801 79.0801 mo
90 79.0801 li
90 73.4399 li
64.6801 73.4399 li
cp
ef
gsave
64.5602 97.6801 mo
139.68 97.6801 li
139.68 27.7199 li
64.5602 27.7199 li
cp
eclp
64.6801 79.0801 mo
90 79.0801 li
90 73.4399 li
64.6801 73.4399 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
64.6801 27.7199 mo
64.6801 97.0801 li
1 /0 /CSD get_res sepcs
1 sep
@
gsave
0 108 mo
144 108 li
144 8.1602 li
0 8.1602 li
cp
eclp
%ADOBeginSubsetFont: CBIAAA+Calibri Initial
ct_T42Dict begin
-0.5 -0.305 1.238 0.961
 256 array 0 1 255 {1 index exch /.notdef put} for  /CBIAAA+Calibri
Type42DictBegin
[<00010000000c000c000c000c4f532f3200000000000000cc000000566376
7420b09bc4d2000001240000051c6670676df6f64d0c000006400000091a
676c796600000000000070000000228868656164e625fe3d00000f5c0000
0036686865610dad073000000f9400000024686d74780000000000000fb8
00000fb66c6f63610000000000001f7000001e466d617870212d24a10000
3db8000000206e616d65267651f400003dd800000e16707265706baf02fe
00004bf00000241067646972000000000000000000000000000100000190
000500080000000000000000000000000000000000000000000000000000
00000000000000000000000000080000000000000000000000000000f000
f0ff00000000000000000000000000010000000000000000079e0000fe93
0000000000000000000000000050006a0073008000800086008d009300bf
00db006200830093009900a000a600a900b000c100c900d7000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000fe79056d000c03b7000600130000fffaffedfea6
ffedfeb8050e000600130000fffaffedfe93050e00130420000600130000
fffaffedff10ffee050e00130420000600130000fffaffeefe93ff10feb8
0612000a050e0006000d02d2fffafff301fdfffa023f0006000dff36fffa
fff302870006000f0000fffafff1079efeaffea700000000000000000000
000000500051005a005b005c005d006000610062006400680069006a006b
006c006d006e00680069006e00600067006e00660068005f006100630064
00660068006a006b006c006d006e006f0070006f00720074007500760076
007000720073007400750076006f00700071007200730075007700770078
0079007a007b007c007d007b007c007d00770079007a007c0078007a007c
007d0078007d007e007f008000810082007e007f00810082007e007f0080
008100820083008400850086008700880089008300840085008600870088
0089008300840085008600870088008900890086008700880089008a008b
008c008d008e008f008a008b008c008d008e008f008a008b008c008d008e
008f008d008a008b008c008d008e008f0090009000910092009300940095
009600980099009b009c0090009100920093009400950096009700980099
009a009e009f00a60090009100950098009f009000910096009700bc00c6
00b500ae00af00b6006800690063006a006f00700071006f007000710072
0066006c006d00700079007c007f00830086008700880089008a00740075
00760077007a007b007c007d007e008200850086008a0088008900830078
007b00820083008600870088008900760079007a007c007d007e00830085
00880089008a0073007400750077007a007d00880089008a008b008c008d
008e00900094008b008c008d00910092009300940095008c008d00910095
008f009000910092009300940095008b008c008d008e008f009000910092
009300940095008b008c008d008e008f0090009100920093009600970098
0099009c0096009700980099009a009b009c00960099009a009c00960097
00980099009a009b009c009700980099009a009b009c009700980099009a
009b009c0096009d00a000a1009d009e009f00a000a100a2009d009f00a0
00a1009f00a2009d009e009f00a000a100a2009d009e00a000a1009d009e
00a000a2009d00a300a400a500a600a700a300a400a600a700a300a400a5
00a600a700a600a300a700a800a900aa00ab00ac00ac00a800a900aa00ab
00ac00a800a900aa00ab00ac00a800aa00ab00ac00ae00ad00ae00af00b0
00b100b200b300b400b500b600b700b800ad00ae00ad00ae00af00b000b1
00b200b300b400b500b600b700b800ad00ae00af00b000b100b200b300b4
00b500b600b700b800b300ae00af00b000b200b500b600b700b800b900ba
00bb00bc00be00c000c100c200c200b900ba00bb00bc00bd00be00bf00c0
00c100c200c400ba00bb00be00bf00c000c200c300c400b900ba00bf00c0
00c200c600c700c900ca00cb00cc00cf00c500c700ce00c500c700c800cf
00d000d200d300d7010d00d000d100e900d000fd00d005e4000e00410000
05ba009c009c005e005e4047645f5e5d5c5b5a59585554535251504f4e4d
4c4b4a494847464544434241403f3e3d3c3b3a39383736352f2e2d2c2826
252423221f181411100f0d0b0a090807060504030201002c4523466020b0
2660b004262348482d2c452346236120b02661b004262348482d2c452346
60b0206120b04660b004262348482d2c4523462361b0206020b02661b020
61b004262348482d2c45234660b0406120b06660b004262348482d2c4523
462361b0406020b02661b04061b004262348482d2c0110203c003c2d2c20
452320b0cd442320b8015a51582320b08d44235920b0ed51582320b04d44
235920b0042651582320b00d44235921212d2c20204518684420b0016020
45b04676688a4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b
2d2c00b0282370b101283e01b0282370b10228453ab10200080d2d2c2045
b00325456164b050515845441b2121592d2c2045b0004360442d2c01b006
43b00743650a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c64
2364615c58b00361592d2c8a03458a8a87b0112bb0292344b0297ae4182d
2c4565b02c234445b02b23442d2c4b525845441b2121592d2c01b0052510
23208af500b0016023edec2d2c01b005251023208af500b0016123edec2d
2c01b0062510f500edec2d2c20b001600110203c003c2d2c20b001610110
203c003c2d2c00b00743b006430b2d2c21210c6423648bb84000622d2c21
b08051580c6423648bb82000621bb200402f2b59b002602d2c21b0c05158
0c6423648bb81555621bb200802f2b59b002602d2c0c6423648bb8400062
6023212d2c4523456023456023456023766818b08062202d2cb00426b004
26b00425b0042545234520b003266062636820b0032661658a2344442d2c
2045b0005458b040442045b04061441b2121592d2c45b1302f4523456160
b0016069442d2c4b5158b02f2370b01423421b2121592d2c4b515820b003
2545695358441b2121591b2121592d2c45b01443b0006063b0016069442d
2cb02f45442d2c452320458a60442d2c45234560442d2c4b235158b90033
ffe0b134201bb3330034005944442d2cb0164358b00326458a586466b01f
601b64b020606620581b21b04059b001615923586559b02923442310b029
e01b2121212121592d2cb0164358b004254564b020606620581b21b04059
b0016123586559b0292344b00425b00725082058021b0359b0052510b004
252046b0042523423cb0072510b006252046b00425b0016023423c205801
1b0059b0052510b00425b029e0b0072510b00625b029e0b00425b0072508
2058021b0359b00425b003254348b00625b00325b0016043481b21592121
21212121212d2cb0164358b004254564b020606620581b21b04059b00161
23581b6559b0292344b00525b00825082058021b0359b0042510b0052520
46b0042523423cb00425b0072508b0072510b006252046b00425b0016023
423c2058011b0059b0042510b00525b029e0b02920456544b0072510b006
25b029e0b00525b00825082058021b0359b00525b003254348b00425b007
2508b00625b00325b0016043481b2159212121212121212d2c02b0042520
2046b004252342b0052508b003254548212121212d2c02b0032520b00425
08b0022543482121212d2c452320451820b00050205823652359236820b0
40505821b04059235865598a60442d2c4b53234b515a5820458a60441b21
21592d2c4b545820458a60441b2121592d2c4b53234b515a58381b212159
2d2cb000214b5458381b2121592d2cb002435458b0462b1b21212121592d
2cb002435458b0472b1b212121592d2cb002435458b0482b1b2121212159
2d2cb002435458b0492b1b212121592d2c208a08234b538a4b515a582338
1b2121592d2c0020b200400325b0062649618b3812342d2c014623466023
466123201020468a61b8ff80628ab140408a704560683a2d2c208a234964
8a2353583c1b21592d2c4b52587d1b7a592d2cb012004b014b54422d2cb1
020042b123018851b1400188535a58b910000020885458b2020102436042
59b12401885158b920000040885458b2020202436042b12401885458b202
2002436042004b014b5258b2020802436042591bb940000080885458b202
040243604259b94000008063b80100885458b202080243604259b9400001
0063b80200885458b202100243604259b94000020063b80400885458b202
400243604259595959592d2c451868234b51582320452064b04050587c59
688a6059442d2cb00016b00225b0022501b001233e00b002233eb1010206
0cb00a236542b00b234201b001233f00b002233fb10102060cb006236542
b0072342b00116012d2c20b82000628a6023622d2cb0072558001b0159b0
042510b00325b0022520b8ffff545821cd1bed5921b006255cb006255a58
b0092b5920b005254ab0042547b004254760b0062547b0806361b00225b0
005558b00325b00725496359b0082558001b0159b00425b0062549b00925
5cb009255a58b0092b59b0072546b0806361b0032520b0005558631b2159
612320b0005558b080631b21b08059b0592bb006255c586959b004252020
10b00048233ab0062658001b0159b0052658b003252f598a12233221212d
2cb00625b00a2587b00625b009254ab0005358b00625b00a251bb00925b0
072559b00225b00225070cb005256323b00625636020b940000400635358
21b00426b00426b00a1bb94000040063655158b0042665b0042665b00a1b
b00426b00426b000b00325b003250b0d0ab0092eb00725b007250b0d0ab0
0b2eb00525b0052507595920b0005558b00525b0052587b00725b007250b
b0092510b00b25b0092620b8ffff545821cd1bed59b00525b0052507b008
25b00b254923b00625b0062587b00a2510b00b25c15920b00051b8005223
78b00161b00225b00725b0072507b00a25b00d254961b08062b00525b005
250bb00a252338b00625b0062587b00825b008250bb00a2510b00b25c4b0
0625b0062507b00925b00c2549b0032554b8ffa723792121212121212121
212121212d2c23b0005458b9400000001bb900004000598ab0005458b940
0000001bb90000400059b05b2b2d2c08b0005458b9400000001bb9000040
00590db05b2b2d2c8a8a080d8ab0005458b9400000001bb90000400059b0
5b2b2d2cb00426b00426080db00426b00426080db05b2b2d2c204569442d
00000001000000059eb8b1b0afba5f0f3cf50019080000000000bbeb7ccc
00000000c522987afbfafd8b09ec07b60000000900020000000000000001
00000600fe0001c40aa0fbfafaa009ec0001000000000000000000000000
000003ed040e0000040e0000040e000001cf000004a1002304a1002304a1
002304a1002304a1002304a1002304a1002304a1002304a1002304a10023
04a1002304a1002304a1002304a1002304a1002304a1002304a1002304a1
002304a1002304a1002304ec00ac04ec00ac04ec00ac04ec00ac04ec00ac
04ec00ac04ec00ac04ec00ac04ec00ac04ec00ac04ec00ac04ec00ac04ec
00ac04ec00ac04ec00ac04ec00ac04ec00ac04ec00ac04ec00ac04ec00ac
04ec00ac04ec00ac04ec00ac04ec00ac04ec00ac04ec00ac04ec00ac04ec
00ac04ec00ac04ec00ac04ec00ac04ec00ac04ec00ac04ec00ac04ec00ac
04ec00ac04ec00ac04ec00ac04ec00ac04ec00ac04ec00ac04ec00ac04ec
00ac04ec00ac04ec00ac052a00ac052a00ac052a00ac052a00ac052a00ac
052a00ac054c0063054c0063054c0063054c0063054c0063054c0063054c
0063054c0063054c0063054c0063054c0063054c0063054c0063054c0063
054c0063054c0063054c0063054c0063054c0063054c0063054c0063054c
0063054c0063054c0063054c006303e6000f03e6000f03e6000f03e6000f
052200aa052200aa052200aa052200aa052200aa052200aa052200aa0522
00aa052200aa052200aa052200aa052200aa071e003d071e003d071e003d
071e003d071e003d071e003d071e003d071e003d071e003d071e003d071e
003d071e003d071e003d071e003d071e003d071e003d071e003d071e003d
071e003d071e003d071e003d071e003d071e003d071e003d071e003d071e
003d071e003d071e003d071e003d071e003d071e003d071e003d071e003d
071e003d071e003d071e003d071e003d071e003d071e003d071e003d071e
003d071e003d071e003d071e003d071e003d071e003d071e003d071e003d
071e003d071e003d071e003d071e003d071e003d071e003d071e003d071e
003d071e003d071e003d071e003d071e003d071e003d071e003d071e003d
071e003d071e003d071e003d071e003d071e003d071e003d071e003d071e
003d071e003d071e003d071e003d071e003d071e003d071e003d071e003d
071e003d071e003d071e003d071e003d071e003d071e003d071e003d071e
003d071e003d071e003d071e003d071e003d071e003d071e003d071e003d
071e003d071e003d071e003d071e003d071e003d071e003d071e003d071e
003d071e003d071e003d071e003d071e003d071e003d071e003d071e003d
071e003d071e003d071e003d071e003d071e003d071e003d071e003d071e
003d071e003d071e003d071e003d071e003d071e003d071e003d071e003d
071e003d071e003d071e003d071e003d071e003d071e003d071e003d071e
003d071e003d071e003d071e003d071e003d071e003d071e003d071e003d
071e003d071e003d071e003d071e003d03d5005c03d5005c03d5005c03d5
005c03d5005c03d5005c03d5005c03d5005c03d5005c03d5005c03d5005c
03d5005c03d5005c043400990362005a0362005a0362005a0362005a0362
005a0362005a0362005a0362005a0362005a0362005a0434006004340060
043400600434006003fb005d03fb005d03fb005d03fb005d03fb005d03fb
005d03fb005d03fb005d03fb005d03fb005d027100250271002502710025
027100250271002502710025027100250271002502710025027100250271
002502710025027100250271002502710025027100250271002502710025
027100250271002502710025027100250271002502710025027100250271
002502710025027100250271002502710025027100250271002502710025
0271002502710025027100250271002502710025027100250271002503c4
003503c4003503c4003503c4003503c4003503c4003503c4003503c40035
03c4003503c4003503c4003503c4003503c4003501d6008501d6008501d6
008501d6008501d6008501d6008501d6008501d6008501d6008501d60085
01d6008501d6008501d6008501d6008501d6008501d6008501d6008501d6
008501d6009901d6009901d6009901d6009901d6009901d6009906640099
043400990434009904340099043400990434009904340099043400990438
005a0438005a0438005a0438005a0438005a0438005a0438005a0438005a
0438005a0438005a0438005a0438005a04340099043400990434009902ca
009902ca009902ca009902ca009903210051032100510321005103210051
03210051032100510321005103210051032100510321005102ae002102ae
002102ae002102ae002102ae002102ae002102ae002102ae002102ae0021
02ae002102ae002102ae002102ae002102ae002102ae002102ae002102ae
002102ae002102ae002102ae002102ae002102ae002102ae002102ae0021
02ae002102ae002102ae0021043400940434009404340094043400940434
009404340094043400940434009404340094043400940434009404340094
043400940434009404340094043400940434009403770029039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f002203b5008503b5
008503b5008503b5008503b5008503b5008503b5008503b5008503b50085
03b5008503b5008502050097020500970205009702050097020500970205
009702050097020500970205009702050097020500970205009702050097
020500970205009702050097020500970205009702050097020500970205
009702050097020500970205009702050097020500970205009702050097
020500970205009702050097020500970205009702050097020500970205
009702050097020500970205009702050097020500970205009702050097
020500970205009702050097020500970205009702050097020500970205
009702050097020500970205009702050097020500970205009702050097
020500970205009702050097020500970205009702050097020500970205
009702050097020500970205009702050097020500970205009702050097
020500970205009702050097020500970205009702050097020500970205
009702050097020500970205009702050097020500970205009702050097
020500970205009702050097020500970205009702050097020500970205
009702050097020500970205009702050097020500970205009702050097
020500970205009702050097020500970205009702050097020500970205
009702050097020500970205009702050097020500970205009702050097
020500970205009702050097020500970205009702050097020500970205
009702050097020500970205009702050097020500970205009702050097
020500970205009702050097020500970205009702050097020500970205
009702050097020500970205009702050097020500970205009702050097
040e004800ae0000000000a100a100a100a1012f012f012f012f012f012f
012f012f012f012f012f012f012f012f012f012f012f012f012f012f019c
019c019c019c019c019c019c019c019c019c019c019c019c019c019c019c
019c019c019c019c019c019c019c019c019c019c019c019c019c019c019c
019c019c019c019c019c019c019c019c019c019c019c019c019c019c0237
0237023702370237023702af02af02af02af02af02af02af02af02af02af
02af02af02af02af02af02af02af02af02af02af02af02af02af02af02af
031603160316031603a103a103a103a103a103a103a103a103a103a103a1
03a104320432043204320432043204320432043204320432043204320432
043204320432043204320432043204320432043204320432043204320432
043204320432043204320432043204320432043204320432043204320432
043204320432043204320432043204320432043204320432043204320432
043204320432043204320432043204320432043204320432043204320432
043204320432043204320432043204320432043204320432043204320432
043204320432043204320432043204320432043204320432043204320432
043204320432043204320432043204320432043204320432043204320432
043204320432043204320432043204320432043204320432043204320432
0432043204320432043204320432043204e104e104e104e104e104e104e1
04e104e104e104e104e104e1057a06060606060606060606060606060606
06060606069d069d069d069d073e073e073e073e073e073e073e073e073e
073e07c107c107c107c107c107c107c107c107c107c107c107c107c107c1
07c107c107c107c107c107c107c107c107c107c107c107c107c107c107c1
07c107c107c107c107c107c107c107c107c107c107c108ae08ae08ae08ae
08ae08ae08ae08ae08ae08ae08ae08ae08ae092709270927092709270927
092709270927092709270927092709270927092709270927096a096a096a
096a096a096a0a4b0adc0adc0adc0adc0adc0adc0adc0b6a0b6a0b6a0b6a
0b6a0b6a0b6a0b6a0b6a0b6a0b6a0b6a0c010c010c010c7a0c7a0c7a0c7a
0d400d400d400d400d400d400d400d400d400d400dbc0dbc0dbc0dbc0dbc
0dbc0dbc0dbc0dbc0dbc0dbc0dbc0dbc0dbc0dbc0dbc0dbc0dbc0dbc0dbc
0dbc0dbc0dbc0dbc0dbc0dbc0dbc0e4c0e4c0e4c0e4c0e4c0e4c0e4c0e4c
0e4c0e4c0e4c0e4c0e4c0e4c0e4c0e4c0e4c0edc0f410f410f410f410f41
0f410f410f410f410f410f410f410f410f410f410f410f410f410f410f41
0f410f410f410f410f410f410f410f410f410f410f410f410f410f410f41
0f410f410f410f410f410f410f410f410f410f410f410f410f410f410f41
0f410f410f410f410f410f410f410f410f410f410f410f410f410f410f41
0f410f410f410f410f410f410f410f410f410f410f410f410f410f410f41
0f410f410f410f410f410f410f410f410f410f410f410f410f410f410f41
0f410f410f410f410f410f410f410f410f410f410f410f410f410f410f41
0f410f410f410f410f410f410f410f410f410f410f410f410f410f410f41
0f410f410f410f410f410f410f410f410f410f410f410f410f410f410f41
0f410f410f410f410f410f410f410f410f410f410f410f410f410f410f41
0f410f410f410f410f410f410f410f410f410f410f410f410f410f410f41
0f410f410f410f410f410f410f410f410f410f410f410f410f410f410f41
0f410f410f410f410f410f410f410f410f410f410f410f410f410f410f41
0f410f410f410f410f410f410f410f410f410f410f410f410f410f410f41
0f410f410f410f410f410f410f410f410f410f410f410f410f410f410f41
0f410f410f410f410f410f410f410f410f410f410f410f410f410f410f41
0f410f410f410f410f410f410f410f410f410f410f410f410f410f410f41
0f410f410f410f410f410f410f410f410f410f410f410f410f410f410f41
0f410f410f410f410f410f410f410f410f410f410f410f410f410f410f41
0f410f410f410f410f410f410f410f410f410f410f410f410f410f410f41
0f410f410f410f410f410f410f410f410f410f410f410f410f410f410f41
0f410f410f410f410f410f410f410f410f410f410f410f410f410f410f41
0f410f410f410f410f410f410f410f410f410f410f410f410f410f410f41
0f410f410f410f410f410f410f410f410f410f410f410f410f410f410f41
0f410f410f410f410f410f410f410f410f410f410f410f410f410f410f41
0f410f410f410f410f410f410f410f410f410f410fb80fb80fb80fb80fb8
0fb80fb80fb80fb80fb80fb80fda0fda0fda0fda0fda0fda0fda0fda0fda
0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda
0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda
0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda
0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda
0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda
0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda
0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda
0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda
0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda0fda
0fda0fda0fda0fda108d1144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
114411441144114411441144114411441144114411441144114411441144
1144114411441144114411441144114411440000000100000f2200600005
0000000000020010002f0065000011902410000000000000002d02220000
000300000000006400000000000300000001000e00640000000300000002
000e03040000000300000003003003120000000300000004000e00640000
000300000005001803420000000300000006000e00640000000300000007
00fa035a0000000300000008002a03d00000000300000009002004540000
00030000000a02a00064000000030000000b00560474000000030000000c
002a04ca000000030000000d029804f4000000030000000e006c078c0001
000000000000003207f800010000000000010007082a0001000000000002
0007097a00010000000000030018098100010000000000040007082a0001
000000000005000c099900010000000000060007082a0001000000000007
007d09a50001000000000008001509e0000100000000000900100a220001
00000000000a0150082a000100000000000b002b0a32000100000000000c
00150a5d000100000000000d014c0a72000100000000000e00360bbe0003
000104090000006400000003000104090001000e00640003000104090002
000e03040003000104090003003003120003000104090004000e00640003
000104090005001803420003000104090006000e00640003000104090007
00fa035a0003000104090008002a03d00003000104090009002004540003
00010409000a02a00064000300010409000b00560474000300010409000c
002a04ca000300010409000d029804f4000300010409000e006c078c00a9
002000320030003000380020004d006900630072006f0073006f00660074
00200043006f00720070006f0072006100740069006f006e002e00200041
006c006c0020005200690067006800740073002000520065007300650072
007600650064002e00430061006c00690062007200690020006900730020
00610020006d006f006400650072006e002000730061006e007300200073
0065007200690066002000660061006d0069006c00790020007700690074
006800200073007500620074006c006500200072006f0075006e00640069
006e006700730020006f006e0020007300740065006d007300200061006e
006400200063006f0072006e006500720073002e00200049007400200066
00650061007400750072006500730020007200650061006c002000690074
0061006c006900630073002c00200073006d0061006c006c002000630061
00700073002c00200061006e00640020006d0075006c007400690070006c
00650020006e0075006d006500720061006c00200073006500740073002e
0020004900740073002000700072006f0070006f007200740069006f006e
007300200061006c006c006f00770020006800690067006800200069006d
007000610063007400200069006e002000740069006700680074006c0079
00200073006500740020006c0069006e006500730020006f006600200062
0069006700200061006e006400200073006d0061006c006c002000740065
0078007400200061006c0069006b0065002e002000430061006c00690062
00720069002700730020006d0061006e0079002000630075007200760065
007300200061006e006400200074006800650020006e0065007700200072
0061007300740065007200690073006500720020007400650061006d0020
0075007000200069006e0020006200690067006700650072002000730069
007a0065007300200074006f002000720065007600650061006c00200061
0020007700610072006d00200061006e006400200073006f006600740020
006300680061007200610063007400650072002e0052006500670075006c
00610072004d006900630072006f0073006f00660074003a002000430061
006c0069006200720069003a002000320030003000350056006500720073
0069006f006e00200035002e0036003200430061006c0069006200720069
002000690073002000650069007400680065007200200061002000720065
00670069007300740065007200650064002000740072006100640065006d
00610072006b0020006f007200200061002000740072006100640065006d
00610072006b0020006f00660020004d006900630072006f0073006f0066
007400200043006f00720070006f0072006100740069006f006e00200069
006e002000740068006500200055006e0069007400650064002000530074
006100740065007300200061006e0064002f006f00720020006f00740068
0065007200200063006f0075006e00740072006900650073002e004c0075
00630028006100730029002000640065002000470072006f006f00740068
007400740070003a002f002f007700770077002e006d006900630072006f
0073006f00660074002e0063006f006d002f007400790070006f00670072
0061007000680079002f006300740066006f006e00740073006800740074
0070003a002f002f0066006f006e007400660061006200720069006b002e
0063006f006d0059006f00750020006d0061007900200075007300650020
007400680069007300200066006f006e0074002000610073002000700065
0072006d0069007400740065006400200062007900200074006800650020
00450055004c004100200066006f00720020007400680065002000700072
006f006400750063007400200069006e0020007700680069006300680020
007400680069007300200066006f006e007400200069007300200069006e
0063006c007500640065006400200074006f00200064006900730070006c
0061007900200061006e00640020007000720069006e007400200063006f
006e00740065006e0074002e00200059006f00750020006d006100790020
006f006e006c0079002000280069002900200065006d0062006500640020
007400680069007300200066006f006e007400200069006e00200063006f
006e00740065006e00740020006100730020007000650072006d00690074
007400650064002000620079002000740068006500200065006d00620065
006400640069006e00670020007200650073007400720069006300740069
006f006e007300200069006e0063006c007500640065006400200069006e
0020007400680069007300200066006f006e0074003b00200061006e0064
00200028006900690029002000740065006d0070006f0072006100720069
006c007900200064006f0077006e006c006f006100640020007400680069
007300200066006f006e007400200074006f002000610020007000720069
006e0074006500720020006f00720020006f00740068006500720020006f
00750074007000750074002000640065007600690063006500200074006f
002000680065006c00700020007000720069006e007400200063006f006e
00740065006e0074002e0068007400740070003a002f002f007700770077
002e006d006900630072006f0073006f00660074002e0063006f006d002f
007400790070006f006700720061007000680079002f0066006f006e0074
0073002f00640065006600610075006c0074002e0061007300700078a920
32303038204d6963726f736f667420436f72706f726174696f6e2e20416c
6c205269676874732052657365727665642e43616c696272692069732061
206d6f6465726e2073616e732073657269662066616d696c792077697468
20737562746c6520726f756e64696e6773206f6e207374656d7320616e64
20636f726e6572732e204974206665617475726573207265616c20697461
6c6963732c20736d616c6c20636170732c20616e64206d756c7469706c65
206e756d6572616c20736574732e204974732070726f706f7274696f6e73
20616c6c6f77206869676820696d7061637420696e2074696768746c7920
736574206c696e6573206f662062696720616e6420736d616c6c20746578
7420616c696b652e2043616c696272692773206d616e7920637572766573
20616e6420746865206e65772072617374657269736572207465616d2075
7020696e206269676765722073697a657320746f2072657665616c206120
7761726d20616e6420736f6674206368617261637465722e526567756c61
724d6963726f736f66743a2043616c696272693a20323030355665727369
6f6e20352e363243616c6962726920697320656974686572206120726567
697374657265642074726164656d61726b206f7220612074726164656d61
726b206f66204d6963726f736f667420436f72706f726174696f6e20696e
2074686520556e697465642053746174657320616e642f6f72206f746865
7220636f756e74726965732e4c7563286173292064652047726f6f746874
74703a2f2f7777772e6d6963726f736f66742e636f6d2f7479706f677261
7068792f6374666f6e7473687474703a2f2f666f6e7466616272696b2e63
6f6d596f75206d617920757365207468697320666f6e7420617320706572
6d6974746564206279207468652045554c4120666f72207468652070726f
6475637420696e207768696368207468697320666f6e7420697320696e63
6c7564656420746f20646973706c617920616e64207072696e7420636f6e
74656e742e20596f75206d6179206f6e6c792028692920656d6265642074
68697320666f6e7420696e20636f6e74656e74206173207065726d697474
65642062792074686520656d62656464696e67207265737472696374696f
6e7320696e636c7564656420696e207468697320666f6e743b20616e6420
286969292074656d706f726172696c7920646f776e6c6f61642074686973
20666f6e7420746f2061207072696e746572206f72206f74686572206f75
747075742064657669636520746f2068656c70207072696e7420636f6e74
656e742e687474703a2f2f7777772e6d6963726f736f66742e636f6d2f74
79706f6772617068792f666f6e74732f64656661756c742e617370780000
b2090320b80284b40918014a20b80283b40918014a20b80282b40918014a
20b80281b40918014a20b80280b40918014a20b8027fb40918014a20b802
7eb40918014a20b8027db40918014a20b8027cb40918014a20b8027bb409
18014a20b8027ab40918014a20b80279b40918014a20b80278b40918014a
20b80277b40918014a20b80276b40918014a20b80275b40918014a20b802
74b40918014a20b80273b40918014a20b80271b40918014a20b80270b409
18014a20b8026fb40918014a20b8026eb40918014a20b8026db40918014a
20b8026cb40918014a20b8026bb40918014a20b8026ab40918014a20b802
69b40918014a20b80268b40918014a20b80267b40918014a20b80266b409
18014a20b80265b40918014a20b80264b40918014a20b80263b40918014a
20b80262b40918014a20b80261b40918014a20b80260b40918014a20b802
5fb40918014a20b8025eb40918014a20b8025db40918014a20b8025cb409
18014a20b8025bb40918014a20b8025ab40918014a20b80259b40918014a
20b80258b40918014a20b80257b40918014a20b80256b40918014a20b802
55b40918014a20b80254b40918014a20b80253b40918014a20b80252b409
18014a20b80251b40918014a20b80250b40918014a20b8024fb40918014a
20b8024eb40918014a20b8024db40918014a20b8024cb40918014a20b802
4bb40918014a20b8024ab40918014a20b80249b40918014a20b80248b409
18014a20b80247b40918014a20b80246b40918014a20b80245b40918014a
20b80244b40918014a20b80243b40918014a20b80242b40918014a20b802
41b40918014a20b80240b40918014a20b8023fb40918014a20b8023eb409
18014a20b8023db40918014a20b8023cb40918014a20b8023bb40918014a
20b8023ab40918014a20b80239b40918014a20b80238b40918014a20b802
37b40918014a20b80236b40918014a20b80235b40918014a20b80234b409
18014a20b80233b40918014a20b80232b40918014a20b80231b40918014a
20b80230b40918014a20b8022fb40918014a20b8022eb40918014a20b802
2db40918014a20b8022cb40918014a20b8022bb40918014a20b8022ab409
18014a20b80229b40918014a20b80228b40918014a20b80227b40918014a
20b80226b40918014a20b80225b40918014a20b80224b40918014a20b802
23b40918014a20b80222b40918014a20b80221b40918014a20b80220b409
18014a20b8021fb40918014a20b8021eb40918014a20b8021db40918014a
20b8021cb40918014a20b8021bb40918014a20b8021ab40918014a20b802
19b40918014a20b80218b40918014a20b80217b40918014a20b80216b409
18014a20b80215b40918014a20b80214b40918014a20b80213b40918014a
20b80212b40918014a20b80211b40918014a20b80210b40918014a20b802
0fb40918014a20b8020eb40918014a20b8020db40918014a20b8020cb409
18014a20b8020bb40918014a20b8020ab40918014a20b80209b40918014a
20b80208b40918014a20b80207b40918014a20b80206b40918014a20b802
05b40918014a20b80204b40918014a20b80203b40918014a20b80202b409
18014a20b80201b40918014a20b80200b40918014a20b801ffb40918014a
20b801feb40918014a20b801fdb40918014a20b801fcb40918014a20b801
fbb40918014a20b801fab40918014a20b801f9b40918014a20b801f8b409
18014a20b801f7b40918014a20b801f6b40918014a20b801f5b40918014a
20b801f4b40918014a20b801f3b40918014a20b801f2b40918014a20b801
f1b40918014a20b801f0b40918014a20b801efb40918014a20b801eeb409
18014a20b801edb40918014a20b801ecb40918014a20b801ebb40918014a
20b801eab40918014a20b801e9b40918014a20b801e8b40918014a20b801
e7b40918014a20b801e6b40918014a20b801e5b40918014a20b801e4b409
18014a20b801e3b40918014a20b801e2b40918014a20b801e1b40918014a
20b801e0b40918014a20b801dfb40918014a20b801deb40918014a20b801
ddb40918014a20b801dcb40918014a20b801dbb40918014a20b801dab409
18014a20b801d9b40918014a20b801d8b40918014a20b801d7b40918014a
20b801d6b40918014a20b801d5b40918014a20b801d4b40918014a20b801
d3b40918014a20b801d2b40918014a20b801d1b40918014a20b801d0b409
18014a20b801cfb40918014a20b801ceb40918014a20b801cdb40918014a
20b801ccb40918014a20b801cbb40918014a20b801cab40918014a20b801
c9b40918014a20b801c8b40918014a20b801c7b40918014a20b801c6b409
18014a20b801c5b40918014a20b801c4b40918014a20b801c3b40918014a
20b801c2b40918014a20b801c1b40918014a20b801c0b40918014a20b801
bfb40918014a20b801beb40918014a20b801bdb40918014a20b801bcb409
18014a20b801bbb40918014a20b801bab40918014a20b801b9b40918014a
20b801b8b40918014a20b801b7b40918014a20b801b6b40918014a20b801
b5b40918014a20b801b4b40918014a20b801b3b40918014a20b801b2b409
18014a20b801b1b40918014a20b801b0b40918014a20b801afb40918014a
20b801aeb40918014a20b801adb40918014a20b801acb40918014a20b801
abb40918014a20b801aab40918014a20b801a9b40918014a20b801a8b409
18014a20b801a7b40918014a20b801a6b40918014a20b801a5b40918014a
20b801a4b40918014a20b801a3b40918014a20b801a2b40918014a20b801
a1b40918014a20b801a0b40918014a20b8019fb40918014a20b8019eb409
18014a20b8019db40918014a20b8019cb40918014a20b8019bb40918014a
20b8019ab40918014a20b80199b40918014a20b80198b40918014a20b801
97b40918014a20b80196b40918014a20b80195b40918014a20b80194b409
18014a20b80193b40918014a20b80192b40918014a20b80191b40918014a
20b80190b40918014a20b8018fb40918014a20b8018eb40918014a20b801
8db40918014a20b8018cb40918014a20b8018bb40918014a20b8018ab409
18014a20b80189b40918014a20b80188b40918014a20b80187b40918014a
20b80186b40918014a20b80185b40918014a20b80184b40918014a20b801
83b40918014a20b80182b40918014a20b80181b40918014a20b80180b409
18014a20b8017fb40918014a20b8017eb40918014a20b8017db40918014a
20b8017cb40918014a20b8017bb40918014a20b8017ab40918014a20b801
79b40918014a20b80178b40918014a20b80177b40918014a20b80176b409
18014a20b80175b40918014a20b80174b40918014a20b80173b40918014a
20b80172b40918014a20b80171b40918014a20b80170b40918014a20b801
6fb40918014a20b8016eb40918014a20b8016db40918014a20b8016cb409
18014a20b8016bb40918014a20b8016ab40918014a20b80169b40918014a
20b80168b40918014a20b80167b40918014a20b80166b40918014a20b801
65b40918014a20b80164b40918014a20b80163b40918014a20b80162b409
18014a20b80161b40918014a20b80160b40918014a20b8015fb40918014a
20b8015eb40918014a20b8015db40918014a20b8015cb40918014a20b801
5bb40918014a20b8015ab40918014a20b80159b40918014a20b80158b409
18014a20b80157b40918014a20b80156b40918014a20b80155b40918014a
20b80154b40918014a20b80153b40918014a20b80152b40918014a20b801
50b40918014a20b8014fb40918014a20b8014eb40918014a20b8014cb409
18014a20b8014bb40918014a20b8014ab40918014a20b80149b40918014a
20b80148b40918014a20b80147b40918014a20b80146b40918014a20b801
45b40918014a20b80144b40918014a20b80143b30918014ab80284b21e3e
1fb80283b21e151fb80282b21e3e1fb80281b21e3a1fb80280b21e3e1fb8
027fb21e3e1fb8027eb21e0c1fb8027db21e3e1fb8027cb21e3e1fb8027b
b21e3e1fb8027ab21e3e1fb80279b21d411fb80278b21d431fb80277b21d
431fb80276b21d431fb80275b21d411fb80274b21d431fb80273b21d431f
b80272b21d411fb80271b21d421fb80270b21d421fb8026fb21d421fb802
6eb21d431fb8026db21d431fb8026cb21d431fb8026bb21c451fb8026ab2
1c451fb80269b21c451fb80268b21c451fb80267b21c451fb80266b21c44
1fb80265b21c451fb80264b21c451fb80263b21c451fb80262b21c451fb8
0261b21c451fb80260b21c451fb8025fb21c451fb8025eb21c441fb8025d
b21c451fb8025cb21c451fb8025bb21c451fb8025ab21c451fb80259b21c
451fb80258b21c451fb80257b21c451fb80256b21c451fb80255b21c451f
b80254b21c451fb80253b21c451fb80252b21c451fb80251b21c451fb802
50b21c451fb8024fb21c451fb8024eb21c451fb8024db21c451fb8024cb2
1c451fb8024bb21c451fb8024ab21b491fb80249b21b491fb80248b21b4a
1fb80247b21b4a1fb80246b21b4b1fb80245b21b4c1fb80244b21b4c1fb8
0243b21b4c1fb80242b21b4b1fb80241b21b491fb80240b21b491fb8023f
b21b4a1fb8023eb21b4a1fb8023db21b4a1fb8023cb21b4b1fb8023bb21b
4b1fb8023ab21b4c1fb80239b21b4c1fb80238b21b4c1fb80237b21b4c1f
b80236b21b4c1fb80235b21b491fb80234b21b491fb80233b21b4a1fb802
32b21b4a1fb80231b21b4a1fb80230b21b4b1fb8022fb21b4b1fb8022eb2
1b4c1fb8022db21b4c1fb8022cb21b4c1fb8022bb21b4c1fb8022ab21b4c
1fb80229b21b4c1fb80228b21b4c1fb80227b21b491fb80226b21b491fb8
0225b21b4a1fb80224b21b4a1fb80223b21b4a1fb80222b21b4b1fb80221
b21b4b1fb80220b21b4c1fb8021fb21b4c1fb8021eb21b4c1fb8021db21b
4c1fb8021cb21b4c1fb8021bb21b4c1fb8021ab21a4e1fb80219b21a4e1f
b80218b21a4f1fb80217b21a4f1fb80216b21a4e1fb80215b21a4e1fb802
14b21a4f1fb80213b21a4f1fb80212b21a4f1fb80211b21a4e1fb80210b2
1a4e1fb8020fb21a4f1fb8020eb21a4f1fb8020db21a4f1fb8020cb21a4e
1fb8020bb21a4e1fb8020ab21a4e1fb80209b21a4f1fb80208b21a4f1fb8
0207b21a4f1fb80206b219501fb80205b219511fb80204b219511fb80203
b219501fb80202b219511fb80201b219511fb80200b219511fb801ffb219
511fb801feb219501fb801fdb219511fb801fcb219511fb801fbb219511f
b801fab219501fb801f9b219511fb801f8b219511fb801f7b219511fb801
f6b219511fb801f5b218541fb801f4b218531fb801f3b218541fb801f2b2
18541fb801f1b218541fb801f0b218531fb801efb218541fb801eeb21854
1fb801edb218541fb801ecb218531fb801ebb218531fb801eab218541fb8
01e9b218541fb801e8b218541fb801e7b218541fb801e6b218531fb801e5
b218541fb801e4b218531fb801e3b218541fb801e2b218541fb801e1b218
541fb801e0b218531fb801dfb218531fb801deb218541fb801ddb218541f
b801dcb218541fb801dbb218541fb801dab218531fb801d9b218541fb801
d8b218541fb801d7b217571fb801d6b217561fb801d5b217561fb801d4b2
17571fb801d3b217571fb801d2b217571fb801d1b217571fb801d0b21756
1fb801cfb217561fb801ceb217571fb801cdb217571fb801ccb217571fb8
01cbb217571fb801cab217561fb801c9b217561fb801c8b217571fb801c7
b217571fb801c6b217571fb801c5b217571fb801c4b217571fb801c3b217
561fb801c2b217571fb801c1b217571fb801c0b217571fb801bfb217561f
b801beb217561fb801bdb217571fb801bcb217571fb801bbb217571fb801
bab217571fb801b9b217571fb801b8b217561fb801b7b217571fb801b6b2
17571fb801b5b217571fb801b4b217571fb801b3b2163f1fb801b2b2165b
1fb801b1b2165b1fb801b0b2165b1fb801afb2165b1fb801aeb2165b1fb8
01adb2165b1fb801acb2165b1fb801abb2165b1fb801aab2163e1fb801a9
b2163f1fb801a8b2163f1fb801a7b2165b1fb801a6b2165b1fb801a5b216
5b1fb801a4b2165b1fb801a3b2165b1fb801a2b2165b1fb801a1b2165b1f
b801a0b2165b1fb8019fb2163e1fb8019eb2163f1fb8019db2163f1fb801
9cb2165b1fb8019bb2165b1fb8019ab2165b1fb80199b2165b1fb80198b2
163e1fb80197b2165b1fb80196b2165b1fb80195b2165b1fb80194b2163e
1fb80193b2163f1fb80192b2163f1fb80191b2165b1fb80190b2165b1fb8
018fb2165b1fb8018eb2165b1fb8018db2165b1fb8018cb2163f1fb8018b
b2165b1fb8018ab2165b1fb80189b2165b1fb80188b2165b1fb80187b216
5b1fb80186b215611fb80185b215621fb80184b215621fb80183b215661f
b80182b215661fb80181b215551fb80180b215451fb8017fb215361fb801
7eb215361fb8017db215611fb8017cb215621fb8017bb215621fb8017ab2
15641fb80179b215661fb80178b215661fb80177b215661fb80176b21566
1fb80175b215661fb80174b215661fb80173b215451fb80172b215621fb8
0171b215621fb80170b215631fb8016fb215641fb8016eb215661fb8016d
b215661fb8016cb215661fb8016bb215661fb8016ab215661fb80169b215
621fb80168b215621fb80167b215611fb80166b215641fb80165b215641f
b80164b215661fb80163b215661fb80162b215661fb80161b215661fb801
60b215661fb8015fb215661fb8015eb215551fb8015db215451fb8015cb2
15451fb8015bb215361fb8015ab215611fb80159b215621fb80158b21562
1fb80157b215631fb80156b215641fb80155b215661fb80154b215661fb8
0153b215661fb80152b215661fb80151b214401fb80150b214551fb8014f
b214561fb8014eb214831fb8014db2142d1fb8014cb214401fb8014bb214
401fb8014ab214411fb80149b214401fb80148b214401fb80147b214411f
b80146b2147e1fb80145b214871fb80144b2147f1fb80143b214801fb801
42b212461fb80141b212461fb80140b212461fb8013fb212461fb8013eb2
12441fb8013db212461fb8013cb211591fb8013bb211591fb8013ab2115b
1fb80139b2115b1fb80138b211471fb80137b211581fb80136b2115a1fb8
0135b2115b1fb80134b2115b1fb80133b2112c1fb80132b211471fb80131
b211551fb80130b211571fb8012fb211571fb8012eb211581fb8012db211
591fb8012cb211591fb8012bb2115a1fb8012ab2115a1fb80129b2115b1f
b80128b2115b1fb80127b2115b1fb80126b2115b1fb80125b211561fb801
24b211561fb80123b211571fb80122b211581fb80121b211591fb80120b2
115a1fb8011fb2115a1fb8011eb2115b1fb8011db2115b1fb8011cb2115b
1fb8011bb2115b1fb8011ab2115b1fb80119b2105d1fb80118b2105e1fb8
0117b2105f1fb80116b2105f1fb80115b2105f1fb80114b2105f1fb80113
b2105f1fb80112b2105d1fb80111b2105e1fb80110b2105f1fb8010fb210
5f1fb8010eb2105f1fb8010db2105f1fb8010cb2105d1fb8010bb2105e1f
b8010ab2105f1fb80109b2105f1fb80108b2105f1fb80107b2105f1fb801
06b2105d1fb80105b2105e1fb80104b2105f1fb80103b2105f1fb80102b2
105f1fb80101b2105f1fb8010040ff0f621fff0f621ffe0f631ffd0f641f
fc0f621ffb0f621ffa0f621ff90f631ff80f641ff70f641ff60f641ff50f
641ff40f621ff30f621ff20f631ff10f641ff00f641fef0f641fee0f641f
ed0f621fec0f621feb0f631fea0f641fe90f641fe80f641fe70f641fe60e
671fe50e681fe40e681fe30e681fe20e681fe10e671fe00e681fdf0e681f
de0e681fdd0e671fdc0e681fdb0e681fda0e681fd90e681fd80d6b1fd70d
311fd60d6b1fd50d6c1fd40d261fd30d261fd20d6c1fd10d2b1fd00d2b1f
cf0d2b1fce0d6b1fcd0d6c1fcc0d6d1fcb0d6b1fca0d6c1fc90d6d1fc80d
6a1fc70d691fc60d681fc50d671fc40d261fc30d311fc20d311fc10d311f
40ffc00d311fbf0d311fbe0d311fbd0c711fbc0c721fbb0c731fba0c741f
b90c741fb80c741fb70c711fb60c711fb50c721fb40c731fb30c741fb20c
741fb10c741fb00c741faf0b791fae0b7a1fad0b7c1fac0b7d1fab0b7e1f
aa0b7e1fa90b7e1fa80b7e1fa70b7e1fa60b7e1fa50b2d1fa40b7e1fa30b
7e1fa20b791fa10b7e1fa00b6b1f9f0b791f9e0b7e1f9d0b7e1f9c0b791f
9b0b7a1f9a0b7c1f990b7d1f980b7e1f970b7e1f960b7e1f950b7e1f940b
7e1f930b7e1f920b6b1f910b2d1f900a4e1f8f0a4f1f8e0a671f8d0aa51f
8c0aa71f8503251f8403381f8301381f8255805581ab80557f557d557eab
7d550b7d010b7d1b7d4b7d7b7dab7ddb7d4012060a7c557a557bab7a5579
55775578ab7755ba028600660285403c5576ab755504751475747503f475
01ab750144750130750102007510752075030c7455725573ab7255007250
728072b072043bb072e072020072010ab8ffc0b3721b1e46b8ffc0407c72
0d104671556f5570ab6f556e666d556a03251f6938675568ab6755663864
5565ab645563386255613860555f385d555eab5d555c385a555bab5a5559
3858555703251f5638545555ab54555338515552ab51554f384e554e0325
1f4d384b554cab4b554a38485549ab4855473846554503381f001c101c20
1c0310b8ffc0404e1c1b1e46001b0142301b401be01bf01b04001bb01bc0
1b03120f1a1f1a02290f1901434f19016f197f198f19030f18cf18024018
292c460f17cf17df17ef1704134017292e460016101620160315b8ffc0b3
164d5446b8ffc0b3163f4446b8ffc0b316313546b8ffc0404d162326460f
15010f151f1502451f15010011e011f0110315bf10cf10020f0f010f0fff
0f02400f3135460f0e1f0e020f0e1f0eff0e03400e3137460f0d1f0d020f
0d1f0dff0d0316400d313746b8ffc040270c5054460f0b1f0b02553f0b4f
0b02400b3f4346400b2d30460003012001010001100120010308b8ffc0b3
01151f46b80100b316010501b80190b154532b2b4bb80800524bb008505b
b00188b02553b00188b040515ab00688b000555a5b58b101018e59b10102
4354b0144b515a58b101018e59858d8d00421d4bb01d5358b0a01d594bb0
805358b0401d594bb0ff5358b0001db1160042592b5e7375732b2b745e73
2b2b5e73742b73742b7374745e7301755e73742b2b2b2b5e732b5e732b73
74755e735e735e73755e732b5e73002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b5e73755e732b2b5e735f7373737374
2b2b2b2b2b2b5e73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2bb1000243545841ff02840064028300640282
00640281006402800064027f0064027e0064027d0064027c0064027b0064
027a00640279006402780064027700640276006402750064027400640273
00640271006402700064026f0064026e0064026d0064026c0064026b0064
026a00640269006402680064026700640266006402650064026400640263
0064026200640261006402600064025f0064025e0064025d0064025c0064
025b0064025a006402590064025800640257006402560064025500640254
006402530064025200640251006402500064024f0064024e0064024d0064
024c0064024b0064024a0064024900640248006402470064024600640245
00640244006402430064024200640241006402400064023f0064023e0064
023d0064023c0064023b0064023a00640239006402380064023700640236
0064023500640234006402330064023200640231006402300064022f0064
022e0064022d0064022c0064022b0064022a006402290064022800640227
006402260064022500640224006402230064022200640221006402200064
021f0064021e0064021d0064021c0064021b0064021a0064021900640218
006402170064021600640215006402140064021300640212006402110064
02100064020f0064020e0064020d0064020c0064020b0064020a00640209
006402080064020700640206006402050064020441ff0064020300640202
0064020100640200006401ff006401fe006401fd006401fc006401fb0064
01fa006401f9006401f8006401f7006401f6006401f5006401f4006401f3
006401f2006401f1006401f0006401ef006401ee006401ed006401ec0064
01eb006401ea006401e9006401e8006401e7006401e6006401e5006401e4
006401e3006401e2006401e1006401e0006401df006401de006401dd0064
01dc006401db006401da006401d9006401d8006401d7006401d6006401d5
006401d4006401d3006401d2006401d1006401d0006401cf006401ce0064
01cd006401cc006401cb006401ca006401c9006401c8006401c7006401c6
006401c5006401c4006401c3006401c2006401c1006401c0006401bf0064
01be006401bd006401bc006401bb006401ba006401b9006401b8006401b7
006401b6006401b5006401b4006401b3006401b2006401b1006401b00064
01af006401ae006401ad006401ac006401ab006401aa006401a9006401a8
006401a7006401a6006401a5006401a4006401a3006401a2006401a10064
01a00064019f0064019e0064019d0064019c0064019b0064019a00640199
006401980064019700640196006401950064019400640193006401920064
0191006401900064018f0064018e0064018d0064018c0064018b0064018a
006401890064018800640187006401860064018500644180018400640183
0064018200640181006401800064017f0064017e0064017d0064017c0064
017b0064017a006401790064017800640177006401760064017500640174
006401730064017200640171006401700064016f0064016e0064016d0064
016c0064016b0064016a0064016900640168006401670064016600640165
00640164006401630064016200640161006401600064015f0064015e0064
015d0064015c0064015b0064015a00640159006401580064015700640156
00640155006401540064015300640152006401500064014f0064014e0064
014c0064014b0064014a0064014900640148006401470064014600640145
006401440064014300642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b59
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b185f5e00>
[8841 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

1 0 3 <> CBIAAA+Calibri AddT42Char 
1 8048 856 <00010097fff7016e00e0000b0017b10006b8ffc0b60c014d0609034c003f
cd012f2bc13130251406232226353436333216016e2f3e3c2e2f3e3c2e6d
472f2e45472f2e00>CBIAAA+Calibri AddT42Char 
1 8116 1004 <00020048ffed03c705210013002b00ea4019281201291101260d01260c01
2608012507012a03012902012db8ffc040250f024d602d01141810014d14
100f014d14160d014d140a0c014d14200b014d14180c014d14bb022d0000
0020ffe8b310014d20b8fff0b30f014d20b8ffeab30d014d20b8fff6b30c
014d20b8ffe8b60c014d24200120b8022d40090a200030004000030ab8ff
f040090f014d2f0a4f0a0200b8ffd040090f014d0a100f024d00b8ffc040
0a0f024d000a000a2d2c1bb8010ab20f5325b8010ab10556003fed3fed11
120139392f2f2b2b2b5d2b5d10e15d2b2b2b2b2b10e12b2b2b2b2b2b3130
5d2b5d5d5d5d5d5d5d5d01140e0223222e0235343e0233321e0207342e04
23220e0215141e0233323e0403c72f6db0817aa7662b306cb0807ba7662b
b00e1b2b3c4d30556a3d161e41654838553d281809028a95f6b16157a9f7
a094f7b16157a9f7ac619a76553719508cbc6c91cb803a24435e7285>CBIAAA+Calibri AddT42Char 
1 8474 1005 <000100ae0000039f0517002e00e54024241e01241d01241c01231b01241a
01241901261801261701291201291101122010014d30b8ffc0400d0f024d
60300100200b014d0029b8ffe8b310014d29b8fff0b30f014d29b8fff0b3
0d014d29b8fff6b30c014d29b8fff8b30b014d29b80211400e1e18200b01
4d180b200b014d0b11b8ffe0b30f014d11b8ffd4b30f024d11b8ffc0b310
014d11b8ffe0b30f014d11b8ffc0b30c014d11b8fff040090b014da01101
111312b8013fb323522910b80107b10654003fed323ffdcd012f5d2b2b2b
2b2b2bcd2bc42b33f12b2b2b2b2bc52b31305d2b002b015d5d5d5d5d5d5d
5d5d5d25140e022321222e0235343e02332111070606262635343e023725
3e0333321e02151133321e02039f060a0d07fd5c070c0b0606090d08010e
fa13170e0503060b09012a040c12181218201206ea080e090544131a1007
07101a13121a110903d8950a040d1e171118100c06bf0304040104070b06
fb8f09111a00>CBIAAA+Calibri AddT42Char 
1 7810 845 <00020085fff60357055e003400480026400e24241f0914b305053009443a
4d1fb80101b13046003fed3fddce11392fed1112392f313001140e020707
140623222e023503263e023333323e0235342e0223220e0223222e023534
3e0433321e0201140e0223222e0235343e0233321e020357325a7e4d0723
27151e1208060109121c1216415c391a204061423a5740290a070b080406
14395161346b9a6430fec40918291e20281909091928201e29180903df58
88603605f10f0f03070c080115171d130729445c32395f4526191e180611
1d161819131f1a123d688cfc3b212b1b0b0b1b2b21212d190b0b192d>CBIAAA+Calibri AddT42Char 
1 322 4 <00020023fffa047e051400220026009db90024ffe8b40c10014c23b8ffe8
b40c10014c26b8fff0b40b10014c0bb8fff0b40b10014c0ab8fff0401a0b
10014c25100b10014c0d100b10014c0c100b10014c40280125b8fff0402c
0b014d24232625f40c0b0c18221d230a0d0116040c000c100c02af23bf23
cf2303230c230c121d5212550555003f3f3f1239392f2f5d5d1117391112
3939113310ed3211333130012b5d2b2b2b2b2b2b002b2b25161606062322
2e02270321030e03232226263637013e0333321e02170723032104750801
10251f1f251309046ffde66a030a13231c1d250f010801b2040d19271e20
2a1a0e047b01df01c23d161b0e0403070c09013bfec9090d0904050e1b16
04b20b0e080303080f0b8dfd7b00>CBIAAA+Calibri AddT42Char 
1 824 69 <000100acfffa047e0511003d0085b3270f0f14b8ffe8b310014d14b8ffe8
b30f014d14b8ffe8b30d014d14b8fff0b30c014d14b8ffe8b30b014d14b8
0211401e1e0a2e2e321810014d32180f014d32180d014d32100c014d3218
0b014d32b802114010001e38520a2e0f270419225119550654003f3f3f12
17393f012fd4e12b2b2b2b2b32113310e12b2b2b2b2b322f33313025140e
022323222e0227012626272316161511140e0223222e0235113436333332
1e0217011e03173326263511343e0233321e0215047e0d151a0d371a2723
2315fe6820411c02020208131f18181f12082c1a521d271f1d11013a1d36
32311801020108131f191620120847141c12080b1d322702e0397d3b4896
4afcf3070d070505070d0704aa28220a17291ffdc83463605d2f4fab4f02
be070c090404090c0700>CBIAAA+Calibri AddT42Char 
1 1374 100 <0001000ffffa03d7050e00220065b718400d014d181100b8ffc0b40d014d
0006b8ffe8b310014d06b8fff0b30f014d06b8fff0b30d014d06b8fff6b3
0c014d06b8ffe8b30b014d06ba02110011ffc0b50d014d110612b80128b3
1d510c55003f3fed32012f2bf12b2b2b2b2bc52b10c42b313001140e0223
2111140e0223222e02351121222e0235343e023321321e0203d704090d08
fe940814211918221408fe94080d080505080d080384080d090404c4131c
1108fb9e080c070505070c08046208111c13131d120808121d00>CBIAAA+Calibri AddT42Char 
1 1580 104 <000100aaffed04790514002b0099401d602d01201810014d20100f014d20
100d014d200a0c014d20180b014d20b802104011004015014d004013014d
004011014d0016b8ffe8b310014d16b8fff0b30f014d16b8fff0b30d014d
16b8fff6b30c014d16b8ffe8b30b014d16ba0210000affc0b315014d0ab8
ffc0400913014d0a265210521bb80129b10556003fed3f3f012f2b2be12b
2b2b2b2bd42b2b2be12b2b2b2b2b31305d01140e0223222e023511343e02
33321e021511141e0233323e023511343e0233321e021504794580b8756b
b07e440814201a182213082c5375494b75512b081421191821130901de76
b980423e79b6770323080c070505070c08fcf25a86592d2c588257031708
0c070505070c0800>CBIAAA+Calibri AddT42Char 
1 1858 116 <0001003dfffa06e00514003c0067b3263c0132b8fff840430b0c014c2532
012f080b0c014c282f0125100b0c014c25250122180b0c014c2922011820
0b0c014c2d31012d30012d24012d230137522a5223300b03121d52125505
55003f3f3f1217393f3f31305d5d5d5d012b5d2b5d2b5d2b5d2b5d250e03
23222e02270123030e0323222e0227012626363633321e02170133013e03
33321e02170133013e03333216160607058304101c291e1f2b1c0e04fef1
02fa030e1a2920212c1c0f03feaa06011126201f24130702012301011403
0914251e1c21140903012902011d030613231d1e23100105260e11090404
09110e03d1fc2f0e1109040409110e04ab171a0e0403080e0bfbc4043a0b
0f080404080f0bfbc6043b0a0f0804050e1a1700>CBIAAA+Calibri AddT42Char 
1 2148 258 <0002005cffed033f03ca0033004000b040200f421f422f42030b0917340c
0c014d34100d014d34180b014d34100f10014c34b801f7400e0027270f00
010c00100f014d003ab8fff0b30c014d3ab8ffe8b30d014d3ab8ffe8b30b
014d3ab8ffe8b40f10014c3ab8020840141117c500341034023bc0340100
340134342e412ab8011b400fd022012222041dea2e4a3ddc0c4d04002f3f
ed3fed12392f5ded1112392f5d715e5ded012fe12b2b2b2bc42b5e5d392f
10e12b2b2b2b323931305e5d25140606232226263535060623222e023534
3e02333335342e0223220e0223222e0235343e0433321e02150723220e02
15141633323637033f101c1b1a1f0e3b91514773512d3e74a8697c16314e
393d6149310c080c0904071b4256663461885426a48d4464421f5950416f
3d180c0c06060c0c5a3f46254666414c704a25463450351b1d231d081019
0f191d1a231d132c557e54c4172d3f2946534244>CBIAAA+Calibri AddT42Char 
1 2804 272 <0001005affed032003c900350089b11c00b8ffc0b310014d00b8ffe0b30d
014d00b8ffe8b40b014d0027b8ffe8b310014d27b8fff0b30f014d27b8ff
eeb30c014d27b8ffe8b30b014d27b8ffeab30d014d27b8020b400d2f0e01
0e19e71f400a0d481f24b80102b4134a03eb31b8ffc0b4090d48312cb801
06b1094d003ffdd42bed3ffdd42bed012f5de12b2b2b2b2bc42b2b2b3231
3025140e0623222e0235343e0233321e0615140623222e0223220615141e
0233323e0233321e020320020507193c4b582f61966535417199592b5144
3518090602120d0f273c553a777f21405d3c39563f2b0c070a0703a21119
110d19251d12407bb37585bf7a3b101a22180e131812271f212821b7ae57
83582b242b2308131d00>CBIAAA+Calibri AddT42Char 
1 3084 282 <00020060ffed039c056d00260039008b401f3f3b010b1b39100d014d390a
0c014d391010014d39100f014d39180b014d39bb01f90000002fffe0b30d
014d2fb8ffe8b310014d2fb8fff0b30f014d2fb8fff0b30c014d2fb8ffe8
b30b014d2fb8020a400a1321460b39271b040e2ab80105b2184a34b80104
b30e4d054c003f3fed3fed1217393f012fe12b2b2b2b2bd4e12b2b2b2b2b
323931305d25140e0223222e023535060623222e0235343e023332161711
343e0233321e021503262623220e0215141e0233323e0237039c07111c14
151c120847995b638c57283262915f4f834007141f1819201209a6437d44
3f58371915345641213d40462719080c070404070c08774d564d83b16274
bb84474543020b070d070505070d07fd4553573c627c404482653d122a43
3100>CBIAAA+Calibri AddT42Char 
1 3386 286 <0002005dffed039903ca002b003400ae402a2f363f366f360313200d014d
13200f014d1313212c100c014d2c180b014d2c100d014d2c100f10014c2c
b801f9b5442ba42b022bb8fff0b50f014d2b3404b8ffe0b30d014d04b8ff
eeb30c014d04b8ffe0b30b014d04b8ffe8b40f10014c04b8020a4021212c
c78004900402c00401d0040104041c2fdc264a18ea600e700e020e09ea1c
4d003ffdd45ded3fed12392f5d7172ed012fe12b2b2b2b32dd2b5de12b2b
2b2b12392f2b2b31305d0114062321141e0233323e0233321e0215140e06
23222e0235343e0233321e021527362623220e020703992719fdb21e4670
514064492f0c070b06030203070b365671406fa7723a3c71a0636a95602d
a60379773d5c3e2202020227214b78562e151a15070e19120d130f0c0b19
18133e7ab87a74b9814544739b581382942e4c653700>CBIAAA+Calibri AddT42Char 
1 3970 336 <00030035fe93038903c8003e004e005f00d04015122d47100f014d47080c
014d47201013014c47333fb8fff8b30c014d3fb8fff0b30f014d3fb8ffe0
b61013014c3f074fb8ffe0400d0f12014c4f1b040f3003330707b8ffe0b3
10014d1bb8ffc0400d10014d2d33071b1b07332d0400b8ffe040340b014d
0058100f014d58201012014c582a25400b12014c250f300703384ada0c53
e81515603803e93c482a2042d9384a5bd9204f003fed3fed12393fed1112
392fedd6ed121739012f2b33cd2b2bc42b17392f2f2f2f2b2b1112173910
cd2b10cd2b2b2b10cd2b2b2b10cd31300114062323161615140e02232226
27060615141617171e0315140e0223222e0235343e023726263534363726
2635343e023332161721321601342623220e0215141633323e0213342627
270e0315141633323e020389130f81231c325d804e37631b12174136eb43
70522e346ba6716d99622c10213120312f32251f24345c814c29471f0110
1111fefe655d30472f17655b31482f17535f51e92029180984764b653e1b
0374231f24572f4e78532c1d16122e1e232e020a02213d593b3e70553125
405934213e383319194c2c3d6026255d424d7a542d090821fef15c672038
492859661f3748fd5e3a3f0208192d29281541431d303e00>CBIAAA+Calibri AddT42Char 
1 4444 349 <00020085fffa0151052f00150021008cb73f234f236f230316b8ffe8b30d
014d16b8fff6b30c014d16b8ffe8b313014d16b8ffe0b310014d16b8fff0
b30f014d16b8ffe8b30b014d16bb0271001c0015fff0b30d014d15b8fff6
b30c014d15b8ffe8b30b014d15b8fff0b40f10014c15b801f8b60a1f400f
014d1fb8013eb4191049054c003f3fd6ed2b012fe12b2b2b2bd4e12b2b2b
2b2b2b31305d25140e0223222e023511343e0233321e0215131406232226
353436333216013e08122019182013070713201819201208132c3b3a2b2c
3b3a2b19080b080404080b080384070c080404080c0701303a2a29393a2a
2900>CBIAAA+Calibri AddT42Char 
1 4686 367 <00010099fffa013e057100150040b73f174f176f170300b8fff0b30d014d
00b8fff6b30c014d00b8ffe8b30b014d00b8fff0b40f10014c00b801f8b4
0a1046054c003f3f012fe12b2b2b2b31305d25140e0223222e023511343e
0233321e0215013e0812201918201307071320181920120819080b080404
080b080538080c080404080c0800>CBIAAA+Calibri AddT42Char 
1 4820 373 <00010099fffa05d003ca005000ea401b12100b014d13180b014d26100b0c
014c27180b0c014c7052014613b8fff6b30c014d13b8ffe8b30b014d13b8
fff0b310014d13b8fff0b30f014d13b8ffeab30d014d13b801f8401e1e16
0d014d1e1e320a0a0c014d0a100d014d0a180b014d0a100f10014c0ab801
f9b7504011014d503e27b8fff6b30c014d27b8ffe8b30b014d27b8fff0b3
10014d27b8fff0b30f014d27b8fff0b30d014d27bb01f8003200100106b2
4b4a24b80106400d414a3e462d38492d4c194c054c003f3f3f3f1239393f
ed3fed012fe12b2b2b2b2b39d42be12b2b2b2b11392f2be12b2b2b2b2b39
31305d002b2b2b2b25140e0223222e023511342e022322060711140e0223
222e023511342e022322060711140e0223222e023511343e0233321e0215
15363633321e02173e0333321e021505d00812201819201308142c442e39
73450813201817211307162c432e397444081220191820130706121c1716
1d10074c8f4938594430102d514b47245776491f19080b080404080b0802
23395e44245855fd8b080b080404080b080223395e44245855fd8b080b08
0404080b080384080b090303090b0877554f1a2f412831442a133d66894c
>CBIAAA+Calibri AddT42Char 
1 5270 374 <00010099fffa03a003ca00320094400f12100b014d13100b014d3f34012a
13b8fff0b310014d13b8fff0b30f014d13b8fff0b30d014d13b8fff6b30c
014d13b8ffe8b30b014d13b801f8401b1e0b1010014d0b100d014d0b100f
014d0b0a0c014d0b180b014d0bb801f8b700400c014d001e10b80106400a
2d4a2a192449194c054c003f3f3f12393fed012f2f2be12b2b2b2b2b10e1
2b2b2b2b2b3931305d002b2b25140e0223222e023511342e022322060711
140e0223222e023511343e0233321e021515363633321e021503a0081220
1819201208182e49303e7c44081220191820130706121c17161d10074c97
4d5a7b4c2119080b080404080b08020f4d5e44245855fd8b080b08040408
0b080384080b090303090b0877554f3d66896000>CBIAAA+Calibri AddT42Char 
1 5560 381 <0002005affed03de03ca0013002700a8401c3f2901281201291101260d01
260c012608012607012a03012902011eb8ffe8b310014d1eb8fff0b30f01
4d1eb8ffe0b30d014d1eb8ffeeb30c014d1eb8ffe8b30b014d1eb8020a40
1e2f0a010a141810014d14100f014d14200d014d14120c014d14180b014d
14ba020a0000ffc0b70f004d7000010019b80101b20f4a23b80102b1054d
003fed3fed012f5d2be12b2b2b2b2b2f5de12b2b2b2b2b31305d5d5d5d5d
5d5d5d5d01140e0223222e0235343e0233321e0207342e0223220e021514
1e0233323e0203de3a73ad726fa56e363973ac736fa56e37ae1b3e6a4f49
6944211b3f6a4f486a442001e56eb9864b427eb4726eb9864a427eb47c49
826239345f824d4a826139345e82>CBIAAA+Calibri AddT42Char 
1 5844 393 <00020099fe9403d503ca002a003d0080b53f3f0121360ab8fff0b30d014d
0ab8fff6b30c014d0ab8fff0b40f10014c0ab8ffe8b30b014d0ab801f840
17152b200d014d2b120c014d2b180f10014c2b180b014d2bb8020a400900
150a363521040530b80105b6264a1b49104f39b80105b1054d003fed3f3f
3fed121739012fd4e12b2b2b2b10e12b2b2b2b323931305d01140e022322
2e022711140e0223222e023511343e0233321e0215153e0333321e020734
2e0223220e020711161633323e0203d53363925e28444140240812201918
20130706121c14151b1207294c4d512d628a5728ae15335640203e404627
447a433e59371a01e976bc834710223423fe3e080c080404080c0804e909
0b080303080b09792a3e29154c84af754581643c13294331fe9a53583c64
7c00>CBIAAA+Calibri AddT42Char 
1 6146 396 <00010099fffa02a703ca00330063b4703501260fb8fff6b30c014d0fb8ff
e8b30b014d0fb8fff0b40f10014c0fb8fff0b30d014d0fb801f840120040
13014d004011014d00200d014d001a0ab8012540092b4a260f152049154c
003f3f1239393fed012fc42b2b2be12b2b2b2b3931305d01140e0223222e
0223220e020711140e0223222e023511343e0233321e0215153e0333321e
0602a70206090808171d24151930353a23081220191820130706121c1716
1d100725413a391d0d21241d0c0403010362161e1109090908142e4c37fd
b0080b080404080b080384080b090303090b08833644270f03080a0a090e
1b00>CBIAAA+Calibri AddT42Char 
1 6388 400 <00010051ffed02ce03ca004900ce400c2f4b3f4b4f4b7f4baf4b0541b8ff
f0b30d014d41b8fff6b30c014d41b8fff0b30f014d41b8ffc0b313014d41
b8fff0b310014d41b8fff0b30b014d41b801dc401f243224320c1b100d01
4d1b0a0c014d1b1010014d1b100b014d1b100f014d1bba01f60000ffc040
0a0f014d000c400b014d0cb8ffc0402613014d3f0caf0c020c2edd370aeb
115011601170110337113711163cdb411b05294a16e8054d003fed3f1239
39ed1139392f2f5d10ed10ed012f5d2b2bd42be12b2b2b2b2b1239392f2f
e12b2b2b2b2b2b31305d01140e0223222e0435343e0233321e0233323e02
35342e0635343e0233321e0615140e0223222e0223220e0215141e0602ce
335e824e30574530160a04060b070b2b3f56382a44321b27405055514027
29527b5224483a291507030303070a06092236492f2a4029152840525553
4027010e456c4a260f171914241f131a10071b201b122336252634281f22
2b3e563c3561492c0c1215100c0f1610111910071619161323301c273528
20222a3c5400>CBIAAA+Calibri AddT42Char 
1 6784 410 <00010021ffef026d04ad003a005cb4290011232db8fff0b30f014d2db8ff
f0b30d014d2db8fff6b30c014d2db8ffe8b310014d2db8ffe8b30b014d2d
b801f8400c170d2ded23481d0ded174831b80104b1074d003fed3fedcd3f
ed012f33e12b2b2b2b2b32cdc432313025140e0423222e02351123222635
343e02333335343e0233321e02151533321e02151406232311141633323e
0233321e02026d081020292e174664401d7e0f1205080d087d0713201819
201208e7080c0904120fe7374717241c1408050905045b1d22100e090625
4b734e020e2024131a1107d6070c090404090c07d607111a132420fe0a5d
5f090a09050e1800>CBIAAA+Calibri AddT42Char 
1 7032 437 <00010094ffed039c03bc00320092401f3f34010b27100d014d270a0c014d
27080b014d27100f10014c27100b014d27b801f9b6004011014d001fb8ff
f0b30d014d1fb8fff6b30c014d1fb8fff8b40f10014c1fb8fff8b30b014d
1fb8fff0b40f10014c1fb8fff0b30b014d1fb801f94009132d49270b0519
4924b80105b30e4d054c003f3fed3f1239393f012fe12b2b2b2b2b2bd42b
e12b2b2b2b2b3931305d25140e0223222e023535060623222e023511343e
0233321e021511141e023332363711343e0233321e0215039c07121d1517
1d11064d964d5a7b4c210714201818201308172f48303e7b4507141f1918
20120919080b080404080b0877554e3c6789620222080b090303090b08fd
f44f5f432558550275080b090303090b0800>CBIAAA+Calibri AddT42Char 
1 7320 454 <00010029fffa034b03bc002f0086b90031ffc040110b014d2f080b014d2e
100b014d3b2e0118b8fff0b60b014d34180117b8fff8b30b014d16b8fff0
b60b014d34160109b8fff0402a0b014d00080b014d3c0001382301360b01
0b2010014d0b200c014d0b0b31302949230b111d49114c054c003f3f3f12
39393f111201392f2b2b3130005d5d015d2b2b5d2b2b5d2b5d2b2b2b2516
14060623222e022703030e0323222626363701012626363633321e021713
133e033332161606070103430813271f1e23150b04d8d7040b15221c1d25
1101090118fef708011327201d23140a04cdd0040a111f1b1d25120209fe
f92c0e130c0503070b070165fe9b070b0703050c130e01b701a70e130d04
03060a07feb1014f060a0703040b140ffe5e>CBIAAA+Calibri AddT42Char 
1 7608 455 <00010022fe94037c03bc00240052b9001bfff040350b014d371b01291b01
18180b014d261801260e360e022709011a400b014d3a1a0119380b014d3b
19011f49190a13490a4b044f004b003f3f3f3f12393f31305d2b5d2b015d
5d5d2b5d5d2b2103060623222e023713262627012634363633321e021701
33133e023332161614070233780631321a201102067c091003febf081024
1e1e22140905010103f8061122201c241106feb51011050c140e01390412
0a035c15180e0503080f0dfd2e02d6130b05050e1812>CBIAAA+Calibri AddT42Char 
1 0 0 <00050000fe7303d2050e000300070039004d004e005bbc000d0152001600
3a01b5b5154444082d07be0143000200200154000800010143400f04020d
b71a1a3f23b735068d031149b8012db43f078d0202003ffddefdce2ffdde
ed12392fed012fdde1dee110f1ce11392f33e1d4e1313001112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>CBIAAA+Calibri AddT42Char 
CBIAAA+Calibri /CharStrings get begin
/g3 3 def
/g856 856 def
/g1004 1004 def
/g1005 1005 def
/g845 845 def
/g4 4 def
/g69 69 def
/g100 100 def
/g104 104 def
/g116 116 def
/g258 258 def
/g272 272 def
/g282 282 def
/g286 286 def
/g336 336 def
/g349 349 def
/g367 367 def
/g373 373 def
/g374 374 def
/g381 381 def
/g393 393 def
/g396 396 def
/g400 400 def
/g410 410 def
/g437 437 def
/g454 454 def
/g455 455 def
end
CBIAAA+Calibri /Encoding get
dup 32 /g3 put
dup 46 /g856 put
dup 48 /g1004 put
dup 49 /g1005 put
dup 63 /g845 put
dup 65 /g4 put
dup 78 /g69 put
dup 84 /g100 put
dup 85 /g104 put
dup 87 /g116 put
dup 97 /g258 put
dup 99 /g272 put
dup 100 /g282 put
dup 101 /g286 put
dup 103 /g336 put
dup 105 /g349 put
dup 108 /g367 put
dup 109 /g373 put
dup 110 /g374 put
dup 111 /g381 put
dup 112 /g393 put
dup 114 /g396 put
dup 115 /g400 put
dup 116 /g410 put
dup 117 /g437 put
dup 120 /g454 put
dup 121 /g455 put
pop
end
%ADOEndSubsetFont
/ZONLWB+Calibri /CBIAAA+Calibri findfont ct_VMDictPut
/ZONLWB+Calibri*1 
[32{/.notdef}rp /g3 13{/.notdef}rp /g856 /.notdef /g1004 /g1005 13{/.notdef}rp 
/g845 /.notdef /g4 12{/.notdef}rp /g69 5{/.notdef}rp /g100 /g104 
/.notdef /g116 9{/.notdef}rp /g258 /.notdef /g272 /g282 /g286 
/.notdef /g336 /.notdef /g349 2{/.notdef}rp /g367 /g373 /g374 
/g381 /g393 /.notdef /g396 /g400 /g410 /g437 2{/.notdef}rp 
/g454 /g455 134{/.notdef}rp]
ZONLWB+Calibri nf
ZONLWB+Calibri*1 [0 6.96 6.96 0 0 0 ]msf
62.232 14.448 mo
(0.1)
[3.59258 1.67426 0 ]ysh
74.6398 19.7761 mo
(1)sh
87.048 16.2238 mo
(10)
[3.60119 0 ]ysh
ZONLWB+Calibri*1 [0 6.984 6.984 0 0 0 ]msf
99.432 12.648 mo
(100)
[3.61875 3.50703 0 ]ysh
111.84 9.09603 mo
(1000)
[3.61875 3.50703 3.61875 0 ]ysh
124.25 5.53978 mo
(10000)
[3.59102 3.4793 3.59102 3.4793 0 ]ysh
ZONLWB+Calibri*1 [0 6.96 6.96 0 0 0 ]msf
136.66 1.98978 mo
(100000)
[3.59258 3.48125 3.59258 3.48125 3.59258 0 ]ysh
ZONLWB+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
1.70391 36.768 mo
(No Type Arguments)
[4.55535 3.59599 1.66978 3.35959 3.12052 3.707 3.46916 1.57243 4.07416 2.40372 3.3567 3.707 
5.52031 3.46916 3.721 2.28286 0 ]xsh
ZONLWB+Calibri*1 [6.984 0 0 -6.984 0 0 ]msf
20.0641 50.6399 mo
(No Wildcards)
[4.55693 3.59442 1.67564 6.23214 1.55401 1.55401 3.71285 2.99716 3.34536 2.41894 3.71285 0 
]xsh
%ADOBeginSubsetFont: ZONLWC+Calibri-Identity-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (ZONLWC+Calibri-Identity-H)
%%Title: (ZONLWC+Calibri-Identity-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /ZONLWC+Calibri-Identity-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-503 -307 1240 964} def
/FontInfo 4 dict dup begin
/FSType 4 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 3874 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 17 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B7A086528E2CBE7FD4F03CC1C545DFC3C53F52C6923342525
31335C4AFD91E9493A7B9787114ADBF50CAD0D8D8F4E0FD112CA0EDC244BC77A
FB35E52902467E4B7D65BC23E8AB084EE08EDC3C9FE17948A4E93ECA5D5D8A99
AF099DAB98A96A7EEC3487AD5909F63F36A9F52E364FE794F0586CEACB0693AE
A3E3B131EDB924E9018AC085D5D058B3A8419D5096479413ADE107D9F5302816
818EECEB683CD82FAAA79E358EAA71283CC02664EE09C62BDF6E0D9BC98D9F30
8DF8AEA61A9B7C090BD7FD96A3223C7AE0D3D1A8F2E623FA6B7C467CA6FECDBA
0B792188DFEEBD3D01BCE6CC077D778842DE1B5E36F7F8EB4C68A439269E0981
B28AD1790AA058065E4B6AD27A659E12C7322A5BE1E7DF9729C0030192F3688A
380035351BB0945D5DC7515959F458727E2B8854977E466D6DDC900E997B52F6
BAB4C73A178A3B47EBB3C3FC842F51CC6E114336F3E4E5E72B20D8F94A7BA3BA
965E83BF37BAA664C34B8502BB9E9B9BEDD7EBC5DCBC4FFF5EBCA9C032449885
D42A9DCCBA2A816B59D7978373DF4208E5608F69A2EAF492AC156CC637D5A11A
F573B17CF9F38> |
75 <001C60D8A8C9B64B6A243C5D499416E7BC4B22E8B629E09B8028C056D587
EE9CF3EDF2973119D5417CAB133A39C67B614E010AE0DD832BCFA4821BD97E22
5D43A74776F0BFD87B432DD8C21445FC4ADD550E21897D7C9E8DE35386D83093
D3FF407F51B83131A4C29A9A19F0D66509D8A0DC226CCF6F69FBA7442E368FC0
BB3313B0C314C003045967AC913CA278D0CD495B5C5D3B104FD8FE9306C40B1E
684F8B702E1CF50ACD13BCB247F919B2F23E586EB73CDBD82C4696F7C27EE8FF
40F1B366DF4538A9B1C7C873783BED33A9CC79EC8072551DCD083245F853F09D
7BA82936C03B9ABC832E704C4042C4CFF1A8C1165F42A0> |
374 <001C60D8A8C9B78E05EAADB0123115B3BD5BA83FAABE276A1BF5A23DB55
CF4C30D8A20FB7C70B167834EB1FCB2A451DA55CBA774B9C40CA48F3B7AD8E41
B3F0C2665E2AF85619561E070ABE3E4EFEC9983825210D2A0599E48D162F3133
7982CE0D843D2D41F1F7924A343E37439CC75937984C88A0080C28B8BFBFB8F4
44AFA11CBAA4BCF4C8D3087770F88F26B0A8B30E46AE29C6BF9720949C50E19D
6248BB58DE961D63651843F9B3B8EE9AA75CDE28D1F95D7703116FE7AA23945B
5808B97F9947888D114BE2523F872057145410E975A2CA83D430B49A7CAE2661
9012C2444BEBF6DC1397EFC38FADD0435CE6D4A1478744BC983827B31CF502C4
487AF1E48BBC2EB6153C1C5367B96A212BCD3FEE3B9DEC12C4E> |
367 <001C60D8A8C9B887F0644B8EDF7E394B2B17D648B60040EB6DBE2B8847C
EEB752ACB6F5AD37E1FA4A050E94786AD18088ED8DC4464B0DE1BE6F00A802A6
1F4A34EAA84659717045B37042963C71284B8AC29AE9E0F8305F213AE4489E2D
B55EC12AFE94E44F64596D135D1BEB997D5B9A0BB5A35AE0E0CE05B7B1F89372
9319FB81429> |
455 <001C60D8A8C9B776A06C625D9575F6DBFFEE93EC1CB9A335325BD9E3654
28EEA1BD5B7A305D96437BF24D2E59BF0DFE2360EDCA01120D4DA769624265DE
9866EA970971BD84B20E81D769B1F13D7A21674FB5E8C4844518680BB1DE710B
7438090302965C932285C6A137B1923CFCED74D1C71B686BDF1263BE348B2F06
F534EDA8A2856376F820F03A76FD878686946B3B179B9CD823AA55541A535E0C
CC6D2D21B3D6A73597DDD43BBEFD829B55A26664F2F8221FA6814449CF6D0CFA
13492A2A7CF82E9D18F6E0413> |
3 <001C60D8A8C9B888C146> |
104 <001C60D8A8C9B677ECC2D761C908DB90C47A92800E8DA9F580AE95DF303
6F3660C02232DCD6E66BA74E64BCFF08FC69541BD1ADF528637E7F048CA5FC0A
B911EBFD42B9E8671A2AA23DE68C399177D223C5833F931D4B1D26350A985298
765460954328F76A286CB6F3EB98D05D1D02FA99091438D6A70CDAD1BD0B7EAC
0209E113AC49242A65FCE3FE16DD39B5FBB080521F00CF4EC25D97E8AB7617F9
F8753D0683EC16C7483F3F827C65A33CB62EC6035151C9ED285A449D64D70D55
E975B6FDE8BD5D93C1FC1CD7F52373AAB43F261624B7081D091DB595365DB519
E652118E1DAAF0D73DA6FEC04B26239B5A2899D37EAA1FDE91EB5E7> |
272 <001C60D8A8C9B714A578818061920CBD3BB0F0FEC7EB28869C0269DBFC0
2625554E339FA8F23FF202BF6BBA51F73386176CF41E41162B391BD65C46864E
1EDBE38C4A175836382F89D1B282918F37F6A98A1C310371E84DC05CA4D214BB
F40D0904F28663CAA2B1AF41B75D4680E3731D792C10C395648F8CE6283B6D2E
A4EA25EB0077385CC26E37C0D4F9F091C8BC196661820383DC1CFC26D318A92B
1398AE8D24532A475AF0A93A6DC660BFF9F07C9678F9C3412071B0DAC612FC7D
6B5FAE3214E7C7AB18E3145411FCE0CA8B75D2C8C25C05252A375257E1693A2B
9D11EE377C95BA1746CBCD896C9D8284A96EC1B8BEF12D6460B6828EC26350E9
1CC593B47372BD95FFBF8C2322BFC435A5494ED398AAAE3E6E4293369CDCFAC0
1478225F7C60BA6A2722907E6FF92F4B9457F52836FAB37F27C55593B43AB457
EA291D6DE23> |
381 <001C60D8A8C9B78C66ECF3075BCC0F7D87F2E9EA9E473D66D53E6D1735C
12EAC0562A2F6FB428E7F7051A3A7B2D4CA6ED90F77808579359B7E539B5388F
6F54555E1422B5F329989100C1CD5239E87FECD85E14E914ADC27391A1F5624B
31EE69A68B9016D73D6A01A100E004523AC53318A2FC2260E74BA80D4ABD1433
EC67800CC9F77763DCF8156EA5CA478ABF1FAF7864EAD55939BE7FA4A9E8660C
E98DDE8CBC35F3FFF4E5C2DA4A292CE30D82057E70A8562AFB17C90FC331A4C4
6B48C7BBCED55DB7F94D559D534C59FF211B5A85F0207876BD8D6B2C7BBBC069
64A16F72BBAE841F001B71209E6C81DC64817ADE625E8FF> |
400 <001C60D8A8C9B7347873EC11B675AA6F6B461106EA2C61A0AE571750A08
2679294B529694EFA74202690239BCD02BDE93B33BD8DE0F0F0056B04093EE6C
4E83D6F00E22E61E0A53509E628E3614EF2EF2CA3A8502F22A560E46ED3E4AED
0BFD271CCE464114B6332D17C4A046EF74FFF1283283A642C8C06B85A0D72357
B5665CD862A8E3D30EFFEE242F88B9C12DF917A74252DB462B49970474974786
9638F8FD8E70AF4405F95B11DFD154B7101933A31068AA1E65CC021277CCB9EC
0EAA7B978A081D1A4252A6693984AAF2CEC4413666DCF8B310A71A67C6E7B1DB
954E186EA16C83551DD0516966C156876A3DE36ED7253FFBBC1504668DC98301
370300A04E6753189718288CD7EF0ED409765A888272FDB25977C8A74BC113E1
88B3DF6A69F7851A7E60496291AA0B15532572787EAC7F32F09F1E72589E0E74
E0349313472D872E64E7DB78BAB05598FE04B70E52D818F2F7B0B56A56882993
52E62F16B011595A7D7701FD641BB2FCFCADB2E33263B8A208C4183E753AD5C2
5861BF542F2009EA70BB7A67B3BE61085D37469DCDCB97CB2B41A0E2B4DB3BE6
7C2BA9A1482E51611AB708AAB8BC978B06758006F3287DD3A3CABA09A9F59A21
B0D386F88> |
410 <001C60D8A8C9B81D89610FFBFD2F87712D18AB3F2201A6640C86A2CD8B5
33C9E9613B748962BD3321D998A13FF4A410946A55D4AE3CDBD806BF0BBD38F8
435DE762245288A30426FF012946D0E2E36D4EBD7E81C44D06926164FB6F91AA
67EEAF9AC4BC77C470E117D4634F7F90C1771292F30769DD575DD5B3F0D10473
0DECDCF41E7D59747B6A2D0EF143B06FA6BBA4F9E744BD6E4827C627C6619571
4151061BE64BA6B45A36E91B80557E1CF613697CA2B60F02790B7CBE3BBB5ABE
C190F88D2844D8139B7D141D834706D11BA3108576C531B823977B908AC9FF80
DF322060C351BA43A8EA770319D1AF8085E209B940EDEE1B85419EF87F01EED1
C4E0307B2BC95989AC0998A9EA8A0DFB99539E7D0B836F4EB9E9D6147AFB5508
2A1E63F64D57A8E7F63465BA308FA03AEB2787221627AF8F99523DB260C> |
396 <001C60D8A8C9B80F37F21112BA81A46E1A1A16E843530DEF66F6901DB9A
722A358478F1B0799F6041BFFF7D05EE602307D474F1DB84BF73C4EC1FF13A4D
2D5B370042C9A314A700782F944BCE36786AFBD72FA62259FABABA90F1F2BE00
8B7993D5E1813324C60BD953524A1040FB1A790007846FA5DED6ACE6C7D436FF
1C0B97E4BBDDDA28F066E204B37F8321753E1473DDD8EE76C12A0011B04832F5
C47D3FF30EE31FE70EF82623D628622FAE52A70984ACD43F9718BC02CE5AA3F5
832FAB343FD6D53F2375C811D54E6B415E257D8BB3A2542930D7E0D6DF96FAA0
688822B6655966904164F87FA904C272BFAD51FAFF11CA14EBB5F6472235CA20
889D111211CF90F83807D99EF12B3B6827C1CA4720D03729BEEEA22A1313C4BD
CE878453F5E6DCAD449D1F3B7D54D32C49DA0> |
258 <001C60D8A8C9B75CBB53379352952B97D633633CE49B1F5650B8155AFDF
A57F94D359804093E4912F3B89577762AB5877203F1CDAD240C521DE74183EDA
10501967DB6487C182138B12C453C5DB9629F7EF021028117511EFEAB941896E
32D9CC68D6E66540771999A4E30C4826A52D7536EDDF7E00016C895CE43408B4
4BE33E2D9A6163827E05AB8B1144BC909A74F6D7828DE6E08164A25E320920E3
54020A41D59E9E3B008A20EC107F9E18745DE21F9AF293EB0F319B529D840D8B
A9319522EDDCACA13336C059581181C082BF0D7F4117FAEB429D871E099AEE43
94FED2FB3A1C712D1799055BA832AD846B95DA8BB4E63B103C908FA309FAA3B7
8140CE2A22AE06B2A1EA5BD3AA13DD1ED75DA4AD37493780FE662EF5D1B53C4A
F41845C0C77655CE94F0C9DEBE29248A1EAAF3A6EA79D5BB5C090457B818DD62
F70E197CEA94F90229AB4FD685A1ADB5E4E4C1DBDB28AA3854323EE2FD22692E
C70> |
349 <001C60D8A8C9B887F0644B8F9A77200B5B21E7A46843656F48CC872DF3A
FB58D86B9B1B70DF0F8BF4F1A9D845350075385C2FAC40F64A57A633024956B4
2D2D155265D68692B1DD96FCB1CFEA6F03B67B191D75D9251636A71B366F484A
C7DD61A648087A690F42FCD56728047D5F145B28180BC49A70304D616C17E086
88BC2AB34D235D029750826D6A02D57888DCAF080A15DCB2D8AE91CB7938E088
D7426B3BCAD6531F243F29763FBDE3F087E3965B6148DD52590D1BA20021D152
93CFC> |
286 <001C60D8A8C9B7A9C0DC897A849B356D31E2254DD2E5BDA9320580C3E08
39C715C00D9D27B634D4BEEF0FE1F6AD3CCFBCCE9FDE38A84A563FB744619F62
FCBF09ACBF7337FE050BE068BCA744FAC4471C4195B7CEC353B3CAECCCEC91AA
E22E8955469041D97A8837F9398CE520ABB35C688EEF4229957FD92C79439BF9
9D24AD4D8B3CAC5B975D966AB01856E8FAEAE3BEB03E1CC76DF299391134BFB0
2DD61F6D73B2AAAA0D725ABCA9FE504FB3A1EC1E2449C5D921F0DE45A9278013
CF0832F39E3771D2B318D27AFF5849066ED5A64AA8E3E404B520DE5F08BE74DD
8D58BD1B0FA461EBCBB4DC632B680CFAE62B61DD4FC04FC017D59147CB2E0FBE
AAFA402B5BFBD0C4F13F4BD9227D1353527A23B3EF7CA3E7F599CB51DDAF43A5
67478E4C81011D9D8D5DAD9CB1F948F5FCE67> |
282 <001C60D8A8C9B78E05EAA3CECCCC7ABA6A35E55F211820F669BFFF2D107
F3F003F84456D947B5557966A2009812B81B51372EB70EB729C8C82B63A473DB
5161C83385AAD04B71C9D388B2F86E7C2E91E06E59E76C532F8A600B530589A2
18BCA1E889366120C885033631C7850C65A7F9274D24F9BF6FA89E174B53B0E1
A2CF6D783F32D4C0BE4ACD3EEAF66A8BEC8DB7AC7ADBF3C9CDF5485D002662D3
10ACCD320AD0234A2F2251E7C0B1667BFFC7E10EE40C7CB623518E3E168137CE
699E133B767C86E16CACCA64A58BD9D7F6E66BED6D6FE5D80E0381141549FFB2
FBF94ECD2D262EB097909F9092B71E3573FC9B4FD273505C685B327AE9095A2A
15545986A397AE2796BDB3888D16AF3DD82BF32621BC8C1393814540227FC926
F77872F2FAF5DD33717EB461ACFE3EE5C279294EBB5AADC09C8B10C3F2CB25CC
D97C6> |
857 <001C60D8A8C9B627523C125FE909EFDD60EC9C69A1E5466FF0C09E14255
6DB12C1BF3118138772A3B571FA09DEC94AD4AA2A0EBDAE62A570C6CDE9989F2
944C7DEDBE939B7E505F3DCCD37E256C8726959BCBE10B265A73EF39E4E1F928
FC02C3C0CE7F275A99D3BAAE7033CE896A40721E20D9BAD831362ACB4E796B0B
A3B8F6D4A3086B2389435E4CCBF71688853458F89E2312EB7F5002DE6025B835
27C2D659B4593CF8D7636276F80F202F5592320DD4EDD1CD6E6BF6AAE07A6868
128> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /ZONLWC+Calibri-Identity-H-Identity-H /Identity-H 0 [/ZONLWC+Calibri-Identity-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
/ZONLWC+Calibri-Identity-H-Identity-H findfont [6.96 0 0 -6.96 0 0 ]msf
1.63211 64.4879 mo
(\000K\001v\001o\001\307\000\003\000h\001v\001\020\001}\001v\001\220\001\232\001\214\001\002\001]\001v\001\036\001\032\003Y)
[4.66956 3.59565 1.66693 3.12051 1.57242 4.54063 3.59565 2.99402 3.70727 3.59565 2.75549 2.3942 
2.40376 3.35468 1.66693 3.59566 3.46916 3.72066 0 ]xsh
ZONLWB+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
15.8399 78.3602 mo
(Uses ? extends)
[4.44339 2.75551 3.46916 2.7695 1.57243 3.21983 1.67669 3.46916 3.01294 2.28279 3.46916 3.721 
3.70701 0 ]xsh
22.2481 92.2321 mo
(Uses ? super)
[4.44339 2.7555 3.46916 2.7695 1.57243 3.21983 1.67669 2.63715 3.707 3.70701 3.46916 0 
]xsh
grestore
60.0262 23.775 mo
68.5078 23.775 li
68.5078 9.375 li
60.0262 9.375 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
1 /0 /CSD get_res sepcs
1 sep
ZONLWB+Calibri*1 [0 6.96 6.96 0 0 0 ]msf
61.968 20.3281 mo
(0 )
[3.48086 0 ]ysh
134.63 23.25 mo
143.112 23.25 li
143.112 1.125 li
134.63 1.125 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
1 /0 /CSD get_res sepcs
1 sep
ZONLWB+Calibri*1 [0 6.984 6.984 0 0 0 ]msf
136.61 2.21 mo
(100000)
[3.48116 3.48116 3.48116 3.48116 3.48116 0 ]ysh
136.61 23.112 mo
( )sh
122.63 23.25 mo
131.112 23.25 li
131.112 1.125 li
122.63 1.125 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
1 /0 /CSD get_res sepcs
1 sep
ZONLWB+Calibri*1 [0 6.96 6.96 0 0 0 ]msf
124.61 5.69 mo
(10000)
[3.48119 3.48119 3.48119 3.48119 0 ]ysh
124.61 23.1123 mo
( )sh
0 69.925 mo
63.375 69.925 li
63.375 54.375 li
0 54.375 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: CBIAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CBIAAA+Calibri gcheck setglobal} if
1 606 24 <000200ac0000048f050e0012001f0077401d3f2101131810014d13100f01
4d13140d014d13120c014d13180b014d13bb02320000001affe8b310014d
1ab8fff0b30f014d1ab8fff0b30d014d1ab8fff6b30c014d1ab8ffe8b30b
014d1abb021100090018010cb20e511bb80126b10554003fed3fed012fe1
2b2b2b2b2bd4e12b2b2b2b2b31305d01140e022321222635113436332132
1e0207342e0223231133323e02048f56a5f0a6feee172929170125a8e89d
51b5346faa86afb17caa7239029aa8fba5521f270482271f57a3e89969b5
844afc113e80c100>CBIAAA+Calibri AddT42Char 
1 1134 75 <00020063ffed04e8052100130027007c401a141810014d14100f014d1414
0d014d14120c014d14180b014d14b80233400920003000800003001eb8ff
e8b310014d1eb8fff0b30f014d1eb8ffecb30d014d1eb8ffeeb30c014d1e
b8ffe8b30b014d1ebb0233000a00190129b20f5323b8012bb10556003fed
3fed012fe12b2b2b2b2bd45de12b2b2b2b2b313001140e0223222e023534
3e0233321e0207342e0223220e0215141e0233323e0204e84a93de9492d5
8b444a94de948fd48d45b5275b987070985f29265a9772719a5e2802969d
fcb15f57a6f6a099faaf5f56a5f3a96ebd8b4e548cbb6772c08b4d548fbc
>CBIAAA+Calibri AddT42Char 
1 2498 271 <00020099ffed03d50571002a003d0085b53f3f010a2136b8fff6b30c014d
36b8fff0b30d014d36b8ffe8b30b014d36b8fff0b40f10014c36b801f840
1b152b120c014d2b200d014d2b180b014d2b1810014d2b100f014d2bb802
0a400900150a363521040530b80105b6264a1b46104c39b80105b1054d00
3fed3f3f3fed121739012fd4e12b2b2b2b2b10e12b2b2b2b323931305d01
140e0223222e022715140e0223222e023511343e0233321e0215113e0333
321e0207342e0223220e020711161633323e0203d53363905d2b49464627
08121b15141c12060713201819201208284b484828628b5728ae15345640
203e404527447c433e58371901e775bb844611263a296e080c070404070c
080538080c080404080c08fde5293823104e83b0754582643d122a4232fe
9953573c637b>CBIAAA+Calibri AddT42Char 
1 3708 296 <00010025fffa02860578003c0064b2161000b8ffe0b40b014d001bb8fff0
b30d014d1bb8fff0b40f10014c1bb8fff6b30c014d1bb8ffe8b30b014d1b
b801f9b2302a25b8ffd040121011014c250aed36471a26ed3048204c1048
003f3f3fed323fed012f2bc433f12b2b2b2bc42b33c4313001140e022322
2e0223220e02151533321e02151406232311140e0223222e023511232226
35343e02333335343e0233321e0402860405080607151e291b2534200ec9
080b0905120fc908132018182013087f101004080c087f23486d4a234224
0c0803050f13170e05090b091833513a6207111a132420fceb080b080404
080b0803152024131a11075d5e8756290d0f0c131b00>CBIAAA+Calibri AddT42Char 
CBIAAA+Calibri /CharStrings get begin
/g24 24 def
/g75 75 def
/g271 271 def
/g296 296 def
end
CBIAAA+Calibri /Encoding get
dup 68 /g24 put
dup 79 /g75 put
dup 98 /g271 put
dup 102 /g296 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ZONLWB+Calibri*1 
[32{/.notdef}rp /g3 13{/.notdef}rp /g856 /.notdef /g1004 /g1005 13{/.notdef}rp 
/g845 /.notdef /g4 2{/.notdef}rp /g24 9{/.notdef}rp /g69 /g75 
4{/.notdef}rp /g100 /g104 /.notdef /g116 9{/.notdef}rp /g258 /g271 
/g272 /g282 /g286 /g296 /g336 /.notdef /g349 2{/.notdef}rp 
/g367 /g373 /g374 /g381 /g393 /.notdef /g396 /g400 
/g410 /g437 2{/.notdef}rp /g454 /g455 134{/.notdef}rp]
ZONLWB+Calibri nf
ZONLWB+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
2.16016 61.032 mo
(Only Unconstrained )
[4.55824 3.59568 1.55559 3.12052 1.79517 4.44339 3.59568 2.99403 3.70732 3.59567 2.75551 2.28286 
2.40372 3.35471 1.55558 3.59568 3.46917 3.69639 0 ]xsh
ZONLWB+Calibri*1 [6.984 0 0 -6.984 0 0 ]msf
30.1442 68.1359 mo
(Wildcards )
[6.23214 1.55401 1.55401 3.5941 2.99716 3.34536 2.41894 3.5941 2.80706 0 ]xsh
69.1922 105.192 mo
(Number of Declarations )
[4.4663 3.5941 5.54649 3.5941 3.48112 2.405 1.91314 3.71317 2.14989 1.67564 4.33551 3.48112 
2.99726 1.55402 3.34535 2.41895 3.34537 2.29768 1.55401 3.71317 3.5941 2.80475 0 ]xsh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
/ZONLWB+Calibri*1 uf
/ZONLWB+Calibri uf
/CBIAAA+Calibri uf
/ZONLWC+Calibri-Identity-H-Identity-H uf
/ZONLWC+Calibri-Identity-H /CIDFont ur
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF

%%EndDocument
 @endspecial -150 781 984 3 v 121 x Fv(Figur)o(e)46 b(17.)37
b FF(W)m(ildcard)47 b(usage)g(in)-150 949 y(inheritance)20
b(hierarchies)917 737 y @beginspecial 0 @llx 0 @lly 144
@urx 108 @ury 1180 @rwi 885 @rhi @setspecial
%%BeginDocument: parameters.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: parameters.pdf
%%Creator: Adobe Acrobat 9.4.2
%%For: Sorin Lerner
%%CreationDate: 24/03/2011, 15:53:32
%%BoundingBox: 0 0 144 108
%%HiResBoundingBox: 0 0 144 108
%%CropBox: 0 0 144 108
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 550 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.1-c043 52.372728, 2009/01/18-15:08:04        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreateDate="2011-03-23T12:43:52-07:00"
   xmp:ModifyDate="2011-03-23T12:43:52-07:00"
   pdf:Producer="GPL Ghostscript 8.71"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -108 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 108 li
144 108 li
144 0 li
cp
clp
[1 0 0 1 0 0 ]ct
0 108 mo
144 108 li
144 0 li
0 0 li
cp
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
0 sep
ef
.96 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
45.8398 54.1199 mo
88.5262 42.9441 li
83.4441 23.5328 65.9051 9.9949 45.8398 9.9949 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
50.209 53.502 mo
94.3199 52.4 li
94.2352 48.998 93.757 45.618 92.8949 42.3262 cv
cp
@
50.2512 54.223 mo
94.2629 57.3898 li
94.3648 55.9691 94.398 54.5449 94.3629 53.1211 cv
cp
@
50.216 54.6828 mo
93.5949 62.7672 li
93.898 61.141 94.109 59.5 94.2281 57.85 cv
cp
@
45.8398 54.1199 mo
45.8398 9.9949 li
21.4699 9.9949 1.71484 29.75 1.71484 54.1199 cv
1.71484 78.4898 21.4699 98.2449 45.8398 98.2449 cv
67.0922 98.2449 85.325 83.0961 89.218 62.2039 cv
cp
@
.72 lw
93.8398 47.2801 mo
100.68 31.0801 li
105.24 31.0801 li
94.3199 55.2 mo
95.0398 55.5602 li
99.4801 55.5602 li
93.9602 60.3602 mo
99.9602 78 li
104.52 78 li
@
%ADOBeginSubsetFont: SPVAAA+Calibri Initial
ct_T42Dict begin
-0.5 -0.305 1.238 0.961
 256 array 0 1 255 {1 index exch /.notdef put} for  /SPVAAA+Calibri
Type42DictBegin
[<00010000000c000c000c000c4f532f3200000000000000cc000000566376
7420b09bc4d2000001240000051c6670676df6f64d0c000006400000091a
676c7966000000000000713000002a4068656164e625fe3d00000f5c0000
0036686865610dad077c00000f9400000024686d74780000000000000fb8
000010e86c6f636100000000000020a000001e466d617870213525080000
3ee8000000206e616d65267651f400003f0800000e16707265706baf02fe
00004d200000241067646972000000000000000000000000000100000190
000500080000000000000000000000000000000000000000000000000000
00000000000000000000000000080000000000000000000000000000f000
f0ff00000000000000000000000000010000000000000000079e0000fe93
0000000000000000000000000050006a0073008000800086008d009300bf
00db006200830093009900a000a600a900b000c100c900d7000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000fe79056d000c03b7000600130000fffaffedfea6
ffedfeb8050e000600130000fffaffedfe93050e00130420000600130000
fffaffedff10ffee050e00130420000600130000fffaffeefe93ff10feb8
0612000a050e0006000d02d2fffafff301fdfffa023f0006000dff36fffa
fff302870006000f0000fffafff1079efeaffea700000000000000000000
000000500051005a005b005c005d006000610062006400680069006a006b
006c006d006e00680069006e00600067006e00660068005f006100630064
00660068006a006b006c006d006e006f0070006f00720074007500760076
007000720073007400750076006f00700071007200730075007700770078
0079007a007b007c007d007b007c007d00770079007a007c0078007a007c
007d0078007d007e007f008000810082007e007f00810082007e007f0080
008100820083008400850086008700880089008300840085008600870088
0089008300840085008600870088008900890086008700880089008a008b
008c008d008e008f008a008b008c008d008e008f008a008b008c008d008e
008f008d008a008b008c008d008e008f0090009000910092009300940095
009600980099009b009c0090009100920093009400950096009700980099
009a009e009f00a60090009100950098009f009000910096009700bc00c6
00b500ae00af00b6006800690063006a006f00700071006f007000710072
0066006c006d00700079007c007f00830086008700880089008a00740075
00760077007a007b007c007d007e008200850086008a0088008900830078
007b00820083008600870088008900760079007a007c007d007e00830085
00880089008a0073007400750077007a007d00880089008a008b008c008d
008e00900094008b008c008d00910092009300940095008c008d00910095
008f009000910092009300940095008b008c008d008e008f009000910092
009300940095008b008c008d008e008f0090009100920093009600970098
0099009c0096009700980099009a009b009c00960099009a009c00960097
00980099009a009b009c009700980099009a009b009c009700980099009a
009b009c0096009d00a000a1009d009e009f00a000a100a2009d009f00a0
00a1009f00a2009d009e009f00a000a100a2009d009e00a000a1009d009e
00a000a2009d00a300a400a500a600a700a300a400a600a700a300a400a5
00a600a700a600a300a700a800a900aa00ab00ac00ac00a800a900aa00ab
00ac00a800a900aa00ab00ac00a800aa00ab00ac00ae00ad00ae00af00b0
00b100b200b300b400b500b600b700b800ad00ae00ad00ae00af00b000b1
00b200b300b400b500b600b700b800ad00ae00af00b000b100b200b300b4
00b500b600b700b800b300ae00af00b000b200b500b600b700b800b900ba
00bb00bc00be00c000c100c200c200b900ba00bb00bc00bd00be00bf00c0
00c100c200c400ba00bb00be00bf00c000c200c300c400b900ba00bf00c0
00c200c600c700c900ca00cb00cc00cf00c500c700ce00c500c700c800cf
00d000d200d300d7010d00d000d100e900d000fd00d005e4000e00410000
05ba009c009c005e005e4047645f5e5d5c5b5a59585554535251504f4e4d
4c4b4a494847464544434241403f3e3d3c3b3a39383736352f2e2d2c2826
252423221f181411100f0d0b0a090807060504030201002c4523466020b0
2660b004262348482d2c452346236120b02661b004262348482d2c452346
60b0206120b04660b004262348482d2c4523462361b0206020b02661b020
61b004262348482d2c45234660b0406120b06660b004262348482d2c4523
462361b0406020b02661b04061b004262348482d2c0110203c003c2d2c20
452320b0cd442320b8015a51582320b08d44235920b0ed51582320b04d44
235920b0042651582320b00d44235921212d2c20204518684420b0016020
45b04676688a4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b
2d2c00b0282370b101283e01b0282370b10228453ab10200080d2d2c2045
b00325456164b050515845441b2121592d2c2045b0004360442d2c01b006
43b00743650a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c64
2364615c58b00361592d2c8a03458a8a87b0112bb0292344b0297ae4182d
2c4565b02c234445b02b23442d2c4b525845441b2121592d2c01b0052510
23208af500b0016023edec2d2c01b005251023208af500b0016123edec2d
2c01b0062510f500edec2d2c20b001600110203c003c2d2c20b001610110
203c003c2d2c00b00743b006430b2d2c21210c6423648bb84000622d2c21
b08051580c6423648bb82000621bb200402f2b59b002602d2c21b0c05158
0c6423648bb81555621bb200802f2b59b002602d2c0c6423648bb8400062
6023212d2c4523456023456023456023766818b08062202d2cb00426b004
26b00425b0042545234520b003266062636820b0032661658a2344442d2c
2045b0005458b040442045b04061441b2121592d2c45b1302f4523456160
b0016069442d2c4b5158b02f2370b01423421b2121592d2c4b515820b003
2545695358441b2121591b2121592d2c45b01443b0006063b0016069442d
2cb02f45442d2c452320458a60442d2c45234560442d2c4b235158b90033
ffe0b134201bb3330034005944442d2cb0164358b00326458a586466b01f
601b64b020606620581b21b04059b001615923586559b02923442310b029
e01b2121212121592d2cb0164358b004254564b020606620581b21b04059
b0016123586559b0292344b00425b00725082058021b0359b0052510b004
252046b0042523423cb0072510b006252046b00425b0016023423c205801
1b0059b0052510b00425b029e0b0072510b00625b029e0b00425b0072508
2058021b0359b00425b003254348b00625b00325b0016043481b21592121
21212121212d2cb0164358b004254564b020606620581b21b04059b00161
23581b6559b0292344b00525b00825082058021b0359b0042510b0052520
46b0042523423cb00425b0072508b0072510b006252046b00425b0016023
423c2058011b0059b0042510b00525b029e0b02920456544b0072510b006
25b029e0b00525b00825082058021b0359b00525b003254348b00425b007
2508b00625b00325b0016043481b2159212121212121212d2c02b0042520
2046b004252342b0052508b003254548212121212d2c02b0032520b00425
08b0022543482121212d2c452320451820b00050205823652359236820b0
40505821b04059235865598a60442d2c4b53234b515a5820458a60441b21
21592d2c4b545820458a60441b2121592d2c4b53234b515a58381b212159
2d2cb000214b5458381b2121592d2cb002435458b0462b1b21212121592d
2cb002435458b0472b1b212121592d2cb002435458b0482b1b2121212159
2d2cb002435458b0492b1b212121592d2c208a08234b538a4b515a582338
1b2121592d2c0020b200400325b0062649618b3812342d2c014623466023
466123201020468a61b8ff80628ab140408a704560683a2d2c208a234964
8a2353583c1b21592d2c4b52587d1b7a592d2cb012004b014b54422d2cb1
020042b123018851b1400188535a58b910000020885458b2020102436042
59b12401885158b920000040885458b2020202436042b12401885458b202
2002436042004b014b5258b2020802436042591bb940000080885458b202
040243604259b94000008063b80100885458b202080243604259b9400001
0063b80200885458b202100243604259b94000020063b80400885458b202
400243604259595959592d2c451868234b51582320452064b04050587c59
688a6059442d2cb00016b00225b0022501b001233e00b002233eb1010206
0cb00a236542b00b234201b001233f00b002233fb10102060cb006236542
b0072342b00116012d2c20b82000628a6023622d2cb0072558001b0159b0
042510b00325b0022520b8ffff545821cd1bed5921b006255cb006255a58
b0092b5920b005254ab0042547b004254760b0062547b0806361b00225b0
005558b00325b00725496359b0082558001b0159b00425b0062549b00925
5cb009255a58b0092b59b0072546b0806361b0032520b0005558631b2159
612320b0005558b080631b21b08059b0592bb006255c586959b004252020
10b00048233ab0062658001b0159b0052658b003252f598a12233221212d
2cb00625b00a2587b00625b009254ab0005358b00625b00a251bb00925b0
072559b00225b00225070cb005256323b00625636020b940000400635358
21b00426b00426b00a1bb94000040063655158b0042665b0042665b00a1b
b00426b00426b000b00325b003250b0d0ab0092eb00725b007250b0d0ab0
0b2eb00525b0052507595920b0005558b00525b0052587b00725b007250b
b0092510b00b25b0092620b8ffff545821cd1bed59b00525b0052507b008
25b00b254923b00625b0062587b00a2510b00b25c15920b00051b8005223
78b00161b00225b00725b0072507b00a25b00d254961b08062b00525b005
250bb00a252338b00625b0062587b00825b008250bb00a2510b00b25c4b0
0625b0062507b00925b00c2549b0032554b8ffa723792121212121212121
212121212d2c23b0005458b9400000001bb900004000598ab0005458b940
0000001bb90000400059b05b2b2d2c08b0005458b9400000001bb9000040
00590db05b2b2d2c8a8a080d8ab0005458b9400000001bb90000400059b0
5b2b2d2cb00426b00426080db00426b00426080db05b2b2d2c204569442d
00000001000000059eb8b1b0afba5f0f3cf50019080000000000bbeb7ccc
00000000c522987afbfafd8b09ec07b60000000900020000000000000001
00000600fe0001c40aa0fbfafaa009ec0001000000000000000000000000
0000043a040e0000040e0000040e000001cf000004a1002304a1002304a1
002304a1002304a1002304a1002304a1002304a1002304a1002304a10023
04a1002304a1002304a1002304a1002304a1002304a1002304a1002304a1
002304a1002304a1002304a1002304a1002304a1002304a1002304a10023
04a1002304a1002304a1002304a1002304a1002304a1002304a1002304a1
002304a1002304a1002304a1002304a1002304a1002304a1002304a10023
04a1002304a1002304a1002304a1002304a1002304a1002304a1002304a1
002304a1002304a1002304a1002304a1002304a1002304a1002304a10023
04a1002304a1002304a1002304a1002304a1002304a1002304a1002304a1
002304a1002304a10023052a00ac052a00ac052a00ac052a00ac052a00ac
052a00ac054c0063054c0063054c0063054c0063054c0063054c0063054c
0063054c0063054c0063054c0063054c0063054c0063054c0063054c0063
054c0063054c0063054c0063054c0063054c0063054c0063054c0063054c
0063054c0063054c0063054c006303e6000f03e6000f03e6000f03e6000f
052200aa052200aa052200aa052200aa052200aa052200aa052200aa0522
00aa052200aa052200aa052200aa052200aa071e003d071e003d071e003d
071e003d071e003d071e003d071e003d071e003d071e003d071e003d071e
003d071e003d071e003d071e003d071e003d071e003d071e003d071e003d
071e003d071e003d071e003d071e003d071e003d071e003d071e003d071e
003d071e003d071e003d071e003d071e003d071e003d071e003d071e003d
071e003d071e003d071e003d071e003d071e003d071e003d071e003d071e
003d071e003d071e003d071e003d071e003d071e003d071e003d071e003d
071e003d071e003d071e003d071e003d071e003d071e003d071e003d071e
003d071e003d071e003d071e003d071e003d071e003d071e003d071e003d
071e003d071e003d071e003d071e003d071e003d071e003d071e003d071e
003d071e003d071e003d071e003d071e003d071e003d071e003d071e003d
071e003d071e003d071e003d071e003d071e003d071e003d071e003d071e
003d071e003d071e003d071e003d071e003d071e003d071e003d071e003d
071e003d071e003d071e003d071e003d071e003d071e003d071e003d071e
003d071e003d071e003d071e003d071e003d071e003d071e003d071e003d
071e003d071e003d071e003d071e003d071e003d071e003d071e003d071e
003d071e003d071e003d071e003d071e003d071e003d071e003d071e003d
071e003d071e003d071e003d071e003d071e003d071e003d071e003d071e
003d071e003d071e003d071e003d071e003d071e003d071e003d071e003d
071e003d071e003d071e003d071e003d03d5005c03d5005c03d5005c03d5
005c03d5005c03d5005c03d5005c03d5005c03d5005c03d5005c03d5005c
03d5005c03d5005c03d5005c0362005a0362005a0362005a0362005a0362
005a0362005a0362005a0362005a0362005a0362005a0434006004340060
043400600434006003fb005d03fb005d03fb005d03fb005d03fb005d03fb
005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d
03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb
005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d
03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb
005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d
03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d03c4
003503c4003503c4003503c4003503c4003503c4003503c4003503c40035
03c4003503c4003503c4003503c4003503c4003501d6008501d6008501d6
008501d6008501d6008501d6008501d6008501d6008501d6008501d60085
01d6008501d6008501d6008501d6008501d6008501d6008501d6008501d6
008501d6009901d6009901d6009901d6009901d6009901d6009906640099
043400990434009904340099043400990434009904340099043400990438
005a0438005a0438005a0438005a0438005a0438005a0438005a0438005a
0438005a0438005a0438005a0438005a04340099043400990434009902ca
009902ca009902ca009902ca009903210051032100510321005103210051
03210051032100510321005103210051032100510321005102ae002102ae
002102ae002102ae002102ae002102ae002102ae002102ae002102ae0021
02ae002102ae002102ae002102ae002102ae002102ae002102ae002102ae
002102ae002102ae002102ae002102ae002102ae002102ae002102ae0021
02ae002102ae002102ae0021043400940434009404340094043400940434
009404340094043400940434009404340094043400940434009404340094
043400940434009404340094043400940434009403770029039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f0022039f0022039f
0022039f0022039f0022039f0022039f0022039f0022039f0022039f0022
039f0022039f0022039f0022039f0022039f0022039f002203b5008503b5
008503b5008503b5008503b5008503b5008503b5008503b5008503b50085
03b5008503b5008502050097020500970205009702050097020500970205
009702050097020500970205009702050097020500970205009702050097
020500970205009702050097020500970205009702050097020500970205
009702050097020500970205009702050097020500970205009702050097
020500970205009702050097020500970205009702050097020500970205
009702050097020500970205009702050097020500970205009702050097
020500970205009702050097020500970205009702050097020500970205
009702050097020500970205009702050097020500970205009702050097
020500970205009702050097020500970205009702050097020500970205
009702050097020500970205009702050097020500970205009702050097
020500970205009702050097020500970205009702050097020500970205
009702050097020500970205009702050097020500970205009702050097
020500970205009702050097020500970205009702050097020500970205
009702050097020500970205009702050097020500970205009702050097
020500970205009702050097020500970205009702050097020500970205
00970205009702050097020500970205009702050097040e0052040e0052
040e0052040e0052040e0052040e0052040e0052040e0052040e0052040e
0052040e0052040e0052040e0052040e0052040e0052040e0052040e0052
040e0052040e0052040e0052040e0052040e0052040e0052040e0052040e
0052040e0052040e0052040e0052040e0052040e0052040e0052040e0052
040e0048040e00ae040e0072040e0067040e0067040e0065040e0065040e
0063040e0052040e0052040e0052040e0052040e0052040e0052040e0052
040e0052040e0052040e0052040e0052040e0052040e0052040e0052040e
0052040e0052040e0052040e0052040e0052040e0052040e0052040e0052
040e0052040e0052040e0052040e0052040e0052040e0052040e0052040e
0052040e0052040e0052029d0038029d0038029d0038029d0038029d0038
029d0038029d0038029d0038029d0038029d0038029d0038029d0038029d
0038029d0038029d0038029d0038029d0038029d0038029d0038029d0038
02b1ff4c02b1ff4c02b1ff4c02b1ff4c02b1ff4c02b1ff4c02b1ff4c02b1
ff4c02b1ff4c02b1ff4c02b1ff4c02b1ff4c02b1ff4c02b1ff4c02b1ff4c
02b1ff4c02b1ff4c05b80048000000a100a100a100a1012f012f012f012f
012f012f012f012f012f012f012f012f012f012f012f012f012f012f012f
012f012f012f012f012f012f012f012f012f012f012f012f012f012f012f
012f012f012f012f012f012f012f012f012f012f012f012f012f012f012f
012f012f012f012f012f012f012f012f012f012f012f012f012f012f012f
012f01ca01ca01ca01ca01ca01ca02420242024202420242024202420242
024202420242024202420242024202420242024202420242024202420242
0242024202a902a902a902a9033403340334033403340334033403340334
03340334033403c503c503c503c503c503c503c503c503c503c503c503c5
03c503c503c503c503c503c503c503c503c503c503c503c503c503c503c5
03c503c503c503c503c503c503c503c503c503c503c503c503c503c503c5
03c503c503c503c503c503c503c503c503c503c503c503c503c503c503c5
03c503c503c503c503c503c503c503c503c503c503c503c503c503c503c5
03c503c503c503c503c503c503c503c503c503c503c503c503c503c503c5
03c503c503c503c503c503c503c503c503c503c503c503c503c503c503c5
03c503c503c503c503c503c503c503c503c503c503c503c503c503c503c5
03c503c503c503c503c503c503c503c503c503c503c503c503c503c503c5
03c503c503c503c503c503c503c503c503c503c504740474047404740474
047404740474047404740474047404740474050005000500050005000500
050005000500050005970597059705970638063806380638063806380638
063806380638063806380638063806380638063806380638063806380638
063806380638063806380638063806380638063806380638063806380638
063806380638063806380638063806380638063806380638063807250725
07250725072507250725072507250725072507250725079e079e079e079e
079e079e079e079e079e079e079e079e079e079e079e079e079e079e07e1
07e107e107e107e107e108c2095309530953095309530953095309e109e1
09e109e109e109e109e109e109e109e109e109e10a780a780a780af10af1
0af10af10bb70bb70bb70bb70bb70bb70bb70bb70bb70bb70c330c330c33
0c330c330c330c330c330c330c330c330c330c330c330c330c330c330c33
0c330c330c330c330c330c330c330c330c330cc30cc30cc30cc30cc30cc3
0cc30cc30cc30cc30cc30cc30cc30cc30cc30cc30cc30d530db80db80db8
0db80db80db80db80db80db80db80db80db80db80db80db80db80db80db8
0db80db80db80db80db80db80db80db80db80db80db80db80db80db80db8
0db80db80db80db80db80db80db80db80db80db80db80db80db80db80db8
0db80db80db80db80db80db80db80db80db80db80db80db80db80db80db8
0db80db80db80db80db80db80db80db80db80db80db80db80db80db80db8
0db80db80db80db80db80db80db80db80db80db80db80db80db80db80db8
0db80db80db80db80db80db80db80db80db80db80db80db80db80db80db8
0db80db80db80db80db80db80db80db80db80db80db80db80db80db80db8
0db80db80db80db80db80db80db80db80db80db80db80db80db80db80db8
0db80db80db80db80db80db80db80db80db80db80db80db80db80db80db8
0db80db80db80db80db80db80db80db80db80db80db80db80db80db80db8
0db80db80db80db80db80db80db80db80db80db80db80db80db80db80db8
0db80db80db80db80db80db80db80db80db80db80db80db80db80db80db8
0db80db80db80db80db80db80db80db80db80db80db80db80db80db80db8
0db80db80db80db80db80db80db80db80db80db80db80db80db80db80db8
0db80db80db80db80db80db80db80db80db80db80db80db80db80db80db8
0db80db80db80db80db80db80db80db80db80db80db80db80db80db80db8
0db80db80db80db80db80db80db80db80db80db80db80db80db80db80db8
0db80db80db80db80db80db80db80db80db80db80db80db80db80db80db8
0db80db80db80db80db80db80db80db80db80db80db80db80db80db80db8
0db80db80db80db80db80db80db80db80db80db80db80db80db80db80db8
0db80db80db80db80db80db80db80db80db80db80db80db80db80db80db8
0db80db80db80db80db80db80db80db80db80db80db80db80db80db80db8
0db80db80db80db80db80db80db80db80db80db80db80db80db80db80db8
0db80db80db80db80db80db80db80db80db80db80db80db80db80db80db8
0db80db80db80db80db80db80db80db80db80db80db80db80e2f0e2f0e2f
0e2f0e2f0e2f0e2f0e2f0e2f0e2f0e2f0e510e510e510e510e510e510e51
0e510e510e510e510e510e510e510e510e510e510e510e510e510e510e51
0e510e510e510e510e510e510e510e510e510e510e510e510e510e510e51
0e510e510e510e510e510e510e510e510e510e510e510e510e510e510e51
0e510e510e510e510e510e510e510e510e510e510e510e510e510e510e51
0e510e510e510e510e510e510e510e510e510e510e510e510e510e510e51
0e510e510e510e510e510e510e510e510e510e510e510e510e510e510e51
0e510e510e510e510e510e510e510e510e510e510e510e510e510e510e51
0e510e510e510e510f770f770f770f770f770f770f770f770f770f770f77
0f770f770f770f770f770f770f770f770f770f770f770f770f770f770f77
0f770f770f770f770f770f77102a10e1118112751275132a132a13c913d1
148a148a148a148a148a148a148a148a148a148a148a148a148a148a148a
148a148a148a148a148a148a148a148a148a148a148a148a148a148a148a
148a14d514d514d514d514d514d514d514d514d514d514d514d514d514d5
14d514d514d514d514d514d5150f150f150f150f150f150f150f150f150f
150f150f150f150f150f150f150f150f1520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015201520152015201520
152015201520152015201520152015201520152015200000000100000f22
006000050066000500020010002f0065000011902410000300010000002d
02220000000300000000006400000000000300000001000e006400000003
00000002000e03040000000300000003003003120000000300000004000e
00640000000300000005001803420000000300000006000e006400000003
0000000700fa035a0000000300000008002a03d000000003000000090020
0454000000030000000a02a00064000000030000000b0056047400000003
0000000c002a04ca000000030000000d029804f4000000030000000e006c
078c0001000000000000003207f800010000000000010007082a00010000
000000020007097a00010000000000030018098100010000000000040007
082a0001000000000005000c099900010000000000060007082a00010000
00000007007d09a50001000000000008001509e000010000000000090010
0a22000100000000000a0150082a000100000000000b002b0a3200010000
0000000c00150a5d000100000000000d014c0a72000100000000000e0036
0bbe0003000104090000006400000003000104090001000e006400030001
04090002000e03040003000104090003003003120003000104090004000e
00640003000104090005001803420003000104090006000e006400030001
0409000700fa035a0003000104090008002a03d000030001040900090020
0454000300010409000a02a00064000300010409000b0056047400030001
0409000c002a04ca000300010409000d029804f4000300010409000e006c
078c00a9002000320030003000380020004d006900630072006f0073006f
0066007400200043006f00720070006f0072006100740069006f006e002e
00200041006c006c00200052006900670068007400730020005200650073
00650072007600650064002e00430061006c006900620072006900200069
0073002000610020006d006f006400650072006e002000730061006e0073
002000730065007200690066002000660061006d0069006c007900200077
00690074006800200073007500620074006c006500200072006f0075006e
00640069006e006700730020006f006e0020007300740065006d00730020
0061006e006400200063006f0072006e006500720073002e002000490074
0020006600650061007400750072006500730020007200650061006c0020
006900740061006c006900630073002c00200073006d0061006c006c0020
0063006100700073002c00200061006e00640020006d0075006c00740069
0070006c00650020006e0075006d006500720061006c0020007300650074
0073002e0020004900740073002000700072006f0070006f007200740069
006f006e007300200061006c006c006f0077002000680069006700680020
0069006d007000610063007400200069006e002000740069006700680074
006c007900200073006500740020006c0069006e006500730020006f0066
002000620069006700200061006e006400200073006d0061006c006c0020
007400650078007400200061006c0069006b0065002e002000430061006c
0069006200720069002700730020006d0061006e00790020006300750072
00760065007300200061006e006400200074006800650020006e00650077
002000720061007300740065007200690073006500720020007400650061
006d00200075007000200069006e00200062006900670067006500720020
00730069007a0065007300200074006f002000720065007600650061006c
002000610020007700610072006d00200061006e006400200073006f0066
00740020006300680061007200610063007400650072002e005200650067
0075006c00610072004d006900630072006f0073006f00660074003a0020
00430061006c0069006200720069003a0020003200300030003500560065
007200730069006f006e00200035002e0036003200430061006c00690062
007200690020006900730020006500690074006800650072002000610020
007200650067006900730074006500720065006400200074007200610064
0065006d00610072006b0020006f00720020006100200074007200610064
0065006d00610072006b0020006f00660020004d006900630072006f0073
006f0066007400200043006f00720070006f0072006100740069006f006e
00200069006e002000740068006500200055006e00690074006500640020
00530074006100740065007300200061006e0064002f006f00720020006f
007400680065007200200063006f0075006e00740072006900650073002e
004c007500630028006100730029002000640065002000470072006f006f
00740068007400740070003a002f002f007700770077002e006d00690063
0072006f0073006f00660074002e0063006f006d002f007400790070006f
006700720061007000680079002f006300740066006f006e007400730068
007400740070003a002f002f0066006f006e007400660061006200720069
006b002e0063006f006d0059006f00750020006d00610079002000750073
00650020007400680069007300200066006f006e00740020006100730020
007000650072006d00690074007400650064002000620079002000740068
0065002000450055004c004100200066006f007200200074006800650020
00700072006f006400750063007400200069006e00200077006800690063
00680020007400680069007300200066006f006e00740020006900730020
0069006e0063006c007500640065006400200074006f0020006400690073
0070006c0061007900200061006e00640020007000720069006e00740020
0063006f006e00740065006e0074002e00200059006f00750020006d0061
00790020006f006e006c0079002000280069002900200065006d00620065
00640020007400680069007300200066006f006e007400200069006e0020
0063006f006e00740065006e00740020006100730020007000650072006d
00690074007400650064002000620079002000740068006500200065006d
00620065006400640069006e006700200072006500730074007200690063
00740069006f006e007300200069006e0063006c00750064006500640020
0069006e0020007400680069007300200066006f006e0074003b00200061
006e006400200028006900690029002000740065006d0070006f00720061
00720069006c007900200064006f0077006e006c006f0061006400200074
00680069007300200066006f006e007400200074006f0020006100200070
00720069006e0074006500720020006f00720020006f0074006800650072
0020006f0075007400700075007400200064006500760069006300650020
0074006f002000680065006c00700020007000720069006e007400200063
006f006e00740065006e0074002e0068007400740070003a002f002f0077
00770077002e006d006900630072006f0073006f00660074002e0063006f
006d002f007400790070006f006700720061007000680079002f0066006f
006e00740073002f00640065006600610075006c0074002e006100730070
0078a92032303038204d6963726f736f667420436f72706f726174696f6e
2e20416c6c205269676874732052657365727665642e43616c6962726920
69732061206d6f6465726e2073616e732073657269662066616d696c7920
7769746820737562746c6520726f756e64696e6773206f6e207374656d73
20616e6420636f726e6572732e204974206665617475726573207265616c
206974616c6963732c20736d616c6c20636170732c20616e64206d756c74
69706c65206e756d6572616c20736574732e204974732070726f706f7274
696f6e7320616c6c6f77206869676820696d7061637420696e2074696768
746c7920736574206c696e6573206f662062696720616e6420736d616c6c
207465787420616c696b652e2043616c696272692773206d616e79206375
7276657320616e6420746865206e65772072617374657269736572207465
616d20757020696e206269676765722073697a657320746f207265766561
6c2061207761726d20616e6420736f6674206368617261637465722e5265
67756c61724d6963726f736f66743a2043616c696272693a203230303556
657273696f6e20352e363243616c69627269206973206569746865722061
20726567697374657265642074726164656d61726b206f72206120747261
64656d61726b206f66204d6963726f736f667420436f72706f726174696f
6e20696e2074686520556e697465642053746174657320616e642f6f7220
6f7468657220636f756e74726965732e4c7563286173292064652047726f
6f74687474703a2f2f7777772e6d6963726f736f66742e636f6d2f747970
6f6772617068792f6374666f6e7473687474703a2f2f666f6e7466616272
696b2e636f6d596f75206d617920757365207468697320666f6e74206173
207065726d6974746564206279207468652045554c4120666f7220746865
2070726f6475637420696e207768696368207468697320666f6e74206973
20696e636c7564656420746f20646973706c617920616e64207072696e74
20636f6e74656e742e20596f75206d6179206f6e6c792028692920656d62
6564207468697320666f6e7420696e20636f6e74656e7420617320706572
6d69747465642062792074686520656d62656464696e6720726573747269
6374696f6e7320696e636c7564656420696e207468697320666f6e743b20
616e6420286969292074656d706f726172696c7920646f776e6c6f616420
7468697320666f6e7420746f2061207072696e746572206f72206f746865
72206f75747075742064657669636520746f2068656c70207072696e7420
636f6e74656e742e687474703a2f2f7777772e6d6963726f736f66742e63
6f6d2f7479706f6772617068792f666f6e74732f64656661756c742e6173
70780000b2090320b80284b40918014a20b80283b40918014a20b80282b4
0918014a20b80281b40918014a20b80280b40918014a20b8027fb4091801
4a20b8027eb40918014a20b8027db40918014a20b8027cb40918014a20b8
027bb40918014a20b8027ab40918014a20b80279b40918014a20b80278b4
0918014a20b80277b40918014a20b80276b40918014a20b80275b4091801
4a20b80274b40918014a20b80273b40918014a20b80271b40918014a20b8
0270b40918014a20b8026fb40918014a20b8026eb40918014a20b8026db4
0918014a20b8026cb40918014a20b8026bb40918014a20b8026ab4091801
4a20b80269b40918014a20b80268b40918014a20b80267b40918014a20b8
0266b40918014a20b80265b40918014a20b80264b40918014a20b80263b4
0918014a20b80262b40918014a20b80261b40918014a20b80260b4091801
4a20b8025fb40918014a20b8025eb40918014a20b8025db40918014a20b8
025cb40918014a20b8025bb40918014a20b8025ab40918014a20b80259b4
0918014a20b80258b40918014a20b80257b40918014a20b80256b4091801
4a20b80255b40918014a20b80254b40918014a20b80253b40918014a20b8
0252b40918014a20b80251b40918014a20b80250b40918014a20b8024fb4
0918014a20b8024eb40918014a20b8024db40918014a20b8024cb4091801
4a20b8024bb40918014a20b8024ab40918014a20b80249b40918014a20b8
0248b40918014a20b80247b40918014a20b80246b40918014a20b80245b4
0918014a20b80244b40918014a20b80243b40918014a20b80242b4091801
4a20b80241b40918014a20b80240b40918014a20b8023fb40918014a20b8
023eb40918014a20b8023db40918014a20b8023cb40918014a20b8023bb4
0918014a20b8023ab40918014a20b80239b40918014a20b80238b4091801
4a20b80237b40918014a20b80236b40918014a20b80235b40918014a20b8
0234b40918014a20b80233b40918014a20b80232b40918014a20b80231b4
0918014a20b80230b40918014a20b8022fb40918014a20b8022eb4091801
4a20b8022db40918014a20b8022cb40918014a20b8022bb40918014a20b8
022ab40918014a20b80229b40918014a20b80228b40918014a20b80227b4
0918014a20b80226b40918014a20b80225b40918014a20b80224b4091801
4a20b80223b40918014a20b80222b40918014a20b80221b40918014a20b8
0220b40918014a20b8021fb40918014a20b8021eb40918014a20b8021db4
0918014a20b8021cb40918014a20b8021bb40918014a20b8021ab4091801
4a20b80219b40918014a20b80218b40918014a20b80217b40918014a20b8
0216b40918014a20b80215b40918014a20b80214b40918014a20b80213b4
0918014a20b80212b40918014a20b80211b40918014a20b80210b4091801
4a20b8020fb40918014a20b8020eb40918014a20b8020db40918014a20b8
020cb40918014a20b8020bb40918014a20b8020ab40918014a20b80209b4
0918014a20b80208b40918014a20b80207b40918014a20b80206b4091801
4a20b80205b40918014a20b80204b40918014a20b80203b40918014a20b8
0202b40918014a20b80201b40918014a20b80200b40918014a20b801ffb4
0918014a20b801feb40918014a20b801fdb40918014a20b801fcb4091801
4a20b801fbb40918014a20b801fab40918014a20b801f9b40918014a20b8
01f8b40918014a20b801f7b40918014a20b801f6b40918014a20b801f5b4
0918014a20b801f4b40918014a20b801f3b40918014a20b801f2b4091801
4a20b801f1b40918014a20b801f0b40918014a20b801efb40918014a20b8
01eeb40918014a20b801edb40918014a20b801ecb40918014a20b801ebb4
0918014a20b801eab40918014a20b801e9b40918014a20b801e8b4091801
4a20b801e7b40918014a20b801e6b40918014a20b801e5b40918014a20b8
01e4b40918014a20b801e3b40918014a20b801e2b40918014a20b801e1b4
0918014a20b801e0b40918014a20b801dfb40918014a20b801deb4091801
4a20b801ddb40918014a20b801dcb40918014a20b801dbb40918014a20b8
01dab40918014a20b801d9b40918014a20b801d8b40918014a20b801d7b4
0918014a20b801d6b40918014a20b801d5b40918014a20b801d4b4091801
4a20b801d3b40918014a20b801d2b40918014a20b801d1b40918014a20b8
01d0b40918014a20b801cfb40918014a20b801ceb40918014a20b801cdb4
0918014a20b801ccb40918014a20b801cbb40918014a20b801cab4091801
4a20b801c9b40918014a20b801c8b40918014a20b801c7b40918014a20b8
01c6b40918014a20b801c5b40918014a20b801c4b40918014a20b801c3b4
0918014a20b801c2b40918014a20b801c1b40918014a20b801c0b4091801
4a20b801bfb40918014a20b801beb40918014a20b801bdb40918014a20b8
01bcb40918014a20b801bbb40918014a20b801bab40918014a20b801b9b4
0918014a20b801b8b40918014a20b801b7b40918014a20b801b6b4091801
4a20b801b5b40918014a20b801b4b40918014a20b801b3b40918014a20b8
01b2b40918014a20b801b1b40918014a20b801b0b40918014a20b801afb4
0918014a20b801aeb40918014a20b801adb40918014a20b801acb4091801
4a20b801abb40918014a20b801aab40918014a20b801a9b40918014a20b8
01a8b40918014a20b801a7b40918014a20b801a6b40918014a20b801a5b4
0918014a20b801a4b40918014a20b801a3b40918014a20b801a2b4091801
4a20b801a1b40918014a20b801a0b40918014a20b8019fb40918014a20b8
019eb40918014a20b8019db40918014a20b8019cb40918014a20b8019bb4
0918014a20b8019ab40918014a20b80199b40918014a20b80198b4091801
4a20b80197b40918014a20b80196b40918014a20b80195b40918014a20b8
0194b40918014a20b80193b40918014a20b80192b40918014a20b80191b4
0918014a20b80190b40918014a20b8018fb40918014a20b8018eb4091801
4a20b8018db40918014a20b8018cb40918014a20b8018bb40918014a20b8
018ab40918014a20b80189b40918014a20b80188b40918014a20b80187b4
0918014a20b80186b40918014a20b80185b40918014a20b80184b4091801
4a20b80183b40918014a20b80182b40918014a20b80181b40918014a20b8
0180b40918014a20b8017fb40918014a20b8017eb40918014a20b8017db4
0918014a20b8017cb40918014a20b8017bb40918014a20b8017ab4091801
4a20b80179b40918014a20b80178b40918014a20b80177b40918014a20b8
0176b40918014a20b80175b40918014a20b80174b40918014a20b80173b4
0918014a20b80172b40918014a20b80171b40918014a20b80170b4091801
4a20b8016fb40918014a20b8016eb40918014a20b8016db40918014a20b8
016cb40918014a20b8016bb40918014a20b8016ab40918014a20b80169b4
0918014a20b80168b40918014a20b80167b40918014a20b80166b4091801
4a20b80165b40918014a20b80164b40918014a20b80163b40918014a20b8
0162b40918014a20b80161b40918014a20b80160b40918014a20b8015fb4
0918014a20b8015eb40918014a20b8015db40918014a20b8015cb4091801
4a20b8015bb40918014a20b8015ab40918014a20b80159b40918014a20b8
0158b40918014a20b80157b40918014a20b80156b40918014a20b80155b4
0918014a20b80154b40918014a20b80153b40918014a20b80152b4091801
4a20b80150b40918014a20b8014fb40918014a20b8014eb40918014a20b8
014cb40918014a20b8014bb40918014a20b8014ab40918014a20b80149b4
0918014a20b80148b40918014a20b80147b40918014a20b80146b4091801
4a20b80145b40918014a20b80144b40918014a20b80143b30918014ab802
84b21e3e1fb80283b21e151fb80282b21e3e1fb80281b21e3a1fb80280b2
1e3e1fb8027fb21e3e1fb8027eb21e0c1fb8027db21e3e1fb8027cb21e3e
1fb8027bb21e3e1fb8027ab21e3e1fb80279b21d411fb80278b21d431fb8
0277b21d431fb80276b21d431fb80275b21d411fb80274b21d431fb80273
b21d431fb80272b21d411fb80271b21d421fb80270b21d421fb8026fb21d
421fb8026eb21d431fb8026db21d431fb8026cb21d431fb8026bb21c451f
b8026ab21c451fb80269b21c451fb80268b21c451fb80267b21c451fb802
66b21c441fb80265b21c451fb80264b21c451fb80263b21c451fb80262b2
1c451fb80261b21c451fb80260b21c451fb8025fb21c451fb8025eb21c44
1fb8025db21c451fb8025cb21c451fb8025bb21c451fb8025ab21c451fb8
0259b21c451fb80258b21c451fb80257b21c451fb80256b21c451fb80255
b21c451fb80254b21c451fb80253b21c451fb80252b21c451fb80251b21c
451fb80250b21c451fb8024fb21c451fb8024eb21c451fb8024db21c451f
b8024cb21c451fb8024bb21c451fb8024ab21b491fb80249b21b491fb802
48b21b4a1fb80247b21b4a1fb80246b21b4b1fb80245b21b4c1fb80244b2
1b4c1fb80243b21b4c1fb80242b21b4b1fb80241b21b491fb80240b21b49
1fb8023fb21b4a1fb8023eb21b4a1fb8023db21b4a1fb8023cb21b4b1fb8
023bb21b4b1fb8023ab21b4c1fb80239b21b4c1fb80238b21b4c1fb80237
b21b4c1fb80236b21b4c1fb80235b21b491fb80234b21b491fb80233b21b
4a1fb80232b21b4a1fb80231b21b4a1fb80230b21b4b1fb8022fb21b4b1f
b8022eb21b4c1fb8022db21b4c1fb8022cb21b4c1fb8022bb21b4c1fb802
2ab21b4c1fb80229b21b4c1fb80228b21b4c1fb80227b21b491fb80226b2
1b491fb80225b21b4a1fb80224b21b4a1fb80223b21b4a1fb80222b21b4b
1fb80221b21b4b1fb80220b21b4c1fb8021fb21b4c1fb8021eb21b4c1fb8
021db21b4c1fb8021cb21b4c1fb8021bb21b4c1fb8021ab21a4e1fb80219
b21a4e1fb80218b21a4f1fb80217b21a4f1fb80216b21a4e1fb80215b21a
4e1fb80214b21a4f1fb80213b21a4f1fb80212b21a4f1fb80211b21a4e1f
b80210b21a4e1fb8020fb21a4f1fb8020eb21a4f1fb8020db21a4f1fb802
0cb21a4e1fb8020bb21a4e1fb8020ab21a4e1fb80209b21a4f1fb80208b2
1a4f1fb80207b21a4f1fb80206b219501fb80205b219511fb80204b21951
1fb80203b219501fb80202b219511fb80201b219511fb80200b219511fb8
01ffb219511fb801feb219501fb801fdb219511fb801fcb219511fb801fb
b219511fb801fab219501fb801f9b219511fb801f8b219511fb801f7b219
511fb801f6b219511fb801f5b218541fb801f4b218531fb801f3b218541f
b801f2b218541fb801f1b218541fb801f0b218531fb801efb218541fb801
eeb218541fb801edb218541fb801ecb218531fb801ebb218531fb801eab2
18541fb801e9b218541fb801e8b218541fb801e7b218541fb801e6b21853
1fb801e5b218541fb801e4b218531fb801e3b218541fb801e2b218541fb8
01e1b218541fb801e0b218531fb801dfb218531fb801deb218541fb801dd
b218541fb801dcb218541fb801dbb218541fb801dab218531fb801d9b218
541fb801d8b218541fb801d7b217571fb801d6b217561fb801d5b217561f
b801d4b217571fb801d3b217571fb801d2b217571fb801d1b217571fb801
d0b217561fb801cfb217561fb801ceb217571fb801cdb217571fb801ccb2
17571fb801cbb217571fb801cab217561fb801c9b217561fb801c8b21757
1fb801c7b217571fb801c6b217571fb801c5b217571fb801c4b217571fb8
01c3b217561fb801c2b217571fb801c1b217571fb801c0b217571fb801bf
b217561fb801beb217561fb801bdb217571fb801bcb217571fb801bbb217
571fb801bab217571fb801b9b217571fb801b8b217561fb801b7b217571f
b801b6b217571fb801b5b217571fb801b4b217571fb801b3b2163f1fb801
b2b2165b1fb801b1b2165b1fb801b0b2165b1fb801afb2165b1fb801aeb2
165b1fb801adb2165b1fb801acb2165b1fb801abb2165b1fb801aab2163e
1fb801a9b2163f1fb801a8b2163f1fb801a7b2165b1fb801a6b2165b1fb8
01a5b2165b1fb801a4b2165b1fb801a3b2165b1fb801a2b2165b1fb801a1
b2165b1fb801a0b2165b1fb8019fb2163e1fb8019eb2163f1fb8019db216
3f1fb8019cb2165b1fb8019bb2165b1fb8019ab2165b1fb80199b2165b1f
b80198b2163e1fb80197b2165b1fb80196b2165b1fb80195b2165b1fb801
94b2163e1fb80193b2163f1fb80192b2163f1fb80191b2165b1fb80190b2
165b1fb8018fb2165b1fb8018eb2165b1fb8018db2165b1fb8018cb2163f
1fb8018bb2165b1fb8018ab2165b1fb80189b2165b1fb80188b2165b1fb8
0187b2165b1fb80186b215611fb80185b215621fb80184b215621fb80183
b215661fb80182b215661fb80181b215551fb80180b215451fb8017fb215
361fb8017eb215361fb8017db215611fb8017cb215621fb8017bb215621f
b8017ab215641fb80179b215661fb80178b215661fb80177b215661fb801
76b215661fb80175b215661fb80174b215661fb80173b215451fb80172b2
15621fb80171b215621fb80170b215631fb8016fb215641fb8016eb21566
1fb8016db215661fb8016cb215661fb8016bb215661fb8016ab215661fb8
0169b215621fb80168b215621fb80167b215611fb80166b215641fb80165
b215641fb80164b215661fb80163b215661fb80162b215661fb80161b215
661fb80160b215661fb8015fb215661fb8015eb215551fb8015db215451f
b8015cb215451fb8015bb215361fb8015ab215611fb80159b215621fb801
58b215621fb80157b215631fb80156b215641fb80155b215661fb80154b2
15661fb80153b215661fb80152b215661fb80151b214401fb80150b21455
1fb8014fb214561fb8014eb214831fb8014db2142d1fb8014cb214401fb8
014bb214401fb8014ab214411fb80149b214401fb80148b214401fb80147
b214411fb80146b2147e1fb80145b214871fb80144b2147f1fb80143b214
801fb80142b212461fb80141b212461fb80140b212461fb8013fb212461f
b8013eb212441fb8013db212461fb8013cb211591fb8013bb211591fb801
3ab2115b1fb80139b2115b1fb80138b211471fb80137b211581fb80136b2
115a1fb80135b2115b1fb80134b2115b1fb80133b2112c1fb80132b21147
1fb80131b211551fb80130b211571fb8012fb211571fb8012eb211581fb8
012db211591fb8012cb211591fb8012bb2115a1fb8012ab2115a1fb80129
b2115b1fb80128b2115b1fb80127b2115b1fb80126b2115b1fb80125b211
561fb80124b211561fb80123b211571fb80122b211581fb80121b211591f
b80120b2115a1fb8011fb2115a1fb8011eb2115b1fb8011db2115b1fb801
1cb2115b1fb8011bb2115b1fb8011ab2115b1fb80119b2105d1fb80118b2
105e1fb80117b2105f1fb80116b2105f1fb80115b2105f1fb80114b2105f
1fb80113b2105f1fb80112b2105d1fb80111b2105e1fb80110b2105f1fb8
010fb2105f1fb8010eb2105f1fb8010db2105f1fb8010cb2105d1fb8010b
b2105e1fb8010ab2105f1fb80109b2105f1fb80108b2105f1fb80107b210
5f1fb80106b2105d1fb80105b2105e1fb80104b2105f1fb80103b2105f1f
b80102b2105f1fb80101b2105f1fb8010040ff0f621fff0f621ffe0f631f
fd0f641ffc0f621ffb0f621ffa0f621ff90f631ff80f641ff70f641ff60f
641ff50f641ff40f621ff30f621ff20f631ff10f641ff00f641fef0f641f
ee0f641fed0f621fec0f621feb0f631fea0f641fe90f641fe80f641fe70f
641fe60e671fe50e681fe40e681fe30e681fe20e681fe10e671fe00e681f
df0e681fde0e681fdd0e671fdc0e681fdb0e681fda0e681fd90e681fd80d
6b1fd70d311fd60d6b1fd50d6c1fd40d261fd30d261fd20d6c1fd10d2b1f
d00d2b1fcf0d2b1fce0d6b1fcd0d6c1fcc0d6d1fcb0d6b1fca0d6c1fc90d
6d1fc80d6a1fc70d691fc60d681fc50d671fc40d261fc30d311fc20d311f
c10d311f40ffc00d311fbf0d311fbe0d311fbd0c711fbc0c721fbb0c731f
ba0c741fb90c741fb80c741fb70c711fb60c711fb50c721fb40c731fb30c
741fb20c741fb10c741fb00c741faf0b791fae0b7a1fad0b7c1fac0b7d1f
ab0b7e1faa0b7e1fa90b7e1fa80b7e1fa70b7e1fa60b7e1fa50b2d1fa40b
7e1fa30b7e1fa20b791fa10b7e1fa00b6b1f9f0b791f9e0b7e1f9d0b7e1f
9c0b791f9b0b7a1f9a0b7c1f990b7d1f980b7e1f970b7e1f960b7e1f950b
7e1f940b7e1f930b7e1f920b6b1f910b2d1f900a4e1f8f0a4f1f8e0a671f
8d0aa51f8c0aa71f8503251f8403381f8301381f8255805581ab80557f55
7d557eab7d550b7d010b7d1b7d4b7d7b7dab7ddb7d4012060a7c557a557b
ab7a557955775578ab7755ba028600660285403c5576ab75550475147574
7503f47501ab750144750130750102007510752075030c7455725573ab72
55007250728072b072043bb072e072020072010ab8ffc0b3721b1e46b8ff
c0407c720d104671556f5570ab6f556e666d556a03251f6938675568ab67
556638645565ab645563386255613860555f385d555eab5d555c385a555b
ab5a55593858555703251f5638545555ab54555338515552ab51554f384e
554e03251f4d384b554cab4b554a38485549ab4855473846554503381f00
1c101c201c0310b8ffc0404e1c1b1e46001b0142301b401be01bf01b0400
1bb01bc01b03120f1a1f1a02290f1901434f19016f197f198f19030f18cf
18024018292c460f17cf17df17ef1704134017292e460016101620160315
b8ffc0b3164d5446b8ffc0b3163f4446b8ffc0b316313546b8ffc0404d16
2326460f15010f151f1502451f15010011e011f0110315bf10cf10020f0f
010f0fff0f02400f3135460f0e1f0e020f0e1f0eff0e03400e3137460f0d
1f0d020f0d1f0dff0d0316400d313746b8ffc040270c5054460f0b1f0b02
553f0b4f0b02400b3f4346400b2d30460003012001010001100120010308
b8ffc0b301151f46b80100b316010501b80190b154532b2b4bb80800524b
b008505bb00188b02553b00188b040515ab00688b000555a5b58b101018e
59b101024354b0144b515a58b101018e59858d8d00421d4bb01d5358b0a0
1d594bb0805358b0401d594bb0ff5358b0001db1160042592b5e7375732b
2b745e732b2b5e73742b73742b7374745e7301755e73742b2b2b2b5e732b
5e732b7374755e735e735e73755e732b5e73002b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b5e73755e732b2b5e735f73
737373742b2b2b2b2b2b5e73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2bb1000243545841ff028400640283
0064028200640281006402800064027f0064027e0064027d0064027c0064
027b0064027a006402790064027800640277006402760064027500640274
0064027300640271006402700064026f0064026e0064026d0064026c0064
026b0064026a006402690064026800640267006402660064026500640264
006402630064026200640261006402600064025f0064025e0064025d0064
025c0064025b0064025a0064025900640258006402570064025600640255
00640254006402530064025200640251006402500064024f0064024e0064
024d0064024c0064024b0064024a00640249006402480064024700640246
0064024500640244006402430064024200640241006402400064023f0064
023e0064023d0064023c0064023b0064023a006402390064023800640237
006402360064023500640234006402330064023200640231006402300064
022f0064022e0064022d0064022c0064022b0064022a0064022900640228
006402270064022600640225006402240064022300640222006402210064
02200064021f0064021e0064021d0064021c0064021b0064021a00640219
006402180064021700640216006402150064021400640213006402120064
0211006402100064020f0064020e0064020d0064020c0064020b0064020a
00640209006402080064020700640206006402050064020441ff00640203
006402020064020100640200006401ff006401fe006401fd006401fc0064
01fb006401fa006401f9006401f8006401f7006401f6006401f5006401f4
006401f3006401f2006401f1006401f0006401ef006401ee006401ed0064
01ec006401eb006401ea006401e9006401e8006401e7006401e6006401e5
006401e4006401e3006401e2006401e1006401e0006401df006401de0064
01dd006401dc006401db006401da006401d9006401d8006401d7006401d6
006401d5006401d4006401d3006401d2006401d1006401d0006401cf0064
01ce006401cd006401cc006401cb006401ca006401c9006401c8006401c7
006401c6006401c5006401c4006401c3006401c2006401c1006401c00064
01bf006401be006401bd006401bc006401bb006401ba006401b9006401b8
006401b7006401b6006401b5006401b4006401b3006401b2006401b10064
01b0006401af006401ae006401ad006401ac006401ab006401aa006401a9
006401a8006401a7006401a6006401a5006401a4006401a3006401a20064
01a1006401a00064019f0064019e0064019d0064019c0064019b0064019a
006401990064019800640197006401960064019500640194006401930064
019200640191006401900064018f0064018e0064018d0064018c0064018b
0064018a0064018900640188006401870064018600640185006441800184
006401830064018200640181006401800064017f0064017e0064017d0064
017c0064017b0064017a0064017900640178006401770064017600640175
00640174006401730064017200640171006401700064016f0064016e0064
016d0064016c0064016b0064016a00640169006401680064016700640166
0064016500640164006401630064016200640161006401600064015f0064
015e0064015d0064015c0064015b0064015a006401590064015800640157
0064015600640155006401540064015300640152006401500064014f0064
014e0064014c0064014b0064014a00640149006401480064014700640146
00640145006401440064014300642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b185f5e00>
[10817 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

1 0 3 <> SPVAAA+Calibri AddT42Char 
1 10516 1044 <00020038fff102650296001300270022401214001e0a10190119af0f7f1f
230123af0582003fed713fed71012fc1d4c1313001140e0223222e023534
3e0233321e0207342e0223220e0215141e0233323e02026522466b484968
421f21446b494f6b401a8c10213625233421101323352228331f0d01474d
7e59322e577d50497c5a34365b7a4938573a1d1c385338445b35151e3b53
>SPVAAA+Calibri AddT42Char 
1 10516 1044 <00020038fff102650296001300270022401214001e0a10190119af0f7f1f
230123af0582003fed713fed71012fc1d4c1313001140e0223222e023534
3e0233321e0207342e0223220e0215141e0233323e02026522466b484968
421f21446b494f6b401a8c10213625233421101323352228331f0d01474d
7e59322e577d50497c5a34365b7a4938573a1d1c385338445b35151e3b53
>SPVAAA+Calibri AddT42Char 
1 10666 1064 <0001ff4bffdc036e053500150029b90013ffc0b40f10014c13b8ffc0b40b
014d1308b8ffc0b510014d081005002f2f012f2b2f2b2b3130070e032322
26263637013e0333321616060722050e141c14161b0b03080384050e151b
15151b0c03080809090703080d130c0509080b0603070e140b00>SPVAAA+Calibri AddT42Char 
1 10782 1081 <ffff0048ffdc05700535002704140010028700270414030b000000070428
017c0000>SPVAAA+Calibri AddT42Char 
1 7262 856 <00010097fff7016e00e0000b0017b10006b8ffc0b60c014d0609034c003f
cd012f2bc13130251406232226353436333216016e2f3e3c2e2f3e3c2e6d
472f2e45472f2e00>SPVAAA+Calibri AddT42Char 
1 7918 1004 <00020048ffed03c705210013002b00ea4019281201291101260d01260c01
2608012507012a03012902012db8ffc040250f024d602d01141810014d14
100f014d14160d014d140a0c014d14200b014d14180c014d14bb022d0000
0020ffe8b310014d20b8fff0b30f014d20b8ffeab30d014d20b8fff6b30c
014d20b8ffe8b60c014d24200120b8022d40090a200030004000030ab8ff
f040090f014d2f0a4f0a0200b8ffd040090f014d0a100f024d00b8ffc040
0a0f024d000a000a2d2c1bb8010ab20f5325b8010ab10556003fed3fed11
120139392f2f2b2b2b5d2b5d10e15d2b2b2b2b2b10e12b2b2b2b2b2b3130
5d2b5d5d5d5d5d5d5d5d01140e0223222e0235343e0233321e0207342e04
23220e0215141e0233323e0403c72f6db0817aa7662b306cb0807ba7662b
b00e1b2b3c4d30556a3d161e41654838553d281809028a95f6b16157a9f7
a094f7b16157a9f7ac619a76553719508cbc6c91cb803a24435e7285>SPVAAA+Calibri AddT42Char 
1 8276 1005 <000100ae0000039f0517002e00e54024241e01241d01241c01231b01241a
01241901261801261701291201291101122010014d30b8ffc0400d0f024d
60300100200b014d0029b8ffe8b310014d29b8fff0b30f014d29b8fff0b3
0d014d29b8fff6b30c014d29b8fff8b30b014d29b80211400e1e18200b01
4d180b200b014d0b11b8ffe0b30f014d11b8ffd4b30f024d11b8ffc0b310
014d11b8ffe0b30f014d11b8ffc0b30c014d11b8fff040090b014da01101
111312b8013fb323522910b80107b10654003fed323ffdcd012f5d2b2b2b
2b2b2bcd2bc42b33f12b2b2b2b2bc52b31305d2b002b015d5d5d5d5d5d5d
5d5d5d25140e022321222e0235343e02332111070606262635343e023725
3e0333321e02151133321e02039f060a0d07fd5c070c0b0606090d08010e
fa13170e0503060b09012a040c12181218201206ea080e090544131a1007
07101a13121a110903d8950a040d1e171118100c06bf0304040104070b06
fb8f09111a00>SPVAAA+Calibri AddT42Char 
1 8642 1006 <000100720000039c0521003e0094400d2936012b1e01291d01261e0140b8
ffc040170f024d604001161810014d16100c0d014c16200b014d16b8022d
b633253325330039b8ffe8b310014d39ba027f000bffc0b30c014d0bb8ff
e0400b0f014d0b1138392020391bb8012eb63316062e531039b80128b106
54003fed323f123939ed11392f123939012f2b2be12bcd39392f2f10e12b
2b2b31305d2b005d015d5d5d25140e022321222e0235343e0237133e0335
342e0223220e0223222e0235343e0633321e0215140e02070721321e0203
9c05090f09fd350e150f07030a0f0cfb576939121c3550343d6149310c07
0b0704020508183b596b3b5e8d5d2e1647866fcd0233080f0b054a121c13
0907101e16141e17170d010a5c9278622b2b4d3a2222282208121e150f16
100e15242318355c7a453e7b8faf72d609121b00>SPVAAA+Calibri AddT42Char 
1 8962 1007 <00010067ffed0392052100580105b9005affc0401c0f024d605a01310810
014d31100f014d31100c0d014c31200b014d31b80235400a4e53264e4e18
13014d40b8ffe840260f014d26200f014d40264e4e2640030e1b0810014d
1b100f014d1b100c0d014c1b200b014d1bb8fff8b30b014d1bb8022db500
080b014d00b8ffe8b40f024d000eb8ffe0b30f014d0eb8fff0b30f014d0e
b8ffc040130c014d0e3b400f014d3b400c0d014c2f3b0111b8ffc0b30f01
4d11b8ffc0400a0c0d014c3b113b111636b8010b400a49532cf320200549
5316b8010bb10556003fed3f12392fed3910ed1139392f2f2b2b5d2b2b01
2f2b2b2bd42b2be12b2b2b2b2b1217392f2f2f2b2b2b11123910e12b2b2b
2b31305d2b01140e0223222e0635343633321e0233323e0235342e022323
222e0235343e023333323e0235342e0223220e0223222e0235343e063332
1e0215140e0207151e0303923e74aa6b4171583a0f0806030e0d0935536f
44426444222b53794d7b080f0b07060b0e0971426949271a3451353a614c
320a070b0703020608133a556f405a885b2d203e5a3b436f502d0172598f
6637151d1f0e0e141d15241c202520223e55323758402207101a1513190f
07224059372849361f232823050f1b160f17110e132423182e5475473d69
51390b020735506b>SPVAAA+Calibri AddT42Char 
1 9450 1009 <00010065ffed0396050e003e00c1400d27370127360126080126030140b8
ffc0b60f024d60400137b8ffe8b310014d37b8fff0b40b0d014c37ba0211
0028ffc0402810014d28400f014d280e4f326f327f3203321d1810014d1d
100f014d1d100c0d014c1d200b014d1dba02330000ffe8b30f024d00b8ff
c0b50f014d004013b8ffc0b70f10014c13131836b8012c400c2c3af42022
012222052c5118b8010bb10556003fed3f12392f5ded10ed11392f2b0110
d62b2be12b2b2b2bc45dd4d42b2be12b2b31305d2b005d5d015d5d01140e
0223222e0635343e0233321e0233323e0235342e02232206232226351134
363321321e02151406232111363633321e0203964680b16c3c6c54360f06
050203080b070a2a4769484370512e27517c563d58261c181f1d023d080f
0a051412fe1d2349306fa66f3901a068a26f3a1119180e0c111a12111b11
08191d1a2044674a3e5f3f1f0c1a25020f212009121c132428fe95050235
618a>SPVAAA+Calibri AddT42Char 
1 9812 1011 <00010063fffa03af050e001f00d7b90011ffe8400a1121014c111010014d
11b8ffe8b30f014d11b8fff0b30d014d11b8ffe8b30c014d11b8fff8400a
0b014d74110126110110b8ffe8400a1121014c101010014d10b8ffe8b30f
014d10b8fff0b30d014d10b8ffe8400b0b0c014c75100126100106b8fff0
b30b014d21b8ffc0b60f024d60210100b8ffc0b310014d00b8ffd8b40b01
4d0015b8ffc0b30c014d15b8ffe8b30b014d15b8ffe8b30f014d15b8ffe0
b50f024d150511b8012db31a510b55003f3fed32012f2b2b2b2bcd2b2b31
305d2b2b5d5d2b2b2b2b2b5d5d2b2b2b2b2b2b01140e0207010e03232226
2636370121222635343e023321321e0203af03050906fe2e050f17241a22
2611020601eafd931313050a0e0902f20e150b0604c4121d1b190efbce0c
0f0903060d130d044a2824131c130906121c>SPVAAA+Calibri AddT42Char 
1 7330 972 <00030052ffed03ba05210027003700470182b90036fff0b40f11014c36b8
fff0b40c0d014c35b8fff0b40f11014c35b8fff0b40c0d014c34b8fff0b4
0f11014c34b8fff0b40c0d014c33b8fff0b311014d33b8fff0b30f014d49
b8ffc0b60f024d60490130b8fff0b40c0d014c30b8fff0b40f10014c30b8
fff0b40c0d014c30b8ffe0b30b014d30b8021940191428100c0d014c2810
0f10014c28100c0d014c28200b014d28b80218401a1e0f231e1e180f014d
14180f014d141e141e0a38100c0d014c38b8ffd040151d014d38100f1001
4c38100c0d014c38200b014d38ba02430000ffd4b30f024d00b8ffe0b30f
014d00b8ffc0b314014d00b8ffc0b310014d00b8ffc0b30d014d00b8ffc0
b40b014d0042b8fff0400a0c0d014c42301d014d42b8fff0b40f10014c42
b8fff0b40c0d014c42b8ffe0b30b014d42b8024340110a400b014d0a353d
052dfd195945fd055f003fed3fed123939012f2be12b2b2b2b2bd42b2b2b
2b2b2be12b2b2b2b2b1239392f2f2b2b12393910e12b2b2b2b10e12b2b2b
2b31305d2b002b2b2b2b2b2b2b2b01140e0223222e0235343e02372e0335
343e0233321e0215140e02071e0303342e0223220615141e021736361334
2e02270e0315141633323603ba3c71a66b649e6e3a284b6e453c5c402131
639966628f5d2c21405d3c476f4b27d81d3853356c6f1b39573c656c2a22
4567443f5f3d1f85848083014c54835a2e2a52784d3d66564b221f45515c
36447758332f516e3f335e544920234a555f025f2a443019625527433c39
1f347efda22e4b413d211f3e42492c616a6b>SPVAAA+Calibri AddT42Char 
1 10130 1012 <ffff0052ffed03ba0521020603cc0000>SPVAAA+Calibri AddT42Char 
1 10146 1013 <00020052ffed03a605210030004200bd4013292e012a0501290401290301
2a2601260a0144b8ffc040200f024d60440131080d014d31100c0d014c1d
7a3101393149316931032b310131b8022c4009000e0e200070000200b8ff
e0b30f024d00b8ffe0b40f014d003bb8fff8b30d014d3bb8fff040120c0d
014c753b01363b463b663b03243b013bb8022b400e2f25012540f2202007
36f42a5318b80108b10756003fed3fed12392fed012f5de15d5d5d2b2bc4
2b2b5d392f10e15d5d5d322b2b31305d2b005d5d015d5d5d5d01140e0423
222e0435343e0233321e0233323e0237060623222e0235343e0233321e04
07342e0223220e0215141e0233323603a61430517ba9702b51412c140903
060b080b283d5233618b582c023594606c935927326aa472517d5c402711
af2242603f415c3b1c19385a424b8c02ba54ac9f8b683b0b1012121f1a16
1a0e050f120f4b7ea65c1f303b668c53569b7646294d6d8aa14680af6c30
2f4f64353b6244252d00>SPVAAA+Calibri AddT42Char 
1 7024 845 <00020085fff60357055e003400480026400e24241f0914b305053009443a
4d1fb80101b13046003fed3fddce11392fed1112392f313001140e020707
140623222e023503263e023333323e0235342e0223220e0223222e023534
3e0433321e0201140e0223222e0235343e0233321e020357325a7e4d0723
27151e1208060109121c1216415c391a204061423a5740290a070b080406
14395161346b9a6430fec40918291e20281909091928201e29180903df58
88603605f10f0f03070c080115171d130729445c32395f4526191e180611
1d161819131f1a123d688cfc3b212b1b0b0b1b2b21212d190b0b192d>SPVAAA+Calibri AddT42Char 
1 322 4 <00020023fffa047e051400220026009db90024ffe8b40c10014c23b8ffe8
b40c10014c26b8fff0b40b10014c0bb8fff0b40b10014c0ab8fff0401a0b
10014c25100b10014c0d100b10014c0c100b10014c40280125b8fff0402c
0b014d24232625f40c0b0c18221d230a0d0116040c000c100c02af23bf23
cf2303230c230c121d5212550555003f3f3f1239392f2f5d5d1117391112
3939113310ed3211333130012b5d2b2b2b2b2b2b002b2b25161606062322
2e02270321030e03232226263637013e0333321e02170723032104750801
10251f1f251309046ffde66a030a13231c1d250f010801b2040d19271e20
2a1a0e047b01df01c23d161b0e0403070c09013bfec9090d0904050e1b16
04b20b0e080303080f0b8dfd7b00>SPVAAA+Calibri AddT42Char 
1 606 69 <000100acfffa047e0511003d0085b3270f0f14b8ffe8b310014d14b8ffe8
b30f014d14b8ffe8b30d014d14b8fff0b30c014d14b8ffe8b30b014d14b8
0211401e1e0a2e2e321810014d32180f014d32180d014d32100c014d3218
0b014d32b802114010001e38520a2e0f270419225119550654003f3f3f12
17393f012fd4e12b2b2b2b2b32113310e12b2b2b2b2b322f33313025140e
022323222e0227012626272316161511140e0223222e0235113436333332
1e0217011e03173326263511343e0233321e0215047e0d151a0d371a2723
2315fe6820411c02020208131f18181f12082c1a521d271f1d11013a1d36
32311801020108131f191620120847141c12080b1d322702e0397d3b4896
4afcf3070d070505070d0704aa28220a17291ffdc83463605d2f4fab4f02
be070c090404090c0700>SPVAAA+Calibri AddT42Char 
1 916 75 <00020063ffed04e8052100130027007c401a141810014d14100f014d1414
0d014d14120c014d14180b014d14b80233400920003000800003001eb8ff
e8b310014d1eb8fff0b30f014d1eb8ffecb30d014d1eb8ffeeb30c014d1e
b8ffe8b30b014d1ebb0233000a00190129b20f5323b8012bb10556003fed
3fed012fe12b2b2b2b2bd45de12b2b2b2b2b313001140e0223222e023534
3e0233321e0207342e0223220e0215141e0233323e0204e84a93de9492d5
8b444a94de948fd48d45b5275b987070985f29265a9772719a5e2802969d
fcb15f57a6f6a099faaf5f56a5f3a96ebd8b4e548cbb6772c08b4d548fbc
>SPVAAA+Calibri AddT42Char 
1 1156 100 <0001000ffffa03d7050e00220065b718400d014d181100b8ffc0b40d014d
0006b8ffe8b310014d06b8fff0b30f014d06b8fff0b30d014d06b8fff6b3
0c014d06b8ffe8b30b014d06ba02110011ffc0b50d014d110612b80128b3
1d510c55003f3fed32012f2bf12b2b2b2b2bc52b10c42b313001140e0223
2111140e0223222e02351121222e0235343e023321321e0203d704090d08
fe940814211918221408fe94080d080505080d080384080d090404c4131c
1108fb9e080c070505070c08046208111c13131d120808121d00>SPVAAA+Calibri AddT42Char 
1 1362 104 <000100aaffed04790514002b0099401d602d01201810014d20100f014d20
100d014d200a0c014d20180b014d20b802104011004015014d004013014d
004011014d0016b8ffe8b310014d16b8fff0b30f014d16b8fff0b30d014d
16b8fff6b30c014d16b8ffe8b30b014d16ba0210000affc0b315014d0ab8
ffc0400913014d0a265210521bb80129b10556003fed3f3f012f2b2be12b
2b2b2b2bd42b2b2be12b2b2b2b2b31305d01140e0223222e023511343e02
33321e021511141e0233323e023511343e0233321e021504794580b8756b
b07e440814201a182213082c5375494b75512b081421191821130901de76
b980423e79b6770323080c070505070c08fcf25a86592d2c588257031708
0c070505070c0800>SPVAAA+Calibri AddT42Char 
1 1640 116 <0001003dfffa06e00514003c0067b3263c0132b8fff840430b0c014c2532
012f080b0c014c282f0125100b0c014c25250122180b0c014c2922011820
0b0c014c2d31012d30012d24012d230137522a5223300b03121d52125505
55003f3f3f1217393f3f31305d5d5d5d012b5d2b5d2b5d2b5d2b5d250e03
23222e02270123030e0323222e0227012626363633321e02170133013e03
33321e02170133013e03333216160607058304101c291e1f2b1c0e04fef1
02fa030e1a2920212c1c0f03feaa06011126201f24130702012301011403
0914251e1c21140903012902011d030613231d1e23100105260e11090404
09110e03d1fc2f0e1109040409110e04ab171a0e0403080e0bfbc4043a0b
0f080404080f0bfbc6043b0a0f0804050e1a1700>SPVAAA+Calibri AddT42Char 
1 1930 258 <0002005cffed033f03ca0033004000b040200f421f422f42030b0917340c
0c014d34100d014d34180b014d34100f10014c34b801f7400e0027270f00
010c00100f014d003ab8fff0b30c014d3ab8ffe8b30d014d3ab8ffe8b30b
014d3ab8ffe8b40f10014c3ab8020840141117c500341034023bc0340100
340134342e412ab8011b400fd022012222041dea2e4a3ddc0c4d04002f3f
ed3fed12392f5ded1112392f5d715e5ded012fe12b2b2b2bc42b5e5d392f
10e12b2b2b2b323931305e5d25140606232226263535060623222e023534
3e02333335342e0223220e0223222e0235343e0433321e02150723220e02
15141633323637033f101c1b1a1f0e3b91514773512d3e74a8697c16314e
393d6149310c080c0904071b4256663461885426a48d4464421f5950416f
3d180c0c06060c0c5a3f46254666414c704a25463450351b1d231d081019
0f191d1a231d132c557e54c4172d3f2946534244>SPVAAA+Calibri AddT42Char 
1 2280 272 <0001005affed032003c900350089b11c00b8ffc0b310014d00b8ffe0b30d
014d00b8ffe8b40b014d0027b8ffe8b310014d27b8fff0b30f014d27b8ff
eeb30c014d27b8ffe8b30b014d27b8ffeab30d014d27b8020b400d2f0e01
0e19e71f400a0d481f24b80102b4134a03eb31b8ffc0b4090d48312cb801
06b1094d003ffdd42bed3ffdd42bed012f5de12b2b2b2b2bc42b2b2b3231
3025140e0623222e0235343e0233321e0615140623222e0223220615141e
0233323e0233321e020320020507193c4b582f61966535417199592b5144
3518090602120d0f273c553a777f21405d3c39563f2b0c070a0703a21119
110d19251d12407bb37585bf7a3b101a22180e131812271f212821b7ae57
83582b242b2308131d00>SPVAAA+Calibri AddT42Char 
1 2560 282 <00020060ffed039c056d00260039008b401f3f3b010b1b39100d014d390a
0c014d391010014d39100f014d39180b014d39bb01f90000002fffe0b30d
014d2fb8ffe8b310014d2fb8fff0b30f014d2fb8fff0b30c014d2fb8ffe8
b30b014d2fb8020a400a1321460b39271b040e2ab80105b2184a34b80104
b30e4d054c003f3fed3fed1217393f012fe12b2b2b2b2bd4e12b2b2b2b2b
323931305d25140e0223222e023535060623222e0235343e023332161711
343e0233321e021503262623220e0215141e0233323e0237039c07111c14
151c120847995b638c57283262915f4f834007141f1819201209a6437d44
3f58371915345641213d40462719080c070404070c08774d564d83b16274
bb84474543020b070d070505070d07fd4553573c627c404482653d122a43
3100>SPVAAA+Calibri AddT42Char 
1 2862 286 <0002005dffed039903ca002b003400ae402a2f363f366f360313200d014d
13200f014d1313212c100c014d2c180b014d2c100d014d2c100f10014c2c
b801f9b5442ba42b022bb8fff0b50f014d2b3404b8ffe0b30d014d04b8ff
eeb30c014d04b8ffe0b30b014d04b8ffe8b40f10014c04b8020a4021212c
c78004900402c00401d0040104041c2fdc264a18ea600e700e020e09ea1c
4d003ffdd45ded3fed12392f5d7172ed012fe12b2b2b2b32dd2b5de12b2b
2b2b12392f2b2b31305d0114062321141e0233323e0233321e0215140e06
23222e0235343e0233321e021527362623220e020703992719fdb21e4670
514064492f0c070b06030203070b365671406fa7723a3c71a0636a95602d
a60379773d5c3e2202020227214b78562e151a15070e19120d130f0c0b19
18133e7ab87a74b9814544739b581382942e4c653700>SPVAAA+Calibri AddT42Char 
1 3184 336 <00030035fe93038903c8003e004e005f00d04015122d47100f014d47080c
014d47201013014c47333fb8fff8b30c014d3fb8fff0b30f014d3fb8ffe0
b61013014c3f074fb8ffe0400d0f12014c4f1b040f3003330707b8ffe0b3
10014d1bb8ffc0400d10014d2d33071b1b07332d0400b8ffe040340b014d
0058100f014d58201012014c582a25400b12014c250f300703384ada0c53
e81515603803e93c482a2042d9384a5bd9204f003fed3fed12393fed1112
392fedd6ed121739012f2b33cd2b2bc42b17392f2f2f2f2b2b1112173910
cd2b10cd2b2b2b10cd2b2b2b10cd31300114062323161615140e02232226
27060615141617171e0315140e0223222e0235343e023726263534363726
2635343e023332161721321601342623220e0215141633323e0213342627
270e0315141633323e020389130f81231c325d804e37631b12174136eb43
70522e346ba6716d99622c10213120312f32251f24345c814c29471f0110
1111fefe655d30472f17655b31482f17535f51e92029180984764b653e1b
0374231f24572f4e78532c1d16122e1e232e020a02213d593b3e70553125
405934213e383319194c2c3d6026255d424d7a542d090821fef15c672038
492859661f3748fd5e3a3f0208192d29281541431d303e00>SPVAAA+Calibri AddT42Char 
1 3658 349 <00020085fffa0151052f00150021008cb73f234f236f230316b8ffe8b30d
014d16b8fff6b30c014d16b8ffe8b313014d16b8ffe0b310014d16b8fff0
b30f014d16b8ffe8b30b014d16bb0271001c0015fff0b30d014d15b8fff6
b30c014d15b8ffe8b30b014d15b8fff0b40f10014c15b801f8b60a1f400f
014d1fb8013eb4191049054c003f3fd6ed2b012fe12b2b2b2bd4e12b2b2b
2b2b2b31305d25140e0223222e023511343e0233321e0215131406232226
353436333216013e08122019182013070713201819201208132c3b3a2b2c
3b3a2b19080b080404080b080384070c080404080c0701303a2a29393a2a
2900>SPVAAA+Calibri AddT42Char 
1 3900 367 <00010099fffa013e057100150040b73f174f176f170300b8fff0b30d014d
00b8fff6b30c014d00b8ffe8b30b014d00b8fff0b40f10014c00b801f8b4
0a1046054c003f3f012fe12b2b2b2b31305d25140e0223222e023511343e
0233321e0215013e0812201918201307071320181920120819080b080404
080b080538080c080404080c0800>SPVAAA+Calibri AddT42Char 
1 4034 373 <00010099fffa05d003ca005000ea401b12100b014d13180b014d26100b0c
014c27180b0c014c7052014613b8fff6b30c014d13b8ffe8b30b014d13b8
fff0b310014d13b8fff0b30f014d13b8ffeab30d014d13b801f8401e1e16
0d014d1e1e320a0a0c014d0a100d014d0a180b014d0a100f10014c0ab801
f9b7504011014d503e27b8fff6b30c014d27b8ffe8b30b014d27b8fff0b3
10014d27b8fff0b30f014d27b8fff0b30d014d27bb01f8003200100106b2
4b4a24b80106400d414a3e462d38492d4c194c054c003f3f3f3f1239393f
ed3fed012fe12b2b2b2b2b39d42be12b2b2b2b11392f2be12b2b2b2b2b39
31305d002b2b2b2b25140e0223222e023511342e022322060711140e0223
222e023511342e022322060711140e0223222e023511343e0233321e0215
15363633321e02173e0333321e021505d00812201819201308142c442e39
73450813201817211307162c432e397444081220191820130706121c1716
1d10074c8f4938594430102d514b47245776491f19080b080404080b0802
23395e44245855fd8b080b080404080b080223395e44245855fd8b080b08
0404080b080384080b090303090b0877554f1a2f412831442a133d66894c
>SPVAAA+Calibri AddT42Char 
1 4484 374 <00010099fffa03a003ca00320094400f12100b014d13100b014d3f34012a
13b8fff0b310014d13b8fff0b30f014d13b8fff0b30d014d13b8fff6b30c
014d13b8ffe8b30b014d13b801f8401b1e0b1010014d0b100d014d0b100f
014d0b0a0c014d0b180b014d0bb801f8b700400c014d001e10b80106400a
2d4a2a192449194c054c003f3f3f12393fed012f2f2be12b2b2b2b2b10e1
2b2b2b2b2b3931305d002b2b25140e0223222e023511342e022322060711
140e0223222e023511343e0233321e021515363633321e021503a0081220
1819201208182e49303e7c44081220191820130706121c17161d10074c97
4d5a7b4c2119080b080404080b08020f4d5e44245855fd8b080b08040408
0b080384080b090303090b0877554f3d66896000>SPVAAA+Calibri AddT42Char 
1 4774 381 <0002005affed03de03ca0013002700a8401c3f2901281201291101260d01
260c012608012607012a03012902011eb8ffe8b310014d1eb8fff0b30f01
4d1eb8ffe0b30d014d1eb8ffeeb30c014d1eb8ffe8b30b014d1eb8020a40
1e2f0a010a141810014d14100f014d14200d014d14120c014d14180b014d
14ba020a0000ffc0b70f004d7000010019b80101b20f4a23b80102b1054d
003fed3fed012f5d2be12b2b2b2b2b2f5de12b2b2b2b2b31305d5d5d5d5d
5d5d5d5d01140e0223222e0235343e0233321e0207342e0223220e021514
1e0233323e0203de3a73ad726fa56e363973ac736fa56e37ae1b3e6a4f49
6944211b3f6a4f486a442001e56eb9864b427eb4726eb9864a427eb47c49
826239345f824d4a826139345e82>SPVAAA+Calibri AddT42Char 
1 5058 393 <00020099fe9403d503ca002a003d0080b53f3f0121360ab8fff0b30d014d
0ab8fff6b30c014d0ab8fff0b40f10014c0ab8ffe8b30b014d0ab801f840
17152b200d014d2b120c014d2b180f10014c2b180b014d2bb8020a400900
150a363521040530b80105b6264a1b49104f39b80105b1054d003fed3f3f
3fed121739012fd4e12b2b2b2b10e12b2b2b2b323931305d01140e022322
2e022711140e0223222e023511343e0233321e0215153e0333321e020734
2e0223220e020711161633323e0203d53363925e28444140240812201918
20130706121c14151b1207294c4d512d628a5728ae15335640203e404627
447a433e59371a01e976bc834710223423fe3e080c080404080c0804e909
0b080303080b09792a3e29154c84af754581643c13294331fe9a53583c64
7c00>SPVAAA+Calibri AddT42Char 
1 5360 396 <00010099fffa02a703ca00330063b4703501260fb8fff6b30c014d0fb8ff
e8b30b014d0fb8fff0b40f10014c0fb8fff0b30d014d0fb801f840120040
13014d004011014d00200d014d001a0ab8012540092b4a260f152049154c
003f3f1239393fed012fc42b2b2be12b2b2b2b3931305d01140e0223222e
0223220e020711140e0223222e023511343e0233321e0215153e0333321e
0602a70206090808171d24151930353a23081220191820130706121c1716
1d100725413a391d0d21241d0c0403010362161e1109090908142e4c37fd
b0080b080404080b080384080b090303090b08833644270f03080a0a090e
1b00>SPVAAA+Calibri AddT42Char 
1 5602 400 <00010051ffed02ce03ca004900ce400c2f4b3f4b4f4b7f4baf4b0541b8ff
f0b30d014d41b8fff6b30c014d41b8fff0b30f014d41b8ffc0b313014d41
b8fff0b310014d41b8fff0b30b014d41b801dc401f243224320c1b100d01
4d1b0a0c014d1b1010014d1b100b014d1b100f014d1bba01f60000ffc040
0a0f014d000c400b014d0cb8ffc0402613014d3f0caf0c020c2edd370aeb
115011601170110337113711163cdb411b05294a16e8054d003fed3f1239
39ed1139392f2f5d10ed10ed012f5d2b2bd42be12b2b2b2b2b1239392f2f
e12b2b2b2b2b2b31305d01140e0223222e0435343e0233321e0233323e02
35342e0635343e0233321e0615140e0223222e0223220e0215141e0602ce
335e824e30574530160a04060b070b2b3f56382a44321b27405055514027
29527b5224483a291507030303070a06092236492f2a4029152840525553
4027010e456c4a260f171914241f131a10071b201b122336252634281f22
2b3e563c3561492c0c1215100c0f1610111910071619161323301c273528
20222a3c5400>SPVAAA+Calibri AddT42Char 
1 5998 410 <00010021ffef026d04ad003a005cb4290011232db8fff0b30f014d2db8ff
f0b30d014d2db8fff6b30c014d2db8ffe8b310014d2db8ffe8b30b014d2d
b801f8400c170d2ded23481d0ded174831b80104b1074d003fed3fedcd3f
ed012f33e12b2b2b2b2b32cdc432313025140e0423222e02351123222635
343e02333335343e0233321e02151533321e02151406232311141633323e
0233321e02026d081020292e174664401d7e0f1205080d087d0713201819
201208e7080c0904120fe7374717241c1408050905045b1d22100e090625
4b734e020e2024131a1107d6070c090404090c07d607111a132420fe0a5d
5f090a09050e1800>SPVAAA+Calibri AddT42Char 
1 6246 437 <00010094ffed039c03bc00320092401f3f34010b27100d014d270a0c014d
27080b014d27100f10014c27100b014d27b801f9b6004011014d001fb8ff
f0b30d014d1fb8fff6b30c014d1fb8fff8b40f10014c1fb8fff8b30b014d
1fb8fff0b40f10014c1fb8fff0b30b014d1fb801f94009132d49270b0519
4924b80105b30e4d054c003f3fed3f1239393f012fe12b2b2b2b2b2bd42b
e12b2b2b2b2b3931305d25140e0223222e023535060623222e023511343e
0233321e021511141e023332363711343e0233321e0215039c07121d1517
1d11064d964d5a7b4c210714201818201308172f48303e7b4507141f1918
20120919080b080404080b0877554e3c6789620222080b090303090b08fd
f44f5f432558550275080b090303090b0800>SPVAAA+Calibri AddT42Char 
1 6534 454 <00010029fffa034b03bc002f0086b90031ffc040110b014d2f080b014d2e
100b014d3b2e0118b8fff0b60b014d34180117b8fff8b30b014d16b8fff0
b60b014d34160109b8fff0402a0b014d00080b014d3c0001382301360b01
0b2010014d0b200c014d0b0b31302949230b111d49114c054c003f3f3f12
39393f111201392f2b2b3130005d5d015d2b2b5d2b2b5d2b5d2b2b2b2516
14060623222e022703030e0323222626363701012626363633321e021713
133e033332161606070103430813271f1e23150b04d8d7040b15221c1d25
1101090118fef708011327201d23140a04cdd0040a111f1b1d25120209fe
f92c0e130c0503070b070165fe9b070b0703050c130e01b701a70e130d04
03060a07feb1014f060a0703040b140ffe5e>SPVAAA+Calibri AddT42Char 
1 6822 455 <00010022fe94037c03bc00240052b9001bfff040350b014d371b01291b01
18180b014d261801260e360e022709011a400b014d3a1a0119380b014d3b
19011f49190a13490a4b044f004b003f3f3f3f12393f31305d2b5d2b015d
5d5d2b5d5d2b2103060623222e023713262627012634363633321e021701
33133e023332161614070233780631321a201102067c091003febf081024
1e1e22140905010103f8061122201c241106feb51011050c140e01390412
0a035c15180e0503080f0dfd2e02d6130b05050e1812>SPVAAA+Calibri AddT42Char 
1 0 0 <00050000fe7303d2050e000300070039004d004e005bbc000d0152001600
3a01b5b5154444082d07be0143000200200154000800010143400f04020d
b71a1a3f23b735068d031149b8012db43f078d0202003ffddefdce2ffdde
ed12392fed012fdde1dee110f1ce11392f33e1d4e1313001112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>SPVAAA+Calibri AddT42Char 
SPVAAA+Calibri /CharStrings get begin
/g3 3 def
/g1081 1081 def
/g856 856 def
/g1004 1004 def
/g1005 1005 def
/g1006 1006 def
/g1007 1007 def
/g1009 1009 def
/g1011 1011 def
/g1012 1012 def
/g1013 1013 def
/g845 845 def
/g4 4 def
/g69 69 def
/g75 75 def
/g100 100 def
/g104 104 def
/g116 116 def
/g258 258 def
/g272 272 def
/g282 282 def
/g286 286 def
/g336 336 def
/g349 349 def
/g367 367 def
/g373 373 def
/g374 374 def
/g381 381 def
/g393 393 def
/g396 396 def
/g400 400 def
/g410 410 def
/g437 437 def
/g454 454 def
/g455 455 def
end
SPVAAA+Calibri /Encoding get
dup 32 /g3 put
dup 37 /g1081 put
dup 46 /g856 put
dup 48 /g1004 put
dup 49 /g1005 put
dup 50 /g1006 put
dup 51 /g1007 put
dup 53 /g1009 put
dup 55 /g1011 put
dup 56 /g1012 put
dup 57 /g1013 put
dup 63 /g845 put
dup 65 /g4 put
dup 78 /g69 put
dup 79 /g75 put
dup 84 /g100 put
dup 85 /g104 put
dup 87 /g116 put
dup 97 /g258 put
dup 99 /g272 put
dup 100 /g282 put
dup 101 /g286 put
dup 103 /g336 put
dup 105 /g349 put
dup 108 /g367 put
dup 109 /g373 put
dup 110 /g374 put
dup 111 /g381 put
dup 112 /g393 put
dup 114 /g396 put
dup 115 /g400 put
dup 116 /g410 put
dup 117 /g437 put
dup 120 /g454 put
dup 121 /g455 put
pop
end
%ADOEndSubsetFont
/ZONLWA+Calibri /SPVAAA+Calibri findfont ct_VMDictPut
/ZONLWA+Calibri*1 
[32{/.notdef}rp /g3 4{/.notdef}rp /g1081 8{/.notdef}rp /g856 /.notdef /g1004 
/g1005 /g1006 /g1007 /.notdef /g1009 /.notdef /g1011 /g1012 
/g1013 5{/.notdef}rp /g845 /.notdef /g4 12{/.notdef}rp /g69 /g75 
4{/.notdef}rp /g100 /g104 /.notdef /g116 9{/.notdef}rp /g258 /.notdef 
/g272 /g282 /g286 /.notdef /g336 /.notdef /g349 2{/.notdef}rp 
/g367 /g373 /g374 /g381 /g393 /.notdef /g396 /g400 
/g410 /g437 2{/.notdef}rp /g454 /g455 134{/.notdef}rp]
ZONLWA+Calibri nf
ZONLWA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
59.5199 25.032 mo
(No)
[4.44336 0 ]xsh
67.6801 25.032 mo
( )sh
ZONLWA+Calibri*1 [6.984 0 0 -6.984 0 0 ]msf
49.5602 33.5761 mo
(Wildcards )
[6.23214 1.55402 1.55402 3.5941 2.99715 3.34537 2.41894 3.5941 2.80707 0 ]xsh
ZONLWA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
54.9602 42.0961 mo
(20.9% )
[3.48125 3.48125 1.79262 3.48125 4.9491 0 ]xsh
114.41 13.9441 mo
(Only)
[4.55928 3.60374 1.5499 0 ]xsh
127.25 13.9441 mo
( )sh
100.1 22.464 mo
(Unconstrained )
[4.44338 3.59568 2.99403 3.70732 3.59569 2.75551 2.28285 2.40372 3.35472 1.55559 3.59567 3.46915 
3.66867 0 ]xsh
ZONLWA+Calibri*1 [6.984 0 0 -6.984 0 0 ]msf
106.82 31.0077 mo
(Wildcards )
[6.23214 1.55402 1.55401 3.59411 2.99716 3.34536 2.41894 3.59412 2.81331 0 ]xsh
ZONLWA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
114.05 39.528 mo
(3.7% )
[3.48125 1.79263 3.48554 4.92098 0 ]xsh
ZONLWA+Calibri*1 [6.984 0 0 -6.984 0 0 ]msf
101.06 55.5358 mo
(Uses ? extends )
[4.44456 2.75082 3.48112 2.75092 1.57785 3.23093 1.71444 3.48112 3.00247 2.27701 3.48111 3.60086 
3.5941 2.76254 0 ]xsh
ZONLWA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
115.34 64.0558 mo
(1.5% )
[3.48125 1.79263 3.48125 4.95536 0 ]xsh
106.06 77.9761 mo
(Uses )
[4.47108 2.74852 3.46915 2.76951 0 ]xsh
121.06 77.9761 mo
(? )
[3.23733 0 ]xsh
126 77.9761 mo
(super )
[2.75552 3.59567 3.59569 3.46915 2.42319 0 ]xsh
117.1 86.496 mo
(1.8% )
[3.48125 1.79263 3.48125 4.9452 0 ]xsh
ZONLWA+Calibri*1 [6.984 0 0 -6.984 0 0 ]msf
35.1602 64.344 mo
(No)
[4.44337 0 ]xsh
43.32 64.344 mo
( )sh
ZONLWA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
16.0559 72.8639 mo
(Type Arguments )
[3.35959 3.12052 3.59567 3.46916 1.80917 4.07414 2.40372 3.24538 3.59567 5.52031 3.46916 3.60967 
2.28286 2.8184 0 ]xsh
30.6 81.3838 mo
(72.0% )
[3.48125 3.48125 1.79262 3.48125 4.92529 0 ]xsh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
/ZONLWA+Calibri*1 uf
/ZONLWA+Calibri uf
/SPVAAA+Calibri uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF

%%EndDocument
 @endspecial 917 773 V 121 x Fv(Figur)o(e)46 b(18.)37
b FF(W)m(ildcard)47 b(usage)g(in)917 941 y(type-parameter)20
b(constraints)1984 737 y @beginspecial 0 @llx 0 @lly
144 @urx 108 @ury 1180 @rwi 885 @rhi @setspecial
%%BeginDocument: intersections.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: intersections.pdf
%%Creator: Adobe Acrobat 9.4.2
%%For: Sorin Lerner
%%CreationDate: 24/03/2011, 15:53:21
%%BoundingBox: 0 0 144 108
%%HiResBoundingBox: 0 0 144 108
%%CropBox: 0 0 144 108
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 550 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.1-c043 52.372728, 2009/01/18-15:08:04        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreateDate="2011-03-23T12:58:48-07:00"
   xmp:ModifyDate="2011-03-23T12:58:48-07:00"
   pdf:Producer="GPL Ghostscript 8.71"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -108 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 108 li
144 108 li
144 0 li
cp
clp
[1 0 0 1 0 0 ]ct
0 108 mo
144 108 li
144 0 li
0 0 li
cp
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
0 sep
ef
36.3602 83.0398 mo
51.12 83.0398 li
51.12 10.4398 li
36.3602 10.4398 li
cp
ef
gsave
36.2398 83.6398 mo
139.68 83.6398 li
139.68 7.32001 li
36.2398 7.32001 li
cp
eclp
.72 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
36.3602 83.0398 mo
51.12 83.0398 li
51.12 10.4398 li
36.3602 10.4398 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
51.1199 83.0398 mo
65.7601 83.0398 li
65.7601 18.48 li
51.1199 18.48 li
cp
ef
.72 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
51.1199 83.0398 mo
65.7601 83.0398 li
65.7601 18.48 li
51.1199 18.48 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
65.7602 83.0398 mo
80.4 83.0398 li
80.4 42.6 li
65.7602 42.6 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
65.7602 83.0398 mo
80.4 83.0398 li
80.4 42.6 li
65.7602 42.6 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
80.4 83.0398 mo
95.1602 83.0398 li
95.1602 52.2 li
80.4 52.2 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
80.4 83.0398 mo
95.1602 83.0398 li
95.1602 52.2 li
80.4 52.2 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
109.8 83.0398 mo
124.44 83.0398 li
124.44 67.9199 li
109.8 67.9199 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
109.8 83.0398 mo
124.44 83.0398 li
124.44 67.9199 li
109.8 67.9199 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
124.44 83.0398 mo
139.08 83.0398 li
139.08 67.9199 li
124.44 67.9199 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
124.44 83.0398 mo
139.08 83.0398 li
139.08 67.9199 li
124.44 67.9199 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
36.3602 83.0398 mo
36.3602 7.56 li
@
34.2 83.0398 mo
36.3602 83.0398 li
34.2 67.9199 mo
36.3602 67.9199 li
34.2 52.9199 mo
36.3602 52.9199 li
34.2 37.8 mo
36.3602 37.8 li
34.2 22.6801 mo
36.3602 22.6801 li
34.2 7.56 mo
36.3602 7.56 li
@
36.3602 83.0398 mo
139.08 83.0398 li
@
%ADOBeginSubsetFont: CUFAAA+Calibri Initial
ct_T42Dict begin
-0.5 -0.305 1.238 0.961
 256 array 0 1 255 {1 index exch /.notdef put} for  /CUFAAA+Calibri
Type42DictBegin
[<00010000000c000c000c000c4f532f3200000000000000cc000000566376
7420b09bc4d2000001240000051c6670676df6f64d0c000006400000091a
676c79660000000000006fc400000be268656164e625fe3d00000f5c0000
0036686865610dad073500000f9400000024686d74780000000000000fb8
00000f7c6c6f63610000000000001f3400001e466d617870213024e40000
3d7c000000206e616d65267651f400003d9c00000e16707265706baf02fe
00004bb40000241067646972000000000000000000000000000100000190
000500080000000000000000000000000000000000000000000000000000
00000000000000000000000000080000000000000000000000000000f000
f0ff00000000000000000000000000010000000000000000079e0000fe93
0000000000000000000000000050006a0073008000800086008d009300bf
00db006200830093009900a000a600a900b000c100c900d7000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000fe79056d000c03b7000600130000fffaffedfea6
ffedfeb8050e000600130000fffaffedfe93050e00130420000600130000
fffaffedff10ffee050e00130420000600130000fffaffeefe93ff10feb8
0612000a050e0006000d02d2fffafff301fdfffa023f0006000dff36fffa
fff302870006000f0000fffafff1079efeaffea700000000000000000000
000000500051005a005b005c005d006000610062006400680069006a006b
006c006d006e00680069006e00600067006e00660068005f006100630064
00660068006a006b006c006d006e006f0070006f00720074007500760076
007000720073007400750076006f00700071007200730075007700770078
0079007a007b007c007d007b007c007d00770079007a007c0078007a007c
007d0078007d007e007f008000810082007e007f00810082007e007f0080
008100820083008400850086008700880089008300840085008600870088
0089008300840085008600870088008900890086008700880089008a008b
008c008d008e008f008a008b008c008d008e008f008a008b008c008d008e
008f008d008a008b008c008d008e008f0090009000910092009300940095
009600980099009b009c0090009100920093009400950096009700980099
009a009e009f00a60090009100950098009f009000910096009700bc00c6
00b500ae00af00b6006800690063006a006f00700071006f007000710072
0066006c006d00700079007c007f00830086008700880089008a00740075
00760077007a007b007c007d007e008200850086008a0088008900830078
007b00820083008600870088008900760079007a007c007d007e00830085
00880089008a0073007400750077007a007d00880089008a008b008c008d
008e00900094008b008c008d00910092009300940095008c008d00910095
008f009000910092009300940095008b008c008d008e008f009000910092
009300940095008b008c008d008e008f0090009100920093009600970098
0099009c0096009700980099009a009b009c00960099009a009c00960097
00980099009a009b009c009700980099009a009b009c009700980099009a
009b009c0096009d00a000a1009d009e009f00a000a100a2009d009f00a0
00a1009f00a2009d009e009f00a000a100a2009d009e00a000a1009d009e
00a000a2009d00a300a400a500a600a700a300a400a600a700a300a400a5
00a600a700a600a300a700a800a900aa00ab00ac00ac00a800a900aa00ab
00ac00a800a900aa00ab00ac00a800aa00ab00ac00ae00ad00ae00af00b0
00b100b200b300b400b500b600b700b800ad00ae00ad00ae00af00b000b1
00b200b300b400b500b600b700b800ad00ae00af00b000b100b200b300b4
00b500b600b700b800b300ae00af00b000b200b500b600b700b800b900ba
00bb00bc00be00c000c100c200c200b900ba00bb00bc00bd00be00bf00c0
00c100c200c400ba00bb00be00bf00c000c200c300c400b900ba00bf00c0
00c200c600c700c900ca00cb00cc00cf00c500c700ce00c500c700c800cf
00d000d200d300d7010d00d000d100e900d000fd00d005e4000e00410000
05ba009c009c005e005e4047645f5e5d5c5b5a59585554535251504f4e4d
4c4b4a494847464544434241403f3e3d3c3b3a39383736352f2e2d2c2826
252423221f181411100f0d0b0a090807060504030201002c4523466020b0
2660b004262348482d2c452346236120b02661b004262348482d2c452346
60b0206120b04660b004262348482d2c4523462361b0206020b02661b020
61b004262348482d2c45234660b0406120b06660b004262348482d2c4523
462361b0406020b02661b04061b004262348482d2c0110203c003c2d2c20
452320b0cd442320b8015a51582320b08d44235920b0ed51582320b04d44
235920b0042651582320b00d44235921212d2c20204518684420b0016020
45b04676688a4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b
2d2c00b0282370b101283e01b0282370b10228453ab10200080d2d2c2045
b00325456164b050515845441b2121592d2c2045b0004360442d2c01b006
43b00743650a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c64
2364615c58b00361592d2c8a03458a8a87b0112bb0292344b0297ae4182d
2c4565b02c234445b02b23442d2c4b525845441b2121592d2c01b0052510
23208af500b0016023edec2d2c01b005251023208af500b0016123edec2d
2c01b0062510f500edec2d2c20b001600110203c003c2d2c20b001610110
203c003c2d2c00b00743b006430b2d2c21210c6423648bb84000622d2c21
b08051580c6423648bb82000621bb200402f2b59b002602d2c21b0c05158
0c6423648bb81555621bb200802f2b59b002602d2c0c6423648bb8400062
6023212d2c4523456023456023456023766818b08062202d2cb00426b004
26b00425b0042545234520b003266062636820b0032661658a2344442d2c
2045b0005458b040442045b04061441b2121592d2c45b1302f4523456160
b0016069442d2c4b5158b02f2370b01423421b2121592d2c4b515820b003
2545695358441b2121591b2121592d2c45b01443b0006063b0016069442d
2cb02f45442d2c452320458a60442d2c45234560442d2c4b235158b90033
ffe0b134201bb3330034005944442d2cb0164358b00326458a586466b01f
601b64b020606620581b21b04059b001615923586559b02923442310b029
e01b2121212121592d2cb0164358b004254564b020606620581b21b04059
b0016123586559b0292344b00425b00725082058021b0359b0052510b004
252046b0042523423cb0072510b006252046b00425b0016023423c205801
1b0059b0052510b00425b029e0b0072510b00625b029e0b00425b0072508
2058021b0359b00425b003254348b00625b00325b0016043481b21592121
21212121212d2cb0164358b004254564b020606620581b21b04059b00161
23581b6559b0292344b00525b00825082058021b0359b0042510b0052520
46b0042523423cb00425b0072508b0072510b006252046b00425b0016023
423c2058011b0059b0042510b00525b029e0b02920456544b0072510b006
25b029e0b00525b00825082058021b0359b00525b003254348b00425b007
2508b00625b00325b0016043481b2159212121212121212d2c02b0042520
2046b004252342b0052508b003254548212121212d2c02b0032520b00425
08b0022543482121212d2c452320451820b00050205823652359236820b0
40505821b04059235865598a60442d2c4b53234b515a5820458a60441b21
21592d2c4b545820458a60441b2121592d2c4b53234b515a58381b212159
2d2cb000214b5458381b2121592d2cb002435458b0462b1b21212121592d
2cb002435458b0472b1b212121592d2cb002435458b0482b1b2121212159
2d2cb002435458b0492b1b212121592d2c208a08234b538a4b515a582338
1b2121592d2c0020b200400325b0062649618b3812342d2c014623466023
466123201020468a61b8ff80628ab140408a704560683a2d2c208a234964
8a2353583c1b21592d2c4b52587d1b7a592d2cb012004b014b54422d2cb1
020042b123018851b1400188535a58b910000020885458b2020102436042
59b12401885158b920000040885458b2020202436042b12401885458b202
2002436042004b014b5258b2020802436042591bb940000080885458b202
040243604259b94000008063b80100885458b202080243604259b9400001
0063b80200885458b202100243604259b94000020063b80400885458b202
400243604259595959592d2c451868234b51582320452064b04050587c59
688a6059442d2cb00016b00225b0022501b001233e00b002233eb1010206
0cb00a236542b00b234201b001233f00b002233fb10102060cb006236542
b0072342b00116012d2c20b82000628a6023622d2cb0072558001b0159b0
042510b00325b0022520b8ffff545821cd1bed5921b006255cb006255a58
b0092b5920b005254ab0042547b004254760b0062547b0806361b00225b0
005558b00325b00725496359b0082558001b0159b00425b0062549b00925
5cb009255a58b0092b59b0072546b0806361b0032520b0005558631b2159
612320b0005558b080631b21b08059b0592bb006255c586959b004252020
10b00048233ab0062658001b0159b0052658b003252f598a12233221212d
2cb00625b00a2587b00625b009254ab0005358b00625b00a251bb00925b0
072559b00225b00225070cb005256323b00625636020b940000400635358
21b00426b00426b00a1bb94000040063655158b0042665b0042665b00a1b
b00426b00426b000b00325b003250b0d0ab0092eb00725b007250b0d0ab0
0b2eb00525b0052507595920b0005558b00525b0052587b00725b007250b
b0092510b00b25b0092620b8ffff545821cd1bed59b00525b0052507b008
25b00b254923b00625b0062587b00a2510b00b25c15920b00051b8005223
78b00161b00225b00725b0072507b00a25b00d254961b08062b00525b005
250bb00a252338b00625b0062587b00825b008250bb00a2510b00b25c4b0
0625b0062507b00925b00c2549b0032554b8ffa723792121212121212121
212121212d2c23b0005458b9400000001bb900004000598ab0005458b940
0000001bb90000400059b05b2b2d2c08b0005458b9400000001bb9000040
00590db05b2b2d2c8a8a080d8ab0005458b9400000001bb90000400059b0
5b2b2d2cb00426b00426080db00426b00426080db05b2b2d2c204569442d
00000001000000059eb8b1b0afba5f0f3cf50019080000000000bbeb7ccc
00000000c522987afbfafd8b09ec07b60000000900020000000000000001
00000600fe0001c40aa0fbfafaa009ec0001000000000000000000000000
000003cb040e0000040e0000040e000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000002050097020500970205009702050097020500970205
009702050097020500970205009702050097020500970205009702050097
020500970205009702050097020500970205009702050097020500970205
009702050097020500970205009702050097020500970205009702050097
020500970205009702050097020500970205009702050097020500970205
009702050097020500970205009702050097020500970205009702050097
020500970205009702050097020500970205009702050097020500970205
009702050097020500970205009702050097020500970205009702050097
020500970205009702050097020500970205009702050097020500970205
009702050097020500970205009702050097020500970205009702050097
020500970205009702050097020500970205009702050097020500970205
009702050097020500970205009702050097020500970205009702050097
020500970205009702050097020500970205009702050097020500970205
009702050097020500970205009702050097020500970205009702050097
020500970205009702050097020500970205009702050097020500970205
0097020500970205009702050097040e006b006b006b006b006b006b006b
006b006b006b006b006b006b006b006b006b006b006b006b006b006b006b
006b006b006b006b006b006b006b006b006b006b006b006b004800ae0072
006700300065006b000000a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100c300c300c300c300c300c300c300c300c3
00c300c300c300c300c300c300c300c300c300c300c300c300c300c300c3
00c300c300c300c300c300c300c300c300c300c300c300c300c300c300c3
00c300c300c300c300c300c300c300c300c300c300c300c300c300c300c3
00c300c300c300c300c300c300c300c300c300c300c300c300c300c300c3
00c300c300c300c300c300c300c300c300c300c300c300c300c300c300c3
00c300c300c300c300c300c300c300c300c300c300c300c300c300c300c3
00c300c300c300c300c300c300c300c300c300c300c300c300c300c300c3
017101710171017101710171017101710171017101710171017101710171
017101710171017101710171017101710171017101710171017101710171
0171017101710171022402db037b046f053405e905f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f105f105f105f105f105f105f1
05f105f105f105f105f105f105f105f105f10000000100000f2200590005
0049000200020010002f0065000011902410000100010000002d02220000
000300000000006400000000000300000001000e00640000000300000002
000e03040000000300000003003003120000000300000004000e00640000
000300000005001803420000000300000006000e00640000000300000007
00fa035a0000000300000008002a03d00000000300000009002004540000
00030000000a02a00064000000030000000b00560474000000030000000c
002a04ca000000030000000d029804f4000000030000000e006c078c0001
000000000000003207f800010000000000010007082a0001000000000002
0007097a00010000000000030018098100010000000000040007082a0001
000000000005000c099900010000000000060007082a0001000000000007
007d09a50001000000000008001509e0000100000000000900100a220001
00000000000a0150082a000100000000000b002b0a32000100000000000c
00150a5d000100000000000d014c0a72000100000000000e00360bbe0003
000104090000006400000003000104090001000e00640003000104090002
000e03040003000104090003003003120003000104090004000e00640003
000104090005001803420003000104090006000e00640003000104090007
00fa035a0003000104090008002a03d00003000104090009002004540003
00010409000a02a00064000300010409000b00560474000300010409000c
002a04ca000300010409000d029804f4000300010409000e006c078c00a9
002000320030003000380020004d006900630072006f0073006f00660074
00200043006f00720070006f0072006100740069006f006e002e00200041
006c006c0020005200690067006800740073002000520065007300650072
007600650064002e00430061006c00690062007200690020006900730020
00610020006d006f006400650072006e002000730061006e007300200073
0065007200690066002000660061006d0069006c00790020007700690074
006800200073007500620074006c006500200072006f0075006e00640069
006e006700730020006f006e0020007300740065006d007300200061006e
006400200063006f0072006e006500720073002e00200049007400200066
00650061007400750072006500730020007200650061006c002000690074
0061006c006900630073002c00200073006d0061006c006c002000630061
00700073002c00200061006e00640020006d0075006c007400690070006c
00650020006e0075006d006500720061006c00200073006500740073002e
0020004900740073002000700072006f0070006f007200740069006f006e
007300200061006c006c006f00770020006800690067006800200069006d
007000610063007400200069006e002000740069006700680074006c0079
00200073006500740020006c0069006e006500730020006f006600200062
0069006700200061006e006400200073006d0061006c006c002000740065
0078007400200061006c0069006b0065002e002000430061006c00690062
00720069002700730020006d0061006e0079002000630075007200760065
007300200061006e006400200074006800650020006e0065007700200072
0061007300740065007200690073006500720020007400650061006d0020
0075007000200069006e0020006200690067006700650072002000730069
007a0065007300200074006f002000720065007600650061006c00200061
0020007700610072006d00200061006e006400200073006f006600740020
006300680061007200610063007400650072002e0052006500670075006c
00610072004d006900630072006f0073006f00660074003a002000430061
006c0069006200720069003a002000320030003000350056006500720073
0069006f006e00200035002e0036003200430061006c0069006200720069
002000690073002000650069007400680065007200200061002000720065
00670069007300740065007200650064002000740072006100640065006d
00610072006b0020006f007200200061002000740072006100640065006d
00610072006b0020006f00660020004d006900630072006f0073006f0066
007400200043006f00720070006f0072006100740069006f006e00200069
006e002000740068006500200055006e0069007400650064002000530074
006100740065007300200061006e0064002f006f00720020006f00740068
0065007200200063006f0075006e00740072006900650073002e004c0075
00630028006100730029002000640065002000470072006f006f00740068
007400740070003a002f002f007700770077002e006d006900630072006f
0073006f00660074002e0063006f006d002f007400790070006f00670072
0061007000680079002f006300740066006f006e00740073006800740074
0070003a002f002f0066006f006e007400660061006200720069006b002e
0063006f006d0059006f00750020006d0061007900200075007300650020
007400680069007300200066006f006e0074002000610073002000700065
0072006d0069007400740065006400200062007900200074006800650020
00450055004c004100200066006f00720020007400680065002000700072
006f006400750063007400200069006e0020007700680069006300680020
007400680069007300200066006f006e007400200069007300200069006e
0063006c007500640065006400200074006f00200064006900730070006c
0061007900200061006e00640020007000720069006e007400200063006f
006e00740065006e0074002e00200059006f00750020006d006100790020
006f006e006c0079002000280069002900200065006d0062006500640020
007400680069007300200066006f006e007400200069006e00200063006f
006e00740065006e00740020006100730020007000650072006d00690074
007400650064002000620079002000740068006500200065006d00620065
006400640069006e00670020007200650073007400720069006300740069
006f006e007300200069006e0063006c007500640065006400200069006e
0020007400680069007300200066006f006e0074003b00200061006e0064
00200028006900690029002000740065006d0070006f0072006100720069
006c007900200064006f0077006e006c006f006100640020007400680069
007300200066006f006e007400200074006f002000610020007000720069
006e0074006500720020006f00720020006f00740068006500720020006f
00750074007000750074002000640065007600690063006500200074006f
002000680065006c00700020007000720069006e007400200063006f006e
00740065006e0074002e0068007400740070003a002f002f007700770077
002e006d006900630072006f0073006f00660074002e0063006f006d002f
007400790070006f006700720061007000680079002f0066006f006e0074
0073002f00640065006600610075006c0074002e0061007300700078a920
32303038204d6963726f736f667420436f72706f726174696f6e2e20416c
6c205269676874732052657365727665642e43616c696272692069732061
206d6f6465726e2073616e732073657269662066616d696c792077697468
20737562746c6520726f756e64696e6773206f6e207374656d7320616e64
20636f726e6572732e204974206665617475726573207265616c20697461
6c6963732c20736d616c6c20636170732c20616e64206d756c7469706c65
206e756d6572616c20736574732e204974732070726f706f7274696f6e73
20616c6c6f77206869676820696d7061637420696e2074696768746c7920
736574206c696e6573206f662062696720616e6420736d616c6c20746578
7420616c696b652e2043616c696272692773206d616e7920637572766573
20616e6420746865206e65772072617374657269736572207465616d2075
7020696e206269676765722073697a657320746f2072657665616c206120
7761726d20616e6420736f6674206368617261637465722e526567756c61
724d6963726f736f66743a2043616c696272693a20323030355665727369
6f6e20352e363243616c6962726920697320656974686572206120726567
697374657265642074726164656d61726b206f7220612074726164656d61
726b206f66204d6963726f736f667420436f72706f726174696f6e20696e
2074686520556e697465642053746174657320616e642f6f72206f746865
7220636f756e74726965732e4c7563286173292064652047726f6f746874
74703a2f2f7777772e6d6963726f736f66742e636f6d2f7479706f677261
7068792f6374666f6e7473687474703a2f2f666f6e7466616272696b2e63
6f6d596f75206d617920757365207468697320666f6e7420617320706572
6d6974746564206279207468652045554c4120666f72207468652070726f
6475637420696e207768696368207468697320666f6e7420697320696e63
6c7564656420746f20646973706c617920616e64207072696e7420636f6e
74656e742e20596f75206d6179206f6e6c792028692920656d6265642074
68697320666f6e7420696e20636f6e74656e74206173207065726d697474
65642062792074686520656d62656464696e67207265737472696374696f
6e7320696e636c7564656420696e207468697320666f6e743b20616e6420
286969292074656d706f726172696c7920646f776e6c6f61642074686973
20666f6e7420746f2061207072696e746572206f72206f74686572206f75
747075742064657669636520746f2068656c70207072696e7420636f6e74
656e742e687474703a2f2f7777772e6d6963726f736f66742e636f6d2f74
79706f6772617068792f666f6e74732f64656661756c742e617370780000
b2090320b80284b40918014a20b80283b40918014a20b80282b40918014a
20b80281b40918014a20b80280b40918014a20b8027fb40918014a20b802
7eb40918014a20b8027db40918014a20b8027cb40918014a20b8027bb409
18014a20b8027ab40918014a20b80279b40918014a20b80278b40918014a
20b80277b40918014a20b80276b40918014a20b80275b40918014a20b802
74b40918014a20b80273b40918014a20b80271b40918014a20b80270b409
18014a20b8026fb40918014a20b8026eb40918014a20b8026db40918014a
20b8026cb40918014a20b8026bb40918014a20b8026ab40918014a20b802
69b40918014a20b80268b40918014a20b80267b40918014a20b80266b409
18014a20b80265b40918014a20b80264b40918014a20b80263b40918014a
20b80262b40918014a20b80261b40918014a20b80260b40918014a20b802
5fb40918014a20b8025eb40918014a20b8025db40918014a20b8025cb409
18014a20b8025bb40918014a20b8025ab40918014a20b80259b40918014a
20b80258b40918014a20b80257b40918014a20b80256b40918014a20b802
55b40918014a20b80254b40918014a20b80253b40918014a20b80252b409
18014a20b80251b40918014a20b80250b40918014a20b8024fb40918014a
20b8024eb40918014a20b8024db40918014a20b8024cb40918014a20b802
4bb40918014a20b8024ab40918014a20b80249b40918014a20b80248b409
18014a20b80247b40918014a20b80246b40918014a20b80245b40918014a
20b80244b40918014a20b80243b40918014a20b80242b40918014a20b802
41b40918014a20b80240b40918014a20b8023fb40918014a20b8023eb409
18014a20b8023db40918014a20b8023cb40918014a20b8023bb40918014a
20b8023ab40918014a20b80239b40918014a20b80238b40918014a20b802
37b40918014a20b80236b40918014a20b80235b40918014a20b80234b409
18014a20b80233b40918014a20b80232b40918014a20b80231b40918014a
20b80230b40918014a20b8022fb40918014a20b8022eb40918014a20b802
2db40918014a20b8022cb40918014a20b8022bb40918014a20b8022ab409
18014a20b80229b40918014a20b80228b40918014a20b80227b40918014a
20b80226b40918014a20b80225b40918014a20b80224b40918014a20b802
23b40918014a20b80222b40918014a20b80221b40918014a20b80220b409
18014a20b8021fb40918014a20b8021eb40918014a20b8021db40918014a
20b8021cb40918014a20b8021bb40918014a20b8021ab40918014a20b802
19b40918014a20b80218b40918014a20b80217b40918014a20b80216b409
18014a20b80215b40918014a20b80214b40918014a20b80213b40918014a
20b80212b40918014a20b80211b40918014a20b80210b40918014a20b802
0fb40918014a20b8020eb40918014a20b8020db40918014a20b8020cb409
18014a20b8020bb40918014a20b8020ab40918014a20b80209b40918014a
20b80208b40918014a20b80207b40918014a20b80206b40918014a20b802
05b40918014a20b80204b40918014a20b80203b40918014a20b80202b409
18014a20b80201b40918014a20b80200b40918014a20b801ffb40918014a
20b801feb40918014a20b801fdb40918014a20b801fcb40918014a20b801
fbb40918014a20b801fab40918014a20b801f9b40918014a20b801f8b409
18014a20b801f7b40918014a20b801f6b40918014a20b801f5b40918014a
20b801f4b40918014a20b801f3b40918014a20b801f2b40918014a20b801
f1b40918014a20b801f0b40918014a20b801efb40918014a20b801eeb409
18014a20b801edb40918014a20b801ecb40918014a20b801ebb40918014a
20b801eab40918014a20b801e9b40918014a20b801e8b40918014a20b801
e7b40918014a20b801e6b40918014a20b801e5b40918014a20b801e4b409
18014a20b801e3b40918014a20b801e2b40918014a20b801e1b40918014a
20b801e0b40918014a20b801dfb40918014a20b801deb40918014a20b801
ddb40918014a20b801dcb40918014a20b801dbb40918014a20b801dab409
18014a20b801d9b40918014a20b801d8b40918014a20b801d7b40918014a
20b801d6b40918014a20b801d5b40918014a20b801d4b40918014a20b801
d3b40918014a20b801d2b40918014a20b801d1b40918014a20b801d0b409
18014a20b801cfb40918014a20b801ceb40918014a20b801cdb40918014a
20b801ccb40918014a20b801cbb40918014a20b801cab40918014a20b801
c9b40918014a20b801c8b40918014a20b801c7b40918014a20b801c6b409
18014a20b801c5b40918014a20b801c4b40918014a20b801c3b40918014a
20b801c2b40918014a20b801c1b40918014a20b801c0b40918014a20b801
bfb40918014a20b801beb40918014a20b801bdb40918014a20b801bcb409
18014a20b801bbb40918014a20b801bab40918014a20b801b9b40918014a
20b801b8b40918014a20b801b7b40918014a20b801b6b40918014a20b801
b5b40918014a20b801b4b40918014a20b801b3b40918014a20b801b2b409
18014a20b801b1b40918014a20b801b0b40918014a20b801afb40918014a
20b801aeb40918014a20b801adb40918014a20b801acb40918014a20b801
abb40918014a20b801aab40918014a20b801a9b40918014a20b801a8b409
18014a20b801a7b40918014a20b801a6b40918014a20b801a5b40918014a
20b801a4b40918014a20b801a3b40918014a20b801a2b40918014a20b801
a1b40918014a20b801a0b40918014a20b8019fb40918014a20b8019eb409
18014a20b8019db40918014a20b8019cb40918014a20b8019bb40918014a
20b8019ab40918014a20b80199b40918014a20b80198b40918014a20b801
97b40918014a20b80196b40918014a20b80195b40918014a20b80194b409
18014a20b80193b40918014a20b80192b40918014a20b80191b40918014a
20b80190b40918014a20b8018fb40918014a20b8018eb40918014a20b801
8db40918014a20b8018cb40918014a20b8018bb40918014a20b8018ab409
18014a20b80189b40918014a20b80188b40918014a20b80187b40918014a
20b80186b40918014a20b80185b40918014a20b80184b40918014a20b801
83b40918014a20b80182b40918014a20b80181b40918014a20b80180b409
18014a20b8017fb40918014a20b8017eb40918014a20b8017db40918014a
20b8017cb40918014a20b8017bb40918014a20b8017ab40918014a20b801
79b40918014a20b80178b40918014a20b80177b40918014a20b80176b409
18014a20b80175b40918014a20b80174b40918014a20b80173b40918014a
20b80172b40918014a20b80171b40918014a20b80170b40918014a20b801
6fb40918014a20b8016eb40918014a20b8016db40918014a20b8016cb409
18014a20b8016bb40918014a20b8016ab40918014a20b80169b40918014a
20b80168b40918014a20b80167b40918014a20b80166b40918014a20b801
65b40918014a20b80164b40918014a20b80163b40918014a20b80162b409
18014a20b80161b40918014a20b80160b40918014a20b8015fb40918014a
20b8015eb40918014a20b8015db40918014a20b8015cb40918014a20b801
5bb40918014a20b8015ab40918014a20b80159b40918014a20b80158b409
18014a20b80157b40918014a20b80156b40918014a20b80155b40918014a
20b80154b40918014a20b80153b40918014a20b80152b40918014a20b801
50b40918014a20b8014fb40918014a20b8014eb40918014a20b8014cb409
18014a20b8014bb40918014a20b8014ab40918014a20b80149b40918014a
20b80148b40918014a20b80147b40918014a20b80146b40918014a20b801
45b40918014a20b80144b40918014a20b80143b30918014ab80284b21e3e
1fb80283b21e151fb80282b21e3e1fb80281b21e3a1fb80280b21e3e1fb8
027fb21e3e1fb8027eb21e0c1fb8027db21e3e1fb8027cb21e3e1fb8027b
b21e3e1fb8027ab21e3e1fb80279b21d411fb80278b21d431fb80277b21d
431fb80276b21d431fb80275b21d411fb80274b21d431fb80273b21d431f
b80272b21d411fb80271b21d421fb80270b21d421fb8026fb21d421fb802
6eb21d431fb8026db21d431fb8026cb21d431fb8026bb21c451fb8026ab2
1c451fb80269b21c451fb80268b21c451fb80267b21c451fb80266b21c44
1fb80265b21c451fb80264b21c451fb80263b21c451fb80262b21c451fb8
0261b21c451fb80260b21c451fb8025fb21c451fb8025eb21c441fb8025d
b21c451fb8025cb21c451fb8025bb21c451fb8025ab21c451fb80259b21c
451fb80258b21c451fb80257b21c451fb80256b21c451fb80255b21c451f
b80254b21c451fb80253b21c451fb80252b21c451fb80251b21c451fb802
50b21c451fb8024fb21c451fb8024eb21c451fb8024db21c451fb8024cb2
1c451fb8024bb21c451fb8024ab21b491fb80249b21b491fb80248b21b4a
1fb80247b21b4a1fb80246b21b4b1fb80245b21b4c1fb80244b21b4c1fb8
0243b21b4c1fb80242b21b4b1fb80241b21b491fb80240b21b491fb8023f
b21b4a1fb8023eb21b4a1fb8023db21b4a1fb8023cb21b4b1fb8023bb21b
4b1fb8023ab21b4c1fb80239b21b4c1fb80238b21b4c1fb80237b21b4c1f
b80236b21b4c1fb80235b21b491fb80234b21b491fb80233b21b4a1fb802
32b21b4a1fb80231b21b4a1fb80230b21b4b1fb8022fb21b4b1fb8022eb2
1b4c1fb8022db21b4c1fb8022cb21b4c1fb8022bb21b4c1fb8022ab21b4c
1fb80229b21b4c1fb80228b21b4c1fb80227b21b491fb80226b21b491fb8
0225b21b4a1fb80224b21b4a1fb80223b21b4a1fb80222b21b4b1fb80221
b21b4b1fb80220b21b4c1fb8021fb21b4c1fb8021eb21b4c1fb8021db21b
4c1fb8021cb21b4c1fb8021bb21b4c1fb8021ab21a4e1fb80219b21a4e1f
b80218b21a4f1fb80217b21a4f1fb80216b21a4e1fb80215b21a4e1fb802
14b21a4f1fb80213b21a4f1fb80212b21a4f1fb80211b21a4e1fb80210b2
1a4e1fb8020fb21a4f1fb8020eb21a4f1fb8020db21a4f1fb8020cb21a4e
1fb8020bb21a4e1fb8020ab21a4e1fb80209b21a4f1fb80208b21a4f1fb8
0207b21a4f1fb80206b219501fb80205b219511fb80204b219511fb80203
b219501fb80202b219511fb80201b219511fb80200b219511fb801ffb219
511fb801feb219501fb801fdb219511fb801fcb219511fb801fbb219511f
b801fab219501fb801f9b219511fb801f8b219511fb801f7b219511fb801
f6b219511fb801f5b218541fb801f4b218531fb801f3b218541fb801f2b2
18541fb801f1b218541fb801f0b218531fb801efb218541fb801eeb21854
1fb801edb218541fb801ecb218531fb801ebb218531fb801eab218541fb8
01e9b218541fb801e8b218541fb801e7b218541fb801e6b218531fb801e5
b218541fb801e4b218531fb801e3b218541fb801e2b218541fb801e1b218
541fb801e0b218531fb801dfb218531fb801deb218541fb801ddb218541f
b801dcb218541fb801dbb218541fb801dab218531fb801d9b218541fb801
d8b218541fb801d7b217571fb801d6b217561fb801d5b217561fb801d4b2
17571fb801d3b217571fb801d2b217571fb801d1b217571fb801d0b21756
1fb801cfb217561fb801ceb217571fb801cdb217571fb801ccb217571fb8
01cbb217571fb801cab217561fb801c9b217561fb801c8b217571fb801c7
b217571fb801c6b217571fb801c5b217571fb801c4b217571fb801c3b217
561fb801c2b217571fb801c1b217571fb801c0b217571fb801bfb217561f
b801beb217561fb801bdb217571fb801bcb217571fb801bbb217571fb801
bab217571fb801b9b217571fb801b8b217561fb801b7b217571fb801b6b2
17571fb801b5b217571fb801b4b217571fb801b3b2163f1fb801b2b2165b
1fb801b1b2165b1fb801b0b2165b1fb801afb2165b1fb801aeb2165b1fb8
01adb2165b1fb801acb2165b1fb801abb2165b1fb801aab2163e1fb801a9
b2163f1fb801a8b2163f1fb801a7b2165b1fb801a6b2165b1fb801a5b216
5b1fb801a4b2165b1fb801a3b2165b1fb801a2b2165b1fb801a1b2165b1f
b801a0b2165b1fb8019fb2163e1fb8019eb2163f1fb8019db2163f1fb801
9cb2165b1fb8019bb2165b1fb8019ab2165b1fb80199b2165b1fb80198b2
163e1fb80197b2165b1fb80196b2165b1fb80195b2165b1fb80194b2163e
1fb80193b2163f1fb80192b2163f1fb80191b2165b1fb80190b2165b1fb8
018fb2165b1fb8018eb2165b1fb8018db2165b1fb8018cb2163f1fb8018b
b2165b1fb8018ab2165b1fb80189b2165b1fb80188b2165b1fb80187b216
5b1fb80186b215611fb80185b215621fb80184b215621fb80183b215661f
b80182b215661fb80181b215551fb80180b215451fb8017fb215361fb801
7eb215361fb8017db215611fb8017cb215621fb8017bb215621fb8017ab2
15641fb80179b215661fb80178b215661fb80177b215661fb80176b21566
1fb80175b215661fb80174b215661fb80173b215451fb80172b215621fb8
0171b215621fb80170b215631fb8016fb215641fb8016eb215661fb8016d
b215661fb8016cb215661fb8016bb215661fb8016ab215661fb80169b215
621fb80168b215621fb80167b215611fb80166b215641fb80165b215641f
b80164b215661fb80163b215661fb80162b215661fb80161b215661fb801
60b215661fb8015fb215661fb8015eb215551fb8015db215451fb8015cb2
15451fb8015bb215361fb8015ab215611fb80159b215621fb80158b21562
1fb80157b215631fb80156b215641fb80155b215661fb80154b215661fb8
0153b215661fb80152b215661fb80151b214401fb80150b214551fb8014f
b214561fb8014eb214831fb8014db2142d1fb8014cb214401fb8014bb214
401fb8014ab214411fb80149b214401fb80148b214401fb80147b214411f
b80146b2147e1fb80145b214871fb80144b2147f1fb80143b214801fb801
42b212461fb80141b212461fb80140b212461fb8013fb212461fb8013eb2
12441fb8013db212461fb8013cb211591fb8013bb211591fb8013ab2115b
1fb80139b2115b1fb80138b211471fb80137b211581fb80136b2115a1fb8
0135b2115b1fb80134b2115b1fb80133b2112c1fb80132b211471fb80131
b211551fb80130b211571fb8012fb211571fb8012eb211581fb8012db211
591fb8012cb211591fb8012bb2115a1fb8012ab2115a1fb80129b2115b1f
b80128b2115b1fb80127b2115b1fb80126b2115b1fb80125b211561fb801
24b211561fb80123b211571fb80122b211581fb80121b211591fb80120b2
115a1fb8011fb2115a1fb8011eb2115b1fb8011db2115b1fb8011cb2115b
1fb8011bb2115b1fb8011ab2115b1fb80119b2105d1fb80118b2105e1fb8
0117b2105f1fb80116b2105f1fb80115b2105f1fb80114b2105f1fb80113
b2105f1fb80112b2105d1fb80111b2105e1fb80110b2105f1fb8010fb210
5f1fb8010eb2105f1fb8010db2105f1fb8010cb2105d1fb8010bb2105e1f
b8010ab2105f1fb80109b2105f1fb80108b2105f1fb80107b2105f1fb801
06b2105d1fb80105b2105e1fb80104b2105f1fb80103b2105f1fb80102b2
105f1fb80101b2105f1fb8010040ff0f621fff0f621ffe0f631ffd0f641f
fc0f621ffb0f621ffa0f621ff90f631ff80f641ff70f641ff60f641ff50f
641ff40f621ff30f621ff20f631ff10f641ff00f641fef0f641fee0f641f
ed0f621fec0f621feb0f631fea0f641fe90f641fe80f641fe70f641fe60e
671fe50e681fe40e681fe30e681fe20e681fe10e671fe00e681fdf0e681f
de0e681fdd0e671fdc0e681fdb0e681fda0e681fd90e681fd80d6b1fd70d
311fd60d6b1fd50d6c1fd40d261fd30d261fd20d6c1fd10d2b1fd00d2b1f
cf0d2b1fce0d6b1fcd0d6c1fcc0d6d1fcb0d6b1fca0d6c1fc90d6d1fc80d
6a1fc70d691fc60d681fc50d671fc40d261fc30d311fc20d311fc10d311f
40ffc00d311fbf0d311fbe0d311fbd0c711fbc0c721fbb0c731fba0c741f
b90c741fb80c741fb70c711fb60c711fb50c721fb40c731fb30c741fb20c
741fb10c741fb00c741faf0b791fae0b7a1fad0b7c1fac0b7d1fab0b7e1f
aa0b7e1fa90b7e1fa80b7e1fa70b7e1fa60b7e1fa50b2d1fa40b7e1fa30b
7e1fa20b791fa10b7e1fa00b6b1f9f0b791f9e0b7e1f9d0b7e1f9c0b791f
9b0b7a1f9a0b7c1f990b7d1f980b7e1f970b7e1f960b7e1f950b7e1f940b
7e1f930b7e1f920b6b1f910b2d1f900a4e1f8f0a4f1f8e0a671f8d0aa51f
8c0aa71f8503251f8403381f8301381f8255805581ab80557f557d557eab
7d550b7d010b7d1b7d4b7d7b7dab7ddb7d4012060a7c557a557bab7a5579
55775578ab7755ba028600660285403c5576ab755504751475747503f475
01ab750144750130750102007510752075030c7455725573ab7255007250
728072b072043bb072e072020072010ab8ffc0b3721b1e46b8ffc0407c72
0d104671556f5570ab6f556e666d556a03251f6938675568ab6755663864
5565ab645563386255613860555f385d555eab5d555c385a555bab5a5559
3858555703251f5638545555ab54555338515552ab51554f384e554e0325
1f4d384b554cab4b554a38485549ab4855473846554503381f001c101c20
1c0310b8ffc0404e1c1b1e46001b0142301b401be01bf01b04001bb01bc0
1b03120f1a1f1a02290f1901434f19016f197f198f19030f18cf18024018
292c460f17cf17df17ef1704134017292e460016101620160315b8ffc0b3
164d5446b8ffc0b3163f4446b8ffc0b316313546b8ffc0404d162326460f
15010f151f1502451f15010011e011f0110315bf10cf10020f0f010f0fff
0f02400f3135460f0e1f0e020f0e1f0eff0e03400e3137460f0d1f0d020f
0d1f0dff0d0316400d313746b8ffc040270c5054460f0b1f0b02553f0b4f
0b02400b3f4346400b2d30460003012001010001100120010308b8ffc0b3
01151f46b80100b316010501b80190b154532b2b4bb80800524bb008505b
b00188b02553b00188b040515ab00688b000555a5b58b101018e59b10102
4354b0144b515a58b101018e59858d8d00421d4bb01d5358b0a01d594bb0
805358b0401d594bb0ff5358b0001db1160042592b5e7375732b2b745e73
2b2b5e73742b73742b7374745e7301755e73742b2b2b2b5e732b5e732b73
74755e735e735e73755e732b5e73002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b5e73755e732b2b5e735f7373737374
2b2b2b2b2b2b5e73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2bb1000243545841ff02840064028300640282
00640281006402800064027f0064027e0064027d0064027c0064027b0064
027a00640279006402780064027700640276006402750064027400640273
00640271006402700064026f0064026e0064026d0064026c0064026b0064
026a00640269006402680064026700640266006402650064026400640263
0064026200640261006402600064025f0064025e0064025d0064025c0064
025b0064025a006402590064025800640257006402560064025500640254
006402530064025200640251006402500064024f0064024e0064024d0064
024c0064024b0064024a0064024900640248006402470064024600640245
00640244006402430064024200640241006402400064023f0064023e0064
023d0064023c0064023b0064023a00640239006402380064023700640236
0064023500640234006402330064023200640231006402300064022f0064
022e0064022d0064022c0064022b0064022a006402290064022800640227
006402260064022500640224006402230064022200640221006402200064
021f0064021e0064021d0064021c0064021b0064021a0064021900640218
006402170064021600640215006402140064021300640212006402110064
02100064020f0064020e0064020d0064020c0064020b0064020a00640209
006402080064020700640206006402050064020441ff0064020300640202
0064020100640200006401ff006401fe006401fd006401fc006401fb0064
01fa006401f9006401f8006401f7006401f6006401f5006401f4006401f3
006401f2006401f1006401f0006401ef006401ee006401ed006401ec0064
01eb006401ea006401e9006401e8006401e7006401e6006401e5006401e4
006401e3006401e2006401e1006401e0006401df006401de006401dd0064
01dc006401db006401da006401d9006401d8006401d7006401d6006401d5
006401d4006401d3006401d2006401d1006401d0006401cf006401ce0064
01cd006401cc006401cb006401ca006401c9006401c8006401c7006401c6
006401c5006401c4006401c3006401c2006401c1006401c0006401bf0064
01be006401bd006401bc006401bb006401ba006401b9006401b8006401b7
006401b6006401b5006401b4006401b3006401b2006401b1006401b00064
01af006401ae006401ad006401ac006401ab006401aa006401a9006401a8
006401a7006401a6006401a5006401a4006401a3006401a2006401a10064
01a00064019f0064019e0064019d0064019c0064019b0064019a00640199
006401980064019700640196006401950064019400640193006401920064
0191006401900064018f0064018e0064018d0064018c0064018b0064018a
006401890064018800640187006401860064018500644180018400640183
0064018200640181006401800064017f0064017e0064017d0064017c0064
017b0064017a006401790064017800640177006401760064017500640174
006401730064017200640171006401700064016f0064016e0064016d0064
016c0064016b0064016a0064016900640168006401670064016600640165
00640164006401630064016200640161006401600064015f0064015e0064
015d0064015c0064015b0064015a00640159006401580064015700640156
00640155006401540064015300640152006401500064014f0064014e0064
014c0064014b0064014a0064014900640148006401470064014600640145
006401440064014300642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b59
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b185f5e00>
[3043 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 322 856 <00010097fff7016e00e0000b0017b10006b8ffc0b60c014d0609034c003f
cd012f2bc13130251406232226353436333216016e2f3e3c2e2f3e3c2e6d
472f2e45472f2e00>CUFAAA+Calibri AddT42Char 
1 738 1004 <00020048ffed03c705210013002b00ea4019281201291101260d01260c01
2608012507012a03012902012db8ffc040250f024d602d01141810014d14
100f014d14160d014d140a0c014d14200b014d14180c014d14bb022d0000
0020ffe8b310014d20b8fff0b30f014d20b8ffeab30d014d20b8fff6b30c
014d20b8ffe8b60c014d24200120b8022d40090a200030004000030ab8ff
f040090f014d2f0a4f0a0200b8ffd040090f014d0a100f024d00b8ffc040
0a0f024d000a000a2d2c1bb8010ab20f5325b8010ab10556003fed3fed11
120139392f2f2b2b2b5d2b5d10e15d2b2b2b2b2b10e12b2b2b2b2b2b3130
5d2b5d5d5d5d5d5d5d5d01140e0223222e0235343e0233321e0207342e04
23220e0215141e0233323e0403c72f6db0817aa7662b306cb0807ba7662b
b00e1b2b3c4d30556a3d161e41654838553d281809028a95f6b16157a9f7
a094f7b16157a9f7ac619a76553719508cbc6c91cb803a24435e7285>CUFAAA+Calibri AddT42Char 
1 1096 1005 <000100ae0000039f0517002e00e54024241e01241d01241c01231b01241a
01241901261801261701291201291101122010014d30b8ffc0400d0f024d
60300100200b014d0029b8ffe8b310014d29b8fff0b30f014d29b8fff0b3
0d014d29b8fff6b30c014d29b8fff8b30b014d29b80211400e1e18200b01
4d180b200b014d0b11b8ffe0b30f014d11b8ffd4b30f024d11b8ffc0b310
014d11b8ffe0b30f014d11b8ffc0b30c014d11b8fff040090b014da01101
111312b8013fb323522910b80107b10654003fed323ffdcd012f5d2b2b2b
2b2b2bcd2bc42b33f12b2b2b2b2bc52b31305d2b002b015d5d5d5d5d5d5d
5d5d5d25140e022321222e0235343e02332111070606262635343e023725
3e0333321e02151133321e02039f060a0d07fd5c070c0b0606090d08010e
fa13170e0503060b09012a040c12181218201206ea080e090544131a1007
07101a13121a110903d8950a040d1e171118100c06bf0304040104070b06
fb8f09111a00>CUFAAA+Calibri AddT42Char 
1 1462 1006 <000100720000039c0521003e0094400d2936012b1e01291d01261e0140b8
ffc040170f024d604001161810014d16100c0d014c16200b014d16b8022d
b633253325330039b8ffe8b310014d39ba027f000bffc0b30c014d0bb8ff
e0400b0f014d0b1138392020391bb8012eb63316062e531039b80128b106
54003fed323f123939ed11392f123939012f2b2be12bcd39392f2f10e12b
2b2b31305d2b005d015d5d5d25140e022321222e0235343e0237133e0335
342e0223220e0223222e0235343e0633321e0215140e02070721321e0203
9c05090f09fd350e150f07030a0f0cfb576939121c3550343d6149310c07
0b0704020508183b596b3b5e8d5d2e1647866fcd0233080f0b054a121c13
0907101e16141e17170d010a5c9278622b2b4d3a2222282208121e150f16
100e15242318355c7a453e7b8faf72d609121b00>CUFAAA+Calibri AddT42Char 
1 1782 1007 <00010067ffed0392052100580105b9005affc0401c0f024d605a01310810
014d31100f014d31100c0d014c31200b014d31b80235400a4e53264e4e18
13014d40b8ffe840260f014d26200f014d40264e4e2640030e1b0810014d
1b100f014d1b100c0d014c1b200b014d1bb8fff8b30b014d1bb8022db500
080b014d00b8ffe8b40f024d000eb8ffe0b30f014d0eb8fff0b30f014d0e
b8ffc040130c014d0e3b400f014d3b400c0d014c2f3b0111b8ffc0b30f01
4d11b8ffc0400a0c0d014c3b113b111636b8010b400a49532cf320200549
5316b8010bb10556003fed3f12392fed3910ed1139392f2f2b2b5d2b2b01
2f2b2b2bd42b2be12b2b2b2b2b1217392f2f2f2b2b2b11123910e12b2b2b
2b31305d2b01140e0223222e0635343633321e0233323e0235342e022323
222e0235343e023333323e0235342e0223220e0223222e0235343e063332
1e0215140e0207151e0303923e74aa6b4171583a0f0806030e0d0935536f
44426444222b53794d7b080f0b07060b0e0971426949271a3451353a614c
320a070b0703020608133a556f405a885b2d203e5a3b436f502d0172598f
6637151d1f0e0e141d15241c202520223e55323758402207101a1513190f
07224059372849361f232823050f1b160f17110e132423182e5475473d69
51390b020735506b>CUFAAA+Calibri AddT42Char 
1 2270 1008 <00020030fffa03d30514002a002e00fb403a252e01262d01272c01242701
242601251c01261b01231a01241901251801251701261601261501261401
261001260f012405012404012b1b0130b8ffc040120f024d6030012d1618
0f024d162010014d16b8ffe0b30f014d16b8ffe0b70c014d161c2e2e10b8
fffc401d0f024d101810014d10100f014d10100d014d100a0c014d10100b
014d10bb021100270004ffd4b30f024d04b8ffd0b30c014d04b8ffe0400a
0b014d0404302f271b2eb8010b400a042b2110100a21520a55003f3f1239
2f123933ed3232111201392f2b2b2b33e12b2b2b2b2b2b321133cd2b2b2b
2b3231305d2b005d015d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d011406
232311140e0223222e02351121222e0235343e0237013e0333321e021511
3332160123012103d31412920814201918201307fdea0c100d0502060a07
01d205131e2c1e21311e10921115fea102fe5b01a701702126fef0080b08
0404080b08011006101e18131e19170d0312080c080305080d09fcc62302
e9fd3a00>CUFAAA+Calibri AddT42Char 
1 2664 1009 <00010065ffed0396050e003e00c1400d27370127360126080126030140b8
ffc0b60f024d60400137b8ffe8b310014d37b8fff0b40b0d014c37ba0211
0028ffc0402810014d28400f014d280e4f326f327f3203321d1810014d1d
100f014d1d100c0d014c1d200b014d1dba02330000ffe8b30f024d00b8ff
c0b50f014d004013b8ffc0b70f10014c13131836b8012c400c2c3af42022
012222052c5118b8010bb10556003fed3f12392f5ded10ed11392f2b0110
d62b2be12b2b2b2bc45dd4d42b2be12b2b31305d2b005d5d015d5d01140e
0223222e0635343e0233321e0233323e0235342e02232206232226351134
363321321e02151406232111363633321e0203964680b16c3c6c54360f06
050203080b070a2a4769484370512e27517c563d58261c181f1d023d080f
0a051412fe1d2349306fa66f3901a068a26f3a1119180e0c111a12111b11
08191d1a2044674a3e5f3f1f0c1a25020f212009121c132428fe95050235
618a>CUFAAA+Calibri AddT42Char 
1 390 970 <0002006bffed03bd0520003400480099b9004affc040170f024d604a012b
753f01663f01433f01343f01243f013fb8024340140c1c1c0c7a35016a35
014b35013a35012b350135b80243b670000120000100b8ffe0b30f014d00
b8ffe8b70f024d00300c010cb8fffa400a0f024d0c3aff30300526b80100
b2135944b80115b1055f003fed3fed12392fed012f2b5dd42b2b5d5de15d
5d5d5d5d12392f10e15d5d5d5d5d3231305d2b01140e0223222e0435343e
0433321e0615140e0223222e0223220e02073e0333321e0207342e022322
0e0207141e0233323e0203bd346ca671517c5c3d2510122e4f77a66e254c
402c0e07040201070b090b26364d335d865529031a414d563169905926ae
17365a42254a453f1a213f5e3f405e3e1d01a3559f7949284a6c8aa45e53
aa9e8b673c090f120b0d0f130e121a10080e110e4c80a95c0f1e180f3965
89603a5f42240d171f1281ae692d30516500>CUFAAA+Calibri AddT42Char 
1 3026 1010 <ffff006bffed03bd0520020603ca0000>CUFAAA+Calibri AddT42Char 
1 0 0 <00050000fe7303d2050e000300070039004d004e005bbc000d0152001600
3a01b5b5154444082d07be0143000200200154000800010143400f04020d
b71a1a3f23b735068d031149b8012db43f078d0202003ffddefdce2ffdde
ed12392fed012fdde1dee110f1ce11392f33e1d4e1313001112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>CUFAAA+Calibri AddT42Char 
CUFAAA+Calibri /CharStrings get begin
/g856 856 def
/g1004 1004 def
/g1005 1005 def
/g1006 1006 def
/g1007 1007 def
/g1008 1008 def
/g1009 1009 def
/g1010 1010 def
end
CUFAAA+Calibri /Encoding get
dup 46 /g856 put
dup 48 /g1004 put
dup 49 /g1005 put
dup 50 /g1006 put
dup 51 /g1007 put
dup 52 /g1008 put
dup 53 /g1009 put
dup 54 /g1010 put
pop
end
%ADOEndSubsetFont
/ZONLVY+Calibri /CUFAAA+Calibri findfont ct_VMDictPut
/ZONLVY+Calibri*1 
[46{/.notdef}rp /g856 /.notdef /g1004 /g1005 /g1006 /g1007 /g1008 
/g1009 /g1010 201{/.notdef}rp]
ZONLVY+Calibri nf
ZONLVY+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
20.952 85.1039 mo
(0.1)
[3.59257 1.67426 0 ]xsh
26.2559 69.984 mo
(1)sh
ZONLVY+Calibri*1 [6.984 0 0 -6.984 0 0 ]msf
22.704 54.8641 mo
(10)
[3.60116 0 ]xsh
ZONLVY+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
19.152 39.72 mo
(100)
[3.59257 3.48125 0 ]xsh
15.6001 24.6001 mo
(1000)
[3.59257 3.48125 3.59257 0 ]xsh
ZONLVY+Calibri*1 [6.984 0 0 -6.984 0 0 ]msf
12.0481 9.48019 mo
(10000)
[3.59101 3.4793 3.59101 3.4793 0 ]xsh
ZONLVY+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
41.8801 94.224 mo
(0123456)
[14.689 14.689 14.6895 14.6871 14.691 14.6613 0 ]xsh
%ADOBeginSubsetFont: XFAAAA+Calibri-Bold Initial
ct_T42Dict begin
-0.516 -0.305 1.238 0.969
 256 array 0 1 255 {1 index exch /.notdef put} for  /XFAAAA+Calibri-Bold
Type42DictBegin
[<00010000000c000c000c000c4f532f3200000000000000cc000000566376
74202f49354900000124000006086670676da1ea42ac0000072c00000913
676c796600000000000059f40000165668656164e606fe46000010400000
0036686865610d8d06c00000107800000024686d7478000000000000109c
000007206c6f636100000000000017bc00001e466d6178701bfb161e0000
3604000000206e616d658fc48c9b0000362400000e3470726570c7f0742e
000044580000159c67646972000000000000000000000000000100000190
000500080000000000000000000000000000000000000000000000000000
00000000000000000000000000080000000000000000000000000000f000
f0ff00000000000000000000000000010000000000000000079e0000fe93
0000000000000000000000810081009c00ab00b500ba00c100ca00d300f3
010a0060008500bf00e300ea00f200fb010001070115011c012900000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000fe83056d000d03c0000600170000fffaffe9fea9
ffe90000050e000600170000fffaffe9fe93050e00170426000600170000
fffaffe9ff12ffed050e00170426000600170000fffaffe9fe93feb8fece
060b0010050e0006001002cbfffafff001edfffa023f00060010ff36fffa
fff00287000600100000fffafff0079efeaffe9f00000000000000000000
000000700072007500780079007a007b007d007e007f0083008600870088
00890085007f0086008b008c008d008e008f009000910092009300940095
0096009700980099009a009b009c009d009e009f009200930094009b009c
009e009e00960099009a009d009e00a200a600a900ac00a200a300a400a5
00a700a800a900aa00ab00ac00ae00a300a500a700a800aa00ab00ac00ad
00ae00a000a100a300a600a700a900aa00ac00ad00af00af00b000b100b2
00b300b400b500af00af00b000b200b300b400b500b800c000b600b700b8
00b900ba00bb00bc00bd00be00bf00c000c100c200b900ba00bc00bd00bf
00c000c100c200b600b700b800b900ba00bb00bc00bd00be00bf00c000c1
00c200c000c100c200c300c400c500c600c700c800c900ca00cb00cc00cd
00ce00cf00c300c400c500c600c700c800c900ca00cb00cc00cd00ce00cf
00c300c400c500c600c700c800c900ca00cb00cc00cd00ce00cf00c500c8
00c900ca00cb00ce00cf00d000d100d200d300d400d500d600d700d900db
00de00df00e000e200e300ec00d000d100d200d300d400d500d600d700d8
00d900da00db00dd00de00df00e000e100e300e500e900ec00ed00d100d3
00d400d500d800d900da00dc00e000e100e800d000d100d400d600e000e4
010800f5010200fb00ff0108008f00900096009200930099009000910097
0098009a009d00a400a600a700a800a900af009a00a200a300a700a900aa
00ab00ac00ad00b000ad009b00aa00ab00ad00b0009a00aa00ac00ad00ae
00af00b100b900bb00bc00bd00be00c100c200c300c400c500c600c700c8
00c900ca00cb00ce00b300b400b500b600b700b800bc00c200c500c800ca
00cb00cd00ce00cf00d000c700b700b800b900bb00bc00be00c600c700c8
00c900cb00cf00d000b200b600b700c200c400c500c600c700cb00cc00cd
00ce00cf00d000d100d400d500d700d800d900da00db00dc00de00df00e0
00e200e300e500e600d100d300d600d700d800da00db00dc00dd00de00df
00e000e100e200e300e400e500d100d200d400d500da00db00dd00de00df
00e000e100e200e600d200d300d400d700d800dd00de00e000e100e200e3
00e400e500e600d200da00e100e900ea00ec00e800e900ea00eb00ec00ed
00eb00e700ea00eb00ec00ed00e700e900ea00ec00ed00ee00ef00f500ee
00ef00f000f100f200f300f400f500f600ee00f000f200ef00f000f100f2
00f300f400f500f600ee00ef00f000f100f200f300f400f500f600f700f7
00f800f900fa00fb00fc00fd00f700f800f900fa00fb00fd00f700f800f9
00fa00fb00fc00fd00fd00fe00ff010001010102010300fe010001010102
010300fe00ff010001010102010301020103010401050106010701080109
010a010c010d010e010f01100107010401050106010701080109010a010b
010d010e010f01100111010401050106010701080109010a010b010c010d
010e010f0110011101040105010601070109010e010f0112011301140115
01170118011a011b011c011d011e011f0121012201120113011401150117
0119011b011c011d011e0120012101230124012501130114011501160117
01180119011a011b011c011d011f01200117011c011d011e012001210129
013001770129012b012e012f013001310134013501370139012b012d0130
01320134013a012e01300134013a014200500062006c00fa05e802cc0114
011400a000b140465f5e5d5c5b5a59585554535251504f4e4d4c4b4a4948
47464544434241403f3e3d3c3b3a39383736352f2e2d2c2826252423221f
181411100f0d0b0a090807060504030201002c4523466020b02660b00426
2348482d2c452346236120b02661b004262348482d2c45234660b0206120
b04660b004262348482d2c4523462361b0206020b02661b02061b0042623
48482d2c45234660b0406120b06660b004262348482d2c4523462361b040
6020b02661b04061b004262348482d2c0110203c003c2d2c20452320b0cd
442320b8015a51582320b08d44235920b0ed51582320b04d44235920b004
2651582320b00d44235921212d2c20204518684420b001602045b0467668
8a4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c00b028
2370b101283e01b0282370b10228453ab10200080d2d2c2045b003254561
64b050515845441b2121592d2c2045b0004360442d2c01b00643b0074365
0a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c642364615c58
b00361592d2c8a03458a8a87b0112bb0292344b0297ae4182d2c4565b02c
234445b02b23442d2c4b525845441b2121592d2c01b005251023208af500
b0016023edec2d2c01b005251023208af500b0016123edec2d2c01b00625
10f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c2d
2c00b00743b006430b2d2c21210c6423648bb84000622d2c21b08051580c
6423648bb82000621bb200402f2b59b002602d2c21b0c051580c6423648b
b81555621bb200802f2b59b002602d2c0c6423648bb84000626023212d2c
4523456023456023456023766818b08062202d2cb00426b00426b00425b0
042545234520b003266062636820b0032661658a2344442d2c2045b00054
58b040442045b04061441b2121592d2c45b1302f4523456160b001606944
2d2c4b5158b02f2370b01423421b2121592d2c4b515820b0032545695358
441b2121591b2121592d2c45b01443b0006063b0016069442d2cb02f4544
2d2c452320458a60442d2c45234560442d2c4b235158b90033ffe0b13420
1bb3330034005944442d2cb0164358b00326458a586466b01f601b64b020
606620581b21b04059b001615923586559b02923442310b029e01b212121
2121592d2cb0164358b004254564b020606620581b21b04059b001612358
6559b0292344b00425b00725082058021b0359b0052510b004252046b004
2523423cb0072510b006252046b00425b0016023423c2058011b0059b005
2510b00425b029e0b0072510b00625b029e0b00425b00725082058021b03
59b00425b003254348b00625b00325b0016043481b215921212121212121
2d2cb0164358b004254564b020606620581b21b04059b0016123581b6559
b0292344b00525b00825082058021b0359b0042510b005252046b0042523
423cb00425b0072508b0072510b006252046b00425b0016023423c205801
1b0059b0042510b00525b029e0b02920456544b0072510b00625b029e0b0
0525b00825082058021b0359b00525b003254348b00425b0072508b00625
b00325b0016043481b2159212121212121212d2c02b00425202046b00425
2342b0052508b003254548212121212d2c02b0032520b0042508b0022543
482121212d2c452320451820b00050205823652359236820b040505821b0
4059235865598a60442d2c4b53234b515a5820458a60441b2121592d2c4b
545820458a60441b2121592d2c4b53234b515a58381b2121592d2cb00021
4b5458381b2121592d2cb002435458b0462b1b21212121592d2cb0024354
58b0472b1b212121592d2cb002435458b0482b1b21212121592d2cb00243
5458b0492b1b212121592d2c208a08234b538a4b515a5823381b2121592d
2c0020b200400325b0062649618b3812342d2c0146234660234661232010
20468a61b8ff80628ab140408a704560683a2d2c208a2349648a2353583c
1b21592d2c4b52587d1b7a592d2cb012004b014b54422d2cb1020042b123
018851b1400188535a58b910000020885458b202010243604259b1240188
5158b920000040885458b2020202436042b12401885458b2022002436042
004b014b5258b2020802436042591bb940000080885458b2020402436042
59b94000008063b80100885458b202080243604259b94000010063b80200
885458b202100243604259b94000020063b80400885458b2024002436042
59595959592d2c451868234b51582320452064b04050587c59688a605944
2d2cb00016b00225b0022501b001233e00b002233eb10102060cb00a2365
42b00b234201b001233f00b002233fb10102060cb006236542b0072342b0
0116012d2c20b82000628a6023622d2cb0072558001b0159b0042510b003
25b0022520b8ffff545821cd1bed5921b006255cb006255a58b0092b5920
b005254ab0042547b004254760b0062547b0806361b00225b0005558b003
25b00725496359b0082558001b0159b00425b0062549b009255cb009255a
58b0092b59b0072546b0806361b0032520b0005558631b2159612320b000
5558b080631b21b08059b0592bb006255c586959b00425202010b0004823
3ab0062658001b0159b0052658b003252f598a12233221212d2cb00625b0
0a2587b00625b009254ab0005358b00625b00a251bb00925b0072559b002
25b00225070cb005256323b00625636020b94000040063535821b00426b0
0426b00a1bb94000040063655158b0042665b0042665b00a1bb00426b004
26b000b00325b003250b0d0ab0092eb00725b007250b0d0ab00b2eb00525
b0052507595920b0005558b00525b0052587b00725b007250bb0092510b0
0b25b0092620b8ffff545821cd1bed59b00525b0052507b00825b00b2549
23b00625b0062587b00a2510b00b25c15920b00051b800522378b00161b0
0225b00725b0072507b00a25b00d254961b08062b00525b005250bb00a25
2338b00625b0062587b00825b008250bb00a2510b00b25c4b00625b00625
07b00925b00c2549b0032554b8ffa723792121212121212121212121212d
2c23b0005458b9400000001bb900004000598ab0005458b9400000001bb9
0000400059b05b2b2d2c08b0005458b9400000001bb900004000590db05b
2b2d2c8a8a080d8ab0005458b9400000001bb90000400059b05b2b2d2cb0
0426b00426080db00426b00426080db05b2b2d000001000000059eb8b1b0
afba5f0f3cf50019080000000000bbeb7ccc00000000c5229872fbdafd8d
09ec07c5000100090002000000000000000100000600fe0001c40aa0fbda
fa8609ec0001000000000000000000000000000001c8040e0000040e0000
040e000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf0000043c004f043c004f043c004f043c004f043c004f043c004f043c
004f043c004f043c004f043c004f043c004f043c004f043c004f043c004f
043c004f043c004f043c004f043c004f043c004f043c004f043c004f043c
004f043c004f043c004f043c004f043c004f043c004f043c004f043c004f
043c004f043c004f043c004f043c004f043c004f043c004f043c004f043c
004f043c004f043c004f043c004f043c004f043c004f043c004f043c004f
043c004f043c004f043c004f043c004f043c004f043c004f043c004f0545
008d0545008d0545008d0545008d0545008d0545008d0545008d0545008d
0545008d0545008d0545008d0545008d0545008d0545008d0545008d0545
008d0545008d0545008d0442008d0442008d0442008d0442008d0442008d
0442008d0442008d0442008d0442008d0442008d0442008d0442008d0442
008d03f6000c03f6000c03f6000c03f6000c03f6000c03f6000c03f6000c
03f6000c03f6000c03f6000c03f6000c03f6000c03f6000c03f6000c03f6
000c03f6000c03f6000c03f6000c03f6000c03f6000c03f6000c03f6000c
03f6000c03f6000c03f6000c03f6000c03f6000c03f6000c03f6000c03f6
000c03f6000c03f6000c03f6000c03f6000c03f6000c03f6000c03f6000c
03f6000c03f6000c03f6000c03f6000c03f6000c03f6000c03f6000c03f6
000c03f6000c03f6000c03f6000c03f6000c03f6000c03f6000c03f6000c
03f6000c03f6000c03f6000c03f6000c03f6000c03f6000c03f6000c03f6
000c03f6000c03f6000c03f6000c03f6000c03f6000c03f6000c03f6000c
03f6000c03f6000c03f6000c03f6000c03f6000c03f6000c03f6000c03f6
000c03f6000c03f6000c03f6000c03f6000c03f6000c03f6000c03f6000c
03f6000c03f6000c03f6000c03f6000c03f6000c03f6000c03f6000c03f6
000c03f6000c03f6000c03f6000c03f6000c03f6000c03f6000c03f6000c
03f6000c03f6000c03f6000c03f6000c03f6000c03f6000c03f6000c03f6
000c03f6000c03f6000c03f6000c03f6000c03f6000c03f6000c03f6000c
03f6000c03f6000c03f6000c03f6000c03f6000c03f6000c03f6000c03f6
000c03f6000c03f6000c03f6000c03f6000c03f6000c03f6000c03f6000c
03f6000c03f6000c03f6000c03f6000c03f6000c03f6000c03f6000c03f6
000c03f6000c03f6000c03f6000c03f6000c03f6000c03f6000c03f6000c
03f6000c03f6000c03f6000c03f6000c03f6000c03f6000c03f6000c03f6
000c03f6000c03f6000c03f6000c03f6000c03f6000c03f6000c03f6000c
03f6000c03f3004703f3004703f3004703f3004703f3004703f3004703f3
004703f3004703f3004703f3004703f3004703f3004703f30047044b007e
044b007e044b007e044b007e044b007e044b007e044b007e044b007e044b
007e044b007e044b007e044b007e044b007e044b007e044b007e0407004a
0407004a0407004a0407004a0407004a0407004a0407004a0407004a0407
004a0407004a028800190288001902880019028800190288001902880019
028800190288001902880019028800190288001902880019028800190288
001902880019028800190288001902880019028800190288001902880019
028800190288001902880019028800190288001902880019028800190288
001902880019028800190288001902880019028800190288001902880019
028800190288001902880019028800190288001902880019028800190288
001902880019028800190288001902880019028800190288001902880019
028800190288001901f7006b01f7006b01f7006b01f7006b01f7006b01f7
006b01f7006b01f7006b01f7006b01f7006b01f7006b01f7006b01f7006b
01f7006b01f7006b01f7006b01f7006b01f7006b01f7006b01f7006b01f7
006b01f7006b01f7006b01f7006b0682007e044b007e044b007e044b007e
044b007e044b007e044b007e044b007e044d0048044d0048044d0048044d
0048044d0048044d0048044d0048044d0048044d0048044d0048044d0048
044d0048044b007e044b007e044b007e02d8007e02d8007e02d8007e02d8
007e03310049033100490331004903310049033100490331004903310049
03310049033100490331004902c6001702c6001702c6001702c6001702c6
001702c6001702c6001702c6001702c6001702c6001702c6001702c60017
02c6001702c6001702c6001702c6001702c6001702c6001702c6001702c6
001702c6001702c6001702c6001702c6001702c6001702c6001702c60017
044b0079044b0079044b0079044b0079044b0079044b0079044b0079044b
0079044b0079044b0079044b0079044b0079044b0079044b0079044b0079
044b0079044b0079044b007903ca00160000009e009e009e009e009e009e
009e009e009e009e009e009e009e009e009e009e009e009e013101310131
013101310131013101310131013101310131013101310131013101310131
013101310131013101310131013101310131013101310131013101310131
013101310131013101310131013101310131013101310131013101310131
01310131013101e301e301e301e301e301e301e301e301e301e301e301e3
01e301e301e301e301e301e3026002600260026002600260026002600260
026002600260026002bf02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf
02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf
02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf
02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf
02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf
02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf
02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf
02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf
02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf
02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf
02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf02bf03ab03ab03ab
03ab03ab03ab03ab03ab03ab03ab03ab03ab03ab044d044d044d044d044d
044d044d044d044d044d044d044d044d044d044d05190519051905190519
0519051905190519051905a305a305a305a305a305a305a305a305a305a3
05a305a305a305a305a305a305a305a305a305a305a305a305a305a305a3
05a305a305a305a305a305a305a305a305a305a305a305a305a305a305a3
05a305a305a305a305a305a305a305a305a305a305a305a305a305f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f806ba0741074107410741074107410741
07b407b407b407b407b407b407b407b407b407b407b407b4085608560856
08d508d508d508d509a809a809a809a809a809a809a809a809a809a80a3f
0a3f0a3f0a3f0a3f0a3f0a3f0a3f0a3f0a3f0a3f0a3f0a3f0a3f0a3f0a3f
0a3f0a3f0a3f0a3f0a3f0a3f0a3f0a3f0a3f0a3f0a3f0abb0abb0abb0abb
0abb0abb0abb0abb0abb0abb0abb0abb0abb0abb0abb0abb0abb0abb0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b00000001
00000f22005100050000000000020010002f006000000c63159c00000000
0000002d02220000000300000000006400000000000300000001000e0064
00000003000000020008032a0000000300000003003a0304000000030000
00040018031a00000003000000050018033e000000030000000600180356
000000030000000700fa036e0000000300000008002a03e4000000030000
000900200468000000030000000a02a00064000000030000000b00560488
000000030000000c002a04de000000030000000d02980508000000030000
000e006c07a000010000000000000032080c00010000000000010007083e
0001000000000002000409a10001000000000003001d098e000100000000
0004000c09990001000000000005000c09ab0001000000000006000c09b7
0001000000000007007d09c30001000000000008001509fe000100000000
000900100a40000100000000000a0150083e000100000000000b002b0a50
000100000000000c00150a7b000100000000000d014c0a90000100000000
000e00360bdc0003000104090000006400000003000104090001000e0064
00030001040900020008032a0003000104090003003a0304000300010409
00040018031a00030001040900050018033e000300010409000600180356
000300010409000700fa036e0003000104090008002a03e4000300010409
000900200468000300010409000a02a00064000300010409000b00560488
000300010409000c002a04de000300010409000d02980508000300010409
000e006c07a000a9002000320030003000380020004d006900630072006f
0073006f0066007400200043006f00720070006f0072006100740069006f
006e002e00200041006c006c002000520069006700680074007300200052
0065007300650072007600650064002e00430061006c0069006200720069
002000690073002000610020006d006f006400650072006e002000730061
006e0073002000730065007200690066002000660061006d0069006c0079
0020007700690074006800200073007500620074006c006500200072006f
0075006e00640069006e006700730020006f006e0020007300740065006d
007300200061006e006400200063006f0072006e006500720073002e0020
004900740020006600650061007400750072006500730020007200650061
006c0020006900740061006c006900630073002c00200073006d0061006c
006c00200063006100700073002c00200061006e00640020006d0075006c
007400690070006c00650020006e0075006d006500720061006c00200073
006500740073002e0020004900740073002000700072006f0070006f0072
00740069006f006e007300200061006c006c006f00770020006800690067
006800200069006d007000610063007400200069006e0020007400690067
00680074006c007900200073006500740020006c0069006e006500730020
006f0066002000620069006700200061006e006400200073006d0061006c
006c0020007400650078007400200061006c0069006b0065002e00200043
0061006c0069006200720069002700730020006d0061006e007900200063
0075007200760065007300200061006e006400200074006800650020006e
006500770020007200610073007400650072006900730065007200200074
00650061006d00200075007000200069006e002000620069006700670065
0072002000730069007a0065007300200074006f00200072006500760065
0061006c002000610020007700610072006d00200061006e006400200073
006f006600740020006300680061007200610063007400650072002e004d
006900630072006f0073006f00660074003a002000430061006c00690062
0072006900200042006f006c0064003a0020003200300030003500560065
007200730069006f006e00200035002e0036003200430061006c00690062
00720069002d0042006f006c006400430061006c00690062007200690020
006900730020006500690074006800650072002000610020007200650067
0069007300740065007200650064002000740072006100640065006d0061
0072006b0020006f007200200061002000740072006100640065006d0061
0072006b0020006f00660020004d006900630072006f0073006f00660074
00200043006f00720070006f0072006100740069006f006e00200069006e
002000740068006500200055006e00690074006500640020005300740061
00740065007300200061006e0064002f006f00720020006f007400680065
007200200063006f0075006e00740072006900650073002e004c00750063
0028006100730029002000640065002000470072006f006f007400680074
00740070003a002f002f007700770077002e006d006900630072006f0073
006f00660074002e0063006f006d002f007400790070006f006700720061
007000680079002f006300740066006f006e007400730068007400740070
003a002f002f0066006f006e007400660061006200720069006b002e0063
006f006d0059006f00750020006d00610079002000750073006500200074
00680069007300200066006f006e00740020006100730020007000650072
006d00690074007400650064002000620079002000740068006500200045
0055004c004100200066006f00720020007400680065002000700072006f
006400750063007400200069006e00200077006800690063006800200074
00680069007300200066006f006e007400200069007300200069006e0063
006c007500640065006400200074006f00200064006900730070006c0061
007900200061006e00640020007000720069006e007400200063006f006e
00740065006e0074002e00200059006f00750020006d006100790020006f
006e006c0079002000280069002900200065006d00620065006400200074
00680069007300200066006f006e007400200069006e00200063006f006e
00740065006e00740020006100730020007000650072006d006900740074
00650064002000620079002000740068006500200065006d006200650064
00640069006e00670020007200650073007400720069006300740069006f
006e007300200069006e0063006c007500640065006400200069006e0020
007400680069007300200066006f006e0074003b00200061006e00640020
0028006900690029002000740065006d0070006f0072006100720069006c
007900200064006f0077006e006c006f0061006400200074006800690073
00200066006f006e007400200074006f002000610020007000720069006e
0074006500720020006f00720020006f00740068006500720020006f0075
0074007000750074002000640065007600690063006500200074006f0020
00680065006c00700020007000720069006e007400200063006f006e0074
0065006e0074002e0068007400740070003a002f002f007700770077002e
006d006900630072006f0073006f00660074002e0063006f006d002f0074
00790070006f006700720061007000680079002f0066006f006e00740073
002f00640065006600610075006c0074002e0061007300700078a9203230
3038204d6963726f736f667420436f72706f726174696f6e2e20416c6c20
5269676874732052657365727665642e43616c696272692069732061206d
6f6465726e2073616e732073657269662066616d696c7920776974682073
7562746c6520726f756e64696e6773206f6e207374656d7320616e642063
6f726e6572732e204974206665617475726573207265616c206974616c69
63732c20736d616c6c20636170732c20616e64206d756c7469706c65206e
756d6572616c20736574732e204974732070726f706f7274696f6e732061
6c6c6f77206869676820696d7061637420696e2074696768746c79207365
74206c696e6573206f662062696720616e6420736d616c6c207465787420
616c696b652e2043616c696272692773206d616e79206375727665732061
6e6420746865206e65772072617374657269736572207465616d20757020
696e206269676765722073697a657320746f2072657665616c2061207761
726d20616e6420736f6674206368617261637465722e4d6963726f736f66
743a2043616c6962726920426f6c643a203230303556657273696f6e2035
2e363243616c696272692d426f6c6443616c696272692069732065697468
6572206120726567697374657265642074726164656d61726b206f722061
2074726164656d61726b206f66204d6963726f736f667420436f72706f72
6174696f6e20696e2074686520556e697465642053746174657320616e64
2f6f72206f7468657220636f756e74726965732e4c756328617329206465
2047726f6f74687474703a2f2f7777772e6d6963726f736f66742e636f6d
2f7479706f6772617068792f6374666f6e7473687474703a2f2f666f6e74
66616272696b2e636f6d596f75206d617920757365207468697320666f6e
74206173207065726d6974746564206279207468652045554c4120666f72
207468652070726f6475637420696e207768696368207468697320666f6e
7420697320696e636c7564656420746f20646973706c617920616e642070
72696e7420636f6e74656e742e20596f75206d6179206f6e6c7920286929
20656d626564207468697320666f6e7420696e20636f6e74656e74206173
207065726d69747465642062792074686520656d62656464696e67207265
737472696374696f6e7320696e636c7564656420696e207468697320666f
6e743b20616e6420286969292074656d706f726172696c7920646f776e6c
6f6164207468697320666f6e7420746f2061207072696e746572206f7220
6f74686572206f75747075742064657669636520746f2068656c70207072
696e7420636f6e74656e742e687474703a2f2f7777772e6d6963726f736f
66742e636f6d2f7479706f6772617068792f666f6e74732f64656661756c
742e61737078b10903b802f9b21e1d1fb802f8b21e2b1fb802f7b21e2c1f
b802f6b21e2c1fb802f5b21e2c1fb802f4b21e2b1fb802f3b21e2c1fb802
f2b21e2c1fb802f1b21e2c1fb802f0b21e2c1fb802efb21e2c1fb802eeb2
1e2b1fb802edb21e2b1fb802ecb21e2c1fb802ebb21e2c1fb802eab21e2c
1fb802e9b21e2c1fb802e8b21e2c1fb802e7b21e2c1fb802e6b21e2c1fb8
02e5b21e2c1fb802e4b21e091fb802e3b21e2c1fb802e2b21e2c1fb802e1
b21d121fb802e0b21d191fb802dfb21d2f1fb802deb21d2f1fb802ddb21d
2f1fb802dcb21d2f1fb802dbb21d191fb802dab21d2f1fb802d9b21d2f1f
b802d8b21d2f1fb802d7b21d2f1fb802d6b21d2f1fb802d5b21d2f1fb802
d4b21d2f1fb802d3b21d2f1fb802d2b21d2f1fb802d1b21d2f1fb802d0b2
1d2f1fb802cfb21d2f1fb802ceb21d121fb802cdb21d121fb802ccb21d12
1fb802cbb21d121fb802cab21d191fb802c9b21d2f1fb802c8b21d2f1fb8
02c7b21d2f1fb802c6b21d2f1fb802c5b21d2f1fb802c4b21d2f1fb802c3
b21d2f1fb802c2b21d2f1fb802c1b21d2f1fb802c0b21d2f1fb802bfb21d
121fb802beb21d121fb802bdb21d2f1fb802bcb21d2f1fb802bbb21d2f1f
b802bab21d2f1fb802b9b21d2f1fb802b8b21d2f1fb802b7b21d2f1fb802
b6b21d2f1fb802b5b21d2f1fb802b4b21d2f1fb802b3b21d2f1fb802b2b2
1d2f1fb802b1b21c321fb802b0b21c321fb802afb21c331fb802aeb21c33
1fb802adb21c331fb802acb21c331fb802abb21c331fb802aab21c311fb8
02a9b21c311fb802a8b21c321fb802a7b21c321fb802a6b21c321fb802a5
b21c321fb802a4b21c321fb802a3b21c321fb802a2b21c331fb802a1b21c
331fb802a0b21c331fb8029fb21c331fb8029eb21c331fb8029db21c331f
b8029cb21c311fb8029bb21c311fb8029ab21c321fb80299b21c321fb802
98b21c321fb80297b21c321fb80296b21c321fb80295b21c331fb80294b2
1c331fb80293b21c331fb80292b21c331fb80291b21c331fb80290b21c33
1fb8028fb21c331fb8028eb21c311fb8028db21c321fb8028cb21c321fb8
028bb21c321fb8028ab21c321fb80289b21c321fb80288b21c331fb80287
b21c331fb80286b21c331fb80285b21c331fb80284b21c331fb80283b21c
331fb80282b21b341fb80281b21b341fb80280b21b341fb8027fb21b341f
b8027eb21b341fb8027db21b341fb8027cb21b341fb8027bb21b341fb802
7ab21b341fb80279b21b341fb80278b21b341fb80277b21b341fb80276b2
1b341fb80275b21b341fb80274b21b341fb80273b21b341fb80272b21b34
1fb80271b21b341fb80270b21b341fb8026fb21a351fb8026eb21a351fb8
026db21a351fb8026cb21a351fb8026bb21a351fb8026ab21a351fb80269
b21a351fb80268b21a351fb80267b21a351fb80266b21a351fb80265b21a
351fb80264b21a351fb80263b21a351fb80262b21a351fb80261b21a351f
b80260b21a351fb8025fb21a351fb8025eb21a351fb8025db21a351fb802
5cb21a351fb8025bb21a351fb8025ab21a351fb80259b219371fb80258b2
19371fb80257b219371fb80256b219371fb80255b219371fb80254b21937
1fb80253b219371fb80252b219371fb80251b219371fb80250b219371fb8
024fb219371fb8024eb219371fb8024db219371fb8024cb219371fb8024b
b219371fb8024ab219371fb80249b219371fb80248b219371fb80247b219
371fb80246b219371fb80245b219371fb80244b219371fb80243b219371f
b80242b219371fb80241b219371fb80240b219371fb8023fb219371fb802
3eb219371fb8023db219371fb8023cb219371fb8023bb219371fb8023ab2
19371fb80239b218391fb80238b218391fb80237b218391fb80236b21839
1fb80235b218391fb80234b218391fb80233b218391fb80232b218391fb8
0231b218391fb80230b218391fb80301b2182e1fb8022fb218391fb8022e
b218391fb8022db218391fb8022cb218391fb8022bb218391fb8022ab218
391fb80229b218391fb80228b218391fb80227b218391fb80226b218391f
b80225b2173b1fb80224b2173b1fb80223b217321fb80222b2173a1fb802
21b2173b1fb80220b2173b1fb8021fb2173b1fb8021eb2173b1fb8021db2
173b1fb8021cb2173b1fb8021bb2173b1fb8021ab2173b1fb80219b2173b
1fb80218b2173b1fb80217b2173b1fb80216b2173b1fb80215b217321fb8
0214b2173a1fb80213b2173b1fb80212b2173b1fb80211b2173b1fb80210
b2173b1fb8020fb2173b1fb8020eb2173b1fb8020db2173b1fb8020cb217
3b1fb8020bb2173b1fb8020ab2173b1fb80209b217321fb80208b217321f
b80207b2173b1fb80206b2173b1fb80205b2173b1fb80204b2173b1fb802
03b2173b1fb80202b2173b1fb80201b2173b1fb80200b2173b1fb801ffb2
173b1fb801feb2173b1fb801fdb2173b1fb801fcb2173b1fb801fbb2173b
1fb801fab2173b1fb801f9b2173b1fb801f8b2173b1fb801f7b217321fb8
01f6b2173a1fb801f5b2173b1fb801f4b2173b1fb801f3b2173b1fb801f2
b2173b1fb801f1b2173b1fb801f0b2173b1fb801efb2173b1fb801eeb217
3b1fb801edb2173b1fb801ecb2173b1fb801ebb2173b1fb801eab2173b1f
b801e9b2173b1fb801e8b2173b1fb801e7b217321fb801e6b216231fb801
e5b216231fb801e4b216371fb801e3b216371fb801e2b216381fb801e1b2
16381fb801e0b216431fb801dfb216441fb801deb216441fb801ddb21644
1fb801dcb216451fb801dbb216461fb801dab216461fb801d9b216461fb8
01d8b216231fb801d7b216231fb801d6b216381fb801d5b216431fb801d4
b216431fb801d3b216431fb801d2b216441fb801d1b216461fb801d0b216
461fb801cfb216461fb801ceb216461fb801cdb216461fb801ccb216461f
b801cbb216431fb801cab216231fb801c9b216231fb801c8b216371fb801
c7b216371fb801c6b216381fb801c5b216421fb801c4b216431fb801c3b2
16441fb801c2b216451fb801c1b216461fb801c0b216461fb801bfb21646
1fb801beb216461fb801bdb216461fb801bcb216461fb801bbb216461fb8
01bab216371fb801b9b216381fb801b8b216421fb801b7b216431fb801b6
b216431fb801b5b216431fb801b4b216441fb801b3b216441fb801b2b216
441fb801b1b216451fb801b0b216451fb801afb216451fb801aeb216461f
b801adb216461fb801acb216461fb801abb216461fb801aab216461fb801
a9b215341fb801a8b215411fb801a7b215411fb801a6b2154d1fb801a5b2
154e1fb801a4b2154f1fb801a3b215521fb801a2b215401fb801a1b2154d
1fb801a0b2154e1fb8019fb2154f1fb8019eb215521fb8019db2154d1fb8
019cb215401fb8019bb2154d1fb8019ab2154e1fb80199b2154e1fb80198
b2154f1fb80197b2154f1fb80196b215501fb80195b215521fb80194b215
521fb80193b215521fb80192b215411fb80191b2154f1fb80190b215501f
b8018fb215501fb8018eb215511fb8018db215521fb8018cb215521fb801
8bb215521fb8018ab214581fb80189b214591fb80188b2145c1fb80187b2
145d1fb80186b2144a1fb80185b2145b1fb80184b2145c1fb80183b21459
1fb80182b2145d1fb8018140af145d1ff00f451fef0e481fe00c4e1fc20c
4e1fc10c4e1fc00c4e1fbf0b561fb20b561fb10b561fb00b561faf0b561f
ae0b561fad0b561fac0b561fab0b561faa0b561fa90b561fa80b561fa70b
561fa60b561fa50b561fa40b561fa30b561fa20b561fa10b561fa00b561f
9f0b561f9e0a681f9a0a681f990a681f980a681f970a681f960a681f950a
681f940a681f930a681f920a681f910a681f9009681f8f09681f8e09681f
8d09681f8c09681f410902fc02fa0056001f02fb02fa0068001f017fb213
321fb8017eb212371fb80174b212371fb80173b211421fb80172b211421f
b80171b211421fb80170b211421fb8016fb211421fb8016eb211421fb801
6db211421fb8016cb211421fb8016bb211421fb8016ab211421fb8013cb2
11421fb8013bb210421fb8013ab210421fb80139b210421fb80138b21042
1fb80137b210421fb80136b210421fb80135b210421fb80134b210421fb8
0133b210421fb80132b20f451fb80131b20f451fb80130b20f451fb80112
b20f451fb80111b20f451fb80110b20f451fb8010fb20f451fb8010eb20f
451fb8010db20e481fb8010cb20e481fb8010bb20e481fb8010ab20e481f
b80109b20e481fb80108b20e481fb80107b20d4a1fb80106405b0d4a1fee
0d4a1fed0d4a1fec0d4a1feb0d4a1fea0d4a1fe90c4e1fdf0c4e1fde0c4e
1fdd0c4e1fdc0c4e1fdb0c4e1fda0c4e1fd90b561fd80b561fd70b561fbe
0b561fbd0b561fbc0b561fbb0b561fba0b561f9d0a681f9c0a681fb80180
b213321fb8017ab211401fb80179b211421fb80178b211421fb80177b211
421fb80176b211421fb80175b211421fb80143b211421fb80142b210421f
b80141b210421fb80140b210421fb8013fb210421fb8013eb210421fb801
3db20f451fb80115b20f451fb80114b20f451fb80113b20f451fb9030303
02b2401fa4be030200b4030200c4030200030300b213321fb8017bb21332
1fb80153b212371fb80152b211401fb80151b211401fb80150b211401fb8
014fb211401fb8014eb211401fb8014db211401fb8014cb211401fb8014b
b211401fb8014ab211401fb80149b211401fb80148b211401fb80147b211
401fb80146b211401fb80145b211401fb80144b211401fb80122b211401f
b80121b210421fb80120b210421fb8011fb210421fb8011eb210421fb801
1db210421fb8011cb210421fb8011bb210421fb8011ab210421fb80119b2
10421fb80118b20f451fb80117b20f451fb80116409b0f451ffd0f451ffc
0f451ffb0f451ffa0f451ff90e481ff80e481ff70e481ff60e481ff50e48
1ff40e481ff30d4a1ff20d4a1ff10d4a1fe70d4a1fe60d4a1fe50d4a1fe4
0d4a1fe30d4a1fe20d4a1fe10c4e1fcd0c4e1fcc0c4e1fcb0c4e1fca0c4e
1fc90c4e1fc80c4e1fc70c4e1fc60c4e1fc50c4e1fc40c4e1fc30c4e1fb8
0c4e1fb70b561fb60b561fb50b561fb40b561fb30b561f9b0a681fb802fd
b212371fb8017db212371fb8017cb212371fb80169b2112e1fb80168b211
2e1fb80167b211401fb80166b211401fb80165b211401fb80164b211401f
b80163b211401fb80162b211401fb80161b211401fb80160b211401fb801
5fb211401fb8015eb211401fb8015db211401fb8015cb211401fb8015bb2
11401fb8015ab211401fb80159b211401fb80158b211401fb80157b21140
1fb80156b211401fb80155b211401fb80154b211401fb8012fb211401fb8
012eb210421fb8012db210421fb8012cb210421fb8012bb210421fb8012a
b210421fb80129b210421fb80128b210421fb80127b210421fb80126b210
421fb80125b20f451fb80124b20f451fb80123b20f451fb80105b20f451f
b80104b20f451fb80103b20f451fb80102b20f451fb80101b20e481fb801
0040a20e481fff0e481ffe0e481fe80c4e1fd60c4e1fd50c4e1fd40c4e1f
d30c4e1fd20c4e1fd10c4e1fd00c4e1fcf0c4e1fce0b561fb90b561f8503
251f84032e1f83012e1f8248805581ab80557f487d557eab7d550b7d3b7d
4b7d030b7d1b7d4b7d7b7dab7ddb7d067c487a557bab7a55047a147a020a
7948775578ab77550b77010c764875555475e475f4750314755475647574
759475d475e47507a475b475c47503b8ffc0401275383b46807590750214
757475020075010fb8ffc04021750b0e467448725573ab72550472347202
3bf47201e07201023072015072607202b8ffc0b372242846b8ffc0403572
161a461072307240720371486f5570ab6f554f6f6f6f7f6f9f6fbf6f057f
6f8f6f02af6fbf6f02406f090d466e486d55df6d0100bc02ff001002ff00
c002ffb2030a6fbb02fe000100ef02fe40ff016b032e1f6a03251f692e67
5568ab6755662e645565ab6455632e6255612e60555f2e5d555eab5d555c
2e5a555bab5a55592e58555703251f562e545555ab5455532e515552ab51
554f2e4e554e03251f4d2e4b554cab4b554a2e485549ab4855504801472e
46554503361f001f01001e01001e701e801ef01e040b601d701d02701de0
1df01d03701cf01c027f1b010f1a7f1a8f1a030f1a8f1a020f1a8f1a020f
191f198f199f19af19050f198f199f19030c701280120270118011023011
4011d011e011040011a011020f8f0f9f0faf0f034f0f5f0fef0fff0f04af
0f01af0ebf0ecf0e034f0e5f0e6f0e030f0eaf0ebf0e0310400e2e31460f
0d1f0d40472f0d033c2f0d3f0d4f0d038f0d01400d2e3246400d2427463f
0c4f0c5f0c039f0c01400c262946ef0aff0a02400a242746ef09ff0902ff
09010003012001010001100120010308b8ffc0b301151f46b80100b31601
0501b80190b154532b2b4bb807ff524bb008505bb00188b02553b00188b0
40515ab00688b000555a5b58b101018e59b101024354b0144b515a58b101
018e59858d8d00421d4bb01d5358b0a01d594bb0805358b0401d594bb0ff
5358b0001db1160042592b5e73757373742b732b73742b2b73745e732b5e
7374757374755e73747573015e7374737475757473745e737473002b2b73
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b73745e73732b
2b7374752b2b732b2b73755f75755e732b2b2b5e7373732b7374752b5e73
2b2b5e732b2b73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b732b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b185f5e00>
[5719 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

1 0 3 <> XFAAAA+Calibri-Bold AddT42Char 
1 316 18 <0001004fffeb040c05230039008bb10102435558b21c002bbe02c7000e00
18016100210026ffe8b40b0f014c26b80160b2135304b8015ab73530180b
0f014c30b80162b240095600183f1a4dfd2bd4ed3ffd2bd4ed012fedd4c4
31301bbc0018016100210026ffe8b40b0f014c26b80160b2135304b8015a
b73530180b0f014c30b80162b240095600183f1a4dfd2bd4ed3ffd2bd4ed
31305925140e0623222e02353412363633321e0615140e0223222e022322
0e0215141e0233323e0233321e02040c03060a163f5b754485d69650589e
dd85366455441b0a0603040a0e090f2e4965464d79552c2f577b4d466649
2f0d0a0c0804c4192319121724211652a3f4a2a50100ae5a121d261b121c
261c1e2a1a0c232b233f75a66872a76c3521282008182b00>XFAAAA+Calibri-Bold AddT42Char 
1 610 69 <0001008dfffa04b80512003d00b5b10102435558b6270f0a2e0f0f14b802
34b21e2e32b80234b4001e385229b8fff040120f26024c29282e220c100f
26024c0c0b060fb8017db7270a19225119552eb8017db240065400183f1a
4ded3f3f123939ed1139392b111239392b3f012fd4ed3210ed322f113311
3331301bb2385229b8fff040120f26024c29282e220c100f26024c0c0b06
0fb8017db7270a19225119552eb8017db240065400183f1a4ded3f3f1239
39ed1139392b111239392b3f31305925140e022323222e02270126262723
16161511140e0223222e02351134363333321e0217131e03173326263511
343e0233321e021504b8101b25137023332b2819febe1c3a170204040b1b
2e24232e1a0a37288d2634292413fc162b2826120103030c1c2e24222e19
0a5c1724180b0e253f32025d367d3b488f4cfd5b0a100b06060b100a048b
2f2f0d1e3527fe272b53535028469845025f0a100c05050c100a>XFAAAA+Calibri-Bold AddT42Char 
1 966 87 <0002008dfffa0403050e001c00290080b10102435558b12406bb02930011
001d02c14009001125180b0f014c25b8012bb306060c23b8ffe8b40b0f01
4c23b8012bb44015510c5500183f3f1a4ded2b12392fed2b012fd4ed10ed
3231301bb625180b0f014c25b8012bb306060c23b8ffe8b40b0f014c23b8
012bb44015510c5500183f3f1a4ded2b12392fed2b31305901140e022323
11140e0223222e02351134363321321e0405342e0223231133323e020403
4482bd806c0d1e322726331e0c312801312e537477542cfeed30464d2970
763f55361c03856da8733cfe630a100a06060a100a048c2f2f07173e5f7f
6244582a0bfe49223d55>XFAAAA+Calibri-Bold AddT42Char 
1 1216 100 <0001000cfffa03ea050e00220055b10102435558b10006b80294b3181106
12b8ffe8b40b0f014c12b8015bb4401d510c5500183f3f1a4ded2b32012f
c4fdcd31301bb10612b8ffe8b40b0f014c12b8015bb4401d510c5500183f
3f1a4ded2b3231305901140e02232111140e0223222e02351121222e0235
343e023321321e0203ea050a0f09febc0d1e332626331e0dfebc0a0e0a05
050a0e0a0390090f0a0504a21d29190cfbed0a100a06060a100a04130c19
291d1e2a190b0b192a00>XFAAAA+Calibri-Bold AddT42Char 
1 1406 258 <00020047ffe9037603d7003300400129b10102435558b2091734b8025bb4
002727003ab80245401011031701f3170117b80c3401fc340134b8ffc040
090c0d014c34342e412ab80118401be02201037d228d2202402250226022
030f221f22020c042222041db8ffe0400e0c0f014c1d1810014d1dfa2e4a
3db8ffe8400910014d3de4400c4d0400182f3f1a4ded2b3fed2b2b12392f
5f5e5d5d5d5f5ded1112392f2b5d71ed5d71012fedc4392f10ed32393130
1b400f031701f3170117b80c3401fc340134b8ffc040090c0d014c34342e
412ab80118401be02201037d228d2202402250226022030f221f22020c04
2222041db8ffe0400e0c0f014c1d1810014d1dfa2e4a3db8ffe840091001
4d3de4400c4d0400182f3f1a4ded2b3fed2b2b12392f5f5e5d5d5d5f5ded
1112392f2b5d71ed5d7131305925140606232226263535060623222e0235
343e02333335342e0223220e0223222e0235343e0433321e02150723220e
02151416333236370376142b2a2d2911378d56477757303d79b477571127
41303f634c33100b110b060a1c465e6f3b6995602cf7603d563619473f35
592e1f0e100707100e473b4225496c484e734b24362a3f2a141c221c0e1a
26171f241d231e132955865cda122433213840363400>XFAAAA+Calibri-Bold AddT42Char 
1 1878 271 <0002007effe904000570002a003d0096b10102435558b20a2136bb026000
15002b0284400900150a363521040530b8ffe8b40b0f014c30b8014b400d
264a1b46104c39180b0f014c39b8014ab240054d00183f1a4ded2b3f3f3f
ed2b121739012fd4ed10ed323931301bb60a363521040530b8ffe8b40b0f
014c30b8014b400d264a1b46104c39180b0f014c39b8014ab240054d0018
3f1a4ded2b3f3f3fed2b12173931305901140e0223222e022715140e0223
222e023511343e0233321e0215113e0333321e0205342e0223220e020711
161633323e02040034628f5b2d4e4745240b192a1e1f29190a0c1d302525
301d0c2244444828638a5728fefb112a4333193033361e35613531442d14
01ec77be864811263a29610b0f0a04040a0f0b05230a100b06060b100afe
1322301f0e4f86b375396a52310e223628fed84447325066>XFAAAA+Calibri-Bold AddT42Char 
1 2202 286 <0002004affe903b603d7002b00340105b10102435558b31313212cb80243
b22b3404b80272400a21032c132c021b2cc304b8ffc040170d014d000410
04024c5004600402a004b0040204041c2fb8ffe8b30f014d2fb8ffe84020
0d014d2fe4264a18f6000e100e0211030e09180c014d09180f014d09f940
1c4d00183f1a4dfd2b2bd45f5e5ded3fed2b2b12392f5d715e5d2bed5e5d
012fed32dded12392f31301b4009032c132c021b2cc304b8ffc040170d01
4d00041004024c5004600402a004b0040204041c2fb8ffe8b30f014d2fb8
ffe840200d014d2fe4264a18f6000e100e0211030e09180c014d09180f01
4d09f9401c4d00183f1a4dfd2b2bd45f5e5ded3fed2b2b12392f5d715e5d
2bed5e5d3130590114062321141e0233323e0233321e0215140e0623222e
0235343e0233321e021527362623220e020703b62924fde11b3b5d414264
49300f090c08030204080d3a5a744277b3783b3e76a96a709f6630f4035b
5f30472f190201fa2e2c395d412213171307122119161f160f0e1817113c
7aba7d77bf85464275a05e206a79243d532f>XFAAAA+Calibri-Bold AddT42Char 
1 2610 296 <00010019fffa02980578003c0073b10102435558b31610001bb8025fb330
2a250ab8011db336471a26b8ffe8b40b0f014c26b8011fb6403048204c10
4800183f3f3f1a4ded2b323fed012fc433fdc433c431301bb9000a011db3
36471a26b8ffe8b40b0f014c26b8011fb6403048204c104800183f3f3f1a
4ded2b323fed31305901140e0223222e0223220e02151533321e02151406
232311140e0223222e02351123222635343e02333335343e0233321e0402
9804080a0607111922171b271a0ca3090f0a051413a30c1c322424311d0b
70131305090f0a6f244d77512746280e090404f21d23130707080711253b
2b520a17281d372ffd2e0a0f0a05050a0f0a02d22f371d28170a4b5b895b
2e0d0f0d1927>XFAAAA+Calibri-Bold AddT42Char 
1 2886 349 <0002006bfffa018d054e001500210045b10102435558bf001602bf001c00
150260000a001f017bb540191049054c00183f3fd61a4ded012fedd4ed31
301bb9001f017bb540191049054c00183f3fd61a4ded31305925140e0223
222e023511343e0233321e0215131406232226353436333216017a0c1d30
2525301d0c0c1d302525301d0c133e54553b3d55543c220a0f0a05050a0f
0a037a0a0f0b06060b0f0a01304c3a38494c3b39>XFAAAA+Calibri-Bold AddT42Char 
1 3056 373 <0001007efffa060903d7005000abb10102435558b14613b8025fb31e1e32
0ab8025fb2503e27bb026000320010ffe8b40b0f014c10b8014db24b4a24
b8ffe8b40b0f014c24b8014d400e40414a3e462d38492d4c194c054c0018
3f3f3f3f1239393f1a4ded2b3fed2b012fed39d4ed11392fed3931301bb9
0010ffe8b40b0f014c10b8014db24b4a24b8ffe8b40b0f014c24b8014d40
0e40414a3e462d38492d4c194c054c00183f3f3f3f1239393f1a4ded2b3f
ed2b31305925140e0223222e023511342e022322060711140e0223222e02
3511342e022322060711140e0223222e023511343e0233321e0215153636
33321e02173e0333321e021506090c1c302526301d0b112335252d5c360c
1d302425301d0c112236242e5c350c1d302525301d0c0a1a291f202a170a
4a93503758453211284d4b4b27597a4b20220a0f0a05050a0f0a02112d4a
351d4643fdaf0a0f0a05050a0f0a02112d4a351d4643fdaf0a0f0a05050a
0f0a037c0a0f0a05050a0f0a675050172b3c252b3e27133c678a4d00>XFAAAA+Calibri-Bold AddT42Char 
1 3444 374 <0001007efffa03d203d700320081b10102435558b12a13bb0260001e000b
025fb2001e10b8fff0b30b014d10b8ffe8b40c0f014c10b8014d400b402d
4a2a192449194c054c00183f3f3f12393f1a4ded2b2b012fd4ed10ed3931
301bb90010fff0b30b014d10b8ffe8b40c0f014c10b8014d400b402d4a2a
192449194c054c00183f3f3f12393f1a4ded2b2b31305925140e0223222e
023511342e022322060711140e0223222e023511343e0233321e02151536
3633321e021503d20c1c312425311c0c132439263062350c1d302525301d
0c0a1a291f202a170a4a99535b7d4d22220a0f0a05050a0f0a01fd414a35
1d4643fdaf0a0f0a05050a0f0a037c0a0f0a05050a0f0a6750503c678a61
>XFAAAA+Calibri-Bold AddT42Char 
1 3714 381 <00020048ffe9040403d7001300270071b10102435558bf00140275000000
1e0275000a0019ffe8b40b0f014c19b8011a40090f4a23180b0f014c23b8
011cb240054d00183f1a4ded2b3fed2b012fedd4ed31301bb90019ffe8b4
0b0f014c19b8011a40090f4a23180b0f014c23b8011cb240054d00183f1a
4ded2b3fed2b31305901140e0223222e0235343e0233321e0205342e0223
220e0215141e0233323e0204043c7ab87b77b074383d7ab77b78b07338fe
fd1532533f3854361b1631543e3954361a01e972bc884a427eb87672bd87
4a417eb881426f522e294f6f47426f522d294e6f>XFAAAA+Calibri-Bold AddT42Char 
1 3944 393 <0002007efe95040003d7002a003d0096b10102435558b221360abb026000
15002b0285400900150a363521040530b8ffe8b40b0f014c30b8014b400d
264a1b49104f39180b0f014c39b8014ab240054d00183f1a4ded2b3f3f3f
ed2b121739012fd4ed10ed323931301bb60a363521040530b8ffe8b40b0f
014c30b8014b400d264a1b49104f39180b0f014c39b8014ab240054d0018
3f1a4ded2b3f3f3fed2b12173931305901140e0223222e022711140e0223
222e023511343e0233321e0215153e0333321e0205342e0223220e020711
161633323e0204003362925e27413d3c200c1d302525301d0c0a19291f1e
29190a274b4e532f628a5728fefa11294332193133361e35603431452c15
01ed77bf86480f1f2e1ffe5c0a100b06060b100a04de0a0f0a05050a0f0a
69283d29144d86b277396952310f223628feda4349325166>XFAAAA+Calibri-Bold AddT42Char 
1 4268 396 <0001007efffa02bb03d700330070b10102435558b1260fb80260400c001a
0f0a1f0a2f0a030d030ab8ffe8b30b014d0ab80153400a402b4a260f1520
49154c00183f3f1239393f1a4ded2b5f5e5d012fc4ed3931301bb9000aff
e8b30b014d0ab80153400a402b4a260f152049154c00183f3f1239393f1a
4ded2b31305901140e0223222e0223220e020711140e0223222e02351134
3e0233321e0215153e0333321e0602bb04080d0a0814191e12152a2d311c
0c1d302525301d0c0a1a291f202a170a233e38381c0d1e20180b05040203
4b242e1a0a07080711243c2cfdd40a0f0a05050a0f0a037c0a0f0a05050a
0f0a6f3241260f0307090a0c152a>XFAAAA+Calibri-Bold AddT42Char 
1 4522 400 <00010049ffe902f203d7004900e9b10102435558b90041022eb524322432
0c1bb802444022000c042e012ee4370b0a010ae71137400b014d10372037
020337113711160f3c013cb8fff0401b0b0f014c3ce4411b05294a16100c
0d014c001601100416f240054d00183f1a4ded5f5e5d2b3f123939ed2b5d
1139392f2f5f5d2b10ed5d10ed5d012fd4ed1239392f2fed31301b402004
2e012ee4370b0a010ae71137400b014d10372037020337113711160f3c01
3cb8fff0401b0b0f014c3ce4411b05294a16100c0d014c001601100416f2
40054d00183f1a4ded5f5e5d2b3f123939ed2b5d1139392f2f5f5d2b10ed
5d10ed5d31305901140e0223222e0435343e0233321e0233323e0235342e
0635343e0233321e0615140e0223222e0223220e0215141e0602f239688e
53325b4830160c04080c090b2b40553622352714253d4d514d3d25325e87
542a4f402c1308040303070c080926394b3022322010263e4f514f3e2601
1e4c744e270f1718152d2c1d231507191e1a0e1a281a1e2b201c222c405a
3f406b4c2a0c12150f0f151f171b2214071518150e1a23141f2a201c212c
4059>XFAAAA+Calibri-Bold AddT42Char 
1 4944 410 <00010017ffec028e04b1003a0093b10102435558b711110d3b2900232db8
025fb2170d2db8ffe8b40b0f014c2db8011fb323481d0db8ffe8b40b0f01
4c0db8011fb2174831b80147b240074d00183f1a4ded3fed2bcd3fed2b01
2f33fd32c4321112392f31301bb9002dffe8b40b0f014c2db8011fb32348
1d0db8ffe8b40b0f014c0db8011fb2174831b80147b240074d00183f1a4d
ed3fed2bcd3fed2b31305925140e0423222e02351123222635343e023333
35343e0233321e02151533321e02151406232311141633323e0233321e02
028e0b12232f371c4b6e48226b1314050a0f0a6a0b1d312425311c0cc20a
0f0a051413c32e3b1420191107060b06057a2c2f130f0b06264f785201c9
2f371d28170ac70a100b05050b100ac70a17281d372ffe5d494907090707
1524>XFAAAA+Calibri-Bold AddT42Char 
1 5246 437 <00010079ffe903cc03c60032006bb10102435558b10b27bb025e0000001f
025f400f132d49270b05194924180b0f014c24b8014db4400e4d054c0018
3f3f1a4ded2b3f1239393f012fedd4ed3931301b400e2d49270b05194924
180b0f014c24b8014db4400e4d054c00183f3f1a4ded2b3f1239393f3130
5925140e0223222e023535060623222e023511343e0233321e021511141e
023332363711343e0233321e021503cc0a19291f2129180a4a99525c7d4d
210b1d312425301d0c122539263061370b1d302525301c0c220a0f0a0505
0a0f0a6750503c68896602220a0f0a05050a0f0afe08464a351d46430251
0a0f0a05050a0f0a>XFAAAA+Calibri-Bold AddT42Char 
1 5494 455 <00010016fe9503b403c600240068b10102435558b60109090e001a1bb802
42b640241a200a1a18b80273400f400e1a1f49190a13490a4b044f004b00
183f3f3f3f12393f01192f18d41a4ded12391a10dd1aed123912392fcd31
301b400c1f49190a13490a4b044f004b00183f3f3f3f12393f3130592103
060623222e023713262627012634363633321e02171333133e0233321616
140702836c09504d2830180207770d1505fecd0d18392f2b321c0e07d203
c006132c372b391b08fec4191607101811012b06190e033423251508030c
1917fdab02611a11080816251900>XFAAAA+Calibri-Bold AddT42Char 
1 0 0 <00050000fe7303db050e000300070039004d004e0054bc000d019d001700
3a01cbb44444082d07be019d0002002001cb00080001019d401304020d1b
1b3f2335068c035111493f078c0254003ffddeddc63ffddecd12392fcd01
2fddedd6ed10fdc611392fedd4ed3130011121110111211101140e020707
060623222e02352726363333323e0235342623220e0223222e0235343637
3e0333321e0203140e0223222e0235343e0233321e020103dbfc4f0345fd
240279213b533105012b25171f130808031f1e0d2533200f4b4d2336281a
05040806030508072736422355774a22ce0a18271c1d27180a0a18271d1c
27180afdc2050efaf2050efb570444fbbc02e839583e2406790d0b020509
089d281e1524311c3d4b0d0f0d050e1b171a1c0708110e0a2a4861fd991a
25170a0a17251a1c25180a0a1825fd3b>XFAAAA+Calibri-Bold AddT42Char 
XFAAAA+Calibri-Bold /CharStrings get begin
/g3 3 def
/g18 18 def
/g69 69 def
/g87 87 def
/g100 100 def
/g258 258 def
/g271 271 def
/g286 286 def
/g296 296 def
/g349 349 def
/g373 373 def
/g374 374 def
/g381 381 def
/g393 393 def
/g396 396 def
/g400 400 def
/g410 410 def
/g437 437 def
/g455 455 def
end
XFAAAA+Calibri-Bold /Encoding get
dup 32 /g3 put
dup 67 /g18 put
dup 78 /g69 put
dup 80 /g87 put
dup 84 /g100 put
dup 97 /g258 put
dup 98 /g271 put
dup 101 /g286 put
dup 102 /g296 put
dup 105 /g349 put
dup 109 /g373 put
dup 110 /g374 put
dup 111 /g381 put
dup 112 /g393 put
dup 114 /g396 put
dup 115 /g400 put
dup 116 /g410 put
dup 117 /g437 put
dup 121 /g455 put
pop
end
%ADOEndSubsetFont
/ZONLVZ+Calibri-Bold /XFAAAA+Calibri-Bold findfont ct_VMDictPut
/ZONLVZ+Calibri-Bold*1 
[32{/.notdef}rp /g3 34{/.notdef}rp /g18 10{/.notdef}rp /g69 /.notdef /g87 
3{/.notdef}rp /g100 12{/.notdef}rp /g258 /g271 2{/.notdef}rp /g286 /g296 
2{/.notdef}rp /g349 3{/.notdef}rp /g373 /g374 /g381 /g393 /.notdef 
/g396 /g400 /g410 /g437 3{/.notdef}rp /g455 134{/.notdef}rp]
ZONLVZ+Calibri-Bold nf
ZONLVZ+Calibri-Bold*1 [0 -6.96 -6.96 0 0 0 ]msf
7.22383 92.616 mo
(Number of Type Parameters )
[-4.56111 -3.74017 -5.62051 -3.74018 -3.45609 -2.50921 -1.79517 -3.71955 -2.15456 -1.66978 -3.4722 -3.24591 
-3.74018 -3.4561 -1.66978 -3.70113 -3.48956 -2.50921 -3.47549 -5.65519 -3.45623 -2.41735 -3.46326 -2.50921 
-2.91302 0 ]ysh
ZONLVZ+Calibri-Bold*1 [6.984 0 0 -6.984 0 0 ]msf
54.6961 105.792 mo
(Number of Constraints )
[4.56268 3.72532 5.63966 3.72532 3.47525 2.51077 1.79439 3.72543 2.15532 1.67564 3.7136 3.72543 
3.72532 2.75913 2.40457 2.51076 3.47355 1.68597 3.72532 2.40458 2.81615 0 ]xsh
19.4828 89.7551 mo
29.8949 89.7551 li
29.8949 74.7731 li
19.4828 74.7731 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: CUFAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CUFAAA+Calibri gcheck setglobal} if

1 0 3 <> CUFAAA+Calibri AddT42Char 
CUFAAA+Calibri /CharStrings get begin
/g3 3 def
end
CUFAAA+Calibri /Encoding get
dup 32 /g3 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ZONLVY+Calibri*1 
[32{/.notdef}rp /g3 13{/.notdef}rp /g856 /.notdef /g1004 /g1005 /g1006 
/g1007 /g1008 /g1009 /g1010 201{/.notdef}rp]
ZONLVY+Calibri nf
ZONLVY+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
26.352 85.0559 mo
(0 )
[3.48125 0 ]xsh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
/ZONLVZ+Calibri-Bold*1 uf
/ZONLVZ+Calibri-Bold uf
/XFAAAA+Calibri-Bold uf
/ZONLVY+Calibri*1 uf
/ZONLVY+Calibri uf
/CUFAAA+Calibri uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF

%%EndDocument
 @endspecial 1984 773 V 121 x Fv(Figur)o(e)67 b(19.)38
b FF(Number)68 b(of)g(con-)1984 941 y(straints)19 b(per)g(type)g
(parameter)3051 745 y @beginspecial 0 @llx 0 @lly 144
@urx 108 @ury 1180 @rwi 885 @rhi @setspecial
%%BeginDocument: constraints.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: constraints.pdf
%%Creator: Adobe Acrobat 9.4.2
%%For: Sorin Lerner
%%CreationDate: 24/03/2011, 15:53:07
%%BoundingBox: 0 0 144 108
%%HiResBoundingBox: 0 0 144 108
%%CropBox: 0 0 144 108
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 550 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.1-c043 52.372728, 2009/01/18-15:08:04        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreateDate="2011-03-23T12:43:13-07:00"
   xmp:ModifyDate="2011-03-23T12:43:13-07:00"
   pdf:Producer="GPL Ghostscript 8.71"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -108 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 108 li
144 108 li
144 0 li
cp
clp
[1 0 0 1 0 0 ]ct
0 108 mo
144 108 li
144 0 li
0 0 li
cp
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
0 sep
ef
.5 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
1.0957 48.1699 mo
4.29258 19.0941 30.4551 -1.89 59.5309 1.31 cv
88.607 4.51 109.59 30.6699 106.39 59.7461 cv
103.19 88.8219 77.0309 109.802 47.9539 106.605 cv
18.8781 103.408 -2.10117 77.2461 1.0957 48.1699 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
88.227 48.359 mo
89.6578 35.3461 101.37 25.9578 114.38 27.3879 cv
127.39 28.8191 136.78 40.527 135.35 53.5398 cv
133.92 66.552 122.21 75.941 109.2 74.5102 cv
96.1859 73.0789 86.7969 61.3711 88.227 48.359 cv
cp
@
96.732 88.459 mo
97.725 79.4309 105.85 72.9172 114.88 73.9102 cv
123.9 74.902 130.42 83.0262 129.43 92.0539 cv
128.43 101.082 120.31 107.596 111.28 106.604 cv
102.25 105.611 95.7398 97.4879 96.732 88.459 cv
cp
@
%ADOBeginSubsetFont: GLAAAA+Calibri Initial
ct_T42Dict begin
-0.5 -0.305 1.238 0.961
 256 array 0 1 255 {1 index exch /.notdef put} for  /GLAAAA+Calibri
Type42DictBegin
[<00010000000c000c000c000c4f532f3200000000000000cc000000566376
7420b09bc4d2000001240000051c6670676df6f64d0c000006400000091a
676c7966000000000000713000000c8868656164e625fe3d00000f5c0000
0036686865610dad077c00000f9400000024686d74780000000000000fb8
000010e86c6f636100000000000020a000001e466d617870213525010000
3ee8000000206e616d65267651f400003f0800000e16707265706baf02fe
00004d200000241067646972000000000000000000000000000100000190
000500080000000000000000000000000000000000000000000000000000
00000000000000000000000000080000000000000000000000000000f000
f0ff00000000000000000000000000010000000000000000079e0000fe93
0000000000000000000000000050006a0073008000800086008d009300bf
00db006200830093009900a000a600a900b000c100c900d7000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000fe79056d000c03b7000600130000fffaffedfea6
ffedfeb8050e000600130000fffaffedfe93050e00130420000600130000
fffaffedff10ffee050e00130420000600130000fffaffeefe93ff10feb8
0612000a050e0006000d02d2fffafff301fdfffa023f0006000dff36fffa
fff302870006000f0000fffafff1079efeaffea700000000000000000000
000000500051005a005b005c005d006000610062006400680069006a006b
006c006d006e00680069006e00600067006e00660068005f006100630064
00660068006a006b006c006d006e006f0070006f00720074007500760076
007000720073007400750076006f00700071007200730075007700770078
0079007a007b007c007d007b007c007d00770079007a007c0078007a007c
007d0078007d007e007f008000810082007e007f00810082007e007f0080
008100820083008400850086008700880089008300840085008600870088
0089008300840085008600870088008900890086008700880089008a008b
008c008d008e008f008a008b008c008d008e008f008a008b008c008d008e
008f008d008a008b008c008d008e008f0090009000910092009300940095
009600980099009b009c0090009100920093009400950096009700980099
009a009e009f00a60090009100950098009f009000910096009700bc00c6
00b500ae00af00b6006800690063006a006f00700071006f007000710072
0066006c006d00700079007c007f00830086008700880089008a00740075
00760077007a007b007c007d007e008200850086008a0088008900830078
007b00820083008600870088008900760079007a007c007d007e00830085
00880089008a0073007400750077007a007d00880089008a008b008c008d
008e00900094008b008c008d00910092009300940095008c008d00910095
008f009000910092009300940095008b008c008d008e008f009000910092
009300940095008b008c008d008e008f0090009100920093009600970098
0099009c0096009700980099009a009b009c00960099009a009c00960097
00980099009a009b009c009700980099009a009b009c009700980099009a
009b009c0096009d00a000a1009d009e009f00a000a100a2009d009f00a0
00a1009f00a2009d009e009f00a000a100a2009d009e00a000a1009d009e
00a000a2009d00a300a400a500a600a700a300a400a600a700a300a400a5
00a600a700a600a300a700a800a900aa00ab00ac00ac00a800a900aa00ab
00ac00a800a900aa00ab00ac00a800aa00ab00ac00ae00ad00ae00af00b0
00b100b200b300b400b500b600b700b800ad00ae00ad00ae00af00b000b1
00b200b300b400b500b600b700b800ad00ae00af00b000b100b200b300b4
00b500b600b700b800b300ae00af00b000b200b500b600b700b800b900ba
00bb00bc00be00c000c100c200c200b900ba00bb00bc00bd00be00bf00c0
00c100c200c400ba00bb00be00bf00c000c200c300c400b900ba00bf00c0
00c200c600c700c900ca00cb00cc00cf00c500c700ce00c500c700c800cf
00d000d200d300d7010d00d000d100e900d000fd00d005e4000e00410000
05ba009c009c005e005e4047645f5e5d5c5b5a59585554535251504f4e4d
4c4b4a494847464544434241403f3e3d3c3b3a39383736352f2e2d2c2826
252423221f181411100f0d0b0a090807060504030201002c4523466020b0
2660b004262348482d2c452346236120b02661b004262348482d2c452346
60b0206120b04660b004262348482d2c4523462361b0206020b02661b020
61b004262348482d2c45234660b0406120b06660b004262348482d2c4523
462361b0406020b02661b04061b004262348482d2c0110203c003c2d2c20
452320b0cd442320b8015a51582320b08d44235920b0ed51582320b04d44
235920b0042651582320b00d44235921212d2c20204518684420b0016020
45b04676688a4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b
2d2c00b0282370b101283e01b0282370b10228453ab10200080d2d2c2045
b00325456164b050515845441b2121592d2c2045b0004360442d2c01b006
43b00743650a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c64
2364615c58b00361592d2c8a03458a8a87b0112bb0292344b0297ae4182d
2c4565b02c234445b02b23442d2c4b525845441b2121592d2c01b0052510
23208af500b0016023edec2d2c01b005251023208af500b0016123edec2d
2c01b0062510f500edec2d2c20b001600110203c003c2d2c20b001610110
203c003c2d2c00b00743b006430b2d2c21210c6423648bb84000622d2c21
b08051580c6423648bb82000621bb200402f2b59b002602d2c21b0c05158
0c6423648bb81555621bb200802f2b59b002602d2c0c6423648bb8400062
6023212d2c4523456023456023456023766818b08062202d2cb00426b004
26b00425b0042545234520b003266062636820b0032661658a2344442d2c
2045b0005458b040442045b04061441b2121592d2c45b1302f4523456160
b0016069442d2c4b5158b02f2370b01423421b2121592d2c4b515820b003
2545695358441b2121591b2121592d2c45b01443b0006063b0016069442d
2cb02f45442d2c452320458a60442d2c45234560442d2c4b235158b90033
ffe0b134201bb3330034005944442d2cb0164358b00326458a586466b01f
601b64b020606620581b21b04059b001615923586559b02923442310b029
e01b2121212121592d2cb0164358b004254564b020606620581b21b04059
b0016123586559b0292344b00425b00725082058021b0359b0052510b004
252046b0042523423cb0072510b006252046b00425b0016023423c205801
1b0059b0052510b00425b029e0b0072510b00625b029e0b00425b0072508
2058021b0359b00425b003254348b00625b00325b0016043481b21592121
21212121212d2cb0164358b004254564b020606620581b21b04059b00161
23581b6559b0292344b00525b00825082058021b0359b0042510b0052520
46b0042523423cb00425b0072508b0072510b006252046b00425b0016023
423c2058011b0059b0042510b00525b029e0b02920456544b0072510b006
25b029e0b00525b00825082058021b0359b00525b003254348b00425b007
2508b00625b00325b0016043481b2159212121212121212d2c02b0042520
2046b004252342b0052508b003254548212121212d2c02b0032520b00425
08b0022543482121212d2c452320451820b00050205823652359236820b0
40505821b04059235865598a60442d2c4b53234b515a5820458a60441b21
21592d2c4b545820458a60441b2121592d2c4b53234b515a58381b212159
2d2cb000214b5458381b2121592d2cb002435458b0462b1b21212121592d
2cb002435458b0472b1b212121592d2cb002435458b0482b1b2121212159
2d2cb002435458b0492b1b212121592d2c208a08234b538a4b515a582338
1b2121592d2c0020b200400325b0062649618b3812342d2c014623466023
466123201020468a61b8ff80628ab140408a704560683a2d2c208a234964
8a2353583c1b21592d2c4b52587d1b7a592d2cb012004b014b54422d2cb1
020042b123018851b1400188535a58b910000020885458b2020102436042
59b12401885158b920000040885458b2020202436042b12401885458b202
2002436042004b014b5258b2020802436042591bb940000080885458b202
040243604259b94000008063b80100885458b202080243604259b9400001
0063b80200885458b202100243604259b94000020063b80400885458b202
400243604259595959592d2c451868234b51582320452064b04050587c59
688a6059442d2cb00016b00225b0022501b001233e00b002233eb1010206
0cb00a236542b00b234201b001233f00b002233fb10102060cb006236542
b0072342b00116012d2c20b82000628a6023622d2cb0072558001b0159b0
042510b00325b0022520b8ffff545821cd1bed5921b006255cb006255a58
b0092b5920b005254ab0042547b004254760b0062547b0806361b00225b0
005558b00325b00725496359b0082558001b0159b00425b0062549b00925
5cb009255a58b0092b59b0072546b0806361b0032520b0005558631b2159
612320b0005558b080631b21b08059b0592bb006255c586959b004252020
10b00048233ab0062658001b0159b0052658b003252f598a12233221212d
2cb00625b00a2587b00625b009254ab0005358b00625b00a251bb00925b0
072559b00225b00225070cb005256323b00625636020b940000400635358
21b00426b00426b00a1bb94000040063655158b0042665b0042665b00a1b
b00426b00426b000b00325b003250b0d0ab0092eb00725b007250b0d0ab0
0b2eb00525b0052507595920b0005558b00525b0052587b00725b007250b
b0092510b00b25b0092620b8ffff545821cd1bed59b00525b0052507b008
25b00b254923b00625b0062587b00a2510b00b25c15920b00051b8005223
78b00161b00225b00725b0072507b00a25b00d254961b08062b00525b005
250bb00a252338b00625b0062587b00825b008250bb00a2510b00b25c4b0
0625b0062507b00925b00c2549b0032554b8ffa723792121212121212121
212121212d2c23b0005458b9400000001bb900004000598ab0005458b940
0000001bb90000400059b05b2b2d2c08b0005458b9400000001bb9000040
00590db05b2b2d2c8a8a080d8ab0005458b9400000001bb90000400059b0
5b2b2d2cb00426b00426080db00426b00426080db05b2b2d2c204569442d
00000001000000059eb8b1b0afba5f0f3cf50019080000000000bbeb7ccc
00000000c522987afbfafd8b09ec07b60000000900020000000000000001
00000600fe0001c40aa0fbfafaa009ec0001000000000000000000000000
0000043a040e0000040e0000040e000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000002050097020500970205009702050097020500970205
009702050097020500970205009702050097020500970205009702050097
020500970205009702050097020500970205009702050097020500970205
009702050097020500970205009702050097020500970205009702050097
020500970205009702050097020500970205009702050097020500970205
00970205009702050097026d0085026d007a026d007a026d007a026d007a
026d007a026d007a026d007a026d007a026d007a026d007a026d007a026d
007a026d007a026d007a026d007a026d007a026d007a026d007a026d007a
026d007a026d007a026d007a026d007a026d007a026d007a026d007a026d
007a026d007a026d007a026d007a026d007a026d007a026d007a026d007a
026d007a026d007a026d007a026d007a026d007a026d007a026d007a026d
007a026d007a026d007a026d007a026d007a026d007a026d007a026d007a
026d007a026d007a026d007a026d007a026d007a026d007a026d007a026d
007a026d007a026d007a026d007a026d007a026d007a026d007a026d007a
026d007a026d007a026d007a026d007a026d007a026d007a026d007a026d
007a026d007a026d007a026d007a026d007a026d007a026d007a026d007a
026d007a026d007a026d007a026d007a026d007a026d007a026d007a026d
007a026d007a026d007a026d007a026d007a026d007a026d007a026d007a
026d007a026d007a026d007a026d007a026d007a026d007a026d007a026d
007a026d007a026d007a026d007a026d007a026d007a026d007a026d007a
040e0048040e00ae040e0072040e0067040e0067040e0065040e0065040e
0063040e0063040e0063040e0063040e0063040e0063040e0063040e0063
040e0063040e0063040e0063040e0063040e0063040e0063040e0063040e
0063040e0063040e0063040e0063040e0063040e0063040e0063040e0063
040e0063040e0063040e0063040e0063040e0063040e0063040e0063040e
0063040e0063040e0063029d0038029d0038029d0038029d0038029d0038
029d0038029d0038029d0038029d0038029d0038029d0038029d0038029d
0038029d0038029d0038029d0038029d0038029d0038029d0038029d0038
02b1ff4c02b1ff4c02b1ff4c02b1ff4c02b1ff4c02b1ff4c02b1ff4c02b1
ff4c02b1ff4c02b1ff4c02b1ff4c02b1ff4c02b1ff4c02b1ff4c02b1ff4c
02b1ff4c02b1ff4c05b80048000000a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100c300c300c300c300c300c300c3
00c300c300c300c300c300c300c300c300c300c300c300c300c300c300c3
00c300c300c300c300c300c300c300c300c300c300c300c300c300c300c3
00c3010c015c015c015c015c015c015c015c015c015c015c015c015c015c
015c015c015c015c015c015c015c015c015c015c015c015c015c015c015c
015c015c015c015c015c015c015c015c015c015c015c015c015c015c015c
015c015c015c015c015c015c015c015c015c015c015c015c015c015c015c
015c015c015c015c015c015c015c015c015c015c015c015c015c015c015c
015c015c015c015c015c015c015c015c015c015c015c015c015c015c015c
015c015c015c015c015c015c015c015c015c015c015c015c015c015c015c
015c015c015c015c015c015c020f02c60366045a045a050f050f05ae05ae
05ae05ae05ae05ae05ae05ae05ae05ae05ae05ae05ae05ae05ae05ae05ae
05ae05ae05ae05ae05ae05ae05ae05ae05ae05ae05ae05ae05ae05ae05ae
05ae05f905f905f905f905f905f905f905f905f905f905f905f905f905f9
05f905f905f905f905f905f9063306330633063306330633063306330633
063306330633063306330633063306330644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440644064406440644
064406440644064406440644064406440644064406440000000100000f22
005900050066000500020010002f0065000011902410000300010000002d
02220000000300000000006400000000000300000001000e006400000003
00000002000e03040000000300000003003003120000000300000004000e
00640000000300000005001803420000000300000006000e006400000003
0000000700fa035a0000000300000008002a03d000000003000000090020
0454000000030000000a02a00064000000030000000b0056047400000003
0000000c002a04ca000000030000000d029804f4000000030000000e006c
078c0001000000000000003207f800010000000000010007082a00010000
000000020007097a00010000000000030018098100010000000000040007
082a0001000000000005000c099900010000000000060007082a00010000
00000007007d09a50001000000000008001509e000010000000000090010
0a22000100000000000a0150082a000100000000000b002b0a3200010000
0000000c00150a5d000100000000000d014c0a72000100000000000e0036
0bbe0003000104090000006400000003000104090001000e006400030001
04090002000e03040003000104090003003003120003000104090004000e
00640003000104090005001803420003000104090006000e006400030001
0409000700fa035a0003000104090008002a03d000030001040900090020
0454000300010409000a02a00064000300010409000b0056047400030001
0409000c002a04ca000300010409000d029804f4000300010409000e006c
078c00a9002000320030003000380020004d006900630072006f0073006f
0066007400200043006f00720070006f0072006100740069006f006e002e
00200041006c006c00200052006900670068007400730020005200650073
00650072007600650064002e00430061006c006900620072006900200069
0073002000610020006d006f006400650072006e002000730061006e0073
002000730065007200690066002000660061006d0069006c007900200077
00690074006800200073007500620074006c006500200072006f0075006e
00640069006e006700730020006f006e0020007300740065006d00730020
0061006e006400200063006f0072006e006500720073002e002000490074
0020006600650061007400750072006500730020007200650061006c0020
006900740061006c006900630073002c00200073006d0061006c006c0020
0063006100700073002c00200061006e00640020006d0075006c00740069
0070006c00650020006e0075006d006500720061006c0020007300650074
0073002e0020004900740073002000700072006f0070006f007200740069
006f006e007300200061006c006c006f0077002000680069006700680020
0069006d007000610063007400200069006e002000740069006700680074
006c007900200073006500740020006c0069006e006500730020006f0066
002000620069006700200061006e006400200073006d0061006c006c0020
007400650078007400200061006c0069006b0065002e002000430061006c
0069006200720069002700730020006d0061006e00790020006300750072
00760065007300200061006e006400200074006800650020006e00650077
002000720061007300740065007200690073006500720020007400650061
006d00200075007000200069006e00200062006900670067006500720020
00730069007a0065007300200074006f002000720065007600650061006c
002000610020007700610072006d00200061006e006400200073006f0066
00740020006300680061007200610063007400650072002e005200650067
0075006c00610072004d006900630072006f0073006f00660074003a0020
00430061006c0069006200720069003a0020003200300030003500560065
007200730069006f006e00200035002e0036003200430061006c00690062
007200690020006900730020006500690074006800650072002000610020
007200650067006900730074006500720065006400200074007200610064
0065006d00610072006b0020006f00720020006100200074007200610064
0065006d00610072006b0020006f00660020004d006900630072006f0073
006f0066007400200043006f00720070006f0072006100740069006f006e
00200069006e002000740068006500200055006e00690074006500640020
00530074006100740065007300200061006e0064002f006f00720020006f
007400680065007200200063006f0075006e00740072006900650073002e
004c007500630028006100730029002000640065002000470072006f006f
00740068007400740070003a002f002f007700770077002e006d00690063
0072006f0073006f00660074002e0063006f006d002f007400790070006f
006700720061007000680079002f006300740066006f006e007400730068
007400740070003a002f002f0066006f006e007400660061006200720069
006b002e0063006f006d0059006f00750020006d00610079002000750073
00650020007400680069007300200066006f006e00740020006100730020
007000650072006d00690074007400650064002000620079002000740068
0065002000450055004c004100200066006f007200200074006800650020
00700072006f006400750063007400200069006e00200077006800690063
00680020007400680069007300200066006f006e00740020006900730020
0069006e0063006c007500640065006400200074006f0020006400690073
0070006c0061007900200061006e00640020007000720069006e00740020
0063006f006e00740065006e0074002e00200059006f00750020006d0061
00790020006f006e006c0079002000280069002900200065006d00620065
00640020007400680069007300200066006f006e007400200069006e0020
0063006f006e00740065006e00740020006100730020007000650072006d
00690074007400650064002000620079002000740068006500200065006d
00620065006400640069006e006700200072006500730074007200690063
00740069006f006e007300200069006e0063006c00750064006500640020
0069006e0020007400680069007300200066006f006e0074003b00200061
006e006400200028006900690029002000740065006d0070006f00720061
00720069006c007900200064006f0077006e006c006f0061006400200074
00680069007300200066006f006e007400200074006f0020006100200070
00720069006e0074006500720020006f00720020006f0074006800650072
0020006f0075007400700075007400200064006500760069006300650020
0074006f002000680065006c00700020007000720069006e007400200063
006f006e00740065006e0074002e0068007400740070003a002f002f0077
00770077002e006d006900630072006f0073006f00660074002e0063006f
006d002f007400790070006f006700720061007000680079002f0066006f
006e00740073002f00640065006600610075006c0074002e006100730070
0078a92032303038204d6963726f736f667420436f72706f726174696f6e
2e20416c6c205269676874732052657365727665642e43616c6962726920
69732061206d6f6465726e2073616e732073657269662066616d696c7920
7769746820737562746c6520726f756e64696e6773206f6e207374656d73
20616e6420636f726e6572732e204974206665617475726573207265616c
206974616c6963732c20736d616c6c20636170732c20616e64206d756c74
69706c65206e756d6572616c20736574732e204974732070726f706f7274
696f6e7320616c6c6f77206869676820696d7061637420696e2074696768
746c7920736574206c696e6573206f662062696720616e6420736d616c6c
207465787420616c696b652e2043616c696272692773206d616e79206375
7276657320616e6420746865206e65772072617374657269736572207465
616d20757020696e206269676765722073697a657320746f207265766561
6c2061207761726d20616e6420736f6674206368617261637465722e5265
67756c61724d6963726f736f66743a2043616c696272693a203230303556
657273696f6e20352e363243616c69627269206973206569746865722061
20726567697374657265642074726164656d61726b206f72206120747261
64656d61726b206f66204d6963726f736f667420436f72706f726174696f
6e20696e2074686520556e697465642053746174657320616e642f6f7220
6f7468657220636f756e74726965732e4c7563286173292064652047726f
6f74687474703a2f2f7777772e6d6963726f736f66742e636f6d2f747970
6f6772617068792f6374666f6e7473687474703a2f2f666f6e7466616272
696b2e636f6d596f75206d617920757365207468697320666f6e74206173
207065726d6974746564206279207468652045554c4120666f7220746865
2070726f6475637420696e207768696368207468697320666f6e74206973
20696e636c7564656420746f20646973706c617920616e64207072696e74
20636f6e74656e742e20596f75206d6179206f6e6c792028692920656d62
6564207468697320666f6e7420696e20636f6e74656e7420617320706572
6d69747465642062792074686520656d62656464696e6720726573747269
6374696f6e7320696e636c7564656420696e207468697320666f6e743b20
616e6420286969292074656d706f726172696c7920646f776e6c6f616420
7468697320666f6e7420746f2061207072696e746572206f72206f746865
72206f75747075742064657669636520746f2068656c70207072696e7420
636f6e74656e742e687474703a2f2f7777772e6d6963726f736f66742e63
6f6d2f7479706f6772617068792f666f6e74732f64656661756c742e6173
70780000b2090320b80284b40918014a20b80283b40918014a20b80282b4
0918014a20b80281b40918014a20b80280b40918014a20b8027fb4091801
4a20b8027eb40918014a20b8027db40918014a20b8027cb40918014a20b8
027bb40918014a20b8027ab40918014a20b80279b40918014a20b80278b4
0918014a20b80277b40918014a20b80276b40918014a20b80275b4091801
4a20b80274b40918014a20b80273b40918014a20b80271b40918014a20b8
0270b40918014a20b8026fb40918014a20b8026eb40918014a20b8026db4
0918014a20b8026cb40918014a20b8026bb40918014a20b8026ab4091801
4a20b80269b40918014a20b80268b40918014a20b80267b40918014a20b8
0266b40918014a20b80265b40918014a20b80264b40918014a20b80263b4
0918014a20b80262b40918014a20b80261b40918014a20b80260b4091801
4a20b8025fb40918014a20b8025eb40918014a20b8025db40918014a20b8
025cb40918014a20b8025bb40918014a20b8025ab40918014a20b80259b4
0918014a20b80258b40918014a20b80257b40918014a20b80256b4091801
4a20b80255b40918014a20b80254b40918014a20b80253b40918014a20b8
0252b40918014a20b80251b40918014a20b80250b40918014a20b8024fb4
0918014a20b8024eb40918014a20b8024db40918014a20b8024cb4091801
4a20b8024bb40918014a20b8024ab40918014a20b80249b40918014a20b8
0248b40918014a20b80247b40918014a20b80246b40918014a20b80245b4
0918014a20b80244b40918014a20b80243b40918014a20b80242b4091801
4a20b80241b40918014a20b80240b40918014a20b8023fb40918014a20b8
023eb40918014a20b8023db40918014a20b8023cb40918014a20b8023bb4
0918014a20b8023ab40918014a20b80239b40918014a20b80238b4091801
4a20b80237b40918014a20b80236b40918014a20b80235b40918014a20b8
0234b40918014a20b80233b40918014a20b80232b40918014a20b80231b4
0918014a20b80230b40918014a20b8022fb40918014a20b8022eb4091801
4a20b8022db40918014a20b8022cb40918014a20b8022bb40918014a20b8
022ab40918014a20b80229b40918014a20b80228b40918014a20b80227b4
0918014a20b80226b40918014a20b80225b40918014a20b80224b4091801
4a20b80223b40918014a20b80222b40918014a20b80221b40918014a20b8
0220b40918014a20b8021fb40918014a20b8021eb40918014a20b8021db4
0918014a20b8021cb40918014a20b8021bb40918014a20b8021ab4091801
4a20b80219b40918014a20b80218b40918014a20b80217b40918014a20b8
0216b40918014a20b80215b40918014a20b80214b40918014a20b80213b4
0918014a20b80212b40918014a20b80211b40918014a20b80210b4091801
4a20b8020fb40918014a20b8020eb40918014a20b8020db40918014a20b8
020cb40918014a20b8020bb40918014a20b8020ab40918014a20b80209b4
0918014a20b80208b40918014a20b80207b40918014a20b80206b4091801
4a20b80205b40918014a20b80204b40918014a20b80203b40918014a20b8
0202b40918014a20b80201b40918014a20b80200b40918014a20b801ffb4
0918014a20b801feb40918014a20b801fdb40918014a20b801fcb4091801
4a20b801fbb40918014a20b801fab40918014a20b801f9b40918014a20b8
01f8b40918014a20b801f7b40918014a20b801f6b40918014a20b801f5b4
0918014a20b801f4b40918014a20b801f3b40918014a20b801f2b4091801
4a20b801f1b40918014a20b801f0b40918014a20b801efb40918014a20b8
01eeb40918014a20b801edb40918014a20b801ecb40918014a20b801ebb4
0918014a20b801eab40918014a20b801e9b40918014a20b801e8b4091801
4a20b801e7b40918014a20b801e6b40918014a20b801e5b40918014a20b8
01e4b40918014a20b801e3b40918014a20b801e2b40918014a20b801e1b4
0918014a20b801e0b40918014a20b801dfb40918014a20b801deb4091801
4a20b801ddb40918014a20b801dcb40918014a20b801dbb40918014a20b8
01dab40918014a20b801d9b40918014a20b801d8b40918014a20b801d7b4
0918014a20b801d6b40918014a20b801d5b40918014a20b801d4b4091801
4a20b801d3b40918014a20b801d2b40918014a20b801d1b40918014a20b8
01d0b40918014a20b801cfb40918014a20b801ceb40918014a20b801cdb4
0918014a20b801ccb40918014a20b801cbb40918014a20b801cab4091801
4a20b801c9b40918014a20b801c8b40918014a20b801c7b40918014a20b8
01c6b40918014a20b801c5b40918014a20b801c4b40918014a20b801c3b4
0918014a20b801c2b40918014a20b801c1b40918014a20b801c0b4091801
4a20b801bfb40918014a20b801beb40918014a20b801bdb40918014a20b8
01bcb40918014a20b801bbb40918014a20b801bab40918014a20b801b9b4
0918014a20b801b8b40918014a20b801b7b40918014a20b801b6b4091801
4a20b801b5b40918014a20b801b4b40918014a20b801b3b40918014a20b8
01b2b40918014a20b801b1b40918014a20b801b0b40918014a20b801afb4
0918014a20b801aeb40918014a20b801adb40918014a20b801acb4091801
4a20b801abb40918014a20b801aab40918014a20b801a9b40918014a20b8
01a8b40918014a20b801a7b40918014a20b801a6b40918014a20b801a5b4
0918014a20b801a4b40918014a20b801a3b40918014a20b801a2b4091801
4a20b801a1b40918014a20b801a0b40918014a20b8019fb40918014a20b8
019eb40918014a20b8019db40918014a20b8019cb40918014a20b8019bb4
0918014a20b8019ab40918014a20b80199b40918014a20b80198b4091801
4a20b80197b40918014a20b80196b40918014a20b80195b40918014a20b8
0194b40918014a20b80193b40918014a20b80192b40918014a20b80191b4
0918014a20b80190b40918014a20b8018fb40918014a20b8018eb4091801
4a20b8018db40918014a20b8018cb40918014a20b8018bb40918014a20b8
018ab40918014a20b80189b40918014a20b80188b40918014a20b80187b4
0918014a20b80186b40918014a20b80185b40918014a20b80184b4091801
4a20b80183b40918014a20b80182b40918014a20b80181b40918014a20b8
0180b40918014a20b8017fb40918014a20b8017eb40918014a20b8017db4
0918014a20b8017cb40918014a20b8017bb40918014a20b8017ab4091801
4a20b80179b40918014a20b80178b40918014a20b80177b40918014a20b8
0176b40918014a20b80175b40918014a20b80174b40918014a20b80173b4
0918014a20b80172b40918014a20b80171b40918014a20b80170b4091801
4a20b8016fb40918014a20b8016eb40918014a20b8016db40918014a20b8
016cb40918014a20b8016bb40918014a20b8016ab40918014a20b80169b4
0918014a20b80168b40918014a20b80167b40918014a20b80166b4091801
4a20b80165b40918014a20b80164b40918014a20b80163b40918014a20b8
0162b40918014a20b80161b40918014a20b80160b40918014a20b8015fb4
0918014a20b8015eb40918014a20b8015db40918014a20b8015cb4091801
4a20b8015bb40918014a20b8015ab40918014a20b80159b40918014a20b8
0158b40918014a20b80157b40918014a20b80156b40918014a20b80155b4
0918014a20b80154b40918014a20b80153b40918014a20b80152b4091801
4a20b80150b40918014a20b8014fb40918014a20b8014eb40918014a20b8
014cb40918014a20b8014bb40918014a20b8014ab40918014a20b80149b4
0918014a20b80148b40918014a20b80147b40918014a20b80146b4091801
4a20b80145b40918014a20b80144b40918014a20b80143b30918014ab802
84b21e3e1fb80283b21e151fb80282b21e3e1fb80281b21e3a1fb80280b2
1e3e1fb8027fb21e3e1fb8027eb21e0c1fb8027db21e3e1fb8027cb21e3e
1fb8027bb21e3e1fb8027ab21e3e1fb80279b21d411fb80278b21d431fb8
0277b21d431fb80276b21d431fb80275b21d411fb80274b21d431fb80273
b21d431fb80272b21d411fb80271b21d421fb80270b21d421fb8026fb21d
421fb8026eb21d431fb8026db21d431fb8026cb21d431fb8026bb21c451f
b8026ab21c451fb80269b21c451fb80268b21c451fb80267b21c451fb802
66b21c441fb80265b21c451fb80264b21c451fb80263b21c451fb80262b2
1c451fb80261b21c451fb80260b21c451fb8025fb21c451fb8025eb21c44
1fb8025db21c451fb8025cb21c451fb8025bb21c451fb8025ab21c451fb8
0259b21c451fb80258b21c451fb80257b21c451fb80256b21c451fb80255
b21c451fb80254b21c451fb80253b21c451fb80252b21c451fb80251b21c
451fb80250b21c451fb8024fb21c451fb8024eb21c451fb8024db21c451f
b8024cb21c451fb8024bb21c451fb8024ab21b491fb80249b21b491fb802
48b21b4a1fb80247b21b4a1fb80246b21b4b1fb80245b21b4c1fb80244b2
1b4c1fb80243b21b4c1fb80242b21b4b1fb80241b21b491fb80240b21b49
1fb8023fb21b4a1fb8023eb21b4a1fb8023db21b4a1fb8023cb21b4b1fb8
023bb21b4b1fb8023ab21b4c1fb80239b21b4c1fb80238b21b4c1fb80237
b21b4c1fb80236b21b4c1fb80235b21b491fb80234b21b491fb80233b21b
4a1fb80232b21b4a1fb80231b21b4a1fb80230b21b4b1fb8022fb21b4b1f
b8022eb21b4c1fb8022db21b4c1fb8022cb21b4c1fb8022bb21b4c1fb802
2ab21b4c1fb80229b21b4c1fb80228b21b4c1fb80227b21b491fb80226b2
1b491fb80225b21b4a1fb80224b21b4a1fb80223b21b4a1fb80222b21b4b
1fb80221b21b4b1fb80220b21b4c1fb8021fb21b4c1fb8021eb21b4c1fb8
021db21b4c1fb8021cb21b4c1fb8021bb21b4c1fb8021ab21a4e1fb80219
b21a4e1fb80218b21a4f1fb80217b21a4f1fb80216b21a4e1fb80215b21a
4e1fb80214b21a4f1fb80213b21a4f1fb80212b21a4f1fb80211b21a4e1f
b80210b21a4e1fb8020fb21a4f1fb8020eb21a4f1fb8020db21a4f1fb802
0cb21a4e1fb8020bb21a4e1fb8020ab21a4e1fb80209b21a4f1fb80208b2
1a4f1fb80207b21a4f1fb80206b219501fb80205b219511fb80204b21951
1fb80203b219501fb80202b219511fb80201b219511fb80200b219511fb8
01ffb219511fb801feb219501fb801fdb219511fb801fcb219511fb801fb
b219511fb801fab219501fb801f9b219511fb801f8b219511fb801f7b219
511fb801f6b219511fb801f5b218541fb801f4b218531fb801f3b218541f
b801f2b218541fb801f1b218541fb801f0b218531fb801efb218541fb801
eeb218541fb801edb218541fb801ecb218531fb801ebb218531fb801eab2
18541fb801e9b218541fb801e8b218541fb801e7b218541fb801e6b21853
1fb801e5b218541fb801e4b218531fb801e3b218541fb801e2b218541fb8
01e1b218541fb801e0b218531fb801dfb218531fb801deb218541fb801dd
b218541fb801dcb218541fb801dbb218541fb801dab218531fb801d9b218
541fb801d8b218541fb801d7b217571fb801d6b217561fb801d5b217561f
b801d4b217571fb801d3b217571fb801d2b217571fb801d1b217571fb801
d0b217561fb801cfb217561fb801ceb217571fb801cdb217571fb801ccb2
17571fb801cbb217571fb801cab217561fb801c9b217561fb801c8b21757
1fb801c7b217571fb801c6b217571fb801c5b217571fb801c4b217571fb8
01c3b217561fb801c2b217571fb801c1b217571fb801c0b217571fb801bf
b217561fb801beb217561fb801bdb217571fb801bcb217571fb801bbb217
571fb801bab217571fb801b9b217571fb801b8b217561fb801b7b217571f
b801b6b217571fb801b5b217571fb801b4b217571fb801b3b2163f1fb801
b2b2165b1fb801b1b2165b1fb801b0b2165b1fb801afb2165b1fb801aeb2
165b1fb801adb2165b1fb801acb2165b1fb801abb2165b1fb801aab2163e
1fb801a9b2163f1fb801a8b2163f1fb801a7b2165b1fb801a6b2165b1fb8
01a5b2165b1fb801a4b2165b1fb801a3b2165b1fb801a2b2165b1fb801a1
b2165b1fb801a0b2165b1fb8019fb2163e1fb8019eb2163f1fb8019db216
3f1fb8019cb2165b1fb8019bb2165b1fb8019ab2165b1fb80199b2165b1f
b80198b2163e1fb80197b2165b1fb80196b2165b1fb80195b2165b1fb801
94b2163e1fb80193b2163f1fb80192b2163f1fb80191b2165b1fb80190b2
165b1fb8018fb2165b1fb8018eb2165b1fb8018db2165b1fb8018cb2163f
1fb8018bb2165b1fb8018ab2165b1fb80189b2165b1fb80188b2165b1fb8
0187b2165b1fb80186b215611fb80185b215621fb80184b215621fb80183
b215661fb80182b215661fb80181b215551fb80180b215451fb8017fb215
361fb8017eb215361fb8017db215611fb8017cb215621fb8017bb215621f
b8017ab215641fb80179b215661fb80178b215661fb80177b215661fb801
76b215661fb80175b215661fb80174b215661fb80173b215451fb80172b2
15621fb80171b215621fb80170b215631fb8016fb215641fb8016eb21566
1fb8016db215661fb8016cb215661fb8016bb215661fb8016ab215661fb8
0169b215621fb80168b215621fb80167b215611fb80166b215641fb80165
b215641fb80164b215661fb80163b215661fb80162b215661fb80161b215
661fb80160b215661fb8015fb215661fb8015eb215551fb8015db215451f
b8015cb215451fb8015bb215361fb8015ab215611fb80159b215621fb801
58b215621fb80157b215631fb80156b215641fb80155b215661fb80154b2
15661fb80153b215661fb80152b215661fb80151b214401fb80150b21455
1fb8014fb214561fb8014eb214831fb8014db2142d1fb8014cb214401fb8
014bb214401fb8014ab214411fb80149b214401fb80148b214401fb80147
b214411fb80146b2147e1fb80145b214871fb80144b2147f1fb80143b214
801fb80142b212461fb80141b212461fb80140b212461fb8013fb212461f
b8013eb212441fb8013db212461fb8013cb211591fb8013bb211591fb801
3ab2115b1fb80139b2115b1fb80138b211471fb80137b211581fb80136b2
115a1fb80135b2115b1fb80134b2115b1fb80133b2112c1fb80132b21147
1fb80131b211551fb80130b211571fb8012fb211571fb8012eb211581fb8
012db211591fb8012cb211591fb8012bb2115a1fb8012ab2115a1fb80129
b2115b1fb80128b2115b1fb80127b2115b1fb80126b2115b1fb80125b211
561fb80124b211561fb80123b211571fb80122b211581fb80121b211591f
b80120b2115a1fb8011fb2115a1fb8011eb2115b1fb8011db2115b1fb801
1cb2115b1fb8011bb2115b1fb8011ab2115b1fb80119b2105d1fb80118b2
105e1fb80117b2105f1fb80116b2105f1fb80115b2105f1fb80114b2105f
1fb80113b2105f1fb80112b2105d1fb80111b2105e1fb80110b2105f1fb8
010fb2105f1fb8010eb2105f1fb8010db2105f1fb8010cb2105d1fb8010b
b2105e1fb8010ab2105f1fb80109b2105f1fb80108b2105f1fb80107b210
5f1fb80106b2105d1fb80105b2105e1fb80104b2105f1fb80103b2105f1f
b80102b2105f1fb80101b2105f1fb8010040ff0f621fff0f621ffe0f631f
fd0f641ffc0f621ffb0f621ffa0f621ff90f631ff80f641ff70f641ff60f
641ff50f641ff40f621ff30f621ff20f631ff10f641ff00f641fef0f641f
ee0f641fed0f621fec0f621feb0f631fea0f641fe90f641fe80f641fe70f
641fe60e671fe50e681fe40e681fe30e681fe20e681fe10e671fe00e681f
df0e681fde0e681fdd0e671fdc0e681fdb0e681fda0e681fd90e681fd80d
6b1fd70d311fd60d6b1fd50d6c1fd40d261fd30d261fd20d6c1fd10d2b1f
d00d2b1fcf0d2b1fce0d6b1fcd0d6c1fcc0d6d1fcb0d6b1fca0d6c1fc90d
6d1fc80d6a1fc70d691fc60d681fc50d671fc40d261fc30d311fc20d311f
c10d311f40ffc00d311fbf0d311fbe0d311fbd0c711fbc0c721fbb0c731f
ba0c741fb90c741fb80c741fb70c711fb60c711fb50c721fb40c731fb30c
741fb20c741fb10c741fb00c741faf0b791fae0b7a1fad0b7c1fac0b7d1f
ab0b7e1faa0b7e1fa90b7e1fa80b7e1fa70b7e1fa60b7e1fa50b2d1fa40b
7e1fa30b7e1fa20b791fa10b7e1fa00b6b1f9f0b791f9e0b7e1f9d0b7e1f
9c0b791f9b0b7a1f9a0b7c1f990b7d1f980b7e1f970b7e1f960b7e1f950b
7e1f940b7e1f930b7e1f920b6b1f910b2d1f900a4e1f8f0a4f1f8e0a671f
8d0aa51f8c0aa71f8503251f8403381f8301381f8255805581ab80557f55
7d557eab7d550b7d010b7d1b7d4b7d7b7dab7ddb7d4012060a7c557a557b
ab7a557955775578ab7755ba028600660285403c5576ab75550475147574
7503f47501ab750144750130750102007510752075030c7455725573ab72
55007250728072b072043bb072e072020072010ab8ffc0b3721b1e46b8ff
c0407c720d104671556f5570ab6f556e666d556a03251f6938675568ab67
556638645565ab645563386255613860555f385d555eab5d555c385a555b
ab5a55593858555703251f5638545555ab54555338515552ab51554f384e
554e03251f4d384b554cab4b554a38485549ab4855473846554503381f00
1c101c201c0310b8ffc0404e1c1b1e46001b0142301b401be01bf01b0400
1bb01bc01b03120f1a1f1a02290f1901434f19016f197f198f19030f18cf
18024018292c460f17cf17df17ef1704134017292e460016101620160315
b8ffc0b3164d5446b8ffc0b3163f4446b8ffc0b316313546b8ffc0404d16
2326460f15010f151f1502451f15010011e011f0110315bf10cf10020f0f
010f0fff0f02400f3135460f0e1f0e020f0e1f0eff0e03400e3137460f0d
1f0d020f0d1f0dff0d0316400d313746b8ffc040270c5054460f0b1f0b02
553f0b4f0b02400b3f4346400b2d30460003012001010001100120010308
b8ffc0b301151f46b80100b316010501b80190b154532b2b4bb80800524b
b008505bb00188b02553b00188b040515ab00688b000555a5b58b101018e
59b101024354b0144b515a58b101018e59858d8d00421d4bb01d5358b0a0
1d594bb0805358b0401d594bb0ff5358b0001db1160042592b5e7375732b
2b745e732b2b5e73742b73742b7374745e7301755e73742b2b2b2b5e732b
5e732b7374755e735e735e73755e732b5e73002b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b5e73755e732b2b5e735f73
737373742b2b2b2b2b2b5e73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2bb1000243545841ff028400640283
0064028200640281006402800064027f0064027e0064027d0064027c0064
027b0064027a006402790064027800640277006402760064027500640274
0064027300640271006402700064026f0064026e0064026d0064026c0064
026b0064026a006402690064026800640267006402660064026500640264
006402630064026200640261006402600064025f0064025e0064025d0064
025c0064025b0064025a0064025900640258006402570064025600640255
00640254006402530064025200640251006402500064024f0064024e0064
024d0064024c0064024b0064024a00640249006402480064024700640246
0064024500640244006402430064024200640241006402400064023f0064
023e0064023d0064023c0064023b0064023a006402390064023800640237
006402360064023500640234006402330064023200640231006402300064
022f0064022e0064022d0064022c0064022b0064022a0064022900640228
006402270064022600640225006402240064022300640222006402210064
02200064021f0064021e0064021d0064021c0064021b0064021a00640219
006402180064021700640216006402150064021400640213006402120064
0211006402100064020f0064020e0064020d0064020c0064020b0064020a
00640209006402080064020700640206006402050064020441ff00640203
006402020064020100640200006401ff006401fe006401fd006401fc0064
01fb006401fa006401f9006401f8006401f7006401f6006401f5006401f4
006401f3006401f2006401f1006401f0006401ef006401ee006401ed0064
01ec006401eb006401ea006401e9006401e8006401e7006401e6006401e5
006401e4006401e3006401e2006401e1006401e0006401df006401de0064
01dd006401dc006401db006401da006401d9006401d8006401d7006401d6
006401d5006401d4006401d3006401d2006401d1006401d0006401cf0064
01ce006401cd006401cc006401cb006401ca006401c9006401c8006401c7
006401c6006401c5006401c4006401c3006401c2006401c1006401c00064
01bf006401be006401bd006401bc006401bb006401ba006401b9006401b8
006401b7006401b6006401b5006401b4006401b3006401b2006401b10064
01b0006401af006401ae006401ad006401ac006401ab006401aa006401a9
006401a8006401a7006401a6006401a5006401a4006401a3006401a20064
01a1006401a00064019f0064019e0064019d0064019c0064019b0064019a
006401990064019800640197006401960064019500640194006401930064
019200640191006401900064018f0064018e0064018d0064018c0064018b
0064018a0064018900640188006401870064018600640185006441800184
006401830064018200640181006401800064017f0064017e0064017d0064
017c0064017b0064017a0064017900640178006401770064017600640175
00640174006401730064017200640171006401700064016f0064016e0064
016d0064016c0064016b0064016a00640169006401680064016700640166
0064016500640164006401630064016200640161006401600064015f0064
015e0064015d0064015c0064015b0064015a006401590064015800640157
0064015600640155006401540064015300640152006401500064014f0064
014e0064014c0064014b0064014a00640149006401480064014700640146
00640145006401440064014300642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b185f5e00>
[3209 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

1 0 3 <> GLAAAA+Calibri AddT42Char 
1 2908 1044 <00020038fff102650296001300270022401214001e0a10190119af0f7f1f
230123af0582003fed713fed71012fc1d4c1313001140e0223222e023534
3e0233321e0207342e0223220e0215141e0233323e02026522466b484968
421f21446b494f6b401a8c10213625233421101323352228331f0d01474d
7e59322e577d50497c5a34365b7a4938573a1d1c385338445b35151e3b53
>GLAAAA+Calibri AddT42Char 
1 2908 1044 <00020038fff102650296001300270022401214001e0a10190119af0f7f1f
230123af0582003fed713fed71012fc1d4c1313001140e0223222e023534
3e0233321e0207342e0223220e0215141e0233323e02026522466b484968
421f21446b494f6b401a8c10213625233421101323352228331f0d01474d
7e59322e577d50497c5a34365b7a4938573a1d1c385338445b35151e3b53
>GLAAAA+Calibri AddT42Char 
1 3058 1064 <0001ff4bffdc036e053500150029b90013ffc0b40f10014c13b8ffc0b40b
014d1308b8ffc0b510014d081005002f2f012f2b2f2b2b3130070e032322
26263637013e0333321616060722050e141c14161b0b03080384050e151b
15151b0c03080809090703080d130c0509080b0603070e140b00>GLAAAA+Calibri AddT42Char 
1 3174 1081 <ffff0048ffdc05700535002704140010028700270414030b000000070428
017c0000>GLAAAA+Calibri AddT42Char 
1 390 894 <00010085fea701f3058b00230022401503100b014d03100f014d03100c0d
014c03151f0b85003f2f012f332b2b2b3130010602151412171616060623
222e02272e0335343e02373e0333321e0201ef5f5d5f5b05010e1d19121a
130c033652381c1f3952330109101c16171c10020562c9fe59d6d7fe5acb
0c110b050206080566d1d8dd7171dcd9d26704060603060a1000>GLAAAA+Calibri AddT42Char 
1 536 895 <0001007afea701e7058b00210033b90012fff0b30b014d12b8fff0b30f01
4d12b8fff0b50c0d014c1200b8ffc0b60b014d001a0a85003f2f012f2b32
2b2b2b313001140e02070e03232226263637361235340227263e0233321e
0217161201e71c385136030c131a121a1d0d01055c5e5e5e0402101c1715
1c1108026775021971ddd8d16605080602050b110cca01a7d7d601a7c909
100a0603060604cdfe4f>GLAAAA+Calibri AddT42Char 
1 322 856 <00010097fff7016e00e0000b0017b10006b8ffc0b60c014d0609034c003f
cd012f2bc13130251406232226353436333216016e2f3e3c2e2f3e3c2e6d
472f2e45472f2e00>GLAAAA+Calibri AddT42Char 
1 696 1004 <00020048ffed03c705210013002b00ea4019281201291101260d01260c01
2608012507012a03012902012db8ffc040250f024d602d01141810014d14
100f014d14160d014d140a0c014d14200b014d14180c014d14bb022d0000
0020ffe8b310014d20b8fff0b30f014d20b8ffeab30d014d20b8fff6b30c
014d20b8ffe8b60c014d24200120b8022d40090a200030004000030ab8ff
f040090f014d2f0a4f0a0200b8ffd040090f014d0a100f024d00b8ffc040
0a0f024d000a000a2d2c1bb8010ab20f5325b8010ab10556003fed3fed11
120139392f2f2b2b2b5d2b5d10e15d2b2b2b2b2b10e12b2b2b2b2b2b3130
5d2b5d5d5d5d5d5d5d5d01140e0223222e0235343e0233321e0207342e04
23220e0215141e0233323e0403c72f6db0817aa7662b306cb0807ba7662b
b00e1b2b3c4d30556a3d161e41654838553d281809028a95f6b16157a9f7
a094f7b16157a9f7ac619a76553719508cbc6c91cb803a24435e7285>GLAAAA+Calibri AddT42Char 
1 1054 1005 <000100ae0000039f0517002e00e54024241e01241d01241c01231b01241a
01241901261801261701291201291101122010014d30b8ffc0400d0f024d
60300100200b014d0029b8ffe8b310014d29b8fff0b30f014d29b8fff0b3
0d014d29b8fff6b30c014d29b8fff8b30b014d29b80211400e1e18200b01
4d180b200b014d0b11b8ffe0b30f014d11b8ffd4b30f024d11b8ffc0b310
014d11b8ffe0b30f014d11b8ffc0b30c014d11b8fff040090b014da01101
111312b8013fb323522910b80107b10654003fed323ffdcd012f5d2b2b2b
2b2b2bcd2bc42b33f12b2b2b2b2bc52b31305d2b002b015d5d5d5d5d5d5d
5d5d5d25140e022321222e0235343e02332111070606262635343e023725
3e0333321e02151133321e02039f060a0d07fd5c070c0b0606090d08010e
fa13170e0503060b09012a040c12181218201206ea080e090544131a1007
07101a13121a110903d8950a040d1e171118100c06bf0304040104070b06
fb8f09111a00>GLAAAA+Calibri AddT42Char 
1 1420 1006 <000100720000039c0521003e0094400d2936012b1e01291d01261e0140b8
ffc040170f024d604001161810014d16100c0d014c16200b014d16b8022d
b633253325330039b8ffe8b310014d39ba027f000bffc0b30c014d0bb8ff
e0400b0f014d0b1138392020391bb8012eb63316062e531039b80128b106
54003fed323f123939ed11392f123939012f2b2be12bcd39392f2f10e12b
2b2b31305d2b005d015d5d5d25140e022321222e0235343e0237133e0335
342e0223220e0223222e0235343e0633321e0215140e02070721321e0203
9c05090f09fd350e150f07030a0f0cfb576939121c3550343d6149310c07
0b0704020508183b596b3b5e8d5d2e1647866fcd0233080f0b054a121c13
0907101e16141e17170d010a5c9278622b2b4d3a2222282208121e150f16
100e15242318355c7a453e7b8faf72d609121b00>GLAAAA+Calibri AddT42Char 
1 1740 1007 <00010067ffed0392052100580105b9005affc0401c0f024d605a01310810
014d31100f014d31100c0d014c31200b014d31b80235400a4e53264e4e18
13014d40b8ffe840260f014d26200f014d40264e4e2640030e1b0810014d
1b100f014d1b100c0d014c1b200b014d1bb8fff8b30b014d1bb8022db500
080b014d00b8ffe8b40f024d000eb8ffe0b30f014d0eb8fff0b30f014d0e
b8ffc040130c014d0e3b400f014d3b400c0d014c2f3b0111b8ffc0b30f01
4d11b8ffc0400a0c0d014c3b113b111636b8010b400a49532cf320200549
5316b8010bb10556003fed3f12392fed3910ed1139392f2f2b2b5d2b2b01
2f2b2b2bd42b2be12b2b2b2b2b1217392f2f2f2b2b2b11123910e12b2b2b
2b31305d2b01140e0223222e0635343633321e0233323e0235342e022323
222e0235343e023333323e0235342e0223220e0223222e0235343e063332
1e0215140e0207151e0303923e74aa6b4171583a0f0806030e0d0935536f
44426444222b53794d7b080f0b07060b0e0971426949271a3451353a614c
320a070b0703020608133a556f405a885b2d203e5a3b436f502d0172598f
6637151d1f0e0e141d15241c202520223e55323758402207101a1513190f
07224059372849361f232823050f1b160f17110e132423182e5475473d69
51390b020735506b>GLAAAA+Calibri AddT42Char 
1 2228 1009 <00010065ffed0396050e003e00c1400d27370127360126080126030140b8
ffc0b60f024d60400137b8ffe8b310014d37b8fff0b40b0d014c37ba0211
0028ffc0402810014d28400f014d280e4f326f327f3203321d1810014d1d
100f014d1d100c0d014c1d200b014d1dba02330000ffe8b30f024d00b8ff
c0b50f014d004013b8ffc0b70f10014c13131836b8012c400c2c3af42022
012222052c5118b8010bb10556003fed3f12392f5ded10ed11392f2b0110
d62b2be12b2b2b2bc45dd4d42b2be12b2b31305d2b005d5d015d5d01140e
0223222e0635343e0233321e0233323e0235342e02232206232226351134
363321321e02151406232111363633321e0203964680b16c3c6c54360f06
050203080b070a2a4769484370512e27517c563d58261c181f1d023d080f
0a051412fe1d2349306fa66f3901a068a26f3a1119180e0c111a12111b11
08191d1a2044674a3e5f3f1f0c1a25020f212009121c132428fe95050235
618a>GLAAAA+Calibri AddT42Char 
1 2590 1011 <00010063fffa03af050e001f00d7b90011ffe8400a1121014c111010014d
11b8ffe8b30f014d11b8fff0b30d014d11b8ffe8b30c014d11b8fff8400a
0b014d74110126110110b8ffe8400a1121014c101010014d10b8ffe8b30f
014d10b8fff0b30d014d10b8ffe8400b0b0c014c75100126100106b8fff0
b30b014d21b8ffc0b60f024d60210100b8ffc0b310014d00b8ffd8b40b01
4d0015b8ffc0b30c014d15b8ffe8b30b014d15b8ffe8b30f014d15b8ffe0
b50f024d150511b8012db31a510b55003f3fed32012f2b2b2b2bcd2b2b31
305d2b2b5d5d2b2b2b2b2b5d5d2b2b2b2b2b2b01140e0207010e03232226
2636370121222635343e023321321e0203af03050906fe2e050f17241a22
2611020601eafd931313050a0e0902f20e150b0604c4121d1b190efbce0c
0f0903060d130d044a2824131c130906121c>GLAAAA+Calibri AddT42Char 
1 0 0 <00050000fe7303d2050e000300070039004d004e005bbc000d0152001600
3a01b5b5154444082d07be0143000200200154000800010143400f04020d
b71a1a3f23b735068d031149b8012db43f078d0202003ffddefdce2ffdde
ed12392fed012fdde1dee110f1ce11392f33e1d4e1313001112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>GLAAAA+Calibri AddT42Char 
GLAAAA+Calibri /CharStrings get begin
/g3 3 def
/g1081 1081 def
/g894 894 def
/g895 895 def
/g856 856 def
/g1004 1004 def
/g1005 1005 def
/g1006 1006 def
/g1007 1007 def
/g1009 1009 def
/g1011 1011 def
end
GLAAAA+Calibri /Encoding get
dup 32 /g3 put
dup 37 /g1081 put
dup 40 /g894 put
dup 41 /g895 put
dup 46 /g856 put
dup 48 /g1004 put
dup 49 /g1005 put
dup 50 /g1006 put
dup 51 /g1007 put
dup 53 /g1009 put
dup 55 /g1011 put
pop
end
%ADOEndSubsetFont
/ZONLVW+Calibri /GLAAAA+Calibri findfont ct_VMDictPut
/ZONLVW+Calibri*1 
[32{/.notdef}rp /g3 4{/.notdef}rp /g1081 2{/.notdef}rp /g894 /g895 4{/.notdef}rp 
/g856 /.notdef /g1004 /g1005 /g1006 /g1007 /.notdef /g1009 
/.notdef /g1011 200{/.notdef}rp]
ZONLVW+Calibri nf
ZONLVW+Calibri*1 [7.944 0 0 -7.944 0 0 ]msf
46.8238 57.2398 mo
(51%)
[4.08134 4.08134 0 ]xsh
60.7679 57.2398 mo
( )sh
89.8558 55.416 mo
(3.5% )
[4.07672 1.91875 4.07673 5.79222 0 ]xsh
127.42 76.4398 mo
(.01% )
[1.91875 4.10056 4.10054 5.74066 0 ]xsh
%ADOBeginSubsetFont: GISAAA+Calibri-Bold Initial
ct_T42Dict begin
-0.516 -0.305 1.238 0.969
 256 array 0 1 255 {1 index exch /.notdef put} for  /GISAAA+Calibri-Bold
Type42DictBegin
[<00010000000c000c000c000c4f532f3200000000000000cc000000566376
74202f49354900000124000006086670676da1ea42ac0000072c00000913
676c7966000000000000600c000013f668656164e606fe46000010400000
0036686865610d8d06c00000107800000024686d7478000000000000109c
00000d386c6f63610000000000001dd400001e466d6178701bfb161e0000
3c1c000000206e616d658fc48c9b00003c3c00000e3470726570c7f0742e
00004a700000159c67646972000000000000000000000000000100000190
000500080000000000000000000000000000000000000000000000000000
00000000000000000000000000080000000000000000000000000000f000
f0ff00000000000000000000000000010000000000000000079e0000fe93
0000000000000000000000810081009c00ab00b500ba00c100ca00d300f3
010a0060008500bf00e300ea00f200fb010001070115011c012900000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000fe83056d000d03c0000600170000fffaffe9fea9
ffe90000050e000600170000fffaffe9fe93050e00170426000600170000
fffaffe9ff12ffed050e00170426000600170000fffaffe9fe93feb8fece
060b0010050e0006001002cbfffafff001edfffa023f00060010ff36fffa
fff00287000600100000fffafff0079efeaffe9f00000000000000000000
000000700072007500780079007a007b007d007e007f0083008600870088
00890085007f0086008b008c008d008e008f009000910092009300940095
0096009700980099009a009b009c009d009e009f009200930094009b009c
009e009e00960099009a009d009e00a200a600a900ac00a200a300a400a5
00a700a800a900aa00ab00ac00ae00a300a500a700a800aa00ab00ac00ad
00ae00a000a100a300a600a700a900aa00ac00ad00af00af00b000b100b2
00b300b400b500af00af00b000b200b300b400b500b800c000b600b700b8
00b900ba00bb00bc00bd00be00bf00c000c100c200b900ba00bc00bd00bf
00c000c100c200b600b700b800b900ba00bb00bc00bd00be00bf00c000c1
00c200c000c100c200c300c400c500c600c700c800c900ca00cb00cc00cd
00ce00cf00c300c400c500c600c700c800c900ca00cb00cc00cd00ce00cf
00c300c400c500c600c700c800c900ca00cb00cc00cd00ce00cf00c500c8
00c900ca00cb00ce00cf00d000d100d200d300d400d500d600d700d900db
00de00df00e000e200e300ec00d000d100d200d300d400d500d600d700d8
00d900da00db00dd00de00df00e000e100e300e500e900ec00ed00d100d3
00d400d500d800d900da00dc00e000e100e800d000d100d400d600e000e4
010800f5010200fb00ff0108008f00900096009200930099009000910097
0098009a009d00a400a600a700a800a900af009a00a200a300a700a900aa
00ab00ac00ad00b000ad009b00aa00ab00ad00b0009a00aa00ac00ad00ae
00af00b100b900bb00bc00bd00be00c100c200c300c400c500c600c700c8
00c900ca00cb00ce00b300b400b500b600b700b800bc00c200c500c800ca
00cb00cd00ce00cf00d000c700b700b800b900bb00bc00be00c600c700c8
00c900cb00cf00d000b200b600b700c200c400c500c600c700cb00cc00cd
00ce00cf00d000d100d400d500d700d800d900da00db00dc00de00df00e0
00e200e300e500e600d100d300d600d700d800da00db00dc00dd00de00df
00e000e100e200e300e400e500d100d200d400d500da00db00dd00de00df
00e000e100e200e600d200d300d400d700d800dd00de00e000e100e200e3
00e400e500e600d200da00e100e900ea00ec00e800e900ea00eb00ec00ed
00eb00e700ea00eb00ec00ed00e700e900ea00ec00ed00ee00ef00f500ee
00ef00f000f100f200f300f400f500f600ee00f000f200ef00f000f100f2
00f300f400f500f600ee00ef00f000f100f200f300f400f500f600f700f7
00f800f900fa00fb00fc00fd00f700f800f900fa00fb00fd00f700f800f9
00fa00fb00fc00fd00fd00fe00ff010001010102010300fe010001010102
010300fe00ff010001010102010301020103010401050106010701080109
010a010c010d010e010f01100107010401050106010701080109010a010b
010d010e010f01100111010401050106010701080109010a010b010c010d
010e010f0110011101040105010601070109010e010f0112011301140115
01170118011a011b011c011d011e011f0121012201120113011401150117
0119011b011c011d011e0120012101230124012501130114011501160117
01180119011a011b011c011d011f01200117011c011d011e012001210129
013001770129012b012e012f013001310134013501370139012b012d0130
01320134013a012e01300134013a014200500062006c00fa05e802cc0114
011400a000b140465f5e5d5c5b5a59585554535251504f4e4d4c4b4a4948
47464544434241403f3e3d3c3b3a39383736352f2e2d2c2826252423221f
181411100f0d0b0a090807060504030201002c4523466020b02660b00426
2348482d2c452346236120b02661b004262348482d2c45234660b0206120
b04660b004262348482d2c4523462361b0206020b02661b02061b0042623
48482d2c45234660b0406120b06660b004262348482d2c4523462361b040
6020b02661b04061b004262348482d2c0110203c003c2d2c20452320b0cd
442320b8015a51582320b08d44235920b0ed51582320b04d44235920b004
2651582320b00d44235921212d2c20204518684420b001602045b0467668
8a4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c00b028
2370b101283e01b0282370b10228453ab10200080d2d2c2045b003254561
64b050515845441b2121592d2c2045b0004360442d2c01b00643b0074365
0a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c642364615c58
b00361592d2c8a03458a8a87b0112bb0292344b0297ae4182d2c4565b02c
234445b02b23442d2c4b525845441b2121592d2c01b005251023208af500
b0016023edec2d2c01b005251023208af500b0016123edec2d2c01b00625
10f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c2d
2c00b00743b006430b2d2c21210c6423648bb84000622d2c21b08051580c
6423648bb82000621bb200402f2b59b002602d2c21b0c051580c6423648b
b81555621bb200802f2b59b002602d2c0c6423648bb84000626023212d2c
4523456023456023456023766818b08062202d2cb00426b00426b00425b0
042545234520b003266062636820b0032661658a2344442d2c2045b00054
58b040442045b04061441b2121592d2c45b1302f4523456160b001606944
2d2c4b5158b02f2370b01423421b2121592d2c4b515820b0032545695358
441b2121591b2121592d2c45b01443b0006063b0016069442d2cb02f4544
2d2c452320458a60442d2c45234560442d2c4b235158b90033ffe0b13420
1bb3330034005944442d2cb0164358b00326458a586466b01f601b64b020
606620581b21b04059b001615923586559b02923442310b029e01b212121
2121592d2cb0164358b004254564b020606620581b21b04059b001612358
6559b0292344b00425b00725082058021b0359b0052510b004252046b004
2523423cb0072510b006252046b00425b0016023423c2058011b0059b005
2510b00425b029e0b0072510b00625b029e0b00425b00725082058021b03
59b00425b003254348b00625b00325b0016043481b215921212121212121
2d2cb0164358b004254564b020606620581b21b04059b0016123581b6559
b0292344b00525b00825082058021b0359b0042510b005252046b0042523
423cb00425b0072508b0072510b006252046b00425b0016023423c205801
1b0059b0042510b00525b029e0b02920456544b0072510b00625b029e0b0
0525b00825082058021b0359b00525b003254348b00425b0072508b00625
b00325b0016043481b2159212121212121212d2c02b00425202046b00425
2342b0052508b003254548212121212d2c02b0032520b0042508b0022543
482121212d2c452320451820b00050205823652359236820b040505821b0
4059235865598a60442d2c4b53234b515a5820458a60441b2121592d2c4b
545820458a60441b2121592d2c4b53234b515a58381b2121592d2cb00021
4b5458381b2121592d2cb002435458b0462b1b21212121592d2cb0024354
58b0472b1b212121592d2cb002435458b0482b1b21212121592d2cb00243
5458b0492b1b212121592d2c208a08234b538a4b515a5823381b2121592d
2c0020b200400325b0062649618b3812342d2c0146234660234661232010
20468a61b8ff80628ab140408a704560683a2d2c208a2349648a2353583c
1b21592d2c4b52587d1b7a592d2cb012004b014b54422d2cb1020042b123
018851b1400188535a58b910000020885458b202010243604259b1240188
5158b920000040885458b2020202436042b12401885458b2022002436042
004b014b5258b2020802436042591bb940000080885458b2020402436042
59b94000008063b80100885458b202080243604259b94000010063b80200
885458b202100243604259b94000020063b80400885458b2024002436042
59595959592d2c451868234b51582320452064b04050587c59688a605944
2d2cb00016b00225b0022501b001233e00b002233eb10102060cb00a2365
42b00b234201b001233f00b002233fb10102060cb006236542b0072342b0
0116012d2c20b82000628a6023622d2cb0072558001b0159b0042510b003
25b0022520b8ffff545821cd1bed5921b006255cb006255a58b0092b5920
b005254ab0042547b004254760b0062547b0806361b00225b0005558b003
25b00725496359b0082558001b0159b00425b0062549b009255cb009255a
58b0092b59b0072546b0806361b0032520b0005558631b2159612320b000
5558b080631b21b08059b0592bb006255c586959b00425202010b0004823
3ab0062658001b0159b0052658b003252f598a12233221212d2cb00625b0
0a2587b00625b009254ab0005358b00625b00a251bb00925b0072559b002
25b00225070cb005256323b00625636020b94000040063535821b00426b0
0426b00a1bb94000040063655158b0042665b0042665b00a1bb00426b004
26b000b00325b003250b0d0ab0092eb00725b007250b0d0ab00b2eb00525
b0052507595920b0005558b00525b0052587b00725b007250bb0092510b0
0b25b0092620b8ffff545821cd1bed59b00525b0052507b00825b00b2549
23b00625b0062587b00a2510b00b25c15920b00051b800522378b00161b0
0225b00725b0072507b00a25b00d254961b08062b00525b005250bb00a25
2338b00625b0062587b00825b008250bb00a2510b00b25c4b00625b00625
07b00925b00c2549b0032554b8ffa723792121212121212121212121212d
2c23b0005458b9400000001bb900004000598ab0005458b9400000001bb9
0000400059b05b2b2d2c08b0005458b9400000001bb900004000590db05b
2b2d2c8a8a080d8ab0005458b9400000001bb90000400059b05b2b2d2cb0
0426b00426080db00426b00426080db05b2b2d000001000000059eb8b1b0
afba5f0f3cf50019080000000000bbeb7ccc00000000c5229872fbdafd8d
09ec07c5000100090002000000000000000100000600fe0001c40aa0fbda
fa8609ec00010000000000000000000000000000034e040e0000040e0000
040e000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
0222008d0222008d0222008d0222008d0222008d0222008d0222008d0222
008d0222008d0222008d0222008d0222008d0222008d0222008d0222008d
0222008d0222008d0222008d0222008d0222008d0222008d0222008d0545
008d0545008d0545008d0545008d0545008d0545008d0545008d0545008d
0545008d0545008d0545008d0545008d0545008d0545008d0545008d0545
008d0545008d0545008d0545008d0545008d0545008d0545008d0545008d
0545008d0545008d0545008d0545008d0545008d0545008d0545008d0545
008d0545008d0545008d0545008d0545008d0545008d0545008d0545008d
0545008d0545008d0545008d0545008d0545008d0545008d0545008d0545
008d0545008d0545008d0545008d0545008d0545008d0545008d0545008d
0545008d0545008d0545008d0545008d0545008d0545008d0545008d0545
008d0545008d0545008d0545008d0545008d0545008d0545008d0545008d
0545008d0545008d0545008d0545008d0545008d0545008d0545008d0545
008d0545008d0545008d0545008d0545008d0545008d0545008d0545008d
0545008d0545008d0545008d0545008d0545008d0545008d0545008d0545
008d0545008d0545008d0545008d0545008d0545008d0545008d0545008d
0545008d0545008d0545008d0545008d0545008d0545008d0545008d0545
008d0545008d0545008d0545008d0545008d0545008d0545008d0545008d
0545008d0545008d0545008d0545008d0545008d0545008d0545008d0545
008d0545008d0545008d0545008d0545008d0545008d0545008d0545008d
0545008d0545008d0545008d0545008d0545008d0545008d0545008d0545
008d0545008d0545008d0545008d0545008d0545008d0545008d0545008d
0545008d0545008d0545008d0545008d0545008d0545008d0545008d0545
008d0545008d0545008d0545008d0545008d0545008d0545008d0545008d
0545008d0545008d0545008d0545008d0545008d0545008d0545008d0545
008d0545008d0545008d0545008d0545008d0545008d0545008d0545008d
0545008d0545008d0545008d0545008d0545008d0545008d0545008d0545
008d0545008d0545008d0545008d0545008d0545008d0545008d0545008d
0545008d0545008d0545008d0545008d0545008d0545008d0545008d0545
008d0545008d0545008d0545008d0545008d0545008d0545008d0545008d
035900480359004803590048035900480359004803590048035900480359
00480359004803590048044b004b044b004b044b004b044b004b0407004a
0407004a0407004a0407004a0407004a0407004a0407004a0407004a0407
004a0407004a0407004a0407004a0407004a0407004a0407004a0407004a
0407004a0407004a0407004a0407004a0407004a0407004a0407004a0407
004a0407004a0407004a0407004a0407004a0407004a0407004a0407004a
0407004a0407004a0407004a0407004a0407004a0407004a0407004a0407
004a0407004a0407004a0407004a0407004a0407004a0407004a0407004a
0407004a0407004a0407004a0407004a0407004a0407004a0407004a0407
004a0407004a0407004a0407004a0407004a0407004a0407004a0407004a
0407004a0407004a01f7006b01f7006b01f7006b01f7006b01f7006b01f7
006b01f7006b01f7006b01f7006b01f7006b01f7006b01f7006b01f7006b
01f7006b01f7006b01f7006b01f7006b01f7006b01f7007e01f7007e01f7
007e01f7007e01f7007e01f7007e0682007e044b007e044b007e044b007e
044b007e044b007e044b007e044b007e044d0048044d0048044d0048044d
0048044d0048044d0048044d0048044d0048044d0048044d0048044d0048
044d0048044b007e044b007e044b007e02d8007e02d8007e02d8007e02d8
007e03310049033100490331004903310049033100490331004903310049
03310049033100490331004902c6001702c6001702c6001702c6001702c6
001702c6001702c6001702c6001702c6001702c6001702c6001702c60017
02c6001702c6001702c6001702c6001702c6001702c6001702c6001702c6
001702c6001702c6001702c6001702c6001702c6001702c6001702c60017
044b0079044b0079044b0079044b0079044b0079044b0079044b0079044b
0079044b0079044b0079044b0079044b0079044b0079044b0079044b0079
044b0079044b007903ad002003ad002003ad002003ad002003ad002003ad
002003ad002003ad002003ad002003ad002003ad002003ad002003ad0020
03ad002003ad002003ad002003ad002003ad002003ad002003ad002003ad
002003ad002003ad002003ad002003ad002003ad002003ad002003ad0020
03ad002003ad002003ad002003ad002003ad002003ad002003ad002003ad
002003ad002003ad002003ad002003ad002003ad002003ad002003ad0020
03ad002003ad002003ad002003ad002003ad002003ad002003ad002003ad
002003ad002003ad002003ad002003ad002003ad002003ad002003ad0020
03ad002003ad002003ad002003ad002003ad002003ad002003ad002003ad
002003ad002003ad002003ad002003ad002003ad002003ad002003ad0020
03ad002003ad002003ad002003ad002003ad002003ad002003ad002003ad
002003ad002003ad002003ad002003ad002003ad002003ad002003ad0020
03ad002003ad002003ad002003ad002003ad002003ad002003ad002003ad
002003ad002003ad002003ad002003ad002003ad002003ad002003ad0020
03ad002003ad002003ad002003ad002003ad002003ad002003ad002003ad
002003ad002003ad002003ad002003ad002003ad002003ad002003ad0020
03ad002003ad002003ad002003ad002003ad002003ad002003ad002003ad
002003ad002003ad002003ad002003ad002003ad002003ad002003ad0020
03ad002003ad002003ad002003ad002003ad002003ad002003ad002003ad
002003ad002003ad002003ad002003ad002003ad002003ad002003ad0020
03ad002003ad002003ad002003ad002003ad002003ad002003ad002003ad
002003ad002003ad002003ad002003ad002003ad002003ad002003ad0020
03ad002003ad002003ad002003ad002003ad002003ad002003ad002003ad
002003ad002003ad002003ad002003ad002003ad002003ad002003ad0020
03ad002003ad002003ad002003ad002003ad002003ad002003ad002003ad
002003ad002003ad002003ad002003ad002003ad002003ad002003ad0020
03ad002003ad002003ad002003ad002003ad002003ad002003ad002003ad
002003ad002003ad002003ad002003ad002003ad002003ad002003ad0020
03ad002003ad002003ad002003ad002003ad002003ad002003ad002003ad
002003ad002003ad002003ad002003ad002003ad002003ad002003ad0020
03ad002003ad002003ad002003ad002003ad002003ad002003ad002003ad
002003ad002003ad002003ad002003ad002003ad002003ad002003ad0020
03ad002003ad002003ad002003ad002003ad002003ad002003ad002003ad
002003ad002003ad002003ad002003ad002003ad002003ad002003ad0020
03ad002003ad002003ad002003ad002003ad002003ad002003ad002003ad
002003ad002003ad002003ad002003ad002003ad002003ad002003ad0020
03ad002003ad002003ad002003ad002003ad002003ad002003ad002003ad
002003ad002003ad002003ad002003ad002003ad002003ad002003ad0020
03ad002003ad002003ad002003ad002003ad002003ad002003ad002003ad
002003ad002003ad002003ad002003ad002003ad002003ad002003ad0020
03ad002003ad002003ad002003ad002003ad002003ad002003ad002003ad
002003ad002003ad002003ad002003ad002003ad002003ad002003ad0020
03ad002003ad002003ad002003ad002003ad002003ad002003ad002003ad
002003ad002003ad002003ad002003ad002003ad002003ad002003ad0020
03ad002003ad002003ad002003ad002003ad002003ad002003ad002003ad
002003ad002003ad002003ad002003ad002003ad002003ad002003ad0020
03ad002003ad002003ad002003ad002003ad002003ad002003ad002003ad
002003ad002003ad002003ad002003ad002003ad002003ad002003ad0020
03ad002003ad002003ad002003ad002003ad002003ad002003ad002003ad
002003ad002003ad002003ad002003ad002003ad002003ad002003ad0020
03ad002003ad002003ad002003ad002003ad002003ad002003ad002003ad
002003ad002003ad002003ad002003ad002003ad002003ad002003ad0020
03ad002003ad002003ad002003b500730000009e009e009e009e009e009e
009e009e009e009e009e009e009e009e009e009e009e009e009e009e009e
009e009e009e009e009e009e009e009e009e009e009e009e009e009e009e
009e009e009e009e009e009e009e009e009e009e009e00d600d600d600d6
00d600d600d600d600d600d600d600d600d600d600d600d600d600d600d6
00d600d600d6018801880188018801880188018801880188018801880188
018801880188018801880188018801880188018801880188018801880188
018801880188018801880188018801880188018801880188018801880188
018801880188018801880188018801880188018801880188018801880188
018801880188018801880188018801880188018801880188018801880188
018801880188018801880188018801880188018801880188018801880188
018801880188018801880188018801880188018801880188018801880188
018801880188018801880188018801880188018801880188018801880188
018801880188018801880188018801880188018801880188018801880188
018801880188018801880188018801880188018801880188018801880188
018801880188018801880188018801880188018801880188018801880188
018801880188018801880188018801880188018801880188018801880188
018801880188018801880188018801880188018801880188018801880188
01880188018801880188018801880188018801880188021e021e021e021e
021e021e021e021e021e021e02ba02ba02ba02ba03860386038603860386
038603860386038603860386038603860386038603860386038603860386
038603860386038603860386038603860386038603860386038603860386
038603860386038603860386038603860386038603860386038603860386
038603860386038603860386038603860386038603860386038603db03db
03db03db03db03db03db03db03db03db03db03db03db03db03db03db03db
03db041d041d041d041d041d041d04df0566056605660566056605660566
05d905d905d905d905d905d905d905d905d905d905d905d9067b067b067b
06fa06fa06fa06fa07cd07cd07cd07cd07cd07cd07cd07cd07cd07cd0864
086408640864086408640864086408640864086408640864086408640864
0864086408640864086408640864086408640864086408e008e008e008e0
08e008e008e008e008e008e008e008e008e008e008e008e008e009710971
097109710971097109710971097109710971097109710971097109710971
097109710971097109710971097109710971097109710971097109710971
097109710971097109710971097109710971097109710971097109710971
097109710971097109710971097109710971097109710971097109710971
097109710971097109710971097109710971097109710971097109710971
097109710971097109710971097109710971097109710971097109710971
097109710971097109710971097109710971097109710971097109710971
097109710971097109710971097109710971097109710971097109710971
097109710971097109710971097109710971097109710971097109710971
097109710971097109710971097109710971097109710971097109710971
097109710971097109710971097109710971097109710971097109710971
097109710971097109710971097109710971097109710971097109710971
097109710971097109710971097109710971097109710971097109710971
097109710971097109710971097109710971097109710971097109710971
097109710971097109710971097109710971097109710971097109710971
097109710971097109710971097109710971097109710971097109710971
097109710971097109710971097109710971097109710971097109710971
097109710971097109710971097109710971097109710971097109710971
097109710971097109710971097109710971097109710971097109710971
097109710971097109710971097109710971097109710971097109710971
097109710971097109710971097109710971097109710971097109710971
097109710971097109710971097109710971097109710971097109710971
097109710971097109710971097109710971097109710971097109710971
097109710971097109710971097109710971097109710971097109710971
097109710971097109710971097109710971097109710971097109710971
0971097109710971097109710971097109710971097109710971097109fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb
09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb09fb00000001
00000f22005100050000000000020010002f006000000c63159c00000000
0000002d02220000000300000000006400000000000300000001000e0064
00000003000000020008032a0000000300000003003a0304000000030000
00040018031a00000003000000050018033e000000030000000600180356
000000030000000700fa036e0000000300000008002a03e4000000030000
000900200468000000030000000a02a00064000000030000000b00560488
000000030000000c002a04de000000030000000d02980508000000030000
000e006c07a000010000000000000032080c00010000000000010007083e
0001000000000002000409a10001000000000003001d098e000100000000
0004000c09990001000000000005000c09ab0001000000000006000c09b7
0001000000000007007d09c30001000000000008001509fe000100000000
000900100a40000100000000000a0150083e000100000000000b002b0a50
000100000000000c00150a7b000100000000000d014c0a90000100000000
000e00360bdc0003000104090000006400000003000104090001000e0064
00030001040900020008032a0003000104090003003a0304000300010409
00040018031a00030001040900050018033e000300010409000600180356
000300010409000700fa036e0003000104090008002a03e4000300010409
000900200468000300010409000a02a00064000300010409000b00560488
000300010409000c002a04de000300010409000d02980508000300010409
000e006c07a000a9002000320030003000380020004d006900630072006f
0073006f0066007400200043006f00720070006f0072006100740069006f
006e002e00200041006c006c002000520069006700680074007300200052
0065007300650072007600650064002e00430061006c0069006200720069
002000690073002000610020006d006f006400650072006e002000730061
006e0073002000730065007200690066002000660061006d0069006c0079
0020007700690074006800200073007500620074006c006500200072006f
0075006e00640069006e006700730020006f006e0020007300740065006d
007300200061006e006400200063006f0072006e006500720073002e0020
004900740020006600650061007400750072006500730020007200650061
006c0020006900740061006c006900630073002c00200073006d0061006c
006c00200063006100700073002c00200061006e00640020006d0075006c
007400690070006c00650020006e0075006d006500720061006c00200073
006500740073002e0020004900740073002000700072006f0070006f0072
00740069006f006e007300200061006c006c006f00770020006800690067
006800200069006d007000610063007400200069006e0020007400690067
00680074006c007900200073006500740020006c0069006e006500730020
006f0066002000620069006700200061006e006400200073006d0061006c
006c0020007400650078007400200061006c0069006b0065002e00200043
0061006c0069006200720069002700730020006d0061006e007900200063
0075007200760065007300200061006e006400200074006800650020006e
006500770020007200610073007400650072006900730065007200200074
00650061006d00200075007000200069006e002000620069006700670065
0072002000730069007a0065007300200074006f00200072006500760065
0061006c002000610020007700610072006d00200061006e006400200073
006f006600740020006300680061007200610063007400650072002e004d
006900630072006f0073006f00660074003a002000430061006c00690062
0072006900200042006f006c0064003a0020003200300030003500560065
007200730069006f006e00200035002e0036003200430061006c00690062
00720069002d0042006f006c006400430061006c00690062007200690020
006900730020006500690074006800650072002000610020007200650067
0069007300740065007200650064002000740072006100640065006d0061
0072006b0020006f007200200061002000740072006100640065006d0061
0072006b0020006f00660020004d006900630072006f0073006f00660074
00200043006f00720070006f0072006100740069006f006e00200069006e
002000740068006500200055006e00690074006500640020005300740061
00740065007300200061006e0064002f006f00720020006f007400680065
007200200063006f0075006e00740072006900650073002e004c00750063
0028006100730029002000640065002000470072006f006f007400680074
00740070003a002f002f007700770077002e006d006900630072006f0073
006f00660074002e0063006f006d002f007400790070006f006700720061
007000680079002f006300740066006f006e007400730068007400740070
003a002f002f0066006f006e007400660061006200720069006b002e0063
006f006d0059006f00750020006d00610079002000750073006500200074
00680069007300200066006f006e00740020006100730020007000650072
006d00690074007400650064002000620079002000740068006500200045
0055004c004100200066006f00720020007400680065002000700072006f
006400750063007400200069006e00200077006800690063006800200074
00680069007300200066006f006e007400200069007300200069006e0063
006c007500640065006400200074006f00200064006900730070006c0061
007900200061006e00640020007000720069006e007400200063006f006e
00740065006e0074002e00200059006f00750020006d006100790020006f
006e006c0079002000280069002900200065006d00620065006400200074
00680069007300200066006f006e007400200069006e00200063006f006e
00740065006e00740020006100730020007000650072006d006900740074
00650064002000620079002000740068006500200065006d006200650064
00640069006e00670020007200650073007400720069006300740069006f
006e007300200069006e0063006c007500640065006400200069006e0020
007400680069007300200066006f006e0074003b00200061006e00640020
0028006900690029002000740065006d0070006f0072006100720069006c
007900200064006f0077006e006c006f0061006400200074006800690073
00200066006f006e007400200074006f002000610020007000720069006e
0074006500720020006f00720020006f00740068006500720020006f0075
0074007000750074002000640065007600690063006500200074006f0020
00680065006c00700020007000720069006e007400200063006f006e0074
0065006e0074002e0068007400740070003a002f002f007700770077002e
006d006900630072006f0073006f00660074002e0063006f006d002f0074
00790070006f006700720061007000680079002f0066006f006e00740073
002f00640065006600610075006c0074002e0061007300700078a9203230
3038204d6963726f736f667420436f72706f726174696f6e2e20416c6c20
5269676874732052657365727665642e43616c696272692069732061206d
6f6465726e2073616e732073657269662066616d696c7920776974682073
7562746c6520726f756e64696e6773206f6e207374656d7320616e642063
6f726e6572732e204974206665617475726573207265616c206974616c69
63732c20736d616c6c20636170732c20616e64206d756c7469706c65206e
756d6572616c20736574732e204974732070726f706f7274696f6e732061
6c6c6f77206869676820696d7061637420696e2074696768746c79207365
74206c696e6573206f662062696720616e6420736d616c6c207465787420
616c696b652e2043616c696272692773206d616e79206375727665732061
6e6420746865206e65772072617374657269736572207465616d20757020
696e206269676765722073697a657320746f2072657665616c2061207761
726d20616e6420736f6674206368617261637465722e4d6963726f736f66
743a2043616c6962726920426f6c643a203230303556657273696f6e2035
2e363243616c696272692d426f6c6443616c696272692069732065697468
6572206120726567697374657265642074726164656d61726b206f722061
2074726164656d61726b206f66204d6963726f736f667420436f72706f72
6174696f6e20696e2074686520556e697465642053746174657320616e64
2f6f72206f7468657220636f756e74726965732e4c756328617329206465
2047726f6f74687474703a2f2f7777772e6d6963726f736f66742e636f6d
2f7479706f6772617068792f6374666f6e7473687474703a2f2f666f6e74
66616272696b2e636f6d596f75206d617920757365207468697320666f6e
74206173207065726d6974746564206279207468652045554c4120666f72
207468652070726f6475637420696e207768696368207468697320666f6e
7420697320696e636c7564656420746f20646973706c617920616e642070
72696e7420636f6e74656e742e20596f75206d6179206f6e6c7920286929
20656d626564207468697320666f6e7420696e20636f6e74656e74206173
207065726d69747465642062792074686520656d62656464696e67207265
737472696374696f6e7320696e636c7564656420696e207468697320666f
6e743b20616e6420286969292074656d706f726172696c7920646f776e6c
6f6164207468697320666f6e7420746f2061207072696e746572206f7220
6f74686572206f75747075742064657669636520746f2068656c70207072
696e7420636f6e74656e742e687474703a2f2f7777772e6d6963726f736f
66742e636f6d2f7479706f6772617068792f666f6e74732f64656661756c
742e61737078b10903b802f9b21e1d1fb802f8b21e2b1fb802f7b21e2c1f
b802f6b21e2c1fb802f5b21e2c1fb802f4b21e2b1fb802f3b21e2c1fb802
f2b21e2c1fb802f1b21e2c1fb802f0b21e2c1fb802efb21e2c1fb802eeb2
1e2b1fb802edb21e2b1fb802ecb21e2c1fb802ebb21e2c1fb802eab21e2c
1fb802e9b21e2c1fb802e8b21e2c1fb802e7b21e2c1fb802e6b21e2c1fb8
02e5b21e2c1fb802e4b21e091fb802e3b21e2c1fb802e2b21e2c1fb802e1
b21d121fb802e0b21d191fb802dfb21d2f1fb802deb21d2f1fb802ddb21d
2f1fb802dcb21d2f1fb802dbb21d191fb802dab21d2f1fb802d9b21d2f1f
b802d8b21d2f1fb802d7b21d2f1fb802d6b21d2f1fb802d5b21d2f1fb802
d4b21d2f1fb802d3b21d2f1fb802d2b21d2f1fb802d1b21d2f1fb802d0b2
1d2f1fb802cfb21d2f1fb802ceb21d121fb802cdb21d121fb802ccb21d12
1fb802cbb21d121fb802cab21d191fb802c9b21d2f1fb802c8b21d2f1fb8
02c7b21d2f1fb802c6b21d2f1fb802c5b21d2f1fb802c4b21d2f1fb802c3
b21d2f1fb802c2b21d2f1fb802c1b21d2f1fb802c0b21d2f1fb802bfb21d
121fb802beb21d121fb802bdb21d2f1fb802bcb21d2f1fb802bbb21d2f1f
b802bab21d2f1fb802b9b21d2f1fb802b8b21d2f1fb802b7b21d2f1fb802
b6b21d2f1fb802b5b21d2f1fb802b4b21d2f1fb802b3b21d2f1fb802b2b2
1d2f1fb802b1b21c321fb802b0b21c321fb802afb21c331fb802aeb21c33
1fb802adb21c331fb802acb21c331fb802abb21c331fb802aab21c311fb8
02a9b21c311fb802a8b21c321fb802a7b21c321fb802a6b21c321fb802a5
b21c321fb802a4b21c321fb802a3b21c321fb802a2b21c331fb802a1b21c
331fb802a0b21c331fb8029fb21c331fb8029eb21c331fb8029db21c331f
b8029cb21c311fb8029bb21c311fb8029ab21c321fb80299b21c321fb802
98b21c321fb80297b21c321fb80296b21c321fb80295b21c331fb80294b2
1c331fb80293b21c331fb80292b21c331fb80291b21c331fb80290b21c33
1fb8028fb21c331fb8028eb21c311fb8028db21c321fb8028cb21c321fb8
028bb21c321fb8028ab21c321fb80289b21c321fb80288b21c331fb80287
b21c331fb80286b21c331fb80285b21c331fb80284b21c331fb80283b21c
331fb80282b21b341fb80281b21b341fb80280b21b341fb8027fb21b341f
b8027eb21b341fb8027db21b341fb8027cb21b341fb8027bb21b341fb802
7ab21b341fb80279b21b341fb80278b21b341fb80277b21b341fb80276b2
1b341fb80275b21b341fb80274b21b341fb80273b21b341fb80272b21b34
1fb80271b21b341fb80270b21b341fb8026fb21a351fb8026eb21a351fb8
026db21a351fb8026cb21a351fb8026bb21a351fb8026ab21a351fb80269
b21a351fb80268b21a351fb80267b21a351fb80266b21a351fb80265b21a
351fb80264b21a351fb80263b21a351fb80262b21a351fb80261b21a351f
b80260b21a351fb8025fb21a351fb8025eb21a351fb8025db21a351fb802
5cb21a351fb8025bb21a351fb8025ab21a351fb80259b219371fb80258b2
19371fb80257b219371fb80256b219371fb80255b219371fb80254b21937
1fb80253b219371fb80252b219371fb80251b219371fb80250b219371fb8
024fb219371fb8024eb219371fb8024db219371fb8024cb219371fb8024b
b219371fb8024ab219371fb80249b219371fb80248b219371fb80247b219
371fb80246b219371fb80245b219371fb80244b219371fb80243b219371f
b80242b219371fb80241b219371fb80240b219371fb8023fb219371fb802
3eb219371fb8023db219371fb8023cb219371fb8023bb219371fb8023ab2
19371fb80239b218391fb80238b218391fb80237b218391fb80236b21839
1fb80235b218391fb80234b218391fb80233b218391fb80232b218391fb8
0231b218391fb80230b218391fb80301b2182e1fb8022fb218391fb8022e
b218391fb8022db218391fb8022cb218391fb8022bb218391fb8022ab218
391fb80229b218391fb80228b218391fb80227b218391fb80226b218391f
b80225b2173b1fb80224b2173b1fb80223b217321fb80222b2173a1fb802
21b2173b1fb80220b2173b1fb8021fb2173b1fb8021eb2173b1fb8021db2
173b1fb8021cb2173b1fb8021bb2173b1fb8021ab2173b1fb80219b2173b
1fb80218b2173b1fb80217b2173b1fb80216b2173b1fb80215b217321fb8
0214b2173a1fb80213b2173b1fb80212b2173b1fb80211b2173b1fb80210
b2173b1fb8020fb2173b1fb8020eb2173b1fb8020db2173b1fb8020cb217
3b1fb8020bb2173b1fb8020ab2173b1fb80209b217321fb80208b217321f
b80207b2173b1fb80206b2173b1fb80205b2173b1fb80204b2173b1fb802
03b2173b1fb80202b2173b1fb80201b2173b1fb80200b2173b1fb801ffb2
173b1fb801feb2173b1fb801fdb2173b1fb801fcb2173b1fb801fbb2173b
1fb801fab2173b1fb801f9b2173b1fb801f8b2173b1fb801f7b217321fb8
01f6b2173a1fb801f5b2173b1fb801f4b2173b1fb801f3b2173b1fb801f2
b2173b1fb801f1b2173b1fb801f0b2173b1fb801efb2173b1fb801eeb217
3b1fb801edb2173b1fb801ecb2173b1fb801ebb2173b1fb801eab2173b1f
b801e9b2173b1fb801e8b2173b1fb801e7b217321fb801e6b216231fb801
e5b216231fb801e4b216371fb801e3b216371fb801e2b216381fb801e1b2
16381fb801e0b216431fb801dfb216441fb801deb216441fb801ddb21644
1fb801dcb216451fb801dbb216461fb801dab216461fb801d9b216461fb8
01d8b216231fb801d7b216231fb801d6b216381fb801d5b216431fb801d4
b216431fb801d3b216431fb801d2b216441fb801d1b216461fb801d0b216
461fb801cfb216461fb801ceb216461fb801cdb216461fb801ccb216461f
b801cbb216431fb801cab216231fb801c9b216231fb801c8b216371fb801
c7b216371fb801c6b216381fb801c5b216421fb801c4b216431fb801c3b2
16441fb801c2b216451fb801c1b216461fb801c0b216461fb801bfb21646
1fb801beb216461fb801bdb216461fb801bcb216461fb801bbb216461fb8
01bab216371fb801b9b216381fb801b8b216421fb801b7b216431fb801b6
b216431fb801b5b216431fb801b4b216441fb801b3b216441fb801b2b216
441fb801b1b216451fb801b0b216451fb801afb216451fb801aeb216461f
b801adb216461fb801acb216461fb801abb216461fb801aab216461fb801
a9b215341fb801a8b215411fb801a7b215411fb801a6b2154d1fb801a5b2
154e1fb801a4b2154f1fb801a3b215521fb801a2b215401fb801a1b2154d
1fb801a0b2154e1fb8019fb2154f1fb8019eb215521fb8019db2154d1fb8
019cb215401fb8019bb2154d1fb8019ab2154e1fb80199b2154e1fb80198
b2154f1fb80197b2154f1fb80196b215501fb80195b215521fb80194b215
521fb80193b215521fb80192b215411fb80191b2154f1fb80190b215501f
b8018fb215501fb8018eb215511fb8018db215521fb8018cb215521fb801
8bb215521fb8018ab214581fb80189b214591fb80188b2145c1fb80187b2
145d1fb80186b2144a1fb80185b2145b1fb80184b2145c1fb80183b21459
1fb80182b2145d1fb8018140af145d1ff00f451fef0e481fe00c4e1fc20c
4e1fc10c4e1fc00c4e1fbf0b561fb20b561fb10b561fb00b561faf0b561f
ae0b561fad0b561fac0b561fab0b561faa0b561fa90b561fa80b561fa70b
561fa60b561fa50b561fa40b561fa30b561fa20b561fa10b561fa00b561f
9f0b561f9e0a681f9a0a681f990a681f980a681f970a681f960a681f950a
681f940a681f930a681f920a681f910a681f9009681f8f09681f8e09681f
8d09681f8c09681f410902fc02fa0056001f02fb02fa0068001f017fb213
321fb8017eb212371fb80174b212371fb80173b211421fb80172b211421f
b80171b211421fb80170b211421fb8016fb211421fb8016eb211421fb801
6db211421fb8016cb211421fb8016bb211421fb8016ab211421fb8013cb2
11421fb8013bb210421fb8013ab210421fb80139b210421fb80138b21042
1fb80137b210421fb80136b210421fb80135b210421fb80134b210421fb8
0133b210421fb80132b20f451fb80131b20f451fb80130b20f451fb80112
b20f451fb80111b20f451fb80110b20f451fb8010fb20f451fb8010eb20f
451fb8010db20e481fb8010cb20e481fb8010bb20e481fb8010ab20e481f
b80109b20e481fb80108b20e481fb80107b20d4a1fb80106405b0d4a1fee
0d4a1fed0d4a1fec0d4a1feb0d4a1fea0d4a1fe90c4e1fdf0c4e1fde0c4e
1fdd0c4e1fdc0c4e1fdb0c4e1fda0c4e1fd90b561fd80b561fd70b561fbe
0b561fbd0b561fbc0b561fbb0b561fba0b561f9d0a681f9c0a681fb80180
b213321fb8017ab211401fb80179b211421fb80178b211421fb80177b211
421fb80176b211421fb80175b211421fb80143b211421fb80142b210421f
b80141b210421fb80140b210421fb8013fb210421fb8013eb210421fb801
3db20f451fb80115b20f451fb80114b20f451fb80113b20f451fb9030303
02b2401fa4be030200b4030200c4030200030300b213321fb8017bb21332
1fb80153b212371fb80152b211401fb80151b211401fb80150b211401fb8
014fb211401fb8014eb211401fb8014db211401fb8014cb211401fb8014b
b211401fb8014ab211401fb80149b211401fb80148b211401fb80147b211
401fb80146b211401fb80145b211401fb80144b211401fb80122b211401f
b80121b210421fb80120b210421fb8011fb210421fb8011eb210421fb801
1db210421fb8011cb210421fb8011bb210421fb8011ab210421fb80119b2
10421fb80118b20f451fb80117b20f451fb80116409b0f451ffd0f451ffc
0f451ffb0f451ffa0f451ff90e481ff80e481ff70e481ff60e481ff50e48
1ff40e481ff30d4a1ff20d4a1ff10d4a1fe70d4a1fe60d4a1fe50d4a1fe4
0d4a1fe30d4a1fe20d4a1fe10c4e1fcd0c4e1fcc0c4e1fcb0c4e1fca0c4e
1fc90c4e1fc80c4e1fc70c4e1fc60c4e1fc50c4e1fc40c4e1fc30c4e1fb8
0c4e1fb70b561fb60b561fb50b561fb40b561fb30b561f9b0a681fb802fd
b212371fb8017db212371fb8017cb212371fb80169b2112e1fb80168b211
2e1fb80167b211401fb80166b211401fb80165b211401fb80164b211401f
b80163b211401fb80162b211401fb80161b211401fb80160b211401fb801
5fb211401fb8015eb211401fb8015db211401fb8015cb211401fb8015bb2
11401fb8015ab211401fb80159b211401fb80158b211401fb80157b21140
1fb80156b211401fb80155b211401fb80154b211401fb8012fb211401fb8
012eb210421fb8012db210421fb8012cb210421fb8012bb210421fb8012a
b210421fb80129b210421fb80128b210421fb80127b210421fb80126b210
421fb80125b20f451fb80124b20f451fb80123b20f451fb80105b20f451f
b80104b20f451fb80103b20f451fb80102b20f451fb80101b20e481fb801
0040a20e481fff0e481ffe0e481fe80c4e1fd60c4e1fd50c4e1fd40c4e1f
d30c4e1fd20c4e1fd10c4e1fd00c4e1fcf0c4e1fce0b561fb90b561f8503
251f84032e1f83012e1f8248805581ab80557f487d557eab7d550b7d3b7d
4b7d030b7d1b7d4b7d7b7dab7ddb7d067c487a557bab7a55047a147a020a
7948775578ab77550b77010c764875555475e475f4750314755475647574
759475d475e47507a475b475c47503b8ffc0401275383b46807590750214
757475020075010fb8ffc04021750b0e467448725573ab72550472347202
3bf47201e07201023072015072607202b8ffc0b372242846b8ffc0403572
161a461072307240720371486f5570ab6f554f6f6f6f7f6f9f6fbf6f057f
6f8f6f02af6fbf6f02406f090d466e486d55df6d0100bc02ff001002ff00
c002ffb2030a6fbb02fe000100ef02fe40ff016b032e1f6a03251f692e67
5568ab6755662e645565ab6455632e6255612e60555f2e5d555eab5d555c
2e5a555bab5a55592e58555703251f562e545555ab5455532e515552ab51
554f2e4e554e03251f4d2e4b554cab4b554a2e485549ab4855504801472e
46554503361f001f01001e01001e701e801ef01e040b601d701d02701de0
1df01d03701cf01c027f1b010f1a7f1a8f1a030f1a8f1a020f1a8f1a020f
191f198f199f19af19050f198f199f19030c701280120270118011023011
4011d011e011040011a011020f8f0f9f0faf0f034f0f5f0fef0fff0f04af
0f01af0ebf0ecf0e034f0e5f0e6f0e030f0eaf0ebf0e0310400e2e31460f
0d1f0d40472f0d033c2f0d3f0d4f0d038f0d01400d2e3246400d2427463f
0c4f0c5f0c039f0c01400c262946ef0aff0a02400a242746ef09ff0902ff
09010003012001010001100120010308b8ffc0b301151f46b80100b31601
0501b80190b154532b2b4bb807ff524bb008505bb00188b02553b00188b0
40515ab00688b000555a5b58b101018e59b101024354b0144b515a58b101
018e59858d8d00421d4bb01d5358b0a01d594bb0805358b0401d594bb0ff
5358b0001db1160042592b5e73757373742b732b73742b2b73745e732b5e
7374757374755e73747573015e7374737475757473745e737473002b2b73
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b73745e73732b
2b7374752b2b732b2b73755f75755e732b2b2b5e7373732b7374752b5e73
2b2b5e732b2b73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b732b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b185f5e00>
[5111 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

1 0 3 <> GISAAA+Calibri-Bold AddT42Char 
1 4834 845 <00020073fff10362056800340048004bbc003502b9003f00050241b60f3f
0f3f0f291ab802894010002924241f0914b305053009443a4d1fb8011bb1
3046003fed3fddce11392fed1112392f012fd4ed1239392f2f10ed10ed31
3001140e020707060623222e022727263e023333323e0235342e0223220e
0223222e0235343e0433321e0201140e0223222e0235343e0233321e0203
622f55774808013734212d1a0c010901081520160e354d32171b37533833
4e38250a070c08050614384e603476a86b32fed80d2137282a36210d0d21
362a2837210d03dc5284603a08c3121203080e0bec2028180922384c2b30
503a1f14181409182c222320141b1710416e8efc582938220f0f2238292a
39230f0f2339>GISAAA+Calibri-Bold AddT42Char 
1 316 47 <0001008dfffa019505140015002ab10102435558b900000294b5400a1052
055500183f3f012f1a4ded31301bb31052055500183f3f31305925140e02
23222e023511343e0233321e021501950d1e322726331e0d0d1f32262732
1e0d240a100a06060a100a04c60a100a06060a100a00>GISAAA+Calibri-Bold AddT42Char 
1 428 69 <0001008dfffa04b80512003d00b5b10102435558b6270f0a2e0f0f14b802
34b21e2e32b80234b4001e385229b8fff040120f26024c29282e220c100f
26024c0c0b060fb8017db7270a19225119552eb8017db240065400183f1a
4ded3f3f123939ed1139392b111239392b3f012fd4ed3210ed322f113311
3331301bb2385229b8fff040120f26024c29282e220c100f26024c0c0b06
0fb8017db7270a19225119552eb8017db240065400183f1a4ded3f3f1239
39ed1139392b111239392b3f31305925140e022323222e02270126262723
16161511140e0223222e02351134363333321e0217131e03173326263511
343e0233321e021504b8101b25137023332b2819febe1c3a170204040b1b
2e24232e1a0a37288d2634292413fc162b2826120103030c1c2e24222e19
0a5c1724180b0e253f32025d367d3b488f4cfd5b0a100b06060b100a048b
2f2f0d1e3527fe272b53535028469845025f0a100c05050c100a>GISAAA+Calibri-Bold AddT42Char 
1 784 272 <00010048ffea032103d60035009db10102435558b21c0027be0274000e00
18011f001f0024ffe8b40b0f014c24b8011fb2134a04ba01480031ffc040
0b0b014d312c180b0f014c2cb80146b240094d00183f1a4dfd2bd42bed3f
fd2bd4ed012fedc43231301bbc0018011f001f0024ffe8b40b0f014c24b8
011fb2134a04ba01480031ffc0400b0b014d312c180b0f014c2cb80146b2
40094d00183f1a4dfd2bd42bed3ffd2bd4ed31305925140e0623222e0235
343e0233321e0615140623222e0223220615141e0233323e0233321e0203
21030507183a4a572e679f6c374378a462284d4335160905031410112634
483262681a334d33344b38260d090c0704b01a23180f17211a10407db474
86c3803e0e181e160f1823193a2f1c221c9792486e4a251f261f0a1b2a00
>GISAAA+Calibri-Bold AddT42Char 
1 1084 282 <0002004bffe903cc056d002600390095b10102435558b20b1b39bb025e00
00002f0272400a1321460b39271b040e2ab8ffe8b40b0f014c2ab8014940
09184a34180b0f014c34b80149b4400e4d054c00183f3f1a4ded2b3fed2b
1217393f012fedd4ed323931301b400921460b39271b040e2ab8ffe8b40b
0f014c2ab801494009184a34180b0f014c34b80149b4400e4d054c00183f
3f1a4ded2b3fed2b1217393f31305925140e0223222e023535060623222e
0235343e023332161711343e0233321e021503262623220e0215141e0233
323e023703cc0a18291e2028190b45975c668d59283362925f4b7a3c0b1d
302525301c0cfa36633631472b15122944341a31333620220b0f0a04040a
0f0b634a524f86b36377be86483d3b01e30a100b06060b100afd34444831
526535386a53320f22372800>GISAAA+Calibri-Bold AddT42Char 
1 1396 286 <0002004affe903b603d7002b00340105b10102435558b31313212cb80243
b22b3404b80272400a21032c132c021b2cc304b8ffc040170d014d000410
04024c5004600402a004b0040204041c2fb8ffe8b30f014d2fb8ffe84020
0d014d2fe4264a18f6000e100e0211030e09180c014d09180f014d09f940
1c4d00183f1a4dfd2b2bd45f5e5ded3fed2b2b12392f5d715e5d2bed5e5d
012fed32dded12392f31301b4009032c132c021b2cc304b8ffc040170d01
4d00041004024c5004600402a004b0040204041c2fb8ffe8b30f014d2fb8
ffe840200d014d2fe4264a18f6000e100e0211030e09180c014d09180f01
4d09f9401c4d00183f1a4dfd2b2bd45f5e5ded3fed2b2b12392f5d715e5d
2bed5e5d3130590114062321141e0233323e0233321e0215140e0623222e
0235343e0233321e021527362623220e020703b62924fde11b3b5d414264
49300f090c08030204080d3a5a744277b3783b3e76a96a709f6630f4035b
5f30472f190201fa2e2c395d412213171307122119161f160f0e1817113c
7aba7d77bf85464275a05e206a79243d532f>GISAAA+Calibri-Bold AddT42Char 
1 1804 349 <0002006bfffa018d054e001500210045b10102435558bf001602bf001c00
150260000a001f017bb540191049054c00183f3fd61a4ded012fedd4ed31
301bb9001f017bb540191049054c00183f3fd61a4ded31305925140e0223
222e023511343e0233321e0215131406232226353436333216017a0c1d30
2525301d0c0c1d302525301d0c133e54553b3d55543c220a0f0a05050a0f
0a037a0a0f0b06060b0f0a01304c3a38494c3b39>GISAAA+Calibri-Bold AddT42Char 
1 1974 367 <0001007efffa017a05700015003fb10102435558400f0d15010b0b010b0a
010d00010b0400b80260b5400a1046054c00183f3f012f1a4ded31305f5e
5d5d5d5d1bb31046054c00183f3f31305925140e0223222e023511343e02
33321e0215017a0c1d302525301d0c0c1d302525301d0c220a0f0a05050a
0f0a05230a100b06060b100a>GISAAA+Calibri-Bold AddT42Char 
1 2106 373 <0001007efffa060903d7005000abb10102435558b14613b8025fb31e1e32
0ab8025fb2503e27bb026000320010ffe8b40b0f014c10b8014db24b4a24
b8ffe8b40b0f014c24b8014d400e40414a3e462d38492d4c194c054c0018
3f3f3f3f1239393f1a4ded2b3fed2b012fed39d4ed11392fed3931301bb9
0010ffe8b40b0f014c10b8014db24b4a24b8ffe8b40b0f014c24b8014d40
0e40414a3e462d38492d4c194c054c00183f3f3f3f1239393f1a4ded2b3f
ed2b31305925140e0223222e023511342e022322060711140e0223222e02
3511342e022322060711140e0223222e023511343e0233321e0215153636
33321e02173e0333321e021506090c1c302526301d0b112335252d5c360c
1d302425301d0c112236242e5c350c1d302525301d0c0a1a291f202a170a
4a93503758453211284d4b4b27597a4b20220a0f0a05050a0f0a02112d4a
351d4643fdaf0a0f0a05050a0f0a02112d4a351d4643fdaf0a0f0a05050a
0f0a037c0a0f0a05050a0f0a675050172b3c252b3e27133c678a4d00>GISAAA+Calibri-Bold AddT42Char 
1 2494 374 <0001007efffa03d203d700320081b10102435558b12a13bb0260001e000b
025fb2001e10b8fff0b30b014d10b8ffe8b40c0f014c10b8014d400b402d
4a2a192449194c054c00183f3f3f12393f1a4ded2b2b012fd4ed10ed3931
301bb90010fff0b30b014d10b8ffe8b40c0f014c10b8014d400b402d4a2a
192449194c054c00183f3f3f12393f1a4ded2b2b31305925140e0223222e
023511342e022322060711140e0223222e023511343e0233321e02151536
3633321e021503d20c1c312425311c0c132439263062350c1d302525301d
0c0a1a291f202a170a4a99535b7d4d22220a0f0a05050a0f0a01fd414a35
1d4643fdaf0a0f0a05050a0f0a037c0a0f0a05050a0f0a6750503c678a61
>GISAAA+Calibri-Bold AddT42Char 
1 2764 381 <00020048ffe9040403d7001300270071b10102435558bf00140275000000
1e0275000a0019ffe8b40b0f014c19b8011a40090f4a23180b0f014c23b8
011cb240054d00183f1a4ded2b3fed2b012fedd4ed31301bb90019ffe8b4
0b0f014c19b8011a40090f4a23180b0f014c23b8011cb240054d00183f1a
4ded2b3fed2b31305901140e0223222e0235343e0233321e0205342e0223
220e0215141e0233323e0204043c7ab87b77b074383d7ab77b78b07338fe
fd1532533f3854361b1631543e3954361a01e972bc884a427eb87672bd87
4a417eb881426f522e294f6f47426f522d294e6f>GISAAA+Calibri-Bold AddT42Char 
1 2994 393 <0002007efe95040003d7002a003d0096b10102435558b221360abb026000
15002b0285400900150a363521040530b8ffe8b40b0f014c30b8014b400d
264a1b49104f39180b0f014c39b8014ab240054d00183f1a4ded2b3f3f3f
ed2b121739012fd4ed10ed323931301bb60a363521040530b8ffe8b40b0f
014c30b8014b400d264a1b49104f39180b0f014c39b8014ab240054d0018
3f1a4ded2b3f3f3fed2b12173931305901140e0223222e022711140e0223
222e023511343e0233321e0215153e0333321e0205342e0223220e020711
161633323e0204003362925e27413d3c200c1d302525301d0c0a19291f1e
29190a274b4e532f628a5728fefa11294332193133361e35603431452c15
01ed77bf86480f1f2e1ffe5c0a100b06060b100a04de0a0f0a05050a0f0a
69283d29144d86b277396952310f223628feda4349325166>GISAAA+Calibri-Bold AddT42Char 
1 3318 396 <0001007efffa02bb03d700330070b10102435558b1260fb80260400c001a
0f0a1f0a2f0a030d030ab8ffe8b30b014d0ab80153400a402b4a260f1520
49154c00183f3f1239393f1a4ded2b5f5e5d012fc4ed3931301bb9000aff
e8b30b014d0ab80153400a402b4a260f152049154c00183f3f1239393f1a
4ded2b31305901140e0223222e0223220e020711140e0223222e02351134
3e0233321e0215153e0333321e0602bb04080d0a0814191e12152a2d311c
0c1d302525301d0c0a1a291f202a170a233e38381c0d1e20180b05040203
4b242e1a0a07080711243c2cfdd40a0f0a05050a0f0a037c0a0f0a05050a
0f0a6f3241260f0307090a0c152a>GISAAA+Calibri-Bold AddT42Char 
1 3572 400 <00010049ffe902f203d7004900e9b10102435558b90041022eb524322432
0c1bb802444022000c042e012ee4370b0a010ae71137400b014d10372037
020337113711160f3c013cb8fff0401b0b0f014c3ce4411b05294a16100c
0d014c001601100416f240054d00183f1a4ded5f5e5d2b3f123939ed2b5d
1139392f2f5f5d2b10ed5d10ed5d012fd4ed1239392f2fed31301b402004
2e012ee4370b0a010ae71137400b014d10372037020337113711160f3c01
3cb8fff0401b0b0f014c3ce4411b05294a16100c0d014c001601100416f2
40054d00183f1a4ded5f5e5d2b3f123939ed2b5d1139392f2f5f5d2b10ed
5d10ed5d31305901140e0223222e0435343e0233321e0233323e0235342e
0635343e0233321e0615140e0223222e0223220e0215141e0602f239688e
53325b4830160c04080c090b2b40553622352714253d4d514d3d25325e87
542a4f402c1308040303070c080926394b3022322010263e4f514f3e2601
1e4c744e270f1718152d2c1d231507191e1a0e1a281a1e2b201c222c405a
3f406b4c2a0c12150f0f151f171b2214071518150e1a23141f2a201c212c
4059>GISAAA+Calibri-Bold AddT42Char 
1 3994 410 <00010017ffec028e04b1003a0093b10102435558b711110d3b2900232db8
025fb2170d2db8ffe8b40b0f014c2db8011fb323481d0db8ffe8b40b0f01
4c0db8011fb2174831b80147b240074d00183f1a4ded3fed2bcd3fed2b01
2f33fd32c4321112392f31301bb9002dffe8b40b0f014c2db8011fb32348
1d0db8ffe8b40b0f014c0db8011fb2174831b80147b240074d00183f1a4d
ed3fed2bcd3fed2b31305925140e0423222e02351123222635343e023333
35343e0233321e02151533321e02151406232311141633323e0233321e02
028e0b12232f371c4b6e48226b1314050a0f0a6a0b1d312425311c0cc20a
0f0a051413c32e3b1420191107060b06057a2c2f130f0b06264f785201c9
2f371d28170ac70a100b05050b100ac70a17281d372ffe5d494907090707
1524>GISAAA+Calibri-Bold AddT42Char 
1 4296 437 <00010079ffe903cc03c60032006bb10102435558b10b27bb025e0000001f
025f400f132d49270b05194924180b0f014c24b8014db4400e4d054c0018
3f3f1a4ded2b3f1239393f012fedd4ed3931301b400e2d49270b05194924
180b0f014c24b8014db4400e4d054c00183f3f1a4ded2b3f1239393f3130
5925140e0223222e023535060623222e023511343e0233321e021511141e
023332363711343e0233321e021503cc0a19291f2129180a4a99525c7d4d
210b1d312425301d0c122539263061370b1d302525301c0c220a0f0a0505
0a0f0a6750503c68896602220a0f0a05050a0f0afe08464a351d46430251
0a0f0a05050a0f0a>GISAAA+Calibri-Bold AddT42Char 
1 4544 454 <00010020fffa038d03c6002f008cb10102435558bc0022028a0018002402
2a40092e182e182e00170b0cb80261400f400016010e03160b202f002323
0b0ab802b5400f4000200b2949230b111d49114c054c00183f3f3f123939
3f01192f1a18dd1a4ded1239192f12391a1810dd5f5e5d1aed1239123939
2f2f10ed10ed31301b400b2949230b111d49114c054c00183f3f3f123939
3f31305925160e0223222e022703030e0323222e02371303262636363332
1e021713133e0333321616060703038508011c3a302d371f0f04a5a5040e
1d342a2c34180109f7e409011a39312c351e0e059f9e030c1a2d272c3517
010bde3411160e0503090d0a013dfec30a0d0903050e161101b7019c1219
0e0603060d0afed6012a080c0804040e1914fe6b>GISAAA+Calibri-Bold AddT42Char 
1 0 0 <00050000fe7303db050e000300070039004d004e0054bc000d019d001700
3a01cbb44444082d07be019d0002002001cb00080001019d401304020d1b
1b3f2335068c035111493f078c0254003ffddeddc63ffddecd12392fcd01
2fddedd6ed10fdc611392fedd4ed3130011121110111211101140e020707
060623222e02352726363333323e0235342623220e0223222e0235343637
3e0333321e0203140e0223222e0235343e0233321e020103dbfc4f0345fd
240279213b533105012b25171f130808031f1e0d2533200f4b4d2336281a
05040806030508072736422355774a22ce0a18271c1d27180a0a18271d1c
27180afdc2050efaf2050efb570444fbbc02e839583e2406790d0b020509
089d281e1524311c3d4b0d0f0d050e1b171a1c0708110e0a2a4861fd991a
25170a0a17251a1c25180a0a1825fd3b>GISAAA+Calibri-Bold AddT42Char 
GISAAA+Calibri-Bold /CharStrings get begin
/g3 3 def
/g845 845 def
/g47 47 def
/g69 69 def
/g272 272 def
/g282 282 def
/g286 286 def
/g349 349 def
/g367 367 def
/g373 373 def
/g374 374 def
/g381 381 def
/g393 393 def
/g396 396 def
/g400 400 def
/g410 410 def
/g437 437 def
/g454 454 def
end
GISAAA+Calibri-Bold /Encoding get
dup 32 /g3 put
dup 63 /g845 put
dup 73 /g47 put
dup 78 /g69 put
dup 99 /g272 put
dup 100 /g282 put
dup 101 /g286 put
dup 105 /g349 put
dup 108 /g367 put
dup 109 /g373 put
dup 110 /g374 put
dup 111 /g381 put
dup 112 /g393 put
dup 114 /g396 put
dup 115 /g400 put
dup 116 /g410 put
dup 117 /g437 put
dup 120 /g454 put
pop
end
%ADOEndSubsetFont
/ZONLVX+Calibri-Bold /GISAAA+Calibri-Bold findfont ct_VMDictPut
/ZONLVX+Calibri-Bold*1 
[32{/.notdef}rp /g3 30{/.notdef}rp /g845 9{/.notdef}rp /g47 4{/.notdef}rp /g69 
20{/.notdef}rp /g272 /g282 /g286 3{/.notdef}rp /g349 2{/.notdef}rp /g367 
/g373 /g374 /g381 /g393 /.notdef /g396 /g400 /g410 
/g437 2{/.notdef}rp /g454 135{/.notdef}rp]
ZONLVX+Calibri-Bold nf
ZONLVX+Calibri-Bold*1 [7.92 0 0 -7.92 0 0 ]msf
37.8 12.096 mo
(? extends )
[3.60049 1.90799 4.06744 3.59977 2.64004 4.06744 4.31161 4.31162 3.21701 0 ]xsh
ZONLVX+Calibri-Bold*1 [7.944 0 0 -7.944 0 0 ]msf
101.18 100.128 mo
(? super )
[3.59541 1.91384 3.12248 4.3167 4.3167 4.07211 2.92867 0 ]xsh
ZONLVX+Calibri-Bold*1 [7.92 0 0 -7.92 0 0 ]msf
106.75 43.8479 mo
(Implicit )
[2.15744 6.46695 4.31162 1.91994 1.91994 3.34637 1.91995 2.71855 0 ]xsh
ZONLVX+Calibri-Bold*1 [7.944 0 0 -7.944 0 0 ]msf
114.46 8.01585 mo
(None)
[5.28242 4.32192 4.31386 0 ]xsh
132.48 8.01585 mo
( )sh
ZONLVW+Calibri*1 [7.92 0 0 -7.92 0 0 ]msf
116.38 14.0397 mo
(33%)
[4.08138 4.08138 0 ]xsh
130.32 14.0397 mo
( )sh
ZONLVW+Calibri*1 [16.104 0 0 -16.104 0 0 ]msf
109.37 12.5037 mo
(\(     \) )
[4.79514 3.63828 3.7831 3.63828 3.55771 3.63828 4.82596 0 ]xsh
ZONLVW+Calibri*1 [7.944 0 0 -7.944 0 0 ]msf
105.62 89.0396 mo
(5.2% )
[4.07672 1.91875 4.07672 5.79809 0 ]xsh
113.09 60.7677 mo
(7.3% )
[4.07672 1.91875 4.07673 5.78831 0 ]xsh
.25 lw
[2 .75 ] 0 dsh
116.56 74.0969 mo
126.19 74.0969 li
@
126.19 74.093 mo
126.19 73.6949 126.51 73.373 126.91 73.373 cv
127.3 73.373 127.63 73.6949 127.63 74.093 cv
127.63 74.491 127.3 74.8129 126.91 74.8129 cv
126.51 74.8129 126.19 74.491 126.19 74.093 cv
ef
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
/ZONLVX+Calibri-Bold*1 uf
/ZONLVX+Calibri-Bold uf
/GISAAA+Calibri-Bold uf
/ZONLVW+Calibri*1 uf
/ZONLVW+Calibri uf
/GLAAAA+Calibri uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF

%%EndDocument
 @endspecial 3051 781 V 121 x Fv(Figur)o(e)28 b(20.)38
b FF(Distrib)o(ution)29 b(of)h(con-)3051 949 y(straints)19
b(on)g(wildcards)-150 1190 y(where)j(the)f(type)h(with)f(a)524
1190 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 524 1190 a Fw(?)40 b(super)524 1190 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 524 1190
a 227 w FF(type)22 b(ar)o(gument)g(w)o(as)g(nested)g(inside)f(the)-150
1273 y(constraint;)d(only)h(the)f(constraint)g(itself)f(e)n(v)o(er)i
(had)f(such)h(a)f(type)g(ar)o(gument.)-50 1356 y(T)-6
b(o)36 b(e)n(v)n(aluate)i(the)e(\002rst)g(half)h(of)f(our)h
(intersection)g(restriction,)f(we)-150 1439 y(e)o(xamined)20
b(all)f(constraints)h(on)f(type)h(parameters)g(for)f(classes,)g(interf)
o(aces,)-150 1522 y(and)h(methods)g(that)f(occurred)h(in)f(our)h
(suite.)e(In)h(Figure)g(19)h(we)f(indicate)g(in)-150
1605 y(logarithmic)28 b(scale)h(ho)n(w)g(man)o(y)g(type)g(parameters)g
(had)g(no)g(constraints,)-150 1688 y(one)i(constraint,)f(or)h(multiple)
f(constraints)h(by)g(using)g(intersections.)f(In)-150
1771 y(our)35 b(entire)f(suite)g(there)h(were)f(only)h(61)g
(intersections.)g(W)-6 b(e)33 b(manually)-150 1854 y(inspected)16
b(these)e(61)i(intersections)f(and)g(determined)g(that,)f(out)h(of)g
(all)f(these)-150 1937 y(intersections,)19 b Fx(none)h
FF(of)f(them)g(violated)g(our)h(intersection)f(restriction.)-50
2020 y(T)-6 b(o)31 b(e)n(v)n(aluate)h(the)g(second)g(half)f(of)h(our)f
(intersection)h(restriction)f(as)-150 2103 y(well)19
b(as)g(our)h(equi)n(v)n(alence)i(restriction,)d(we)g(e)o(xamined)i(all)
e(wildcards)g(that)-150 2186 y(occurred)f(in)f(our)h(suite.)e(In)h
(Figure)g(20)h(we)f(break)h(do)n(wn)g(the)f(v)n(arious)h(w)o(ays)-150
2269 y(the)d(19,018)h(wildcards)f(were)g(constrained.)g(Only)h(3.5\045)
f(of)g(wildcards)g(had)-150 2352 y(both)21 b(an)g(implicit)f(and)i(an)f
(e)o(xplicit)g(upper)g(bound.)h(In)f(all)f(of)h(those)g(cases,)-150
2435 y(the)32 b(e)o(xplicit)g(upper)h(bound)g(w)o(as)f(actually)h(a)f
(subtype)h(of)f(the)g(implicit)-150 2518 y(upper)21 b(bound)g
(\(interestingly)-5 b(,)20 b(though,)h(for)f(35\045)h(of)f(these)g
(cases)g(the)g(tw)o(o)-150 2601 y(bounds)25 b(were)d(actually)i(equi)n
(v)n(alent\).)g(Thus)f(out)g(of)g(all)f(e)o(xplicit)h(bounds,)-150
2684 y Fx(none)36 b FF(of)f(them)g(violated)g(either)g(our)g
(intersection)g(restriction)g(or)g(our)-150 2767 y(equi)n(v)n(alence)d
(restriction.)e(Also,)g(in)g(the)g(entire)g(suite)g(there)h(were)f
(only)-150 2850 y(2)23 b(wildcards)h(that)f(had)h(both)f(an)h(e)o
(xplicit)f(lo)n(wer)g(bound)i(and)f(an)f(implicit)-150
2933 y(upper)17 b(bound,)h(and)f(in)f(both)h(cases)g(the)f(e)o(xplicit)
g(lo)n(wer)g(bound)i(w)o(as)f(a)f(strict)-150 3016 y(subtype)k(of)f
(the)g(implicit)f(upper)i(bound.)-50 3099 y(In)k(summary)-5
b(,)25 b Fx(none)g FF(of)f(our)g(constraints)h(were)f(e)n(v)o(er)g
(violated)h(in)f(our)-150 3182 y(entire)18 b(suite.)g(This)g(leads)h
(us)g(to)f(belie)n(v)o(e)h(that)g(the)f(restrictions)g(we)h(impose)-150
3265 y(will)f(most)h(lik)o(ely)g(ha)o(v)o(e)g(little)f(ne)o(gati)n(v)o
(e)h(impact)g(on)h(programmers.)-50 3348 y(W)-6 b(e)19
b(also)h(manually)h(in)m(v)o(estigated)f(for)g(implicitly)g(in\002nite)
f(types,)h(tak-)-150 3431 y(ing)28 b(adv)n(antage)i(of)e(the)g
(syntactic)g(classi\002cation)g(of)g(implicitly)g(in\002nite)-150
3514 y(types)i(described)h(in)e(Section)h(9.1.)g(W)-6
b(e)29 b(encountered)i(only)g(one)f(e)o(xam-)-150 3597
y(ple)23 b(of)f(an)h(implicitly)f(in\002nite)g(type.)h(It)f(w)o(as)h
(actually)g(the)g(same)g(as)f(class)-150 3680 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -150
3680 a Fw(Infinite)-150 3680 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -150 3680 a 254 w FF(in)d(Section)g
(3.2:)-50 3808 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -50 3808 a Fw(public)40 b(interface)h(Assumption<Self)
i(extends)e(Assumption<?>>)2146 3799 y
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 2146 3799 a Fu(f)2146
3799 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 2146 3799 a 2185 3808 a Fw(...)2302 3799 y
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 2302
3799 a Fu(g)2302 3799 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 2302 3799 a -50 3808 a
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -50 3808
a -150 3935 a FF(Surprisingly)-5 b(,)35 b(this)f(is)g(precisely)i(the)e
(same)h(as)g(the)1335 3935 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1335 3935 a Fw(Infinite)1335
3935 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1335 3935 a 270 w FF(class)f(in)-150 4018 y(Section)26
b(3.2.)h(Ho)n(we)n(v)o(er)m(,)g(the)f(documentation)j(of)d(the)h(abo)o
(v)o(e)g(code)h(sug-)-150 4101 y(gested)g(that)e(the)h(programmer)h(w)o
(as)g(trying)f(to)g(encode)h(the)f(\223self)t(\224)g(type)-150
4184 y(pattern)19 b([2,)f(3].)g(In)h(f)o(act,)f(we)g(replaced)h(the)g
(wildcard)g(abo)o(v)o(e)g(with)f(the)h(per)o(-)-150 4267
y(tinent)f(type)h(parameter)502 4267 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 502 4267 a Fw(Self)502
4267 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 502 4267 a 117 w FF(,)f(which)h(is)f(actually)g(a)g(more)h(f)o
(aithful)f(encod-)-150 4350 y(ing)28 b(of)f(the)h(\223self)t(\224)f
(type)h(pattern,)f(and)h(the)g(entire)f(code)i(base)f(still)e(type)-150
4433 y(check)o(ed.)19 b(Thus,)e(the)h(additional)g(\003e)o(xibility)f
(of)g(the)h(wildcard)f(in)h(this)f(case)-150 4516 y(w)o(as)i(not)g(tak)
o(en)h(adv)n(antage)h(of)e(and)g(w)o(as)g(most)g(lik)o(ely)h(a)e
(simple)h(mistak)o(e.)-50 4599 y(This)e(w)o(as)h(the)g(only)h
(implicitly)e(in\002nite)g(type)i(we)e(found,)i(and)f(we)g(also)-150
4682 y(did)i(not)g(\002nd)f(e)n(vidence)i(of)f(implicitly)f(in\002nite)
g(subtyping)i(proofs.)f(These)-150 4765 y(\002ndings)26
b(are)f(signi\002cant)g(because)i(Cameron)f(et)f(al.)f(pro)o(v)o(ed)i
(soundness)-150 4848 y(of)j(wildcards)g(assuming)h(all)e(wildcards)h
(and)h(subtyping)g(proofs)f(trans-)-150 4932 y(late)22
b(to)h(\002nite)f(traditional)h(e)o(xistential)f(types)i(and)f
(subtyping)h(proofs)g([5],)-150 5015 y(and)18 b(Summers)g(et)g(al.)f
(ga)o(v)o(e)g(semantics)h(to)g(wildcards)g(under)h(the)e(same)h(as-)
-150 5098 y(sumptions)f([15)q(],)f(so)g(although)i(we)e(ha)o(v)o(e)h
(determined)g(these)g(assumptions)-150 5181 y(do)i(not)f(hold)g
(theoretically)h(our)f(surv)o(e)o(y)h(demonstrates)g(that)f(the)o(y)g
(do)h(hold)-150 5264 y(in)k(practice.)h(Nonetheless,)g(we)f(e)o(xpect)h
(that)f(Cameron)i(et)e(al.)g(and)h(Sum-)-150 5347 y(mers)f(et)f(al.)g
(w)o(ould)i(be)f(able)g(to)f(adapt)h(their)g(w)o(ork)g(to)g(implicitly)
f(in\002nite)-150 5430 y(types)d(and)h(proofs)g(no)n(w)f(that)g(the)g
(problem)h(has)f(been)h(identi\002ed.)2169 1224 y Ft(C)2229
1224 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2229 1224 a Fw(<)2229 1224 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2229 1224 a 30 w
Ft(P)2308 1232 y Fo(1)2343 1224 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2343 1224 a 39 w Fw(extends)2343
1224 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2343 1224 a 264 w Ft(\034)2641 1232 y Fo(1)2676
1224 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2676 1224 a Fw(,)39 b(...,)2676 1224 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2676 1224
a 206 w Ft(P)2931 1232 y Fn(n)2973 1224 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2973 1224 a
39 w Fw(extends)2973 1224 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2973 1224 a 265 w Ft(\034)3272
1232 y Fn(n)3314 1224 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3314 1224 a Fw(>)3314 1224 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate

3314 1224 a 142 w Ft(P)3505 1232 y Fn(i)3550 1224 y FF(occurs)20
b(in)e Ft(\034)3874 1232 y Fn(j)p 2113 1261 1850 4 v
2871 1328 a Ft(C)q(:i)k Ff( )f Ft(C)q(:j)2451 1468 y(C)2511
1468 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2511 1468 a Fw(<)2511 1468 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2511 1468 a 29 w
Ft(P)2589 1476 y Fo(1)2624 1468 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2624 1468 a 39 w Fw(extends)2624
1468 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2624 1468 a 265 w Ft(\034)2923 1476 y Fo(1)2957
1468 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2957 1468 a Fw(,)40 b(...,)2957 1468 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2957 1468
a 206 w Ft(P)3212 1476 y Fn(n)3255 1468 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3255 1468 a
39 w Fw(extends)3255 1468 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3255 1468 a 264 w Ft(\034)3553
1476 y Fn(n)3596 1468 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3596 1468 a Fw(>)3596 1468 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate

3596 1468 a 2306 1555 a Ft(D)2371 1555 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2371 1555 a
Fw(<)2371 1555 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2371 1555 a 2414 1514 a
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 2414 1514 a
Fw(?)2414 1514 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 2414 1514 a 2400 1555 a Ft(\034)2443
1563 y Fo(1)2477 1555 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2477 1555 a Fw(,)g(...,)2477
1555 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2477 1555 a 2697 1514 a
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 2697 1514 a Fw(?)2697
1514 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 2697 1514 a 2683 1555 a Ft(\034)2726 1563 y Fn(m)2784
1555 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2784 1555 a Fw(>)2784 1555 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2784 1555 a 48 w
FF(occurs)20 b(in)f Ft(\034)3157 1563 y Fn(i)3309 1514
y
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 3309 1514 a Fw(?)3309 1514 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 3309 1514 a 3295 1555
a Ft(\034)3338 1563 y Fn(j)3389 1555 y FF(is)f(a)h(wildcard)p
2250 1592 1578 4 v 2865 1659 a Ft(C)q(:i)3011 1634 y
Fe(?)2990 1659 y Fu(!)i Ft(D)r(:j)2627 1783 y(C)2687
1783 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2687 1783 a Fw(<...>)40 b(extends)2687 1783 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate

2687 1783 a 412 w Ft(\034)3133 1791 y Fo(1)3167 1783
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3167 1783 a Fw(,)g(...,)3167 1783 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3167 1783 a 206
w Ft(\034)3407 1791 y Fn(n)2306 1870 y Ft(D)2371 1870
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2371 1870 a Fw(<)2371 1870 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2371 1870 a 2414 1828
a
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 2414 1828 a Fw(?)2414 1828 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 2414 1828 a 2400 1870
a Ft(\034)2443 1878 y Fo(1)2477 1870 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2477 1870 a Fw(,)g(...,)2477
1870 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2477 1870 a 2697 1828 a
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 2697 1828 a Fw(?)2697
1828 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 2697 1828 a 2683 1870 a Ft(\034)2726 1878 y Fn(m)2784
1870 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2784 1870 a Fw(>)2784 1870 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2784 1870 a 48 w
FF(occurs)20 b(in)f Ft(\034)3157 1878 y Fn(i)3309 1828
y
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 3309 1828 a Fw(?)3309 1828 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 3309 1828 a 3295 1870
a Ft(\034)3338 1878 y Fn(j)3389 1870 y FF(is)f(a)h(wildcard)p
2250 1907 1578 4 v 2859 1974 a Ft(C)q(:)p Fs(0)3017 1949
y Fe(?)2996 1974 y Fu(!)i Ft(D)r(:j)2316 2098 y(C)q(:i)2462
2073 y Fe(?)2441 2098 y Fu(!)g Ft(C)q(:j)p 2260 2132
448 4 v 2317 2199 a(C)q(:j)2472 2174 y Fe(?)2452 2199
y Ff( )g Ft(C)q(:i)2934 2098 y(C)q(:i)3079 2073 y Fe(?)3058
2098 y Fu(!)g Ft(D)r(:j)118 b(D)r(:j)27 b Ff( )21 b Ft(D)r(:k)p
2877 2132 939 4 v 3172 2199 a(C)q(:i)3317 2174 y Fe(?)3297
2199 y Ff( )g Ft(D)r(:k)2101 2322 y(C)2161 2322 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2161
2322 a Fw(<)2161 2322 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2161 2322 a 29 w Ft(P)2239 2330
y Fo(1)2274 2322 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2274 2322 a 39 w Fw(extends)2274 2322
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2274 2322 a 265 w Ft(\034)2573 2330 y Fo(1)2607 2322
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2607 2322 a Fw(,)40 b(...,)2607 2322 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2607 2322 a
206 w Ft(P)2862 2330 y Fn(n)2905 2322 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2905 2322 a 39
w Fw(extends)2905 2322 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2905 2322 a 264 w Ft(\034)3203
2330 y Fn(n)3246 2322 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3246 2322 a Fw(>)3246 2322 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate

3246 2322 a 141 w Ft(D)3452 2322 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3452 2322 a Fw(<...>)3452
2322 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3452 2322 a 166 w FF(occurs)20 b(in)f Ft(\034)3943
2330 y Fn(j)p 2058 2359 1961 4 v 2865 2426 a Ft(C)q(:i)3010
2401 y Fe(?)2990 2426 y Ff( )i Ft(D)r(:)p Fs(0)2450 2535
y Ft(C)2510 2535 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2510 2535 a Fw(<...>)41 b(extends)2510
2535 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2510 2535 a 412 w Ft(D)2985 2543 y Fo(1)3020 2535
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3020 2535 a Fw(<...>,)g(...,)3020 2535 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3020 2535
a 353 w Ft(D)3436 2543 y Fn(n)3479 2535 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3479 2535 a
Fw(<...>)3479 2535 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3479 2535 a 2394 2566 1288 4 v 2847
2632 a Ft(C)q(:)p Fs(0)3004 2607 y Fe(?)2984 2632 y Ff( )21
b Ft(D)3143 2640 y Fn(i)3170 2632 y Ft(:)p Fs(0)p 2042
2702 1993 3 v 2339 2786 a Fv(Figur)o(e)d(21.)38 b FF(De\002nition)18
b(of)h(wildcard)g(dependenc)o(y)2042 3155 y Fv(9.1)75
b(Pr)o(e)o(v)o(enting)18 b(Implicitly)g(In\002nite)f(T)-6
b(ypes)2042 3271 y FF(Implicitly)30 b(in\002nite)f(types)i(arise)f
(when)h(the)f(implicit)g(constraints)g(on)h(a)2042 3354
y(wildcard)15 b(in)g(a)g(type)h(actually)f(depend)i(on)e(that)g(type)h
(in)f(some)g(w)o(ay)-5 b(.)16 b(F)o(or)e(e)o(x-)2042
3437 y(ample,)19 b(the)h(implicit)e(constraint)i(on)g(the)g(wildcard)f
(in)3501 3437 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3501 3437 a Fw(Infinite<?>)3501 3437
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3501 3437 a 342 w FF(comes)2042 3520 y(from)e(the)h(constraint)f(on)h
(the)g(type)f(parameter)h(of)3366 3520 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3366 3520 a
Fw(Infinite)3366 3520 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3366 3520 a 252 w FF(which)g(is)f(itself)2042
3603 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2042 3603 a Fw(Infinite<?>)2042 3603 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2042 3603
a 323 w FF(.)j(Thus)g(if)f(one)h(were)g(to)g(disallo)n(w)f(such)i(c)o
(yclic)f(dependencies)2042 3686 y(then)f(one)h(w)o(ould)f(pre)n(v)o
(ent)h(implicitly)f(in\002nite)f(types)h(from)g(happening.)2141
3769 y(Although)f(unnecessary)g(for)e(our)g(restrictions,)g(we)g
(determined)h(a)g(w)o(ay)2042 3852 y(to)34 b(statically)h(detect)g
(such)g(c)o(yclic)g(dependencies)i(just)e(be)g(e)o(xamining)2042
3935 y(the)26 b(class)f(hierarchy)i(and)f(constraints)g(on)g(type)g
(parameters)h(of)e(generic)2042 4018 y(classes.)36 b(In)f(Figure)h(21,)
g(we)g(present)g(simple)g(rules)g(for)f(determining)2042
4101 y(what)25 b(we)f(call)h(wildcard)g(dependencies.)i(The)d
(judgement)i Ft(C)q(:i)3825 4076 y Fe(?)3805 4101 y Ff( )32
b Ft(D)r(:j)2042 4184 y FF(means)23 b(that,)f(the)h(implicit)f
(constraints)h(for)g(wildcards)f(in)h(the)g(constraint)2042
4270 y(on)f(the)f Ft(i)2276 4238 y Fk(th)2340 4270 y
FF(parameter)h(of)f Ft(C)26 b FF(or)21 b(\(when)h Ft(i)f
FF(is)g Fs(0)p FF(\))h(a)f(direct)g(superclass)h(of)f
Ft(C)2042 4356 y FF(depend)e(on)g(the)f(constraint)g(on)g(the)g
Ft(j)3025 4324 y Fk(th)3087 4356 y FF(parameter)g(of)g
Ft(D)i FF(or)e(\(when)g Ft(j)23 b FF(is)17 b Fs(0)p FF(\))2042
4439 y(the)j(superclasses)g(of)g Ft(D)r FF(.)g(If)f(wildcard)h
(dependenc)o(y)i(is)e(co-well-founded,)2042 4522 y(then)f(all)f
(wildcard)h(types)g(correspond)h(to)f(\002nite)f(forms)h(of)f(our)h(e)o
(xistential)2042 4605 y(types,)g(which)g(is)g(easy)g(to)g(pro)o(v)o(e)h
(by)f(induction.)2042 4898 y FD(10.)90 b(Extensions)2042
5015 y FF(Although)22 b(in)g(this)f(paper)h(we)g(ha)o(v)o(e)f(focused)i
(on)f(wildcards,)f(our)h(formal-)2042 5098 y(ism)e(and)h(proofs)g(are)f
(all)g(phrased)i(in)e(terms)g(of)h(more)f(general)h(e)o(xistential)2042
5181 y(types)k(described)g(in)f(Section)g(A.1.)g(This)g(generality)h
(pro)o(vides)g(opportu-)2042 5264 y(nity)16 b(for)h(e)o(xtensions)g(to)
g(the)f(language.)i(Here)f(we)f(of)n(fer)h(a)f(fe)n(w)g(such)i(e)o
(xten-)2042 5347 y(sions)f(which)g(preliminary)h(in)m(v)o(estigations)f
(suggest)h(are)f(compatible)g(with)2042 5430 y(our)i(algorithms,)g
(although)h(full)f(proofs)g(ha)o(v)o(e)g(not)h(yet)f(been)g(de)n(v)o
(eloped.)p eop end
%%Page: 14 14
TeXDict begin 14 13 bop -150 66 a Fv(10.1)75 b(Declaration-Site)19
b(V)-7 b(ariance)-150 183 y FF(As)25 b(K)n(ennedy)i(and)f(Pierce)e
(mention)i([9],)f(there)g(is)g(a)g(simple)g(translation)-150
266 y(from)19 b(declaration-site)h(v)n(ariance)h(to)e(use-site)g(v)n
(ariance)i(which)f(preserv)o(es)-150 349 y(and)j(re\003ects)e
(subtyping.)i(In)f(short,)g(e)o(xcept)h(for)f(a)g(fe)n(w)g(cases,)g
(type)g(ar)o(gu-)-150 432 y(ments)f Ft(\034)29 b FF(to)21
b(co)o(v)n(ariant)h(type)g(parameters)f(are)g(translated)g(to)1487
432 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1487 432 a Fw(?)40 b(extends)1487 432 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1487 432
a 294 w Ft(\034)9 b FF(,)-150 515 y(and)27 b(type)g(ar)o(guments)g
Ft(\034)35 b FF(to)27 b(contra)o(v)n(ariant)g(type)g(parameters)g(are)f
(trans-)-150 598 y(lated)e(to)102 598 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 102 598 a Fw(?)39
b(super)102 598 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 102 598 a 235 w Ft(\034)9 b FF(.)23
b(Our)h(restrictions)h(on)1017 598 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1017 598 a Fw(?)40
b(super)1017 598 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1017 598 a 230 w FF(then)25 b(translate)f(to)h(re-)
-150 681 y(strictions)j(on)g(contra)o(v)n(ariant)h(type)f(parameters.)g
(F)o(or)g(e)o(xample,)g(our)h(re-)-150 764 y(strictions)17
b(w)o(ould)i(require)f(that,)f(in)h(each)g(declared)h(direct)e
(superclass)i(and)-150 847 y(superinterf)o(ace,)j(only)g(types)g(at)f
(co)o(v)n(ariant)h(locations)f(can)h(use)g(classes)f(or)-150
930 y(interf)o(aces)d(with)f(contra)o(v)n(ariant)h(type)h(parameters.)e
(Interestingly)-5 b(,)18 b(this)g(re-)-150 1013 y(striction)g(does)g
(not)g(coincide)h(with)e(an)o(y)i(of)e(the)h(restrictions)g(presented)h
(by)-150 1096 y(K)n(ennedy)28 b(and)f(Pierce.)e(Thus,)h(we)g(ha)o(v)o
(e)h(found)g(a)f(ne)n(w)h(termination)g(re-)-150 1179
y(sult)18 b(for)g(nominal)h(subtyping)g(with)f(v)n(ariance.)h(It)f(w)o
(ould)h(be)f(interesting)g(to)-150 1262 y(in)m(v)o(estigate)f(e)o
(xisting)h(code)g(bases)g(with)f(declaration-site)h(v)n(ariance)g(to)f
(de-)-150 1345 y(termine)i(if)g(our)g(restrictions)g(might)h(be)f(more)
h(practical)f(than)g(prohibiting)-150 1428 y(e)o(xpansi)n(v)o(e)h
(inheritance.)-50 1511 y(Because)15 b(declaration-site)g(v)n(ariance)g
(can)g(be)g(translated)g(to)f(wildcards,)-150 1594 y(Ja)o(v)n(a)35
b(could)h(use)f(both)h(forms)f(of)g(v)n(ariance.)h(A)f(wildcard)g
(should)h(not)-150 1677 y(be)28 b(used)h(as)f(a)f(type)i(ar)o(gument)f
(for)g(a)g(v)n(ariant)g(type)g(parameter)h(since)f(it)-150
1760 y(is)j(unclear)i(what)f(this)f(w)o(ould)i(mean,)f(although)h(Ja)o
(v)n(a)f(might)g(consider)-150 1843 y(interpreting)18
b(the)f(wildcard)h(syntax)g(slightly)f(dif)n(ferently)h(for)f(v)n
(ariant)h(type)-150 1926 y(parameters)h(for)g(the)g(sak)o(e)h(of)f
(backw)o(ards)h(compatibility)-5 b(.)-150 2072 y Fv(10.2)75
b(Existential)19 b(T)-6 b(ypes)-150 2188 y FF(The)28
b(intersection)h(restriction)f(has)g(the)g(unfortunate)i(consequence)g
(that)-150 2271 y(constraints)g(such)g(as)460 2271 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

460 2271 a Fw(List<?>)41 b(&)f(Set<?>)460 2271 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 460
2271 a 500 w FF(are)29 b(not)h(allo)n(wed.)f(W)-6 b(e)29
b(can)h(ad-)-150 2354 y(dress)g(this)f(by)i(allo)n(wing)f(users)g(to)f
(use)h(e)o(xistential)g(types)g(should)h(the)o(y)-150
2437 y(wish)e(to.)g(Then)h(the)g(user)f(could)i(e)o(xpress)f(the)f
(constraint)h(abo)o(v)o(e)h(using)-150 2520 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -150 2520
a Fw(exists)41 b(X.)e(List<X>)i(&)f(Set<X>)-150 2520
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -150 2520 a 765 w FF(,)27 b(which)h(satis\002es)g(the)g(intersection)
g(restric-)-150 2603 y(tion.)35 b(Users)h(could)g(also)g(e)o(xpress)h
(potentially)f(useful)g(types)g(such)g(as)-150 2686 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

-150 2686 a Fw(exists)41 b(X.)e(Pair<X,X>)-150 2686 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate

-150 2686 a 578 w FF(and)554 2686 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 554 2686 a Fw(exists)i(X.)f
(List<List<X>>)554 2686 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 554 2686 a 677 w FF(.)-50 2769
y(Besides)28 b(e)o(xistentially)g(quanti\002ed)h(type)g(v)n(ariables,)f
(we)g(ha)o(v)o(e)g(tak)o(en)-150 2852 y(into)23 b(consideration)h
(constraints,)f(both)h(e)o(xplicit)f(and)g(implicit,)f(and)i(ho)n(w)
-150 2935 y(to)d(restrict)f(them)h(so)h(that)e(termination)i(of)f
(subtyping)h(is)f(still)f(guaranteed)-150 3018 y(since)k(the)g(general)
g(case)g(is)f(kno)n(wn)i(to)f(be)g(undecidable)h([21)q(].)e(While)g
(all)-150 3101 y(bound)f(v)n(ariables)f(must)f(occur)h(some)n(where)h
(in)e(the)g(body)h(of)g(the)f(e)o(xisten-)-150 3184 y(tial)i(type,)h
(the)o(y)g(cannot)h(occur)g(inside)f(an)g(e)o(xplicit)g(constraint)g
(occurring)-150 3267 y(in)30 b(the)g(body)-5 b(.)31 b(This)f(both)g
(pre)n(v)o(ents)h(troublesome)g(implicit)f(constraints)-150
3350 y(and)d(permits)f(the)g(join)g(technique)h(in)f(Section)g(6.1.)g
(As)g(for)f(the)h(e)o(xplicit)-150 3434 y(constraints)c(on)g(the)f(v)n
(ariables,)g(lo)n(wer)h(bounds)h(cannot)f(reference)g(bound)-150
3517 y(v)n(ariables)e(and)h(upper)g(bounds)g(cannot)g(ha)o(v)o(e)f
(bound)h(v)n(ariables)f(at)g(co)o(v)n(ari-)-150 3600
y(ant)g(locations)g(or)g(in)f(types)h(at)g(contra)o(v)n(ariant)g
(locations.)g(This)f(allo)n(ws)h(po-)-150 3683 y(tentially)j(useful)g
(types)g(such)h(as)747 3683 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 747 3683 a Fw(exists)41
b(X)e(extends)i(Enum<X>.)g(List<X>)747 3683 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 747 3683
a 971 w FF(.)23 b(As)-150 3766 y(for)29 b(implicit)f(constraints,)h
(since)g(a)g(bound)h(v)n(ariable)g(could)g(be)f(used)g(in)-150
3849 y(man)o(y)20 b(locations,)g(the)f(implicit)g(constraints)h(on)g
(that)f(v)n(ariable)h(are)g(the)f(ac-)-150 3932 y(cumulation)f(of)g
(the)g(implicit)e(constraints)i(for)g(each)g(location)g(it)f(occurs)h
(at.)-150 4015 y(All)i(upper)i(bounds)h(on)e(a)g(bound)i(v)n(ariable)f
(w)o(ould)f(ha)o(v)o(e)h(to)f(v)n(alidly)g(inter)o(-)-150
4098 y(sect)h(with)f(each)i(other)m(,)f(and)g(each)h(bound)g(v)n
(ariable)g(with)e(multiple)h(lo)n(wer)-150 4181 y(bounds)f(w)o(ould)e
(ha)o(v)o(e)g(to)g(ha)o(v)o(e)g(a)g(most)g(general)h(lo)n(wer)f(bound.)
-150 4327 y Fv(10.3)75 b(Lo)o(wer)m(-Bounded)19 b(T)-6
b(ype)19 b(P)o(arameters)-150 4443 y FF(Smith)29 b(and)h(Cartwright)f
(propose)h(allo)n(wing)g(type)g(parameters)g(to)f(ha)o(v)o(e)-150
4526 y(lo)n(wer)o(-bound)38 b(requirements)f(\(i.e.)844
4526 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 844 4526 a Fw(super)844 4526 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 844 4526 a 183
w FF(clauses\))g([14)q(],)f(pro)o(viding)h(a)-150 4609
y(simple)19 b(application)h(of)f(this)f(feature)h(which)h(we)e
(duplicate)i(here.)214 4728 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 214 4728 a Fw(<P)40 b(super)g(Integer>)h
(List<P>)g(sequence\(int)h(n\))1862 4719 y
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 1862 4719
a Fu(f)1862 4719 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 1862 4719 a 214 4728 a
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 214 4728 a
214 4811 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 214 4811 a 78 w Fw(List<P>)f(res)f(=)g(new)g
(LinkedList<P>\(\);)214 4811 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 214 4811 a 214 4894 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

214 4894 a 78 w Fw(for)g(\(int)h(i)e(=)g(1;)h(i)g(<=)f(n;)h(i++\))214
4894 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 214 4894 a 214 4977 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 214 4977 a 157 w Fw(res.add\(i\);)214
4977 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 214 4977 a 214 5060 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 214 5060 a 78 w Fw(return)h(res;)214
5060 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 214 5060 a 214 5143 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 214 5143 a 214 5134 a
 currentpoint currentpoint translate 1 .75 scale neg exch neg exch
translate
 214
5134 a Fu(g)214 5134 y
 currentpoint currentpoint translate 1 1 div 1 .75 div scale neg exch
neg exch translate
 214 5134 a 214 5143 a
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 214 5143
a -150 5264 a FF(Our)24 b(algorithms)g(can)g(support)g(this)g(feature)g
(pro)o(vided)h(lo)n(wer)o(-bound)g(re-)-150 5347 y(quirements)d(do)f
(not)g(ha)o(v)o(e)g(e)o(xplicitly)g(bound)i(wildcard)e(type)g(ar)o
(guments.)-150 5430 y(Also,)e(the)o(y)i(should)f(not)g(be)h(other)f
(type)g(parameters)g(in)g(the)g(same)g(param-)2042 66
y(eterization)h(since)g(that)f(is)h(better)f(e)o(xpressed)i(by)f(upper)
h(bounds)g(on)g(those)2042 149 y(type)d(parameters.)2042
299 y Fv(10.4)75 b(Uni)o(v)o(ersal)20 b(T)-6 b(ypes)2042
415 y FF(Another)15 b(e)o(xtension)h(that)f(could)h(be)f(compatible)h
(with)e(our)h(algorithms)h(is)e(a)2042 498 y(restricted)j(form)g(of)g
(predicati)n(v)o(e)h(uni)n(v)o(ersal)g(types)g(lik)o(e)3515
498 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3515 498 a Fw(forall)41 b(X.)f(List<X>)3515 498
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3515 498 a 501 w FF(.)2042 581 y(Although)24 b(this)g(e)o(xtension)g
(is)f(mostly)h(speculati)n(v)o(e,)g(we)g(mention)g(it)f(here)2042
664 y(as)j(a)f(direction)h(for)g(future)g(research)g(since)g
(preliminary)h(in)m(v)o(estigations)2042 747 y(suggest)g(it)e(is)h
(possible.)h(Uni)n(v)o(ersal)f(types)h(w)o(ould)g(ful\002ll)e(the)h
(main)g(role)2042 830 y(that)31 b(ra)o(w)g(types)h(play)f(in)h(Ja)o(v)n
(a)f(besides)h(con)m(v)o(enience)i(and)e(backw)o(ards)2042
913 y(compatibility)-5 b(.)16 b(In)h(particular)m(,)f(for)g(something)i
(lik)o(e)e(an)h(immutable)g(empty)2042 996 y(list)31
b(one)i(typically)g(produces)g(one)g(instance)g(of)f(an)h(anon)o(ymous)
h(class)2042 1079 y(implementing)21 b(ra)o(w)2609 1079
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2609 1079 a Fw(List)2609 1079 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2609 1079 a 138 w FF(and)g(then)g
(uses)g(that)f(instance)i(as)e(a)3707 1079 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3707 1079
a Fw(List)3707 1079 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3707 1079 a 138 w FF(of)h(an)o(y)2042
1162 y(type)26 b(the)o(y)g(w)o(ant.)g(This)f(w)o(ay)i(one)f(a)o(v)o
(oids)g(w)o(astefully)g(allocating)g(a)g(ne)n(w)2042
1245 y(empty)g(list)e(for)h(each)h(type.)g(Adding)g(uni)n(v)o(ersal)g
(types)g(w)o(ould)g(eliminate)2042 1328 y(this)18 b(need)i(for)f(the)g
(back)h(door)f(pro)o(vided)i(by)e(ra)o(w)g(types.)2042
1519 y FD(11.)90 b(Conclusion)2042 1636 y FF(Despite)28
b(their)h(conceptual)h(simplicity)-5 b(,)28 b(wildcards)h(are)f
(formally)h(com-)2042 1719 y(ple)o(x,)g(with)f(impredicati)n(vity)i
(and)f(implicit)f(constraints)i(being)f(the)g(pri-)2042
1802 y(mary)k(causes.)h(Although)g(most)g(often)f(used)h(in)f(practice)
h(for)f(use-site)2042 1885 y(v)n(ariance)d([7)q(,)f(17)q(\22619)q(],)g
(wildcards)h(are)f(best)h(formalized)h(as)e(e)o(xistential)2042
1968 y(types)20 b([4,)e(5)q(,)h(7,)g(9,)g(18,)g(19)q(,)g(21],)g(and)h
(more)f(precisely)h(as)f(coinducti)n(v)o(e)i(e)o(x-)2042
2051 y(istential)k(types)h(with)f(coinducti)n(v)o(e)i(subtyping)g
(proofs,)e(which)h(is)f(a)h(ne)n(w)2042 2134 y(\002nding)19
b(to)g(the)g(best)g(of)g(our)g(kno)n(wledge.)2141 2217
y(In)28 b(this)g(paper)h(we)e(ha)o(v)o(e)i(addressed)g(the)f(problem)h
(of)f(subtyping)h(of)2042 2300 y(wildcards,)i(a)g(problem)i(suspected)f
(to)g(be)f(undecidable)j(in)d(its)g(current)2042 2383
y(form)17 b([9,)f(21)q(].)g(Our)h(solution)g(imposes)h(simple)e
(restrictions,)h(which)g(a)g(sur)o(-)2042 2466 y(v)o(e)o(y)j(of)f(9.2)g
(million)g(lines)h(of)f(open-source)i(Ja)o(v)n(a)f(code)g(demonstrates)
g(are)2042 2549 y(already)31 b(compatible)f(with)g(e)o(xisting)h(code.)
f(Furthermore,)g(our)h(restric-)2042 2632 y(tions)17
b(are)g(all)f(local,)h(allo)n(wing)g(for)g(informati)n(v)o(e)g(user)o
(-friendly)g(error)g(mes-)2042 2715 y(sages)i(should)h(the)o(y)f(e)n(v)
o(er)h(be)f(violated.)2141 2798 y(Because)h(our)f(formalization)h(and)f
(proofs)h(are)f(in)g(terms)g(of)g(a)g(general-)2042 2881
y(purpose)g(v)n(ariant)f(of)f(e)o(xistential)h(types,)g(we)f(ha)o(v)o
(e)h(identi\002ed)g(a)f(number)i(of)2042 2964 y(e)o(xtensions)24
b(to)f(Ja)o(v)n(a)g(that)g(should)h(be)g(compatible)g(with)f(our)g
(algorithms.)2042 3047 y(Amongst)29 b(these)g(are)g(declaration-site)g
(v)n(ariance)h(and)f(user)o(-e)o(xpressible)2042 3130
y(e)o(xistential)f(types,)g(which)h(suggests)g(that)f(our)g(algorithms)
h(and)g(restric-)2042 3213 y(tions)23 b(may)h(be)f(suited)h(for)f
(Scala)g(as)g(well,)g(for)g(which)g(subtyping)i(is)e(also)2042
3296 y(suspected)e(to)g(be)f(undecidable)j([9,)d(21].)g(Furthermore,)h
(it)e(may)i(be)g(possi-)2042 3379 y(ble)h(to)f(support)i(some)f(form)g
(of)g(uni)n(v)o(ersal)h(types,)f(which)g(w)o(ould)g(remo)o(v)o(e)2042
3462 y(a)e(signi\002cant)h(practical)f(application)i(of)e(ra)o(w)g
(types)h(so)g(that)f(the)o(y)h(may)g(be)2042 3545 y(unnecessary)27
b(should)g(Ja)o(v)n(a)f(e)n(v)o(er)g(discard)g(backw)o(ards)h
(compatibility)f(as)2042 3628 y(forebode)20 b(in)f(the)g(language)h
(speci\002cation)g([6:)e(Chapter)i(4.8].)2141 3711 y(While)31
b(we)h(ha)o(v)o(e)f(addressed)i(subtyping,)g(joins,)e(and)h(a)g(number)
g(of)2042 3794 y(other)23 b(subtleties)g(with)g(wildcards,)g(there)g
(is)g(still)f(plenty)i(of)f(opportunity)2042 3877 y(for)28
b(research)i(to)f(be)g(done)h(on)f(wildcards.)g(In)f(particular)m(,)h
(although)h(we)2042 3960 y(ha)o(v)o(e)24 b(pro)o(vided)h(techniques)g
(for)f(impro)o(ving)h(type-ar)o(gument)g(inference,)2042
4043 y(we)19 b(belie)n(v)o(e)i(it)e(is)g(important)i(to)e(identify)h(a)
g(type-ar)o(gument)h(inference)f(al-)2042 4126 y(gorithm)15
b(which)g(is)g(both)g(complete)h(in)f(practice)g Fx(and)j
FF(pro)o(vides)e(guarantees)2042 4209 y(re)o(garding)22
b(ambiguity)g(of)g(program)g(semantics.)g(Furthermore,)f(an)h(infer)o
(-)2042 4292 y(ence)e(system)h(w)o(ould)f(ideally)g(inform)h(users)f
(at)f(declaration-site)i(ho)n(w)f(in-)2042 4375 y(ferable)h(their)g
(method)i(signature)f(is,)e(rather)i(than)g(ha)o(ving)g(users)f(\002nd)
h(out)2042 4458 y(at)i(each)g(use-site.)g(W)-6 b(e)23
b(hope)j(our)e(e)o(xplanation)h(of)f(the)g(challenges)i(helps)2042
4541 y(guide)17 b(future)g(research)g(on)g(wildcards)g(to)n(w)o(ards)g
(solving)g(such)g(problems.)2042 4732 y FD(Ackno)o(wledgements)2042
4848 y FF(W)-6 b(e)21 b(w)o(ould)h(lik)o(e)f(to)h(thank)g(Nicholas)g
(Cameron,)g(Sophia)f(Drossopoulou,)2042 4932 y(Erik)j(Ernst,)g(Suresh)i
(Jagannathan,)g(Andre)n(w)g(K)n(ennedy)-5 b(,)26 b(Jens)g(P)o(alsber)o
(g,)2042 5015 y(P)o(at)14 b(Rondon,)j(and)f(the)g(anon)o(ymous)i(re)n
(vie)n(wers)e(for)f(their)h(man)o(y)g(insightful)2042
5098 y(suggestions)k(and)g(intriguing)f(discussions.)p
eop end
%%Page: 15 15
TeXDict begin 15 14 bop 349 59 a Fr(t)339 91 y Ft(\034)28
b Fs(::=)19 b Ft(v)24 b Fu(j)e Ft(C)686 91 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 686 91 a
Fw(<)686 91 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 686 91 a 725 59 a Fr(t)715 91 y Ft(\034)758
91 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 758 91 a Fw(,)39 b(...,)758 91 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 758 91 a 973 59
a Fr(t)963 91 y Ft(\034)1006 91 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1006 91 a Fw(>)1006
91 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1006 91 a 51 w Fu(j)21 b(9)p Fs(\000)9 b(:)g(\001)p
Ft(:)1342 59 y Fr(t)1332 91 y Ft(\034)334 174 y Fs(\000)19
b(::=)g Fq(?)i Fu(j)h Ft(v)s(;)13 b Fs(\000)318 257 y(\001)19
b(::=)g Fq(?)i Fu(j)h Fs(\001)p Ft(;)752 225 y Fr(t)742
257 y Ft(\034)30 b(<)p Fs(::)939 225 y Fr(t)929 257 y
Ft(\034)p -150 343 1993 3 v -150 428 a Fv(Figur)o(e)22
b(22.)38 b FF(Grammar)23 b(for)g(traditional)g(e)o(xistential)g(types)g
(\(coinducti)n(v)o(e)-150 511 y(e)o(xcept)d(for)e Fu(9)p
Fs(\000)9 b(:)g(\001)p Ft(:)411 479 y Fr(t)401 511 y
Ft(\034)g FF(\))-41 912 y Ft(v)22 b FF(in)d Fr(G)p -97
931 294 4 v -38 999 a(G)j Fu(`)f Ft(v)348 898 y FF(for)d(all)h
Ft(i)g FF(in)g(1)g(to)f Ft(n;)51 b Fr(G)22 b Fu(`)1065
866 y Fr(t)1055 898 y Ft(\034)1089 906 y Fn(i)p 292 931
880 4 v 429 1003 a Fr(G)f Fu(`)h Ft(C)625 1003 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 625
1003 a Fw(<)625 1003 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 625 1003 a 664 971 a Fr(t)654
1003 y Ft(\034)688 1011 y Fo(1)723 1003 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 723 1003 a
Fw(,)39 b(...,)723 1003 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 723 1003 a 938 971 a Fr(t)929
1003 y Ft(\034)963 1011 y Fn(n)1005 1003 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1005 1003
a Fw(>)1005 1003 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1005 1003 a 1387 811 a Fr(G)p Ft(;)13
b Fs(\000)22 b Fu(`)f Fs(\001)1398 898 y Fr(G)p Ft(;)13
b Fs(\000)21 b Fu(`)1625 866 y Fr(t)1616 898 y Ft(\034)p
1266 931 524 4 v 1322 1003 a Fr(G)h Fu(`)f(9)p Fs(\000)9
b(:)g(\001)p Ft(:)1701 971 y Fr(t)1691 1003 y Ft(\034)p
151 1168 307 4 v 207 1236 a Fr(G)22 b Fu(`)f Fq(?)682
1149 y Fr(G)h Fu(`)828 1117 y Fr(t)818 1149 y Ft(\034)121
b Fr(G)22 b Fu(`)1119 1117 y Fr(t)1109 1149 y Ft(\034)1152
1117 y Fz(0)1286 1149 y Fr(G)f Fu(`)h Fs(\001)p 626 1168
916 4 v 841 1243 a Fr(G)g Fu(`)f Fs(\001)p Ft(;)1085
1211 y Fr(t)1075 1243 y Ft(\034)30 b(<)p Fs(::)1272 1211
y Fr(t)1262 1243 y Ft(\034)1305 1211 y Fz(0)p -150 1318
1993 3 v -54 1403 a Fv(Figur)o(e)18 b(23.)37 b FF(W)-6
b(ell-formedness)20 b(for)f(traditional)f(e)o(xistential)h(types)-96
1809 y(\(1\))160 1667 y Ft(C)220 1667 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 220 1667 a Fw(<)220
1667 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 220 1667 a 29 w Ft(P)298 1675 y Fo(1)333 1667
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 333 1667 a Fw(,)39 b(...,)333 1667 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 333 1667 a 206
w Ft(P)588 1675 y Fn(m)647 1667 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 647 1667 a Fw(>)647
1667 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 647 1667 a 48 w FF(is)18 b(a)h(subclass)h(of)f
Ft(D)1229 1667 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1229 1667 a Fw(<)1229 1667 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1229 1667
a 1263 1643 a Fs(\026)1268 1635 y Fr(t)1259 1667 y Ft(\034)1293
1675 y Fo(1)1327 1667 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1327 1667 a Fw(,)39 b(...,)1327
1667 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1327 1667 a 1537 1643 a Fs(\026)1543 1635 y Fr(t)1533
1667 y Ft(\034)1567 1675 y Fn(n)1609 1667 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1609 1667
a Fw(>)1609 1667 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1609 1667 a 28 1755 a FF(for)18 b(all)h
Ft(i)g FF(in)f(1)i(to)e Ft(n;)c Fr(G)21 b Fs(:)h Fr(D)f
Fu(`)829 1731 y Fs(\026)834 1722 y Fr(t)824 1755 y Ft(\034)858
1763 y Fn(i)885 1755 y Fs([)p Ft(P)955 1763 y Fo(1)990
1755 y Fu(7!)1076 1722 y Fr(t)1066 1755 y Ft(\034)1100
1763 y Fo(1)1135 1755 y Ft(;)13 b(:)g(:)g(:)g(;)g(P)1354
1763 y Fn(m)1413 1755 y Fu(7!)1500 1722 y Fr(t)1490 1755
y Ft(\034)1524 1763 y Fn(m)1582 1755 y Fs(])1625 1735
y Fu(\030)1625 1759 y Fs(=)1716 1722 y Fr(t)1706 1755
y Ft(\034)1749 1723 y Fz(0)1740 1768 y Fn(i)p 19 1792
1760 4 v 226 1867 a Fr(G)21 b Fs(:)h Fr(D)f Fu(`)g Ft(C)548
1867 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 548 1867 a Fw(<)548 1867 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 548 1867 a 588 1835
a Fr(t)578 1867 y Ft(\034)612 1875 y Fo(1)646 1867 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

646 1867 a Fw(,)40 b(...,)646 1867 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 646 1867 a 862 1835
a Fr(t)852 1867 y Ft(\034)886 1875 y Fn(m)945 1867 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

945 1867 a Fw(>)945 1867 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 945 1867 a 50 w Ft(<)p Fs(:)22
b Ft(D)1163 1867 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1163 1867 a Fw(<)1163 1867 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1163
1867 a 1203 1835 a Fr(t)1193 1867 y Ft(\034)1236 1836
y Fz(0)1227 1880 y Fo(1)1261 1867 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1261 1867 a Fw(,)40
b(...,)1261 1867 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1261 1867 a 1477 1835 a Fr(t)1467
1867 y Ft(\034)1510 1836 y Fz(0)1501 1880 y Fn(n)1543
1867 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1543 1867 a Fw(>)1543 1867 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1543 1867 a -96 2077
a FF(\(2\))562 2026 y Fr(G)p Ft(;)14 b Fs(\000)21 b(:)h
Fr(D)p Ft(;)13 b Fs(\001)21 b Fu(`)1015 1994 y Fr(t)1005
2026 y Ft(\034)30 b(<)p Fs(:)1181 1994 y Fr(t)1171 2026
y Ft(\034)1214 1995 y Fz(0)p 480 2060 839 4 v 536 2135
a Fr(G)22 b Fs(:)f Fr(D)g Fu(`)h(9)p Fs(\000)9 b(:)g(\001)p
Ft(:)1041 2103 y Fr(t)1032 2135 y Ft(\034)29 b(<)p Fs(:)1208
2103 y Fr(t)1198 2135 y Ft(\034)1241 2103 y Fz(0)-96
2535 y FF(\(3\))535 2291 y(for)19 b(all)f Ft(v)k FF(in)d
Fs(\000)p Ft(;)50 b Fr(G)22 b Fu(`)f Ft(\022)r Fs(\()p
Ft(v)s Fs(\))253 2394 y FF(for)e(all)456 2370 y Fs(\026)462
2361 y Fr(t)452 2394 y Ft(\034)30 b(<)p Fs(::)644 2370
y(^)649 2361 y Fr(t)639 2394 y Ft(\034)e FF(in)18 b Fs(\001)p
Ft(;)51 b Fr(G)21 b Fs(:)h Fr(D)f Fu(`)1180 2370 y Fs(\026)1185
2361 y Fr(t)1176 2394 y Ft(\034)9 b Fs([)p Ft(\022)r
Fs(])21 b Ft(<)p Fs(:)1426 2370 y(^)1432 2361 y Fr(t)1422
2394 y Ft(\034)9 b Fs([)p Ft(\022)r Fs(])612 2481 y Fr(G)22
b Fs(:)f Fr(D)g Fu(`)885 2448 y Fr(t)875 2481 y Ft(\034)29
b(<)p Fs(:)1051 2448 y Fr(t)1041 2481 y Ft(\034)1084
2449 y Fz(0)1106 2481 y Fs([)p Ft(\022)r Fs(])p 197 2518
1405 4 v 536 2593 a Fr(G)22 b Fs(:)f Fr(D)g Fu(`)808
2561 y Fr(t)799 2593 y Ft(\034)29 b(<)p Fs(:)22 b Fu(9)p
Fs(\000)9 b(:)g(\001)p Ft(:)1208 2561 y Fr(t)1198 2593
y Ft(\034)1241 2562 y Fz(0)-96 2792 y FF(\(4\))704 2720
y Fr(t)694 2753 y Ft(\034)30 b(<)p Fs(::)891 2720 y Fr(t)881
2753 y Ft(\034)924 2721 y Fz(0)965 2753 y FF(in)19 b
Fr(D)p 596 2775 606 4 v 652 2850 a(G)j Fs(:)g Fr(D)f
Fu(`)925 2818 y Fr(t)915 2850 y Ft(\034)30 b(<)p Fs(:)1091
2818 y Fr(t)1081 2850 y Ft(\034)1124 2819 y Fz(0)-96
3008 y FF(\(5\))p 608 2991 584 4 v 664 3063 a Fr(G)21
b Fs(:)h Fr(D)f Fu(`)936 3031 y Fr(t)926 3063 y Ft(\034)30
b(<)p Fs(:)1102 3031 y Fr(t)1092 3063 y Ft(\034)-96 3265
y FF(\(6\))329 3225 y Fr(G)22 b Fs(:)g Fr(D)f Fu(`)602
3193 y Fr(t)592 3225 y Ft(\034)30 b(<)p Fs(:)768 3193
y Fr(t)758 3225 y Ft(\034)801 3194 y Fz(0)935 3225 y
Fr(G)22 b Fs(:)f Fr(D)g Fu(`)1207 3193 y Fr(t)1198 3225
y Ft(\034)1241 3194 y Fz(0)1284 3225 y Ft(<)p Fs(:)1396
3193 y Fr(t)1386 3225 y Ft(\034)1429 3194 y Fz(00)p 273
3248 1252 4 v 643 3323 a Fr(G)h Fs(:)g Fr(D)f Fu(`)916
3291 y Fr(t)906 3323 y Ft(\034)30 b(<)p Fs(:)1082 3291
y Fr(t)1072 3323 y Ft(\034)1115 3292 y Fz(00)p -150 3421
1993 3 v -150 3506 a Fv(Figur)o(e)21 b(24.)38 b FF(T)m(raditional)22
b(subtyping)i(rules)e(for)g(e)o(xistential)g(types)g(\(coin-)-150
3589 y(ducti)n(v)o(e)e(e)o(xcept)f(for)g(transiti)n(vity\))-150
3853 y FD(A.)91 b(T)-7 b(ype)22 b(Systems)-150 3969 y
FF(Here)i(we)g(formalize)g(traditional)f(e)o(xistential)h(types)h(and)f
(our)g(e)o(xistential)-150 4052 y(types)32 b(along)h(with)e(the)h
(subtyping)h(rules)f(for)g(both)g(systems.)g(W)-6 b(e)31
b(will)-150 4135 y(also)k(formalize)h(a)f(simpli\002ed)g(formalism)g
(of)h(wildcards;)f(we)g(do)h(not)-150 4218 y(claim)29
b(this)f(is)h Fx(the)g FF(formalism)g(of)g(wildcards)g(since)g
(wildcards)g(are)g(not)-150 4301 y(ours)j(to)g(formalize,)f(b)o(ut)h
(this)f(formalism)h(captures)h(the)f(k)o(e)o(y)g(concepts)-150
4384 y(and)22 b(challenges)g(of)g(wildcards.)f(Note)g(that,)g
(throughout)i(our)f(formalism,)-150 4467 y(de\002nitions)33
b(are)g(coinducti)n(v)o(e)h(by)f(def)o(ault,)g(and)g(problems)g(with)g
(name)-150 4551 y(hiding)20 b(is)e(assumed)i(to)f(be)g(handled)h
(behind)h(the)e(scenes)g(for)g(simplicity)-5 b(.)-150
4716 y Fv(A.1)75 b(T)-6 b(raditional)18 b(Existential)g(T)-6
b(ypes)-150 4832 y FF(In)18 b(Figure)f(22,)h(we)f(sho)n(w)i(the)e
(grammar)i(for)e(\(a)h(form)f(of\))h(traditional)f(e)o(xis-)-150
4915 y(tential)f(types.)g(Note)g(that)g(the)g(constructor)g
Fu(9)p Fs(\000)9 b(:)g(\001)p Ft(:)1232 4883 y Fr(t)1223
4915 y Ft(\034)24 b FF(is)15 b(inducti)n(v)o(e,)i(mean-)-150
4998 y(ing)h(there)h(cannot)g(be)f(an)h(in\002nite)e(number)i(of)f
(sequential)h(applications)g(of)-150 5081 y(that)k(constructor;)h(it)f
(may)h(only)g(be)g(used)g(a)f(\002nite)g(number)i(of)e(times)g(be-)-150
5164 y(tween)28 b(applications)h(of)g(coinducti)n(v)o(e)g
(constructors.)g(In)f(Figure)g(23,)g(we)-150 5247 y(sho)n(w)d(the)f
(rules)g(for)g(determining)h(when)g(a)f(traditional)g(e)o(xistential)g
(type)-150 5330 y(is)g(well-formed,)g(essentially)g(just)g(ensuring)i
(that)e(type)g(v)n(ariables)h(are)f(in)-150 5413 y(scope.)2325
274 y Ft(v)e FF(in)d Fr(G)p 2269 293 294 4 v 2328 361
a(G)j Fu(`)f Ft(v)3114 86 y Fr(G)g Fu(`)h Fs(\000)f(:)h(\001)3114
173 y Fr(G)f Fu(`)h Fs(\000)f(:)h(\001)-43 b Fu(\001)2845
260 y FF(for)19 b(all)f Ft(i)h FF(in)g(1)g(to)g Ft(n;)50
b Fr(G)p Ft(;)14 b Fs(\000)21 b Fu(`)3650 228 y Fr(E)3634
260 y Ft(\034)3668 268 y Fn(i)p 2732 293 1075 4 v 2789
365 a Fr(G)g Fu(`)g(9)p Fs(\000)9 b(:)g(\001\(\001)-43
b Fu(\001)21 b Fs(\))p Ft(:)e(C)3341 365 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3341 365 a
Fw(<)3341 365 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3341 365 a 3386 333 a Fr(E)3371 365 y
Ft(\034)3405 373 y Fo(1)3439 365 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3439 365 a Fw(,)40
b(...,)3439 365 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3439 365 a 3661 333 a Fr(E)3645 365
y Ft(\034)3679 373 y Fn(n)3721 365 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3721 365 a Fw(>)3721
365 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3721 365 a 2062 686 419 4 v 2118 754 a Fr(G)21
b Fu(`)h Fs(\000)f(:)h Fq(?)2813 493 y Ft(v)f FF(in)e
Fs(\000)2774 580 y Fr(G)p Ft(;)14 b Fs(\000)21 b Fu(`)3008
548 y Fr(E)2992 580 y Ft(\034)2748 667 y Fr(G)h Fu(`)f
Fs(\000)h(:)f(\001)p 2562 686 686 4 v 2618 758 a Fr(G)g
Fu(`)h Fs(\000)f(:)h(\001)p Ft(;)13 b(v)24 b(<)p Fs(::)3164
726 y Fr(E)3149 758 y Ft(\034)3580 493 y(v)e FF(in)c
Fs(\000)3541 580 y Fr(G)p Ft(;)c Fs(\000)21 b Fu(`)3775
548 y Fr(E)3760 580 y Ft(\034)3516 667 y Fr(G)g Fu(`)h
Fs(\000)f(:)h(\001)p 3329 686 V 3385 758 a Fr(G)g Fu(`)f
Fs(\000)g(:)h(\001)p Ft(;)13 b(v)24 b Fs(::)q Ft(>)3932
726 y Fr(E)3916 758 y Ft(\034)p 2042 833 1993 3 v 2241
918 a Fv(Figur)o(e)18 b(25.)38 b FF(W)-6 b(ell-formedness)19
b(for)g(our)g(e)o(xistential)g(types)2042 1151 y FC(Subtyping)74
b FF(W)-6 b(e)23 b(present)h(the)f(traditional)g(rules)h(for)f
(subtyping)i(in)e(Fig-)2042 1234 y(ure)16 b(24.)g(Rule)g(1)h
(incorporates)g(the)f(class)g(hierarchy)h(into)f(the)g(type)h(system,)
2042 1317 y(using)j(some)g(e)o(xternally)h(speci\002ed)f(notion)g(of)g
(equi)n(v)n(alence)h(such)g(as)f(syn-)2042 1400 y(tactic)c(equality)g
(or)h(being)g(subtypes)g(of)g(each)g(other;)f(this)g(notion)h(of)f
(equi)n(v-)2042 1483 y(alence)29 b(must)f(be)h(re\003e)o(xi)n(v)o(e,)f
(transiti)n(v)o(e,)g(and)h(preserv)o(ed)g(by)g(constraint-)2042
1566 y(satisfying)23 b(substitutions.)h(Rule)f(2)g(opens)i(an)e(e)o
(xistential)g(type,)h(whereas)2042 1649 y(Rule)18 b(3)g(packs)h(an)f(e)
o(xistential)g(type.)g(Opening)h(grants)g(access)f(to)g(the)g(e)o(xis-)
2042 1732 y(tentially)g(quanti\002ed)h(types)g(and)g(proofs)g(in)g(the)
f(subtype)i(by)f(adding)h(them)2042 1815 y(as)30 b(v)n(ariables)g(in)g
(the)f(en)m(vironment.)i(P)o(acking)f(speci\002es)g(the)g(types)g(and)
2042 1898 y(proofs)15 b(to)g(be)g(e)o(xistentially)f(quanti\002ed)i(in)
e(the)h(supertype)h(be)f(instantiating)2042 1981 y(the)24
b(bound)i(v)n(ariables)f(to)f(v)n(alid)g(types)h(in)f(the)g(current)h
(en)m(vironment)g(and)2042 2064 y(constructing)30 b(the)g(required)g
(proofs)g(within)g(the)f(current)h(en)m(vironment.)2042
2147 y(Rule)e(4)g(grants)g(access)g(to)g(the)g(proofs)g(pro)o(vided)i
(by)e(the)g(en)m(vironment.)2042 2230 y(Rule)19 b(5)g(ensures)g
(re\003e)o(xi)n(vity)-5 b(,)19 b(and)h(Rule)e(6)i(ensures)f(transiti)n
(vity)-5 b(.)2141 2313 y(Note)37 b(that)f(transiti)n(vity)f(is)h(not)g
(coinducti)n(v)o(e.)i(If)d(transiti)n(vity)h(were)2042
2396 y(coinducti)n(v)o(e,)24 b(we)f(could)g(pro)o(v)o(e)2928
2364 y Fr(t)2918 2396 y Ft(\034)37 b(<)p Fs(:)3109 2364
y Fr(t)3099 2396 y Ft(\034)3142 2364 y Fz(0)3186 2396
y FF(for)23 b(an)o(y)3435 2364 y Fr(t)3426 2396 y Ft(\034)31
b FF(and)3631 2364 y Fr(t)3621 2396 y Ft(\034)3664 2364
y Fz(0)3686 2396 y FF(:)22 b(\002rst)g(apply)2042 2479
y(transiti)n(vity)c(with)2543 2447 y Fr(t)2533 2479 y
Ft(\034)26 b FF(as)19 b(the)f(middle)h(type,)f(apply)h(re\003e)o(xi)n
(vity)g(to)f(pro)o(v)o(e)h(the)2042 2562 y(left)28 b(side,)h(then)g
(the)g(right)g(goal)g(is)3031 2530 y Fr(t)3021 2562 y
Ft(\034)49 b(<)p Fs(:)3235 2530 y Fr(t)3225 2562 y Ft(\034)3268
2530 y Fz(0)3318 2562 y FF(again)29 b(so)h(we)e(can)i(repeat)2042
2645 y(this)f(process)g(using)h(transiti)n(vity)f(ad)g(in\002nitum.)g
(So,)f(although)i(a)f(proof)2042 2728 y(we)22 b(ha)o(v)o(e)i(an)f
(in\002nite)f(number)i(of)f(uses)g(of)g(transiti)n(vity)-5
b(,)22 b(there)h(cannot)h(be)2042 2811 y(in\002nite)18
b(consecuti)n(v)o(e)j(uses)e(of)g(transiti)n(vity)-5
b(.)2042 2961 y Fv(A.2)74 b(Our)19 b(Existential)f(T)-6
b(ypes)2042 3077 y FF(W)g(e)21 b(already)i(presented)h(the)e(grammar)g
(of)h(our)f(e)o(xistential)g(types)h(in)f(Fig-)2042 3160
y(ure)f(6.)g(In)g(Figure)f(25)i(we)f(formalize)g(basic)g
(well-formedness)h(of)f(our)g(e)o(x-)2042 3243 y(istential)f(types;)h
(throughout)i(this)e(paper)h(we)e(will)g(implicitly)h(assume)h(all)2042
3326 y(types)j(are)f(well-formed.)g(This)g(well-formedness)h(simply)f
(ensures)i(type)2042 3409 y(v)n(ariables)k(are)g(used)g(appropriately)
-5 b(.)31 b(The)e(major)h(w)o(ays)g(our)g(e)o(xistential)2042
3492 y(types)22 b(dif)n(fer)g(from)f(traditional)h(e)o(xistential)f
(types)i(are)e(the)h(pre)n(v)o(ention)h(of)2042 3575
y(types)29 b(lik)o(e)h Fu(9)p Ft(v)s(:v)s FF(,)e(the)h(e)o(xtra)h(set)f
(of)g(constraints)g Fs(\001)-42 b Fu(\001)21 b FF(,)29
b(and)h(the)f(f)o(act)g(that)2042 3658 y(constraints)19
b(can)h(only)f(be)g(lo)n(wer)g(or)g(upper)h(bounds)h(of)e(v)n(ariables)
g(in)g Fs(\000)p FF(.)2141 3742 y(W)-6 b(e)15 b(also)h(already)g
(presented)g(our)g(subtyping)h(rules)e(in)h(Figure)f(7.)g(Ho)n(w-)2042
3825 y(e)n(v)o(er)m(,)k(although)i(we)e(will)g(sho)n(w)h(that)f(for)h
(wildcards)f(all)g(proofs)i(are)e(\002nite,)2042 3908
y(in)d(order)g(to)g(separate)g(termination/\002niteness)h(from)f
(soundness)h(we)f(mak)o(e)2044 3991 y(S)t Fp(U)t(B)t
FF(-)t(V)-5 b Fp(A)t(R)28 b FF(inducti)n(v)o(e)i(in)f(the)g(more)h
(general)g(case.)f(Otherwise,)g(an)g(as-)2042 4074 y(sumption)20
b(of)g(the)g(form)f Ft(v)26 b(<)p Fs(::)d Ft(v)f FF(w)o(ould)f(allo)n
(w)e(one)i(to)e(pro)o(v)o(e)h Ft(v)j FF(is)c(a)h(sub-)2042
4157 y(type)25 b(of)f(an)o(ything)i(by)f(simply)g(applying)j(S)t
Fp(U)t(B)t FF(-)t(V)-5 b Fp(A)t(R)24 b FF(fore)n(v)o(er)l(.)g(This)h
(cor)o(-)2042 4240 y(responds)h(to)f(the)g(restriction)g(on)h(transiti)
n(vity)f(in)g(traditional)g(subtyping,)2042 4323 y(since)d(S)t
Fp(U)t(B)t FF(-)t(V)-5 b Fp(A)t(R)20 b FF(essentially)g(combines)h
(transiti)n(vity)f(with)g(assumption.)2042 4406 y(Also,)k(as)g(with)g
(traditional)h(e)o(xistential)f(types,)g(the)h(e)o(xternally)g
(speci\002ed)2042 4489 y(notion)h(of)g(equi)n(v)n(alence)h(must)f(be)g
(re\003e)o(xi)n(v)o(e,)f(transiti)n(v)o(e,)h(and)g(preserv)o(ed)2042
4572 y(by)19 b(substitution.)2141 4655 y(In)35 b(Figure)g(26)g(we)g
(present)g(the)g(de\002nition)g(of)f(our)h(adaptation)h(of)2042
4738 y(uni\002cation.)16 b(This)g(adaptation)h(pre)n(v)o(ents)g(v)n
(ariables)g(from)f(escaping)i(and)e(is)2042 4821 y(designed)24
b(to)f(enable)h(equi)n(v)n(alence)g(rather)f(than)h(syntactic)f
(equality)-5 b(.)23 b(The)2042 4932 y(judgement)31 b
Fr(G)2506 4884 y Fm(\036)2516 4889 y Fd(G)2476 4932 y
Fu( )-36 b(\000)42 b Fr(G)2665 4900 y Fz(0)2730 4932
y Fu(`)2835 4899 y Fr(E)2819 4932 y Ft(\034)51 b Fu(\031)2964
4941 y Fn(\022)3057 4899 y Fr(E)3042 4932 y Ft(\034)3085
4900 y Fz(0)3136 4932 y FF(has)31 b(a)f(lot)g(of)g(parts.)f
Fr(G)3769 4900 y Fz(0)3822 4932 y FF(are)h(the)2042 5015
y(type)20 b(v)n(ariables)h(to)f(unify;)g(the)o(y)g(only)h(occur)g(in)
3333 4982 y Fr(E)3318 5015 y Ft(\034)3361 4983 y Fz(0)3382
5015 y FF(.)3421 5007 y Fq(\036)3431 5015 y Fr(G)30 b
FF(are)20 b(type)g(v)n(ariables)2042 5098 y(which)31
b(should)h(be)f(ignored;)g(the)o(y)g(only)g(occur)h(in)3487
5065 y Fr(E)3471 5098 y Ft(\034)3514 5066 y Fz(0)3536
5098 y FF(.)e Fr(G)h FF(are)g(the)g(type)2042 5181 y(v)n(ariables)c
(that)f(from)g(the)g(general)h(conte)o(xt;)g(the)o(y)f(may)h(occur)g
(in)3874 5148 y Fr(E)3858 5181 y Ft(\034)34 b FF(and)2057
5231 y Fr(E)2042 5264 y Ft(\034)2085 5232 y Fz(0)2107
5264 y FF(.)22 b(The)h(sets)f Fr(G)p FF(,)h Fr(G)2555
5232 y Fz(0)2578 5264 y FF(,)f(and)2749 5256 y Fq(\036)2759
5264 y Fr(G)33 b FF(are)23 b(disjoint.)g(The)f(judgement)i(holds)g(if)e
(for)2042 5347 y(each)k(v)n(ariable)g Ft(v)i FF(in)d
Fr(G)2662 5315 y Fz(0)2710 5347 y FF(and)h(free)g(in)3084
5314 y Fr(E)3068 5347 y Ft(\034)3111 5315 y Fz(0)3158
5347 y FF(that)f(v)n(ariable)h(is)g(mapped)g(by)g Ft(\022)2042
5430 y FF(to)d(some)g(sube)o(xpression)i(of)2849 5397
y Fr(E)2833 5430 y Ft(\034)32 b FF(corresponding)25 b(to)e(at)g(least)f
(one)i(\(b)o(ut)f(not)p eop end
%%Page: 16 16
TeXDict begin 16 15 bop 541 93 a Ft(v)581 61 y Fz(0)622
93 y FF(in)19 b Fr(G)745 61 y Fz(0)879 93 y FF(for)g(all)g
Ft(v)i FF(free)e(in)1364 60 y Fr(E)1349 93 y Ft(\034)t(;)32
b(v)21 b FF(in)e Fr(G)p 485 126 1193 4 v 685 232 a(G)783
184 y Fm(\036)793 189 y Fd(G)753 232 y Fu( )-36 b(\000)20
b Fr(G)920 201 y Fz(0)964 232 y Fu(`)1048 200 y Fr(E)1033
232 y Ft(\034)29 b Fu(\031)1156 244 y Fz(f)p Fn(v)1221
230 y Fj(0)1243 244 y Fz(7!)1318 222 y Fd(E)1304 244
y Fn(\034)6 b Fz(g)1415 232 y Ft(v)1455 201 y Fz(0)2092
100 y Ft(v)22 b FF(in)2228 92 y Fq(\036)2238 100 y Fr(G)p
1847 126 693 4 v 1903 232 a(G)2001 184 y Fm(\036)2011
189 y Fd(G)1971 232 y Fu( )-36 b(\000)20 b Fr(G)2138
201 y Fz(0)2182 232 y Fu(`)2266 200 y Fr(E)2250 232 y
Ft(\034)30 b Fu(\031)2374 240 y Fm(?)2444 232 y Ft(v)2963
107 y(v)22 b FF(in)d Fr(G)p 2709 126 691 4 v 2765 232
a(G)2863 184 y Fm(\036)2873 189 y Fd(G)2833 232 y Fu( )-36
b(\000)20 b Fr(G)3000 201 y Fz(0)3044 232 y Fu(`)i Ft(v)i
Fu(\031)3234 240 y Fm(?)3304 232 y Ft(v)1300 413 y FF(for)18
b(all)h Ft(i)g FF(in)g(1)g(to)f Ft(n;)51 b Fr(G)1969
362 y Fm(\036)1979 367 y Fd(G)10 b Fn(;)p Fo(\000)2077
346 y Fj(0)1939 413 y Fu( )-30 b(\000)-18 b(\000)-30
b(\000)21 b Fr(G)2185 381 y Fz(0)2229 413 y Fu(`)2313
380 y Fr(E)2298 413 y Ft(\034)2332 421 y Fn(i)2379 413
y Fu(\031)2439 422 y Fn(\022)2468 433 y Fl(i)2535 380
y Fr(E)2520 413 y Ft(\034)2563 381 y Fz(0)2554 426 y
Fn(i)1694 500 y Ft(\022)i Fu(\022)1834 444 y Fh(S)1898
522 y Fn(i)13 b Fk(in)f(1)h(to)f Fn(n)2128 500 y Ft(\022)2164
508 y Fn(i)751 591 y FF(for)19 b(all)f Ft(v)990 559 y
Fz(0)1031 591 y FF(in)h Fs(\000)1156 559 y Fz(0)1178
591 y Ft(;)32 b Fs(\()p FF(e)o(xists)19 b Ft(i)g FF(in)f(1)h(to)g
Ft(n)g FF(with)g Ft(\022)1956 599 y Fn(i)2001 591 y FF(de\002ned)g(on)h
Ft(v)2373 559 y Fz(0)2395 591 y Fs(\))f FF(implies)f
Ft(\022)j FF(de\002ned)f(on)f Ft(v)3111 559 y Fz(0)p
695 628 2495 4 v 840 735 a Fr(G)937 687 y Fm(\036)947
692 y Fd(G)907 735 y Fu( )-36 b(\000)21 b Fr(G)1075 703
y Fz(0)1119 735 y Fu(`)g(9)p Fs(\000)9 b(:)g(\001\(\001)-44
b Fu(\001)22 b Fs(\))p Ft(:)d(C)1604 735 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1604 735 a
Fw(<)1604 735 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1604 735 a 1649 702 a Fr(E)1633 735 y
Ft(\034)1667 743 y Fo(1)1702 735 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1702 735 a Fw(,)39
b(...,)1702 735 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1702 735 a 1923 702 a Fr(E)1908 735
y Ft(\034)1942 743 y Fn(n)1984 735 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1984 735 a Fw(>)1984
735 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1984 735 a 51 w Fu(\031)2095 744 y Fn(\022)2151
735 y Fu(9)p Fs(\000)2242 703 y Fz(0)2273 735 y Fs(:)9
b(\001)2367 703 y Fz(0)2389 735 y Fs(\(\001)-43 b Fu(\001)2483
703 y Fz(0)2505 735 y Fs(\))p Ft(:)19 b(C)2635 735 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

2635 735 a Fw(<)2635 735 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2635 735 a 2680 702 a Fr(E)2665
735 y Ft(\034)2708 703 y Fz(0)2699 748 y Fo(1)2733 735
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2733 735 a Fw(,)39 b(...,)2733 735 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2733 735 a 2954
702 a Fr(E)2939 735 y Ft(\034)2982 703 y Fz(0)2973 748
y Fn(n)3015 735 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3015 735 a Fw(>)3015 735 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3015 735
a -150 814 4185 3 v 918 899 a Fv(Figur)o(e)18 b(26.)38
b FF(Uni\002cation)19 b(adapted)h(to)f(e)o(xistential)f(types)i(with)e
(equi)n(v)n(alence)-147 1189 y Fx(tr)o(anslate)q Fs(\()163
1157 y Fr(E)148 1189 y Ft(\034)9 b Fs(\))-128 1272 y(=)18
b Fv(case)117 1240 y Fr(E)102 1272 y Ft(\034)27 b Fv(of)-31
1355 y Ft(v)d Fu(7!)e Ft(v)-31 1438 y Fu(9)p Fs(\000)9
b(:)g(\001\(\001)-44 b Fu(\001)22 b Fs(\))p Ft(:)d(C)386
1438 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 386 1438 a Fw(<)386 1438 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 386 1438 a 431 1406
a Fr(E)415 1438 y Ft(\034)449 1446 y Fo(1)484 1438 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

484 1438 a Fw(,)39 b(...,)484 1438 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 484 1438 a 705 1406
a Fr(E)690 1438 y Ft(\034)724 1446 y Fn(n)766 1438 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

766 1438 a Fw(>)766 1438 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 766 1438 a 25 1521 a Fu(7!)21
b(9)p Fs(\000)9 b(:)g Fx(tr)o(anslate-cxt)p Fs(\(\001\))p
Ft(:)d(C)840 1521 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 840 1521 a Fw(<)840 1521 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 840 1521
a 29 w Fx(tr)o(anslate)q Fs(\()1179 1489 y Fr(E)1164
1521 y Ft(\034)1198 1529 y Fo(1)1232 1521 y Fs(\))1262
1521 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1262 1521 a Fw(,...,)1262 1521 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1262 1521 a 147
w Fx(tr)o(anslate)q Fs(\()1719 1489 y Fr(E)1704 1521
y Ft(\034)1738 1529 y Fn(n)1780 1521 y Fs(\))1810 1521
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1810 1521 a Fw(>)1810 1521 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1810 1521 a -147 1687
a Fx(tr)o(anslate-cxt)q Fs(\(\001\))-128 1770 y(=)18
b Fv(case)i Fs(\001)f Fv(of)-31 1853 y Fq(?)j Fu(7!)f
Fq(?)-31 1936 y Fs(\001)p Ft(;)13 b(v)25 b(<)p Fs(::)268
1904 y Fr(E)252 1936 y Ft(\034)30 b Fu(7!)21 b Fx(tr)o(anslate-cxt)q
Fs(\(\001\))p Ft(;)13 b(v)24 b(<)p Fs(::)e Fx(tr)o(anslate)p
Fs(\()1443 1904 y Fr(E)1428 1936 y Ft(\034)9 b Fs(\))-31
2019 y(\001)p Ft(;)k(v)25 b Fs(::)p Ft(>)268 1987 y Fr(E)252
2019 y Ft(\034)30 b Fu(7!)21 b Fx(tr)o(anslate-cxt)q
Fs(\(\001\))p Ft(;)13 b Fx(tr)o(anslate)p Fs(\()1258
1987 y Fr(E)1243 2019 y Ft(\034)c Fs(\))21 b Ft(<)p Fs(::)g
Ft(v)p -150 2122 1993 3 v -150 2206 a Fv(Figur)o(e)34
b(27.)j FF(T)m(ranslation)e(from)g(our)g(e)o(xistential)f(types)h(to)f
(traditional)-150 2289 y(e)o(xistential)19 b(types)321
2580 y Ft(\034)382 2577 y Fs(:)l(:)415 2580 y(=)g Ft(v)24
b Fu(j)e Ft(C)658 2580 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 658 2580 a Fw(<)658 2580 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 658
2580 a 701 2538 a
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 701 2538 a Fw(?)701 2538 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 701 2538
a 687 2580 a Ft(\034)730 2580 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 730 2580 a Fw(,)39 b(...,)730
2580 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 730 2580 a 949 2538 a
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 949 2538 a Fw(?)949 2538
y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 949 2538 a 936 2580 a Ft(\034)978 2580 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 978 2580 a
Fw(>)978 2580 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 978 2580 a 334 2623 a
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 334 2623 a Fw(?)334
2623 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 334 2623 a 321 2664 a Ft(\034)382 2661 y Fs(:)l(:)415
2664 y(=)19 b Ft(\034)30 b Fu(j)600 2664 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 600 2664 a
Fw(?)600 2664 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 600 2664 a 51 w Fu(j)694 2664 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 694 2664
a Fw(?)39 b(extends)694 2664 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 694 2664 a 294 w Ft(\034)29
b Fu(j)1094 2664 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1094 2664 a Fw(?)40 b(super)1094 2664
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1094 2664 a 236 w Ft(\034)p -150 2750 1993 3 v 70 2835
a Fv(Figur)o(e)18 b(28.)38 b FF(Grammar)19 b(for)g(wildcard)g(types)g
(\(inducti)n(v)o(e\))227 3139 y Ft(v)i FF(in)e Fr(G)p
170 3158 294 4 v 229 3226 a(G)j Fu(`)f Ft(v)690 3125
y FF(for)e(all)f Ft(i)h FF(in)g(1)g(to)g Ft(n;)50 b Fr(G)22
b Fu(`)1411 3083 y
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 1411 3083 a Fw(?)1411 3083 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 1411
3083 a 1397 3125 a Ft(\034)1440 3133 y Fn(i)p 634 3158
889 4 v 767 3234 a Fr(G)f Fu(`)g Ft(C)962 3234 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 962
3234 a Fw(<)962 3234 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 962 3234 a 1005 3192 a
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 1005 3192
a Fw(?)1005 3192 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 1005 3192 a 992 3234 a Ft(\034)1034
3242 y Fo(1)1069 3234 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1069 3234 a Fw(,)39 b(...,)1069
3234 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1069 3234 a 1288 3192 a
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 1288 3192 a Fw(?)1288
3192 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 1288 3192 a 1275 3234 a Ft(\034)1317 3242 y Fn(n)1360
3234 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1360 3234 a Fw(>)1360 3234 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1360 3234 a -17 3375
278 4 v 39 3443 a Fr(G)22 b Fu(`)175 3443 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 175 3443
a Fw(?)175 3443 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 175 3443 a 633 3356 a Fr(G)g Fu(`)f
Ft(\034)p 430 3375 585 4 v 486 3443 a Fr(G)h Fu(`)622
3443 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 622 3443 a Fw(?)39 b(extends)622 3443 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 622 3443
a 294 w Ft(\034)1357 3356 y Fr(G)22 b Fu(`)f Ft(\034)p
1184 3375 526 4 v 1240 3443 a Fr(G)g Fu(`)1376 3443 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

1376 3443 a Fw(?)39 b(super)1376 3443 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1376 3443 a 235
w Ft(\034)p -150 3522 1993 3 v 131 3607 a Fv(Figur)o(e)18
b(29.)38 b FF(W)-6 b(ell-formedness)19 b(for)g(wildcard)g(types)-150
3870 y(necessarily)j(all\))e(of)g(the)h(locations)h(of)e
Ft(v)k FF(in)1045 3838 y Fr(E)1030 3870 y Ft(\034)1073
3839 y Fz(0)1115 3870 y FF(whose)d(free)g(v)n(ariables)g(are)-150
3953 y(contained)h Fr(G)p FF(.)e(Standard)g(uni\002cation)h(w)o(ould)g
(require)g(the)f(sube)o(xpression)-150 4036 y(to)f(correspond)i(to)e
(all)f(locations)i(of)f Ft(v)j FF(in)970 4004 y Fr(E)954
4036 y Ft(\034)997 4005 y Fz(0)1019 4036 y FF(,)c(b)o(ut)h(we)g(relax)h
(this)e(to)h(permit)-150 4119 y(equi)n(v)n(alence)g(rather)f(than)g
(syntactic)f(equality;)h(the)g(subsequent)h(premises)-150
4202 y(in)i(S)t Fp(U)t(B)t FF(-)t(E)t Fp(X)t(I)t(S)t(T)t(S)c
FF(mak)o(e)i(up)h(for)f(this)f(relaxation)i(among)g(others.)-150
4368 y Fv(A.2.1)75 b(T)-6 b(ranslation)19 b(to)f(T)-6
b(raditional)19 b(Existential)f(T)-6 b(ypes)-150 4484
y FF(Our)28 b(e)o(xistential)g(types)h(are)f(designed)i(to)e(be)g(a)g
(bridge)h(into)f(traditional)-150 4567 y(e)o(xistential)23
b(types.)g(As)g(such,)h(there)f(is)g(a)g(simple)g(translation)h(from)f
(them)-150 4650 y(to)18 b(traditional)f(e)o(xistential)h(types,)f(sho)n
(wn)i(in)f(Figure)f(27,)h(which)g(basically)-150 4733
y(drops)i Fs(\001)-43 b Fu(\001)22 b FF(.)-150 4898 y
Fv(A.3)75 b(W)o(ildcard)17 b(T)-6 b(ypes)-150 5015 y
FF(W)g(e)27 b(present)i(the)f(grammar)h(of)f(wildcard)g(types)g(in)g
(Figure)g(28)g(and)h(ba-)-150 5098 y(sic)18 b(well-formedness)i(in)e
(Figure)g(29.)h(Note)f(that)h(well-formedness)g(is)f(not)-150
5181 y(type)28 b(v)n(alidity;)h(it)e(only)i(checks)g(that)f(v)n
(ariables)g(are)g(in)g(the)g(appropriate)-150 5264 y(scope.)23
b(T)-6 b(ype)22 b(v)n(alidity)h(turns)f(out)h(to)f(not)g(be)h
(important)f(for)g(termination,)-150 5347 y(only)k(for)f(soundness)i
(and)f(completeness.)g(In)g(f)o(act,)e(it)h(is)g(important)g(that)-150
5430 y(type)k(v)n(alidity)h(is)e(not)i(necessary)g(for)f(termination)g
(of)g(subtyping)i(since)2077 1189 y Fx(con)m(vert)q Fs(\()p
Ft(\034)9 b Fs(\))2095 1272 y(=)19 b Fv(case)g Ft(\034)27
b Fv(of)2192 1355 y Ft(v)e Fu(7!)c Ft(v)2192 1440 y(C)2252
1440 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2252 1440 a Fw(<)2252 1440 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2252 1440 a 2295
1398 a
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 2295 1398 a Fw(?)2295 1398 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 2295 1398 a 2282
1440 a Ft(\034)2324 1448 y Fo(1)2359 1440 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2359 1440
a Fw(,)39 b(...,)2359 1440 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2359 1440 a 2578 1398 a
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate

2578 1398 a Fw(?)2578 1398 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 2578 1398 a 2565 1440 a
Ft(\034)2607 1448 y Fn(n)2650 1440 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2650 1440 a Fw(>)2650
1440 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2650 1440 a 2248 1524 a Fu(7!)h Fv(let)19 b Fu(h)p
Fs(\000;)13 b(\001)-43 b Fu(\001)22 b Fs(;)13 b Ft(\034)2707
1532 y Fo(1)2741 1524 y Ft(;)g(:)g(:)h(:)f(;)g(\034)2946
1532 y Fn(n)2988 1524 y Fu(i)21 b Fs(=)g Fx(e)o(xplicit)p
Fs(\()3382 1483 y
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 3382 1483 a Fw(?)3382 1483 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 3382 1483
a 3369 1524 a Ft(\034)3411 1532 y Fo(1)3446 1524 y Ft(;)13
b(:)g(:)g(:)g(;)3630 1483 y
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 3630 1483 a Fw(?)3630 1483
y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 3630 1483 a 3616 1524 a Ft(\034)3659 1532 y Fn(n)3701
1524 y Fs(\))2463 1607 y(\001)2478 1603 y
 currentpoint currentpoint translate .7 .7 scale neg exch neg exch
translate
 2478 1603 a
Fu(\016)2478 1603 y
 currentpoint currentpoint translate 1 .7 div 1 .7 div scale neg exch
neg exch translate
 2478 1603 a 2548 1607 a Fs(=)21 b
Fx(implicit)o Fs(\(\000;)13 b Ft(C)5 b Fs(;)14 b Ft(\034)3098
1615 y Fo(1)3132 1607 y Ft(;)f(:)g(:)g(:)h(;)f(\034)3337
1615 y Fn(n)3379 1607 y Fs(\))2463 1692 y(\001)-43 b
Fu(\001)2527 1660 y Fz(0)2570 1692 y Fs(=)21 b Fx(con)m(vert-cxt)r
Fs(\(\001)-43 b Fu(\001)21 b Fs(\))2463 1776 y(\001)2478
1772 y
 currentpoint currentpoint translate .7 .7 scale neg exch neg exch
translate
 2478 1772 a Fu(\016)2478 1772 y
 currentpoint currentpoint translate 1 .7 div 1 .7 div scale neg exch
neg exch translate
 2478 1772 a 2527
1744 a Fz(0)2570 1776 y Fs(=)g Fx(con)m(vert-cxt)r Fs(\(\001)3030
1772 y
 currentpoint currentpoint translate .7 .7 scale neg exch neg exch
translate
 3030 1772 a Fu(\016)3030 1772 y
 currentpoint currentpoint translate 1 .7 div 1 .7 div scale neg exch
neg exch translate
 3030 1772 a 3078
1776 a Fs(\))2365 1860 y Fv(in)d Fu(9)p Fs(\000)9 b(:)g(\001)2591
1856 y
 currentpoint currentpoint translate .7 .7 scale neg exch neg exch
translate
 2591 1856 a Fu(\016)2591 1856 y
 currentpoint currentpoint translate 1 .7 div 1 .7 div scale neg exch
neg exch translate
 2591 1856 a 2639
1829 a Fz(0)2662 1860 y Ft(;)k Fs(\001)-43 b Fu(\001)2760
1829 y Fz(0)2782 1860 y Fs(\(\001)g Fu(\001)2876 1829
y Fz(0)2898 1860 y Fs(\))p Ft(:)19 b(C)3028 1860 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3028
1860 a Fw(<)3028 1860 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3028 1860 a 30 w Fx(con)m(vert)q
Fs(\()p Ft(\034)3343 1868 y Fo(1)3377 1860 y Fs(\))3407
1860 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3407 1860 a Fw(,)39 b(...,)3407 1860 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3407 1860
a 206 w Fx(con)m(vert)q Fs(\()p Ft(\034)3898 1868 y Fn(n)3940
1860 y Fs(\))3970 1860 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3970 1860 a Fw(>)3970 1860 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate

3970 1860 a 2077 2026 a Fx(con)m(vert-cxt)q Fs(\(\001\))2095
2109 y(=)19 b Fv(case)g Fs(\001)g Fv(of)2192 2192 y Fq(?)287
b Fu(7!)18 b Fq(?)2192 2275 y Fs(\001)p Ft(;)13 b(v)25
b(<)p Fs(::)d Ft(\034)27 b Fu(7!)18 b Fx(con)m(vert-cxt)q
Fs(\(\001\))p Ft(;)13 b(v)24 b(<)p Fs(::)e Fx(con)m(vert)q
Fs(\()p Ft(\034)9 b Fs(\))2192 2358 y(\001)p Ft(;)k(v)25
b Fs(::)p Ft(>)d(\034)27 b Fu(7!)18 b Fx(con)m(vert-cxt)q
Fs(\(\001\))p Ft(;)13 b(v)24 b Fs(::)q Ft(>)d Fx(con)m(vert)q
Fs(\()p Ft(\034)9 b Fs(\))p 2042 2461 1993 3 v 2042 2546
a Fv(Figur)o(e)15 b(31.)38 b FF(T)m(ranslation)17 b(from)f(wildcard)g
(types)h(to)f(our)h(e)o(xistential)f(types)2042 2853
y(Ja)o(v)n(a')l(s)23 b(type)h(v)n(alidity)g(rules)f(rely)g(on)h
(subtyping.)h(As)e(such,)h(we)f(will)f(dis-)2042 2936
y(cuss)d(type)g(v)n(alidity)h(when)f(it)f(becomes)i(rele)n(v)n(ant.)
2141 3019 y(The)h(subtyping)g(rules)f(for)g(wildcard)h(types)g(are)f
(sho)n(wn)h(in)f(Figure)g(30.)2042 3102 y(W)-6 b(e)21
b(ha)o(v)o(e)g(tried)g(to)h(formalize)f(the)g(informal)h(rules)f(in)h
(the)f(Ja)o(v)n(a)h(language)2042 3185 y(speci\002cation)k([6:)f
(Chapters)h(4.4,)f(4.10.2,)h(and)g(5.1.10])g(as)f(f)o(aithfully)h(as)
2042 3268 y(possible,)d(although)i(we)e(did)g(tak)o(e)h(the)f(liberty)g
(of)g(simplifying)h(a)o(w)o(ay)f(in-)2042 3351 y(tersection)16
b(types)g(and)h(the)f(null)g(type)g(by)h(allo)n(wing)f(type)g(v)n
(ariables)h(to)f(ha)o(v)o(e)2042 3434 y(multiple)22 b(constraints)h
(and)g(dif)n(ferent)g(kinds)g(of)g(constraints.)g(Notice)f(that)2042
3517 y(these)i(are)f(the)h(\002rst)e(subtyping)j(rules)f(to)f(discuss)h
(requirements)h(on)f(type)2042 3600 y(parameters.)g(This)g(is)g
(because)h(these)g(requirements)g(do)g(not)f(af)n(fect)h(sub-)2042
3683 y(typing)e(e)o(xcept)h(for)f(ho)n(w)g(the)o(y)g(af)n(fect)g(the)g
(constraints)g(on)h(the)f(type)g(v)n(ari-)2042 3766 y(ables.)18
b(Thus)g(in)g(the)g(translation)g(from)g(wildcard)g(types)h(to)f(our)g
(e)o(xistential)2042 3849 y(types)24 b(sho)n(wn)h(in)f(Figure)g(31,)g
(the)g(constraints)g(resulting)g(from)g(these)g(re-)2042
3932 y(quirements)18 b(are)g(included)g(in)g Fs(\001)f
FF(and)h(hence)h(the)e(subtyping)i(between)g(our)2042
4015 y(e)o(xistential)h(types)g(and)h(consequently)h(traditional)e(e)o
(xistential)g(types.)h(W)-6 b(e)2042 4098 y(will)18 b(discuss)h(this)g
(more)g(as)g(it)f(becomes)i(rele)n(v)n(ant.)2042 4346
y FD(B.)91 b(T)-8 b(ermination)2042 4462 y FF(While)15
b(termination)h(for)f(subtyping)j(e)n(v)o(en)e(restricted)g(forms)f(of)
h(traditional)2042 4545 y(e)o(xistential)27 b(types)h(is)f(kno)n(wn)i
(to)f(be)f(undecidable)j([21],)d(here)h(we)f(sho)n(w)2042
4628 y(that)34 b(under)i(certain)f(conditions)g(subtyping)h(for)f(both)
g(our)g(e)o(xistential)2042 4711 y(types)d(and)h(wildcard)f(types)g(is)
f(decidable.)i(W)-6 b(e)31 b(present)h(a)g(number)h(of)2042
4794 y(requirements)18 b(on)f(our)g(e)o(xistential)g(types)h(and)f(sho)
n(w)h(ho)n(w)f(the)g(restrictions)2042 4877 y(discussed)k(in)f(Section)
h(4.4)f(ensure)h(that)g(the)f(translation)g(from)h(wildcards)2042
4960 y(to)e(our)g(e)o(xistential)g(types)g(satis\002es)f(these)i
(requirements.)2042 5147 y Fv(B.1)74 b(T)-7 b(ermination)19
b(f)n(or)g(Our)g(Existential)f(T)-6 b(ypes)2042 5264
y FF(Here)16 b(we)g(de\002ne)h(requirements)g(on)g(our)g(e)o
(xistential)f(types)h(and)g(pro)o(v)o(e)g(that)2042 5347
y(under)30 b(these)g(requirements)g(the)f(subtyping)i(algorithm)f(in)f
(Figure)g(7)g(is)2042 5430 y(guaranteed)20 b(to)f(terminate.)p
eop end
%%Page: 17 17
TeXDict begin 17 16 bop 1203 84 a Ft(C)1263 84 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1263
84 a Fw(<)1263 84 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1263 84 a 29 w Ft(P)1341 92 y Fo(1)1376
84 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1376 84 a Fw(,)39 b(...,)1376 84 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1376 84 a 206
w Ft(P)1631 92 y Fn(m)1690 84 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1690 84 a Fw(>)1690 84
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1690 84 a 48 w FF(is)18 b(a)h(subclass)h(of)f Ft(D)2272
84 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2272 84 a Fw(<)2272 84 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2272 84 a 34 w Fs(\026)-42
b Ft(\034)2336 92 y Fo(1)2370 84 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2370 84 a Fw(,)39
b(...,)2370 84 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2370 84 a 210 w Fs(\026)-42 b Ft(\034)2610
92 y Fn(n)2652 84 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2652 84 a Fw(>)2652 84 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2652 84
a 494 115 2898 4 v 550 186 a Fr(G)21 b Fs(:)h Fr(D)f
Fu(`)g Ft(C)872 186 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 872 186 a Fw(<)872 186 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 872 186
a 30 w Ft(\034)936 194 y Fo(1)970 186 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 970 186 a Fw(,)40
b(...,)970 186 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 970 186 a 206 w Ft(\034)1210 194 y Fn(m)1269
186 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1269 186 a Fw(>)1269 186 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1269 186 a 50 w Ft(<)p
Fs(:)22 b Ft(D)1487 186 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1487 186 a Fw(<)1487 186 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate

1487 186 a 34 w Fs(\026)-42 b Ft(\034)1551 194 y Fo(1)1585
186 y Fs([)p Ft(P)1655 194 y Fo(1)1690 186 y Fu(7!)p
Ft(\034)1801 194 y Fo(1)1835 186 y Ft(;)13 b(:)g(:)h(:)f(;)g(P)2055
194 y Fn(m)2113 186 y Fu(7!)p Ft(\034)2224 194 y Fn(m)2283
186 y Fs(])2304 186 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2304 186 a Fw(,)39 b(...,)2304
186 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2304 186 a 210 w Fs(\026)-42 b Ft(\034)2544 194
y Fn(n)2586 186 y Fs([)p Ft(P)2656 194 y Fo(1)2691 186
y Fu(7!)p Ft(\034)2802 194 y Fo(1)2836 186 y Ft(;)14
b(:)f(:)g(:)g(;)g(P)3056 194 y Fn(m)3115 186 y Fu(7!)p
Ft(\034)3226 194 y Fn(m)3284 186 y Fs(])3305 186 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3305
186 a Fw(>)3305 186 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3305 186 a 1414 323 a FF(for)18
b(all)h Ft(i)g FF(in)g(1)g(to)f Ft(n;)51 b Fr(G)22 b
Fs(:)g Fr(D)f Fu(`)g Ft(\034)2282 331 y Fn(i)2329 323
y Fu(2)2415 281 y
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 2415 281 a Fw(?)2415 281 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 2415 281
a 2402 323 a Ft(\034)2444 331 y Fn(i)p 1215 356 1455
4 v 1271 432 a Fr(G)g Fs(:)h Fr(D)f Fu(`)g Ft(C)1593
432 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1593 432 a Fw(<)1593 432 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1593 432 a 30 w Ft(\034)1657
440 y Fo(1)1691 432 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1691 432 a Fw(,)40 b(...,)1691
432 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1691 432 a 206 w Ft(\034)1931 440 y Fn(n)1974 432
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1974 432 a Fw(>)1974 432 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1974 432 a 50 w Ft(<)p Fs(:)22
b Ft(C)2187 432 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2187 432 a Fw(<)2187 432 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2187 432
a 2230 390 a
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 2230 390 a Fw(?)2230 390 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 2230 390 a 2216
432 a Ft(\034)2259 440 y Fo(1)2293 432 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2293 432 a Fw(,)40
b(...,)2293 432 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2293 432 a 2513 390 a
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 2513 390 a Fw(?)2513
390 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 2513 390 a 2499 432 a Ft(\034)2542 440 y Fn(n)2584
432 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2584 432 a Fw(>)2584 432 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2584 432 a 1308 561
a Fx(e)o(xplicit)o Fs(\()1570 520 y
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 1570 520 a Fw(?)1570
520 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 1570 520 a 1556 561 a Ft(\034)1599 569 y Fo(1)1633
561 y Ft(;)13 b(:)h(:)f(:)g(;)1817 520 y
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 1817 520 a Fw(?)1817
520 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 1817 520 a 1804 561 a Ft(\034)1846 569 y Fn(n)1889
561 y Fs(\))21 b(=)g Fu(h)p Fs(\000;)13 b(\001)-43 b
Fu(\001)22 b Fs(;)13 b Ft(\034)2265 569 y Fo(1)2300 561
y Ft(;)g(:)g(:)g(:)g(;)g(\034)2504 569 y Fn(n)2546 561
y Fu(i)1469 648 y Fx(implicit)o Fs(\(\000;)g Ft(C)5 b
Fs(;)14 b Ft(\034)1938 656 y Fo(1)1972 648 y Ft(;)f(:)g(:)g(:)h(;)f
(\034)2177 656 y Fn(n)2219 648 y Fs(\))21 b(=)g(\001)2367
644 y
 currentpoint currentpoint translate .7 .7 scale neg exch neg exch
translate
 2367 644 a Fu(\016)2367 644 y
 currentpoint currentpoint translate 1 .7 div 1 .7 div scale neg exch
neg exch translate
 2367 644 a 1343 736
a Fr(G)p Ft(;)13 b Fs(\000)21 b(:)h Fr(D)p Ft(;)13 b
Fs(\001)1648 732 y
 currentpoint currentpoint translate .7 .7 scale neg exch neg exch
translate
 1648 732 a Fu(\016)1648 732 y
 currentpoint currentpoint translate 1 .7 div 1 .7 div scale neg exch
neg exch translate
 1648
732 a 1696 736 a Ft(;)g Fs(\001)-43 b Fu(\001)43 b(`)22
b Ft(C)1944 736 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1944 736 a Fw(<)1944 736 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1944 736
a 29 w Ft(\034)2007 744 y Fo(1)2042 736 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2042 736 a
Fw(,)39 b(...,)2042 736 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2042 736 a 206 w Ft(\034)2282
744 y Fn(n)2324 736 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2324 736 a Fw(>)2324 736 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2324
736 a 51 w Ft(<)p Fs(:)21 b Ft(\034)2520 704 y Fz(0)p
1252 769 1381 4 v 1473 845 a Fr(G)h Fs(:)g Fr(D)f Fu(`)g
Ft(C)1796 845 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1796 845 a Fw(<)1796 845 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1796 845 a
1839 803 a
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 1839 803 a Fw(?)1839 803 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 1839 803 a 1825
845 a Ft(\034)1868 853 y Fo(1)1902 845 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1902 845 a Fw(,)40
b(...,)1902 845 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1902 845 a 2122 803 a
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 2122 803 a Fw(?)2122
803 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 2122 803 a 2108 845 a Ft(\034)2151 853 y Fn(n)2193
845 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2193 845 a Fw(>)2193 845 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2193 845 a 51 w Ft(<)p
Fs(:)21 b Ft(\034)2389 813 y Fz(0)1374 966 y Ft(v)k(<)p
Fs(::)c Ft(\034)27 b FF(in)19 b Fr(D)p 1277 989 581 4
v 1333 1057 a(G)i Fs(:)h Fr(D)f Fu(`)g Ft(v)k(<)p Fs(:)c
Ft(\034)2124 966 y(v)k Fs(::)p Ft(>)c(\034)28 b FF(in)18
b Fr(D)p 2027 989 V 2083 1057 a(G)k Fs(:)f Fr(D)g Fu(`)h
Ft(\034)29 b(<)p Fs(:)22 b Ft(v)p 940 1201 584 4 v 996
1269 a Fr(G)g Fs(:)f Fr(D)g Fu(`)h Ft(\034)29 b(<)p Fs(:)22
b Ft(\034)1749 1179 y Fr(G)f Fs(:)h Fr(D)f Fu(`)g Ft(\034)30
b(<)p Fs(:)21 b Ft(\034)2220 1147 y Fz(0)2354 1179 y
Fr(G)h Fs(:)g Fr(D)f Fu(`)g Ft(\034)2660 1147 y Fz(0)2703
1179 y Ft(<)p Fs(:)g Ft(\034)2848 1147 y Fz(00)p 1693
1201 1252 4 v 2063 1276 a Fr(G)g Fs(:)h Fr(D)f Fu(`)g
Ft(\034)30 b(<)p Fs(:)21 b Ft(\034)2534 1245 y Fz(00)p
142 1372 3600 7 v 142 1388 V 301 1545 554 4 v 357 1613
a Fr(G)g Fs(:)h Fr(D)f Fu(`)g Ft(\034)30 b Fu(2)22 b
Ft(\034)p 1023 1545 541 4 v 289 w Fr(G)g Fs(:)g Fr(D)f
Fu(`)g Ft(\034)30 b Fu(2)1478 1613 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1478 1613 a Fw(?)1478
1613 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1478 1613 a 1921 1522 a Fr(G)22 b Fs(:)g Fr(D)f
Fu(`)g Ft(\034)30 b(<)p Fs(:)21 b Ft(\034)2393 1491 y
Fz(0)p 1733 1545 870 4 v 1789 1620 a Fr(G)h Fs(:)g Fr(D)f
Fu(`)g Ft(\034)30 b Fu(2)2188 1620 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2188 1620 a Fw(?)40
b(extends)2188 1620 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2188 1620 a 294 w Ft(\034)2525
1589 y Fz(0)2931 1522 y Fr(G)22 b Fs(:)g Fr(D)f Fu(`)g
Ft(\034)3237 1491 y Fz(0)3280 1522 y Ft(<)p Fs(:)g Ft(\034)p
2773 1545 812 4 v 2829 1620 a Fr(G)g Fs(:)h Fr(D)f Fu(`)g
Ft(\034)30 b Fu(2)3227 1620 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3227 1620 a Fw(?)40 b(super)3227
1620 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3227 1620 a 236 w Ft(\034)3506 1589 y Fz(0)p 142
1747 3600 7 v 142 1763 V 1406 1898 a Fx(e)o(xplicit)o
Fs(\()1667 1856 y
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 1667 1856 a Fw(?)1667 1856 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 1667 1856
a 1654 1898 a Ft(\034)1696 1906 y Fo(1)1731 1898 y Ft(;)13
b(:)g(:)g(:)h(;)1915 1856 y
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 1915 1856 a Fw(?)1915 1856
y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 1915 1856 a 1902 1898 a Ft(\034)1944 1906 y Fn(n)1987
1898 y Fs(\))1424 1982 y(=)19 b Fv(case)1668 1941 y
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 1668
1941 a Fw(?)1668 1941 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 1668 1941 a 1654 1982 a Ft(\034)1697
1990 y Fn(i)1742 1982 y Fv(of)1521 2065 y Ft(\034)322
b Fu(7!)18 b(h)p Ft(\034)9 b Fs(;)k Fq(?)p Fs(;)g Fq(?)p
Fu(i)1521 2148 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1521 2148 a Fw(?)1521 2148 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1521 2148
a 356 w Fu(7!)18 b(h)p Ft(v)2039 2156 y Fn(i)2066 2148
y Fs(;)13 b Ft(v)2137 2156 y Fn(i)2164 2148 y Fs(;)g
Fq(?)p Fu(i)1521 2231 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1521 2231 a Fw(?)40 b(extends)1521
2231 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1521 2231 a 295 w Ft(\034)27 b Fu(7!)18 b(h)p
Ft(v)2039 2239 y Fn(i)2066 2231 y Fs(;)13 b Ft(v)2137
2239 y Fn(i)2164 2231 y Fs(;)g Ft(v)2235 2239 y Fn(i)2283
2231 y Ft(<)p Fs(::)21 b Ft(\034)9 b Fu(i)1521 2314 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

1521 2314 a Fw(?)40 b(super)1521 2314 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1521 2314 a 236
w Ft(\034)86 b Fu(7!)18 b(h)p Ft(v)2039 2322 y Fn(i)2066
2314 y Fs(;)13 b Ft(v)2137 2322 y Fn(i)2164 2314 y Fs(;)g
Ft(v)2235 2322 y Fn(i)2283 2314 y Fs(::)p Ft(>)21 b(\034)9
b Fu(i)281 2472 y Fx(implicit)p Fs(\(\000;)k Ft(C)5 b
Fs(;)13 b Ft(\034)750 2480 y Fo(1)784 2472 y Ft(;)g(:)h(:)f(:)g(;)g
(\034)989 2480 y Fn(n)1031 2472 y Fs(\))300 2562 y(=)18
b Fv(f)n(or)i Ft(i)f Fv(in)f Fs(1)h Fv(to)g Ft(n)p Fv(,)f
Ft(C)898 2562 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 898 2562 a Fw(<)898 2562 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 898 2562 a
30 w Ft(P)977 2570 y Fo(1)1011 2562 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1011 2562 a Fw(,)40
b(...,)1011 2562 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1011 2562 a 206 w Ft(P)1266 2570 y
Fn(n)1309 2562 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1309 2562 a Fw(>)1309 2562 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1309 2562
a 48 w FF(requires)19 b Ft(P)1665 2570 y Fo(1)1719 2562
y FF(to)f(e)o(xtend)24 b Fs(\026)-42 b Ft(\034)2055 2530
y Fn(i)2046 2576 y(j)2100 2562 y FF(for)18 b Ft(j)24
b FF(in)19 b(1)g(to)f Ft(k)2509 2570 y Fn(i)378 2645
y Fv(in)g(f)n(or)i Ft(i)f Fv(in)f Fs(1)h Fv(to)g Ft(n)p
Fv(,)f(let)h Fs(\001)1032 2641 y
 currentpoint currentpoint translate .7 .7 scale neg exch neg exch
translate
 1032 2641 a Fu(\016)1032
2641 y
 currentpoint currentpoint translate 1 .7 div 1 .7 div scale neg exch
neg exch translate
 1032 2641 a 1081 2653 a Fn(i)1128 2645 y Fs(=)40
b Fv(if)19 b Ft(\034)1327 2653 y Fn(i)1371 2645 y FF(in)g
Fs(\000)g FF(as)g Ft(v)1228 2728 y Fv(then)f(if)g Ft(k)1492
2736 y Fn(i)1540 2728 y Fs(=)j(0)1388 2811 y Fv(then)d
Ft(v)24 b(<)p Fs(::)1733 2811 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1733 2811 a Fw(Object)1733
2811 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1733 2811 a 1388 2900 a Fv(else)19 b Ft(v)24 b(<)p
Fs(::)i(\026)-42 b Ft(\034)1751 2869 y Fn(i)1742 2914
y Fo(1)1777 2900 y Fs([)p Ft(P)1847 2908 y Fo(1)1882
2900 y Fu(7!)o Ft(\034)1992 2908 y Fo(1)2027 2900 y Ft(;)13
b(:)g(:)g(:)g(;)g(P)2246 2908 y Fn(n)2289 2900 y Fu(7!)p
Ft(\034)2400 2908 y Fn(n)2442 2900 y Fs(])p Ft(;)h(:)f(:)g(:)g(;)g(v)24
b(<)p Fs(::)i(\026)-42 b Ft(\034)2862 2869 y Fn(i)2853
2916 y(k)2886 2927 y Fl(i)2916 2900 y Fs([)p Ft(P)2986
2908 y Fo(1)3021 2900 y Fu(7!)p Ft(\034)3132 2908 y Fo(1)3166
2900 y Ft(;)14 b(:)f(:)g(:)g(;)g(P)3386 2908 y Fn(n)3429
2900 y Fu(7!)o Ft(\034)3539 2908 y Fn(n)3582 2900 y Fs(])1228
2985 y Fv(else)19 b Fq(?)459 3068 y Fv(in)f(let)h Fs(\001)654
3064 y
 currentpoint currentpoint translate .7 .7 scale neg exch neg exch
translate
 654 3064 a Fu(\016)654 3064 y
 currentpoint currentpoint translate 1 .7 div 1 .7 div scale neg exch
neg exch translate
 654 3064 a 723 3068
a Fs(=)i(\001)820 3064 y
 currentpoint currentpoint translate .7 .7 scale neg exch neg exch
translate
 820 3064 a Fu(\016)820 3064
y
 currentpoint currentpoint translate 1 .7 div 1 .7 div scale neg exch
neg exch translate
 820 3064 a 868 3076 a Fo(1)903 3068 y Ft(;)13 b(:)g(:)g(:)g(;)h
Fs(\001)1089 3064 y
 currentpoint currentpoint translate .7 .7 scale neg exch neg exch
translate
 1089 3064 a Fu(\016)1089 3064 y
 currentpoint currentpoint translate 1 .7 div 1 .7 div scale neg exch
neg exch translate
 1089
3064 a 1138 3076 a Fn(n)545 3152 y Fv(in)k Fs(\001)641
3148 y
 currentpoint currentpoint translate .7 .7 scale neg exch neg exch
translate
 641 3148 a Fu(\016)641 3148 y
 currentpoint currentpoint translate 1 .7 div 1 .7 div scale neg exch
neg exch translate
 641 3148 a 690 3152
a Ft(;)13 b Fu(f)p Ft(v)802 3120 y Fz(0)846 3152 y Fs(::)q
Ft(>)21 b(v)j Fu(j)e Ft(v)i(<)p Fs(::)e Ft(v)1299 3120
y Fz(0)1340 3152 y FF(in)d Fs(\001)1432 3148 y
 currentpoint currentpoint translate .7 .7 scale neg exch neg exch
translate
 1432 3148
a Fu(\016)1432 3148 y
 currentpoint currentpoint translate 1 .7 div 1 .7 div scale neg exch
neg exch translate
 1432 3148 a 1499 3152 a FF(and)h
Ft(v)1666 3120 y Fz(0)1707 3152 y FF(in)f Fs(\000)p Fu(g)p
-150 3238 4185 3 v 1156 3322 a Fv(Figur)o(e)f(30.)37
b FF(Subtyping)20 b(for)f(wildcard)g(types)h(\(inducti)n(v)o(e\))-113
3612 y Fx(e)o(xplicit)p Fs(\()151 3580 y Fr(E)136 3612
y Ft(\034)9 b Fs(\))-94 3696 y(=)18 b Fv(case)151 3663
y Fr(E)136 3696 y Ft(\034)27 b Fv(of)3 3779 y Ft(v)d
Fu(7!)d Ft(v)3 3862 y Fu(9)p Fs(\000)9 b(:)g(\001\(\001)-44
b Fu(\001)22 b Fs(\))p Ft(:)d(C)420 3862 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 420 3862 a
Fw(<)420 3862 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 420 3862 a 465 3829 a Fr(E)449 3862 y
Ft(\034)483 3870 y Fo(1)518 3862 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 518 3862 a Fw(,)39
b(...,)518 3862 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 518 3862 a 739 3829 a Fr(E)724 3862
y Ft(\034)758 3870 y Fn(n)800 3862 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 800 3862 a Fw(>)800
3862 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 800 3862 a 59 3945 a Fu(7!)21 b(9)p Fs(\000)9
b(:)g Fu(\017)j Fs(\()p Fx(e)o(xplicit)p Fs(\(\001)-43
b Fu(\001)22 b Fs(\)\))p Ft(:)c(C)839 3945 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 839 3945
a Fw(<)839 3945 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 839 3945 a 30 w Fx(e)o(xplicit)o Fs(\()1133
3912 y Fr(E)1117 3945 y Ft(\034)1151 3953 y Fo(1)1186
3945 y Fs(\))1216 3945 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1216 3945 a Fw(,)39 b(...,)1216
3945 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1216 3945 a 205 w Fx(e)o(xplicit)p Fs(\()1685
3912 y Fr(E)1670 3945 y Ft(\034)1704 3953 y Fn(n)1746
3945 y Fs(\))1776 3945 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1776 3945 a Fw(>)1776 3945 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate

1776 3945 a -113 4111 a Fx(e)o(xplicit)p Fs(\(\001)-43
b Fu(\001)22 b Fs(\))-94 4194 y(=)c Fv(case)i Fs(\001)-43
b Fu(\001)40 b Fv(of)3 4277 y Fq(?)21 b Fu(7!)h Fq(?)3
4361 y Fs(\001)-43 b Fu(\001)67 4329 y Fz(0)89 4361 y
Ft(;)13 b(v)25 b(<)p Fs(::)324 4329 y Fr(E)308 4361 y
Ft(\034)30 b Fu(7!)21 b Fx(e)o(xplicit)p Fs(\(\001)-43
b Fu(\001)783 4329 y Fz(0)805 4361 y Fs(\))p Ft(;)13
b(v)24 b(<)p Fs(::)e Fx(e)o(xplicit)p Fs(\()1318 4329
y Fr(E)1303 4361 y Ft(\034)9 b Fs(\))3 4445 y(\001)-43
b Fu(\001)67 4414 y Fz(0)89 4445 y Ft(;)13 b(v)25 b Fs(::)p
Ft(>)324 4413 y Fr(E)308 4445 y Ft(\034)30 b Fu(7!)21
b Fx(e)o(xplicit)p Fs(\(\001)-43 b Fu(\001)783 4414 y
Fz(0)805 4445 y Fs(\))p Ft(;)13 b(v)24 b Fs(::)q Ft(>)d
Fx(e)o(xplicit)p Fs(\()1318 4413 y Fr(E)1303 4445 y Ft(\034)9
b Fs(\))p -150 4548 1993 3 v 387 4632 a Fv(Figur)o(e)18
b(32.)38 b FF(Explicit)18 b(projection)-150 4981 y Fv(B.1.1)75
b(Pr)o(ojections)-150 5098 y FF(W)-6 b(e)20 b(de\002ne)i(a)f(number)g
(of)g(projections)h(that)f(we)g(apply)g(to)g(our)g(e)o(xistential)-150
5181 y(types)f(for)g(sak)o(e)h(of)f(reasoning.)g(These)g(projections)h
(replace)f(components)-150 5264 y(of)33 b(an)g(e)o(xistential)g(type)h
(with)e Fu(\017)i FF(to)f(indicate)g(that)g(those)g(components)-150
5347 y(are)25 b(someho)n(w)h(not)f(rele)n(v)n(ant.)g(F)o(or)f(e)o
(xample,)h(the)g Fx(e)o(xplicit)g FF(projection)g(in)-150
5430 y(Figure)d(32)h(recursi)n(v)o(ely)h(conceals)f(all)f(the)h
(constraints)g(that)g(do)g(not)f(need)2042 3571 y(to)27
b(be)g(check)o(ed.)h(The)f(components)i(left)d(o)o(v)o(er)i(are)e(then)
i(essentially)f(the)2042 3654 y(components)21 b(e)o(xplicitly)d(stated)
h(by)h(the)f(user)l(.)2141 3737 y(In)27 b(Figure)f(33)h(we)g(present)g
(a)f(v)n(ariety)h(of)g(accessibility)g(projections.)2042
3820 y(The)22 b(projection)h Fx(access-sub)2829 3828
y Fn(i)2855 3820 y Fs(\()2901 3788 y Fr(E)2885 3820 y
Ft(\034)9 b Fs(\))21 b FF(creates)i(a)f(type)h(whose)g(free)f(v)n
(ariables)2042 3903 y(are)c(the)g(v)n(ariables)h(which,)f(supposing)i
Ft(\034)26 b FF(were)18 b(the)g(subtype,)h(could)g(e)n(v)o(en-)2042
3986 y(tually)e(be)h(either)g(the)g(subtype)h(or)e(supertype)i(after)f
Ft(i)f FF(or)h(more)g(sw)o(aps.)g(The)2042 4069 y(projection)j
Fx(access-sup)2688 4089 y Fn(i)2715 4069 y Fs(\()2760
4037 y Fr(E)2745 4069 y Ft(\034)9 b Fs(\))19 b FF(does)i(the)f(same)h
(b)o(ut)e(supposing)k Ft(\034)28 b FF(were)20 b(the)2042
4152 y(supertype.)15 b(The)g(projection)g Fx(access)3008
4160 y Fn(i)3035 4152 y Fs(\()3080 4120 y Fr(E)3065 4152
y Ft(\034)9 b Fs(\))k FF(is)h(the)h(union)h(of)e Fx(access-sub)3906
4160 y Fn(i)3932 4152 y Fs(\()3978 4120 y Fr(E)3962 4152
y Ft(\034)9 b Fs(\))2042 4235 y FF(and)24 b Fx(access-sup)2497
4255 y Fn(i)2523 4235 y Fs(\()2568 4203 y Fr(E)2553 4235
y Ft(\034)9 b Fs(\))p FF(.)22 b(Note)i(that)g Ft(i)30
b Fs(=)g(0)24 b FF(does)h(not)f(imply)f(all)h(free)f(v)n(ari-)2042
4318 y(ables)15 b(in)2298 4286 y Fr(E)2283 4318 y Ft(\034)23
b FF(remain)15 b(free)f(after)h(an)o(y)g(of)g(the)g(projections)h
(because)g(some)f(free)2042 4401 y(v)n(ariables)k(may)h(ne)n(v)o(er)f
(e)n(v)o(entually)h(be)g(either)e(the)h(subtype)h(or)f(supertype.)2141
4484 y(The)f Fx(uni\002es)q Fs(\()2515 4452 y Fr(E)2500
4484 y Ft(\034)9 b Fs(\))16 b FF(projection)i(in)g(Figure)f(34)h
(creates)g(a)f(type)h(whose)g(free)2042 4567 y(v)n(ariables)32
b(are)g(guaranteed)i(to)e(be)g(uni\002ed)g(should)3501
4535 y Fr(E)3486 4567 y Ft(\034)40 b FF(be)32 b(uni\002ed)g(with)2042
4650 y(another)20 b(e)o(xistential)e(type.)2042 4838
y Fv(B.1.2)74 b(Pr)o(operties)19 b(f)n(or)g(T)-7 b(ermination)2042
4954 y FF(W)h(e)20 b(say)h(a)g(type)2499 4922 y Fr(E)2483
4954 y Ft(\034)33 b Fs(=)25 b Fu(9)p Fs(\000)12 b(:)g(\001\(\001)-43
b Fu(\001)22 b Fs(\))p Ft(:)f(C)3061 4954 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3061 4954
a Fw(<)3061 4954 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3061 4954 a 3106 4922 a Fr(E)3090
4954 y Ft(\034)3124 4962 y Fo(1)3159 4954 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3159 4954
a Fw(,)39 b(...,)3159 4954 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3159 4954 a 3380 4922 a
Fr(E)3365 4954 y Ft(\034)3399 4962 y Fn(n)3441 4954 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

3441 4954 a Fw(>)3441 4954 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3441 4954 a 50 w FF(is)20
b(terminating)i(if)e(it)2042 5037 y(and)k(all)f(types)h(contained)h
(within)e(it)g(satisfy)g(the)h(follo)n(wing)g(termination)2042
5120 y(requirements)k(\(using)h(the)f(coinducti)n(v)o(e)h(de\002nition)
f(of)g(this)f(recursi)n(v)o(ely)2042 5203 y(de\002ned)19
b(property\).)2042 5347 y Fv(Algorithm)f(Requir)o(ement)g(1.)41
b Fx(e)o(xplicit)o Fs(\()3190 5314 y Fr(E)3174 5347 y
Ft(\034)9 b Fs(\))18 b FF(results)h(in)f(a)h(\002nite)f(type)h(and)2042
5430 y(an)o(y)g(v)n(ariable)h(that)e(is)h(free)g(in)2851
5397 y Fr(E)2836 5430 y Ft(\034)27 b FF(is)18 b(also)h(free)g(in)g
Fx(e)o(xplicit)o Fs(\()3580 5397 y Fr(E)3564 5430 y Ft(\034)9
b Fs(\))p FF(.)p eop end
%%Page: 18 18
TeXDict begin 18 17 bop -149 108 a Fx(access-var)170
117 y Fn(\036)212 108 y Fs(\()p Ft(v)s Fs(\))-130 191
y(=)18 b Fv(if)g Ft(\036)p Fs(\(0\))-52 274 y Fv(then)g
Ft(v)-52 357 y Fv(else)h Fu(\017)-149 523 y Fx(access-sub)175
532 y Fn(\036)216 523 y Fs(\()261 491 y Fr(E)246 523
y Ft(\034)9 b Fs(\))-130 606 y(=)18 b Fv(case)115 574
y Fr(E)99 606 y Ft(\034)28 b Fv(of)-33 689 y Ft(v)c Fu(7!)d
Fx(access-var)446 698 y Fn(\036)487 689 y Fs(\()p Ft(v)s
Fs(\))-33 772 y Fu(9)p Fs(\000)9 b(:)g(\001\(\001)-44
b Fu(\001)22 b Fs(\))p Ft(:)c(C)383 772 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 383 772 a Fw(<)383
772 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 383 772 a 428 740 a Fr(E)413 772 y Ft(\034)447
780 y Fo(1)481 772 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 481 772 a Fw(,)40 b(...,)481 772
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 481 772 a 703 740 a Fr(E)687 772 y Ft(\034)721 780
y Fn(n)764 772 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 764 772 a Fw(>)764 772 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 764 772 a 23
855 a Fu(7!)21 b(9)p Fs(\000)9 b(:)g Fx(access-cxt)557
864 y Fn(\036)598 855 y Fs(\(\001\)\()p Fu(\017)p Fs(\))p
Ft(:)396 938 y Fu(\017)434 938 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 434 938 a Fw(<)434 938
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 434 938 a 30 w Fx(access)659 947 y Fn(\036)700 938
y Fs(\()746 906 y Fr(E)730 938 y Ft(\034)764 946 y Fo(1)799
938 y Fs(\))829 938 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 829 938 a Fw(,)39 b(...,)829 938
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 829 938 a 205 w Fx(access)1229 947 y Fn(\036)1270 938
y Fs(\()1316 906 y Fr(E)1300 938 y Ft(\034)1334 946 y
Fn(n)1377 938 y Fs(\))1407 938 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1407 938 a Fw(>)1407
938 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1407 938 a -149 1104 a Fx(access-cxt)158 1113 y
Fn(\036)199 1104 y Fs(\(\001\))-130 1187 y(=)18 b Fv(case)h
Fs(\001)g Fv(of)-33 1270 y Fq(?)i Fu(7!)g Fq(?)-33 1355
y Fs(\001)31 1323 y Fz(0)53 1355 y Ft(;)13 b(v)24 b(<)p
Fs(::)288 1322 y Fr(E)272 1355 y Ft(\034)30 b Fu(7!)21
b Fx(access-cxt)741 1364 y Fn(\036)782 1355 y Fs(\(\001)876
1323 y Fz(0)898 1355 y Fs(\))p Ft(;)13 b(v)25 b(<)p Fs(::)c
Fx(access-sub)1471 1364 y Fn(\036)1512 1355 y Fs(\()1558
1322 y Fr(E)1542 1355 y Ft(\034)9 b Fs(\))-33 1439 y(\001)31
1407 y Fz(0)53 1439 y Ft(;)k(v)24 b Fs(::)q Ft(>)288
1407 y Fr(E)272 1439 y Ft(\034)30 b Fu(7!)21 b Fx(access-cxt)741
1448 y Fn(\036)782 1439 y Fs(\(\001)876 1407 y Fz(0)898
1439 y Fs(\))p Ft(;)13 b(v)25 b Fs(::)p Ft(>)c Fx(access-sup)1471
1458 y Fn(\036)1512 1439 y Fs(\()1558 1407 y Fr(E)1542
1439 y Ft(\034)9 b Fs(\))-149 1609 y Fx(access-sup)175
1629 y Fn(\036)216 1609 y Fs(\()261 1577 y Fr(E)246 1609
y Ft(\034)g Fs(\))-130 1697 y(=)18 b Fv(case)115 1664
y Fr(E)99 1697 y Ft(\034)28 b Fv(of)-33 1780 y Ft(v)c
Fu(7!)d Fx(access-var)446 1789 y Fn(\036)487 1780 y Fs(\()p
Ft(v)s Fs(\))-33 1863 y Fu(9)p Fs(\000)9 b(:)g(\001\(\001)-44
b Fu(\001)22 b Fs(\))p Ft(:)c(C)383 1863 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 383 1863 a
Fw(<...>)383 1863 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 383 1863 a 169 w Fu(7!)j(9)p Fs(\000)9
b(:)g Fu(\017)j Fs(\()p Fx(access-e)o(xp)1182 1882 y
Fn(\036)1224 1863 y Fs(\(\001)-43 b Fu(\001)21 b Fs(\)\))p
Ft(:)e Fu(\017)-149 2033 y Fx(access-e)o(xp)173 2053
y Fn(\036)214 2033 y Fs(\(\001)-43 b Fu(\001)22 b Fs(\))-130
2120 y(=)c Fv(case)h Fs(\001)-42 b Fu(\001)40 b Fv(of)-33
2204 y Fq(?)21 b Fu(7!)g Fq(?)-33 2288 y Fs(\001)-43
b Fu(\001)31 2256 y Fz(0)53 2288 y Ft(;)13 b(v)24 b(<)p
Fs(::)288 2256 y Fr(E)272 2288 y Ft(\034)30 b Fu(7!)21
b Fx(access-e)o(xp)756 2307 y Fn(\036)797 2288 y Fs(\(\001)-43
b Fu(\001)891 2256 y Fz(0)914 2288 y Fs(\))p Ft(;)13
b(v)24 b(<)p Fs(::)e Fx(access-sup)1486 2307 y Fn(\036)1527
2288 y Fs(\()1573 2256 y Fr(E)1557 2288 y Ft(\034)9 b
Fs(\))-33 2377 y(\001)-43 b Fu(\001)31 2345 y Fz(0)53
2377 y Ft(;)13 b(v)24 b Fs(::)q Ft(>)288 2344 y Fr(E)272
2377 y Ft(\034)30 b Fu(7!)21 b Fx(access-e)o(xp)756 2396
y Fn(\036)797 2377 y Fs(\(\001)-43 b Fu(\001)891 2345
y Fz(0)914 2377 y Fs(\))p Ft(;)13 b(v)24 b Fs(::)p Ft(>)e
Fx(access-sub)1486 2389 y Fn(\025i:\036)p Fo(\(1+)p Fn(i)p
Fo(\))1740 2377 y Fs(\()1785 2344 y Fr(E)1770 2377 y
Ft(\034)9 b Fs(\))-149 2547 y Fx(access)46 2556 y Fn(\036)87
2547 y Fs(\()132 2515 y Fr(E)117 2547 y Ft(\034)g Fs(\))-130
2630 y(=)18 b Fv(case)115 2598 y Fr(E)99 2630 y Ft(\034)28
b Fv(of)-33 2713 y Ft(v)c Fu(7!)d Fx(access-var)446 2722
y Fn(\036)487 2713 y Fs(\()p Ft(v)s Fs(\))-33 2796 y
Fu(9)p Fs(\000)9 b(:)g(\001\(\001)-44 b Fu(\001)22 b
Fs(\))p Ft(:)c(C)383 2796 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 383 2796 a Fw(<)383 2796
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 383 2796 a 428 2764 a Fr(E)413 2796 y Ft(\034)447 2804
y Fo(1)481 2796 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 481 2796 a Fw(,)40 b(...,)481 2796
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 481 2796 a 703 2764 a Fr(E)687 2796 y Ft(\034)721 2804
y Fn(n)764 2796 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 764 2796 a Fw(>)764 2796 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 764 2796
a 23 2879 a Fu(7!)21 b(9)p Fs(\000)9 b(:)g Fx(access-cxt)557
2888 y Fn(\036)598 2879 y Fs(\(\001\)\()p Fx(access-e)o(xp)1074
2899 y Fn(\036)1115 2879 y Fs(\(\001)-43 b Fu(\001)22
b Fs(\)\))p Ft(:)396 2966 y Fu(\017)434 2966 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 434 2966
a Fw(<)434 2966 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 434 2966 a 30 w Fx(access)659 2975
y Fn(\036)700 2966 y Fs(\()746 2934 y Fr(E)730 2966 y
Ft(\034)764 2974 y Fo(1)799 2966 y Fs(\))829 2966 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 829
2966 a Fw(,)39 b(...,)829 2966 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 829 2966 a 205 w Fx(access)1229
2975 y Fn(\036)1270 2966 y Fs(\()1316 2934 y Fr(E)1300
2966 y Ft(\034)1334 2974 y Fn(n)1377 2966 y Fs(\))1407
2966 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1407 2966 a Fw(>)1407 2966 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1407 2966 a -150
3069 1993 3 v 296 3153 a Fv(Figur)o(e)18 b(33.)38 b FF(Accessibility)19
b(projections)56 3424 y Fx(uni\002es)q Fs(\()297 3391
y Fr(E)281 3424 y Ft(\034)9 b Fs(\))75 3507 y(=)18 b
Fv(case)320 3474 y Fr(E)305 3507 y Ft(\034)27 b Fv(of)172
3590 y Ft(v)d Fu(7!)d Ft(v)172 3673 y Fu(9)p Fs(\000)9
b(:)g(\001\(\001)-44 b Fu(\001)22 b Fs(\))p Ft(:)d(C)589
3673 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 589 3673 a Fw(<)589 3673 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 589 3673 a 634 3640
a Fr(E)618 3673 y Ft(\034)652 3681 y Fo(1)687 3673 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

687 3673 a Fw(,)39 b(...,)687 3673 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 687 3673 a 908 3640
a Fr(E)893 3673 y Ft(\034)927 3681 y Fn(n)969 3673 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

969 3673 a Fw(>)969 3673 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 969 3673 a 228 3756 a Fu(7!)21
b(9)p Fs(\000)9 b(:)g Fu(\017)j Fs(\()p Fu(\017)p Fs(\))p
Ft(:)37 b Fu(\017)717 3756 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 717 3756 a Fw(<)717 3756
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 717 3756 a 30 w Fx(uni\002es)q Fs(\()987 3723 y Fr(E)972
3756 y Ft(\034)1006 3764 y Fo(1)1040 3756 y Fs(\))1070
3756 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1070 3756 a Fw(,)i(...,)1070 3756 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1070 3756
a 206 w Fx(uni\002es)q Fs(\()1516 3723 y Fr(E)1501 3756
y Ft(\034)1535 3764 y Fn(n)1577 3756 y Fs(\))1607 3756
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1607 3756 a Fw(>)1607 3756 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1607 3756 a -150 3841
1993 3 v 398 3926 a Fv(Figur)o(e)18 b(34.)37 b FF(Uni\002es)19
b(projection)-50 4171 y(This)i(requirement)h(indicates)f(that,)g(while)
g(implicit)g(information)h(can)-150 4254 y(be)d(in\002nite,)f(types)i
(should)g(still)e(be)h(e)o(xpressible)g(\002nitely)-5
b(.)-150 4382 y Fv(Algorithm)19 b(Requir)o(ement)e(2.)42
b FF(F)o(or)18 b(all)h Ft(v)i FF(in)e Fs(\000)p FF(,)f
Ft(v)k FF(is)d(free)f(in)h Fx(uni\002es)q Fs(\()1750
4350 y Fr(E)1734 4382 y Ft(\034)9 b Fs(\))p FF(.)-50
4510 y(This)23 b(requirement)h(indicates)g(that)f(e)n(v)o(ery)i(v)n
(ariable)f(bound)h(in)e(an)h(e)o(x-)-150 4593 y(istential)j(type)h
(should)h(occur)f(at)g(a)f(location)h(which)g(guarantees)h(a)f(spe-)
-150 4676 y(ci\002c)g(assignment)h(during)g(uni\002cation.)f(This)f
(pre)n(v)o(ents)i(types)g(lik)o(e)f Fu(9)1766 4676 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

1766 4676 a Fw(X)1766 4676 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1766 4676 a 55 w Fs(:)-150
4759 y Ft(:)13 b(:)g(:)g Fs(\()-18 4759 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -18 4759 a
Fw(X)-18 4759 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -18 4759 a 51 w Ft(<)p Fs(::)157 4759
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 157 4759 a Fw(List<X>)157 4759 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 157 4759 a 206 w Fs(\))p
Ft(:)432 4759 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 432 4759 a Fw(String)432 4759 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 432 4759
a 195 w FF(for)18 b(which)h(determining)h(whether)f(it)f(is)g(a)g(su-)
-150 4842 y(pertype)24 b(of)182 4842 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 182 4842 a Fw(String)182
4842 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 182 4842 a 200 w FF(w)o(ould)g(require)f(searching)i(through)f
(the)f(entire)g(class)-150 4925 y(hierarchy)h(for)g(a)g(class)g
Ft(C)k FF(which)d(e)o(xtends)1032 4925 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1032 4925 a
Fw(List<)1032 4925 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1032 4925 a 148 w Ft(C)1240 4925
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1240 4925 a Fw(>)1240 4925 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1240 4925 a 29 w FF(,)e(ruining)i(ef)n
(\002cienc)o(y)-150 5008 y(and)20 b(modularity)-5 b(.)-150
5136 y Fv(Algorithm)40 b(Requir)o(ement)g(3.)57 b FF(No)41
b(v)n(ariable)g(in)g Fs(\000)f FF(occurs)i(free)e(in)-150
5219 y Fx(access-e)o(xp)172 5238 y Fc(true)265 5219 y
Fs(\(\001)-43 b Fu(\001)22 b Fs(\))p FF(.)-50 5347 y(It)h(turns)g(out)h
(that)g(e)n(v)o(en)g(v)o(ery)g(simply)g(forms)g(of)f(e)o(xplicit)h
(constraints)-150 5430 y(referencing)g(bound)g(v)n(ariables)f(can)g
(cause)g(subtyping)h(to)f(not)g(terminate.)2049 108 y
Fx(height-sub)r Fs(\()2410 76 y Fr(E)2395 108 y Ft(\034)9
b Fs(\))2068 191 y(=)18 b Fv(case)2313 159 y Fr(E)2298
191 y Ft(\034)27 b Fv(of)2165 274 y Ft(v)d Fu(7!)e Fs(0)2165
602 y Fu(9)p Fs(\000)9 b(:)g(\001\(\001)-44 b Fu(\001)22
b Fs(\))p Ft(:)d(C)2582 602 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2582 602 a Fw(<)2582 602
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2582 602 a 2627 570 a Fr(E)2611 602 y Ft(\034)2645
610 y Fo(1)2680 602 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2680 602 a Fw(,)39 b(...,)2680
602 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2680 602 a 2901 570 a Fr(E)2886 602 y Ft(\034)2920
610 y Fn(n)2962 602 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2962 602 a Fw(>)2962 602 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2962
602 a 51 w Fu(7!)3111 531 y Fh(G)3209 314 y(8)3209 382
y(>)3209 404 y(>)3209 426 y(>)3209 449 y(>)3209 471 y(>)3209
494 y(>)3209 516 y(<)3209 651 y(>)3209 673 y(>)3209 695
y(>)3209 718 y(>)3209 740 y(>)3209 763 y(>)3209 785 y(:)3341
336 y(G)3277 495 y Fn(i)13 b Fk(in)f(1)h(to)f Fn(n)3503
302 y Fh(\032)3561 364 y Fx(height-sub)q Fs(\()3921 331
y Fr(E)3906 364 y Ft(\034)3940 372 y Fn(i)3966 364 y
Fs(\))3561 447 y Fx(height-sup)q Fs(\()3921 414 y Fr(E)3906
447 y Ft(\034)3940 455 y Fn(i)3966 447 y Fs(\))3378 511
y Fh(G)3277 673 y Fn(v)r(<)p Fo(::)3407 652 y Fd(E)3393
673 y Fn(\034)3428 659 y Fj(0)3463 673 y Fk(in)g Fo(\001)3577
582 y Fx(height-sub)q Fs(\()3938 550 y Fr(E)3922 582
y Ft(\034)3965 546 y Fz(0)3987 582 y Fs(\))3378 693 y
Fh(G)3277 855 y Fn(v)r Fo(::)o Fn(>)3407 834 y Fd(E)3393
855 y Fn(\034)3428 841 y Fj(0)3463 855 y Fk(in)g Fo(\001)3577
764 y Fx(height-sup)q Fs(\()3938 732 y Fr(E)3922 764
y Ft(\034)3965 728 y Fz(0)3987 764 y Fs(\))2049 1009
y Fx(height-sup)r Fs(\()2410 977 y Fr(E)2395 1009 y Ft(\034)d
Fs(\))2068 1092 y(=)18 b Fv(case)2313 1060 y Fr(E)2298
1092 y Ft(\034)27 b Fv(of)2165 1175 y Ft(v)d Fu(7!)e
Fs(0)2165 1401 y Fu(9)p Fs(\000)9 b(:)g(\001\(\001)-44
b Fu(\001)22 b Fs(\))p Ft(:)d(C)2582 1401 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2582 1401
a Fw(<...>)2582 1401 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2582 1401 a 168 w Fu(7!)2849 1330
y Fh(G)2947 1203 y(8)2947 1270 y(>)2947 1292 y(>)2947
1315 y(<)2947 1449 y(>)2947 1472 y(>)2947 1494 y(:)3116
1207 y(G)3015 1369 y Fn(v)r(<)p Fo(::)3145 1348 y Fd(E)3131
1369 y Fn(\034)3166 1355 y Fj(0)3201 1369 y Fk(in)12
b Fo(\001)-35 b Fz(\001)3314 1278 y Fx(height-sup)r Fs(\()3675
1246 y Fr(E)3660 1278 y Ft(\034)3703 1242 y Fz(0)3725
1278 y Fs(\))3015 1460 y(1)17 b(+)3248 1389 y Fh(G)3147
1551 y Fn(v)r Fo(::)o Fn(>)3277 1530 y Fd(E)3263 1551
y Fn(\034)3298 1537 y Fj(0)3333 1551 y Fk(in)12 b Fo(\001)-34
b Fz(\001)3447 1460 y Fx(height-sub)q Fs(\()3808 1428
y Fr(E)3792 1460 y Ft(\034)3835 1425 y Fz(0)3857 1460
y Fs(\))p 2042 1641 1993 3 v 2314 1726 a Fv(Figur)o(e)18
b(35.)38 b FF(De\002nition)19 b(of)g(useful)g(height)h(functions)2042
1976 y(F)o(or)31 b(e)o(xample,)i(if)e(we)h(de\002ne)2905
1943 y Fr(E)2890 1976 y Ft(\034)40 b FF(as)32 b Fu(9)3101
1976 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3101 1976 a Fw(X)3101 1976 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3101 1976 a 29 w
Ft(;)3164 1976 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3164 1976 a Fw(Y)3164 1976 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3164 1976
a 63 w Fs(:)i Ft(:)13 b(:)g(:)g Fs(\()3414 1976 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3414
1976 a Fw(X)3414 1976 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3414 1976 a 76 w Ft(<)p Fs(::)3638
1976 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3638 1976 a Fw(Y)3638 1976 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3638 1976 a 30 w
Fs(\))p Ft(:)3751 1976 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3751 1976 a Fw(Pair<X,Y>)3751
1976 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3751 1976 a 265 w FF(,)2042 2059 y(representing)30
b(pairs)f(where)g(the)g(\002rst)f(component)j(is)d(a)h(subtype)h(of)f
(the)2042 2142 y(second)d(component,)g(and)f(if)f(type)h(parameter)3327
2142 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3327 2142 a Fw(P)3327 2142 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3327 2142 a 54 w
FF(is)f(constrained)i(to)e(be)h(a)2042 2225 y(subtype)k(of)2393
2225 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2393 2225 a Fw(Pair<P,)2393 2225 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2393 2225 a
2614 2192 a Fr(E)2599 2225 y Ft(\034)2642 2225 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2642
2225 a Fw(>)2642 2225 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2642 2225 a 57 w FF(then)g(determining)g
(whether)3514 2225 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3514 2225 a Fw(P)3514 2225 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3514
2225 a 58 w FF(is)f(a)g(subtype)i(of)2057 2275 y Fr(E)2042
2308 y Ft(\034)i FF(can)24 b(run)g(fore)n(v)o(er)l(.)g(Algorithmically)
-5 b(,)24 b(the)g(problem)h(is)f(that)f(if)h(a)g(bound)2042
2391 y(v)n(ariable)k(is)f(accessible)h(in)f(an)h(e)o(xplicit)f
(constraint)h(then)f(uni\002cation)h(of)2042 2474 y(that)20
b(v)n(ariable)h(allo)n(ws)f(the)h(accessible)g(portion)g(of)f(a)h(type)
g(to)f(gro)n(w)h(which)2042 2557 y(can)e(lead)g(to)g(non-termination.)
2042 2686 y Fv(Algorithm)g(Requir)o(ement)e(4.)42 b Fs(\001)18
b FF(has)i(\002nite)e(length.)2141 2814 y(This)f(simply)h(ensures)g
(that)f(we)g(can)h(enumerate)g(all)f(the)g(constraints)h(in)2042
2897 y Fs(\001)g FF(when)i(checking)g(assumptions)h(on)e(opened)h(type)
g(v)n(ariables.)2042 3026 y Fv(Algorithm)28 b(Requir)o(ement)g(5.)49
b Ft(<)p Fs(::)28 b FF(in)h Fs(\001)g FF(is)f(co-well-founded)i(on)g
Fs(\000)p FF(,)2042 3109 y(no)25 b(v)n(ariable)g(in)g
Fs(\000)f FF(occurs)i(free)e(in)h Fx(access-cxt)3309
3117 y Fn(>)p Fo(0)3391 3109 y Fs(\(\001\))p FF(,)f(and)h(the)g
(relation)2042 3208 y(\223there)20 b(e)o(xists)2437 3184
y Fs(^)2448 3176 y Fr(E)2433 3208 y Ft(\034)28 b FF(with)19
b Ft(v)2687 3176 y Fz(0)2733 3208 y Fs(::)p Ft(>)2863
3184 y Fs(^)2874 3176 y Fr(E)2858 3208 y Ft(\034)28 b
FF(in)20 b Fs(\001)g FF(and)g Ft(v)j FF(free)d(in)g Fx(access-sup)3806
3228 y Fc(true)3899 3208 y Fs(\()3933 3184 y(^)3944 3176
y Fr(E)3929 3208 y Ft(\034)9 b Fs(\))p FF(\224)2042 3291
y(is)18 b(well-founded)i(on)g Fs(\000)p FF(.)2141 3420
y(The)28 b(\002rst)e(component)k(ensures)e(that)f(the)h(transiti)n(v)o
(e)f(closure)h(of)g Ft(<)p Fs(::)2042 3503 y FF(is)19
b(anti-symmetric)h(on)g(type)h(v)n(ariables,)f(pre)n(v)o(enting)h(the)f
(algorithm)g(from)2042 3586 y(c)o(ycling)25 b(through)g(assumptions)h
(fore)n(v)o(er)l(.)e(The)g(second)i(component)g(pre-)2042
3669 y(v)o(ents)20 b(assumed)h(constraints)g(from)f(simulating)h(the)f
(same)g(problems)h(that)2042 3752 y(inheritance)30 b(causes)g(as)f(we)g
(discussed)h(in)f(Sections)g(3.1)g(and)h(4.4.)f(The)2042
3835 y(third)19 b(component)h(ensures)g(that)f(as)g(we)g(process)g
(assumed)h(lo)n(wer)f(bounds)2042 3918 y(on)31 b(type)g(v)n(ariables)g
(we)g(slo)n(wly)g(dwindle)g(the)g(type)g(v)n(ariables)h(that)e(are)2042
4001 y(reachable)20 b(in)f(a)f(sense.)2042 4130 y Fv(Algorithm)h
(Requir)o(ement)e(6.)42 b Fx(height-sub)q Fs(\()3287
4098 y Fr(E)3272 4130 y Ft(\034)9 b Fs(\))18 b FF(is)g(\002nite.)2141
4259 y(Although)31 b(we)e(can)i(handle)f(implicitly)f(in\002nite)g
(types,)h(certain)g(im-)2042 4342 y(plicitly)17 b(in\002nite)g(types)h
(can)g(cause)h(in\002nite)e(recursion.)h(This)f(requirement)2042
4425 y(pre)n(v)o(ents)g(problematic)h(types)f(such)h(as)e(in)h(Figure)g
(9.)f(Note)h(that,)f(since)h(this)2042 4508 y(requirement)25
b(must)f(hold)h(for)f(all)g(sube)o(xpressions)i(of)3540
4476 y Fr(E)3524 4508 y Ft(\034)33 b FF(as)24 b(well,)f(it)h(also)2042
4591 y(implies)19 b(that)f Fx(height-sup)r Fs(\()2772
4559 y Fr(E)2757 4591 y Ft(\034)9 b Fs(\))18 b FF(is)g(\002nite.)2042
4720 y Fv(Algorithm)40 b(Requir)o(ement)g(7.)57 b FF(No)41
b(v)n(ariable)g(in)g Fs(\000)f FF(occurs)i(free)e(in)2042
4803 y Fx(access)2237 4811 y Fn(>)p Fo(0)2319 4803 y
Fs(\()2365 4770 y Fr(E)2349 4803 y Ft(\034)2383 4811
y Fn(i)2409 4803 y Fs(\))19 b FF(for)g(an)o(y)g Ft(i)g
FF(in)g(1)g(to)g Ft(n)p FF(.)2141 4932 y(Constraints)37
b(on)f(type)g(v)n(ariables)h(and)f(uses)h(of)f(nested)g(e)o(xistential)
2042 5015 y(types)28 b(referencing)h(such)f(type)g(v)n(ariables)h(can)f
(cause)g(an)g(indirect)g(form)2042 5098 y(of)c(problematically)g
(implicitly)g(in\002nite)f(types.)h(F)o(or)f(e)o(xample,)i(the)f(type)
2057 5148 y Fr(E)2042 5181 y Ft(\034)j FF(de\002ned)21
b(as)e Fu(9)p Ft(v)12 b Fs(:)e Ft(v)26 b(<)p Fs(::)2750
5148 y Fr(E)2734 5181 y Ft(\034)9 b Fs(\()p Fq(?)p Fs(\))p
Ft(:)2935 5181 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2935 5181 a Fw(List<List<?)42 b(super)e(List<?)h
(extends)2935 5181 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2935 5181 a 971 w Ft(v)3946 5181
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3946 5181 a Fw(>>>)3946 5181 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3946 5181 a 2042 5264
a FF(has)27 b Fx(height-sub)h FF(of)f(1)g(b)o(ut)g(the)2902
5264 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2902 5264 a Fw(?)40 b(extends)2902 5264 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2902
5264 a 294 w Ft(v)30 b FF(in)d(the)g(body)h(is)f(essentially)2042
5347 y(an)20 b(indirect)f(means)h(to)n(w)o(ards)2842
5347 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2842 5347 a Fw(?)40 b(extends)2842 5347 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2842
5347 a 294 w Ft(\034)28 b FF(because)21 b(of)e(the)h(constraint)g(on)
2042 5430 y Ft(v)27 b FF(and)f(if)e(this)h(replacement)h(were)f(done)h
(ad)f(in\002nitum)g(then)g Fx(height-sub)p eop end
%%Page: 19 19
TeXDict begin 19 18 bop -82 108 a Fx(swaps-sub)r Fs(\()275
76 y Fr(E)260 108 y Ft(\034)9 b Fs(\))-63 191 y(=)18
b Fv(case)182 159 y Fr(E)167 191 y Ft(\034)27 b Fv(of)34
274 y Ft(v)d Fu(7!)d(f)p Fx(sub)r Fs(\()p Ft(v)s Fs(\))g
Fu(7!)g Fs(0)p Fu(g)34 357 y(9)p Fs(\000)9 b(:)g(\001\(\001)-44
b Fu(\001)22 b Fs(\))p Ft(:)d(C)451 357 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 451 357 a Fw(<)451
357 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 451 357 a 496 325 a Fr(E)480 357 y Ft(\034)514
365 y Fo(1)549 357 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 549 357 a Fw(,)39 b(...,)549 357
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 549 357 a 770 325 a Fr(E)755 357 y Ft(\034)789 365
y Fn(n)831 357 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 831 357 a Fw(>)831 357 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 831 357 a 90
440 a Fu(7!)19 b Fv(\002x)f Ft(v)k Fv(fr)o(om)d Fs(\000)186
666 y Fv(using)387 468 y Fh(8)387 535 y(>)387 557 y(>)387
580 y(<)387 714 y(>)387 737 y(>)387 759 y(:)456 543 y
Fx(sub)p Fs(\()p Ft(v)s Fs(\))g Fu(7!)874 472 y Fh(G)773
634 y Fn(v)r(<)p Fo(::)903 613 y Fd(E)889 634 y Fn(\034)924
620 y Fj(0)959 634 y Fk(in)12 b Fo(\001)1073 543 y Fx(swaps-sub)q
Fs(\()1429 511 y Fr(E)1414 543 y Ft(\034)1457 507 y Fz(0)1479
543 y Fs(\))456 725 y Fx(sup)p Fs(\()p Ft(v)s Fs(\))19
b Fu(7!)874 654 y Fh(G)773 816 y Fn(v)r Fo(::)o Fn(>)903
795 y Fd(E)889 816 y Fn(\034)924 802 y Fj(0)959 816 y
Fk(in)12 b Fo(\001)1073 725 y Fx(swaps-sup)q Fs(\()1429
693 y Fr(E)1414 725 y Ft(\034)1457 690 y Fz(0)1479 725
y Fs(\))186 982 y Fv(in)346 911 y Fh(G)279 1070 y Fn(i)h
Fk(in)f Fo(1)h Fk(to)f Fn(n)510 829 y Fh(8)510 896 y(<)510
1031 y(:)579 897 y Fx(swaps-sub)q Fs(\()935 865 y Fr(E)920
897 y Ft(\034)954 905 y Fn(i)980 897 y Fs(\))579 980
y Fx(swaps-sup)q Fs(\()935 948 y Fr(E)920 980 y Ft(\034)954
988 y Fn(i)980 980 y Fs(\))579 1063 y Fu(f)p Fx(const)22
b Fu(7!)f Fs(0)p Fu(g)-82 1239 y Fx(swaps-sup)r Fs(\()275
1207 y Fr(E)260 1239 y Ft(\034)9 b Fs(\))-63 1322 y(=)18
b Fv(case)182 1290 y Fr(E)167 1322 y Ft(\034)27 b Fv(of)34
1405 y Ft(v)d Fu(7!)d(f)p Fx(sup)r Fs(\()p Ft(v)s Fs(\))g
Fu(7!)g Fs(0)p Fu(g)34 1488 y(9)p Fs(\000)9 b(:)g(\001\(\001)-44
b Fu(\001)22 b Fs(\))p Ft(:)d(C)451 1488 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 451 1488 a
Fw(<...>)451 1488 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 451 1488 a 168 w Fu(7!)g Fv(r)o(eplace)g
Ft(v)i Fv(fr)o(om)e Fs(\000)715 1622 y Fv(using)917 1516
y Fh(\032)974 1578 y Fx(sub)q Fs(\()p Ft(v)s Fs(\))f
Fu(7!)h(f)p Fx(const)j Fu(7!)f(1g)974 1661 y Fx(sup)q
Fs(\()p Ft(v)s Fs(\))d Fu(7!)h(f)p Fx(const)j Fu(7!)f(1g)715
1893 y Fv(in)809 1822 y Fh(G)1007 1700 y(G)907 1862 y
Fn(v)r(<)p Fo(::)1036 1840 y Fd(E)1023 1862 y Fn(\034)1058
1848 y Fj(0)1092 1862 y Fk(in)13 b Fo(\001)-35 b Fz(\001)1206
1771 y Fx(swaps-sup)r Fs(\()1563 1739 y Fr(E)1548 1771
y Ft(\034)1591 1735 y Fz(0)1612 1771 y Fs(\))907 1953
y(1)17 b(+)1140 1882 y Fh(G)1039 2044 y Fn(v)r Fo(::)o
Fn(>)1169 2023 y Fd(E)1155 2044 y Fn(\034)1190 2030 y
Fj(0)1225 2044 y Fk(in)12 b Fo(\001)-35 b Fz(\001)1338
1953 y Fx(swaps-sub)r Fs(\()1695 1921 y Fr(E)1680 1953
y Ft(\034)1723 1917 y Fz(0)1744 1953 y Fs(\))p -150 2134
1993 3 v 106 2219 a Fv(Figur)o(e)18 b(36.)38 b FF(De\002nition)18
b(of)h(the)g(k)o(e)o(y)h(height)g(functions)-150 2488
y(w)o(ould)j(be)g Fu(1)p FF(.)f(Thus)h(this)f(requirement)h(pre)n(v)o
(ents)g(types)g(which)g(ha)o(v)o(e)g(an)-150 2571 y(indirectly)c
(in\002nite)g(height.)-150 2740 y Fv(B.1.3)75 b(Height)18
b(Functions)-150 2856 y FF(In)e(order)h(to)f(pro)o(v)o(e)h
(termination,)f(we)g(de\002ne)h(tw)o(o)f(k)o(e)o(y)h(mutually)g
(recursi)n(v)o(e)-150 2939 y(height)27 b(functions)h(sho)n(wn)g(in)f
(Figure)g(36.)g(The)o(y)g(operate)h(on)f(the)g(lattice)-150
3022 y(of)f(partial)g(functions)h(to)f(the)g(coinducti)n(v)o(e)i(v)n
(ariant)f(of)f(natural)g(numbers)-150 3105 y(\(i.e.)35
b(e)o(xtended)j(with)e Fu(1)g FF(where)g Fs(1)31 b(+)f
Fu(1)54 b Fs(=)g Fu(1)p FF(\).)36 b(The)g(domain)h(of)-150
3188 y(the)27 b(partial)g(function)h(for)e(the)i(height)f(of)1012
3156 y Fr(E)996 3188 y Ft(\034)35 b FF(is)27 b(a)g(subset)g(of)g
Fx(sub)q Fs(\()p Ft(v)s Fs(\))g FF(and)-150 3271 y Fx(sup)q
Fs(\()p Ft(v)s Fs(\))36 b FF(for)g Ft(v)j FF(free)d(in)551
3239 y Fr(E)535 3271 y Ft(\034)45 b FF(as)36 b(well)g(as)g
Fx(const)p FF(.)h(Note)f(that)g(the)h(use)f(of)-150 3354
y(partial)27 b(maps)i(is)e(signi\002cant)h(since)g Fs(1)g
FF(plus)g(the)g(completely)h(unde\002ned)-150 3437 y(map)d(results)f
(in)g(the)h(unde\002ned)g(map)g(whereas)g Fs(1)f FF(plus)h
Fu(f)p Fx(sub)q Fs(\()p Ft(v)s Fs(\))33 b Fu(7!)h Fs(0)p
Fu(g)-150 3520 y FF(is)f Fu(f)p Fx(sub)q Fs(\()p Ft(v)s
Fs(\))50 b Fu(7!)f Fs(1)p Fu(g)p FF(.)34 b(This)f(means)i(that)e
Fx(map)c Fs(+)f(\()p Ft(n)h Fs(+)f Fx(map)1582 3488 y
Fz(0)1605 3520 y Fs(\))33 b FF(might)-150 3603 y(not)i(equal)h
Ft(n)30 b Fs(+)f(\()p Fx(map)h Fs(+)f Fx(map)748 3571
y Fz(0)770 3603 y Fs(\))35 b FF(since)g(the)g(tw)o(o)g(partial)g(maps)h
(may)-150 3686 y(be)c(de\002ned)h(on)f(dif)n(ferent)g(domain)h
(elements.)f(Using)g(this)f(lattice,)g(the)-150 3769
y(function)e Fx(swaps-sub)q Fs(\()484 3737 y Fr(E)468
3769 y Ft(\034)9 b Fs(\))27 b FF(indicates)i(the)f(height)h(of)1301
3737 y Fr(E)1286 3769 y Ft(\034)36 b FF(should)29 b(it)f(be)g(the)-150
3852 y(subtype,)21 b(while)g Fx(swaps-sup)q Fs(\()664
3820 y Fr(E)649 3852 y Ft(\034)9 b Fs(\))19 b FF(indicates)i(the)g
(height)g(of)1444 3820 y Fr(E)1428 3852 y Ft(\034)29
b FF(should)21 b(it)f(be)-150 3935 y(the)25 b(supertype.)h(The)e
(functions)i(are)f(mutually)g(recursi)n(v)o(e)h(because)g(each)-150
4018 y(time)19 b(a)f(sw)o(ap)i(occurs)g(the)f(role)f(of)780
3986 y Fr(E)764 4018 y Ft(\034)27 b FF(switches.)-50
4101 y(The)20 b(partial)f(map)i(indicates)f(the)g(lar)o(gest)g(number)h
(of)f(sw)o(aps)g(in)1684 4069 y Fr(E)1668 4101 y Ft(\034)28
b FF(that)-150 4184 y(can)g(tak)o(e)g(place)g(such)g(that,)f(for)g
Fx(sub)q Fs(\()p Ft(v)s Fs(\))p FF(,)g(the)g(subtype)i(becomes)g
Ft(v)s FF(,)d(for)-150 4267 y Fx(sup)q Fs(\()p Ft(v)s
Fs(\))p FF(,)h(the)h(supertype)h(becomes)h Ft(v)s FF(,)d(and)i(for)f
Fx(const)p FF(,)g(the)g(subtype)h(be-)-150 4350 y(comes)e(a)e(non-v)n
(ariable.)i(F)o(or)f(e)o(xample,)g(the)g(e)o(xtended)h(natural)f
(number)-150 4433 y(for)14 b Fx(const)j FF(of)d Fx(swaps-sup)q
Fs(\()542 4433 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 542 4433 a Fw(List<?)41 b(super)f(List<List<?)i(super)
e(Integer>>>)542 4433 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 542 4433 a 1207 w Fs(\))14 b
FF(is)-150 4516 y(1)i(greater)h(than)g(that)f(of)g Fx(swaps-sub)r
Fs(\()820 4516 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 820 4516 a Fw(List<List<?)41 b(super)g(Integer>>)820
4516 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 820 4516 a 794 w Fs(\))16 b FF(which)-150 4599
y(is)36 b(at)g(least)g(greater)g(than)h(that)f(of)h Fx(swaps-sup)q
Fs(\()1195 4599 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1195 4599 a Fw(List<?)j(super)h(Integer>)1195
4599 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1195 4599 a 618 w Fs(\))-150 4682 y FF(which)35
b(is)g(1)g(greater)g(than)g(that)g(of)g Fx(swaps-sub)q
Fs(\()1214 4682 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1214 4682 a Fw(Integer)1214 4682 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate

1214 4682 a 206 w Fs(\))g FF(which)g(is)f(0.)-150 4765
y(Thus,)28 b(if)g(the)h(supertype)g(is)636 4765 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 636
4765 a Fw(List<?)41 b(super)f(List<List<?)i(super)e(Integer>>>)636
4765 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 636 4765 a -150 4848 a FF(then)d(the)h(subtype)g(can)f(become)i
(a)e(non-v)n(ariable)h(pro)o(vided)g(at)f(most)-150 4931
y(2)c(sw)o(aps)g(in)f(the)h(type)g(ha)o(v)o(e)g(been)g(processed.)h(If)
e(on)h(the)f(other)h(hand)-150 5014 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -150 5014 a Fw(Map<?)40
b(super)h(Integer,?)g(super)f(Integer>)-150 5014 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -150
5014 a 1085 w FF(is)25 b(the)h(supertype)h(then)f(the)g(sub-)-150
5097 y(type)h(can)g(become)g(a)g(non-v)n(ariable)h(after)e(at)g(most)g
(1)h(sw)o(ap)g(in)f(the)h(type)-150 5180 y(since)19 b(the)g(tw)o(o)262
5180 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 262 5180 a Fw(?)40 b(super)262 5180 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 262 5180
a 206 w FF(s)19 b(occur)h(side-by-side)f(rather)g(than)h(nested.)-50
5263 y(The)41 b(operation)h Fv(r)o(eplace)19 b Ft(d)f
Fv(fr)o(om)h Fu(D)i Fv(using)d Ft(d)64 b Fu(7!)g Fx(map)1556
5283 y Fn(d)1610 5263 y Fv(in)18 b Fx(map)1820 5232 y
Fz(0)-150 5347 y FF(results)39 b(in)g Fx(map)310 5315
y Fz(0)345 5291 y Fh(F)409 5369 y Fn(d)13 b Fk(in)f Fz(D)559
5347 y Fs(\()p Fx(map)717 5315 y Fz(0)740 5347 y Fs(\()p
Ft(d)p Fs(\))32 b(+)g Fx(map)1093 5366 y Fn(d)1129 5347
y Fs(\))p FF(,)39 b(where)g(an)h(unde\002ned)-150 5430
y(v)n(alue)d(plus)f(an)o(ything)h(results)f(in)g(the)g(completely)g
(unde\002ned)i(partial)2042 66 y(mapping.)45 b(This)f(acts)h(some)n
(what)g(lik)o(e)g(substitution.)g(F)o(or)f(e)o(xample,)2042
149 y Fv(r)o(eplace)18 b Fx(sub)q Fs(\()2425 149 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2425
149 a Fw(X)2425 149 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2425 149 a 30 w Fs(\))g Fv(using)g
Fu(f)p Fx(sub)q Fs(\()2864 149 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2864 149 a Fw(Y)2864
149 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2864 149 a 30 w Fs(\))j Fu(7!)g Fs(2)p Fu(g)e Fv(in)f
Fu(f)p Fx(sub)r Fs(\()3392 149 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3392 149 a Fw(X)3392
149 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3392 149 a 29 w Fs(\))j Fu(7!)g Fs(1)p Ft(;)14
b Fx(sub)p Fs(\()3776 149 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3776 149 a Fw(Y)3776 149
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3776 149 a 30 w Fs(\))21 b Fu(7!)g Fs(1)p Fu(g)2042
232 y FF(results)d(in)f Fu(f)p Fx(sub)q Fs(\()2502 232
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2502 232 a Fw(Y)2502 232 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2502 232 a 30 w Fs(\))k
Fu(7!)g Fs(3)p Fu(g)p FF(.)d(The)g(idea)g(is)g(that)f(the)h
Fv(using)f FF(clause)i(indicates)2042 315 y(that)27 b
Fx(sub)q Fs(\()2315 315 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2315 315 a Fw(X)2315 315 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate

2315 315 a 29 w Fs(\))g FF(is)f(at)h(most)g Fs(2)d(+)f
Fx(sub)q Fs(\()3009 315 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3009 315 a Fw(Y)3009 315 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate

3009 315 a 29 w Fs(\))k FF(and)h(the)f Fv(in)f FF(clause)i(indicates)f
(the)2042 399 y(result)21 b(is)g(at)g(most)h Fs(1)d(+)g
Fx(sub)q Fs(\()2812 399 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2812 399 a Fw(X)2812 399 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate

2812 399 a 29 w Fs(\))i FF(or)g Fs(1)f(+)e Fx(sub)q Fs(\()3245
399 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3245 399 a Fw(Y)3245 399 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3245 399 a 29 w Fs(\))p
FF(,)j(from)h(which)f(we)h(deduce)2042 482 y(the)d(result)f(is)h(at)g
(most)g Fs(3)e(+)g Fx(sub)q Fs(\()2908 482 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2908 482
a Fw(Y)2908 482 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2908 482 a 29 w Fs(\))p FF(.)2141 565
y(The)33 b(operation)g Fv(\002x)18 b Ft(d)h Fv(fr)o(om)g
Fu(D)i Fv(using)d Ft(d)46 b Fu(7!)h Fx(map)3543 584 y
Fn(d)3598 565 y Fv(in)18 b Fx(map)3807 533 y Fz(0)3862
565 y FF(deter)o(-)2042 648 y(mines)i(the)h(least)f Fu(f)p
2547 606 129 4 v Fx(map)2676 667 y Fn(d)2712 648 y Fu(g)2750
657 y Fn(d)13 b Fk(in)f Fz(D)2920 648 y FF(with)19 b(each)p
3229 606 V 21 w Fx(map)3358 667 y Fn(d)3414 648 y FF(greater)i(than)f
(or)g(equal)2042 731 y(to)41 b Fv(r)o(eplace)19 b Ft(d)2431
699 y Fz(0)2472 731 y Fv(fr)o(om)g Fu(D)i Fv(using)d
Ft(d)2956 699 y Fz(0)3043 731 y Fu(7!)p 3184 689 V 64
w Fx(map)3313 750 y Fn(d)3345 736 y Fj(0)3390 731 y Fv(in)g
Fx(map)3600 750 y Fn(d)3677 731 y FF(and)43 b(returns)2042
814 y Fv(r)o(eplace)18 b Ft(d)h Fv(fr)o(om)g Fu(D)i Fv(using)d
Ft(d)40 b Fu(7!)p 2991 772 V 40 w Fx(map)3120 833 y Fn(d)3175
814 y Fv(in)18 b Fx(map)3384 782 y Fz(0)3407 814 y FF(.)28
b(Thus,)h(the)g Fv(\002x)f FF(oper)o(-)2042 897 y(ation)19
b(produces)h(the)f(least)g(\002xpoint)g(for)g(the)g Fv(r)o(eplace)g
FF(operation.)2042 1024 y Fv(Lemma)i(1.)44 b Fx(Given)21
b(two)g(sets)f(of)h(domain)h(elements)g Fu(D)h Fx(and)f
Fu(D)3750 992 y Fz(0)3793 1024 y Fx(and)g(two)2042 1107
y(families)d(of)g(partial)h(maps)g Fu(f)p Fx(map)2942
1126 y Fn(d)2979 1107 y Fu(g)3017 1116 y Fn(d)12 b Fk(in)h
Fz(D)3186 1107 y Fx(and)20 b Fu(f)p Fx(map)3484 1075
y Fz(0)3484 1126 y Fn(d)3516 1112 y Fj(0)3543 1107 y
Fu(g)3581 1119 y Fn(d)3613 1105 y Fj(0)3648 1119 y Fk(in)12
b Fz(D)3749 1105 y Fj(0)3795 1107 y Fx(and)20 b(any)2042
1190 y(partial)f(map)p 2412 1148 V 20 w(map)q(,)f(if)h(no)h(map)2861
1209 y Fn(d)2917 1190 y Fx(maps)f(any)h(domain)h(element)e
Ft(d)3755 1158 y Fz(0)3796 1190 y Fx(in)g Fu(D)3934 1158
y Fz(0)3976 1190 y Fx(to)2042 1273 y(an)g(e)o(xtended)h(natur)o(al)g
(number)-8 b(,)19 b(then)2357 1439 y Fv(\002x)2467 1334
y Fh(\032)2525 1395 y Ft(d)f Fv(fr)o(om)h Fu(D)2525 1479
y Ft(d)2565 1447 y Fz(0)2606 1479 y Fv(fr)o(om)g Fu(D)2842
1447 y Fz(0)2357 1618 y Fv(using)2559 1513 y Fh(\032)2616
1574 y Ft(d)35 b Fu(7!)13 b Fx(map)2909 1594 y Fn(d)2616
1658 y Ft(d)2656 1627 y Fz(0)2691 1658 y Fu(7!)g Fx(map)2909
1627 y Fz(0)2909 1678 y Fn(d)2941 1664 y Fj(0)2357 1747
y Fv(in)p 2438 1705 V 18 w Fx(map)2999 1570 y Fs(=)3080
1401 y Fv(\002x)19 b Ft(d)f Fv(fr)o(om)h Fu(D)3080 1484
y Fv(using)f Ft(d)j Fu(7!)h Fx(map)3557 1503 y Fn(d)3080
1568 y Fv(in)c(\002x)h Ft(d)3299 1536 y Fz(0)3340 1568
y Fv(fr)o(om)g Fu(D)3576 1536 y Fz(0)3161 1652 y Fv(using)f
Ft(d)3390 1621 y Fz(0)3434 1652 y Fu(7!)j Fx(map)3661
1621 y Fz(0)3661 1672 y Fn(d)3693 1658 y Fj(0)3161 1735
y Fv(in)p 3242 1693 V 18 w Fx(map)2042 1910 y(Pr)m(oof.)28
b FF(F)o(ollo)n(ws)f(from)g(the)g(f)o(act)g(that,)g(under)h(the)f
(assumption,)h(the)f(fol-)2042 1993 y(lo)n(wing)19 b(can)h(be)f(easily)
g(sho)n(wn)h(to)e(hold)i(for)f(an)o(y)28 b Fh(d)-120
b Fx(map)q FF(:)2151 2165 y Fv(r)o(eplace)2414 2060 y
Fh(\032)2471 2121 y Ft(d)19 b Fv(fr)o(om)g Fu(D)2471
2205 y Ft(d)2511 2174 y Fz(0)2552 2205 y Fv(fr)o(om)g
Fu(D)2788 2174 y Fz(0)2151 2422 y Fv(using)2353 2247
y Fh(8)2353 2314 y(>)2353 2336 y(<)2353 2471 y(>)2353
2493 y(:)2421 2294 y Ft(d)41 b Fu(7!)19 b Fx(map)2726
2314 y Fn(d)2421 2379 y Ft(d)2461 2347 y Fz(0)2502 2379
y Fu(7!)g Fv(r)o(eplace)f Ft(d)h Fv(fr)o(om)g Fu(D)2598
2462 y Fv(using)f Ft(d)j Fu(7!)g Fx(map)3074 2481 y Fn(d)2598
2546 y Fv(in)d Fx(map)2807 2514 y Fz(0)2807 2566 y Fn(d)2839
2552 y Fj(0)2151 2629 y Fv(in)27 b Fh(d)-120 b Fx(map)3173
2374 y Fs(=)3255 2205 y Fv(r)o(eplace)18 b Ft(d)h Fv(fr)o(om)g
Fu(D)3255 2288 y Fv(using)e Ft(d)22 b Fu(7!)f Fx(map)3731
2307 y Fn(d)3255 2372 y Fv(in)d(r)o(eplace)g Ft(d)3625
2340 y Fz(0)3666 2372 y Fv(fr)o(om)h Fu(D)3902 2340 y
Fz(0)3336 2456 y Fv(using)e Ft(d)3564 2425 y Fz(0)3608
2456 y Fu(7!)k Fx(map)3835 2425 y Fz(0)3835 2476 y Fn(d)3867
2462 y Fj(0)3336 2540 y Fv(in)26 b Fh(d)-119 b Fx(map)p
3980 2752 4 51 v 3984 2705 45 4 v 3984 2752 V 4028 2752
4 51 v 2042 2918 a Fv(Lemma)32 b(2.)51 b Fx(Given)31
b(a)h(set)f(of)g(domain)h(elements)g Fu(D)i Fx(and)e(a)f(family)g(of)
2042 3001 y(partial)19 b(maps)g Fu(f)p Fx(map)2607 3021
y Fn(d)2643 3001 y Fu(g)2681 3010 y Fn(d)13 b Fk(in)f
Fz(D)2831 3001 y Fx(,)18 b(if)g(the)h(pr)m(eor)m(der)h(r)m(e\003ection)
g(of)f(the)f(r)m(elation)2042 3084 y(\223map)2212 3104
y Fn(d)2264 3084 y Fx(maps)f Ft(d)2478 3052 y Fz(0)2516
3084 y Fx(to)f Fs(0)p Fx(\224)g(holds)h(for)g(all)f Ft(d)g
Fx(and)h Ft(d)3287 3052 y Fz(0)3325 3084 y Fx(in)f Fu(D)j
Fx(and)e(no)g(map)3824 3104 y Fn(d)3877 3084 y Fx(maps)2042
3167 y(a)h Ft(d)2137 3135 y Fz(0)2178 3167 y Fx(to)g(a)h(non-zer)m(o)g
(e)o(xtended)h(natur)o(al)f(number)h(for)e Ft(d)g Fx(and)h
Ft(d)3690 3135 y Fz(0)3731 3167 y Fx(in)f Fu(D)r Fx(,)h(then)2042
3250 y(for)g(any)g(partial)g(map)h(map)2772 3219 y Fz(0)2795
3250 y Fx(,)e(the)h(following)g(holds:)2283 3503 y Fv(\002x)g
Ft(d)f Fv(fr)o(om)h Fu(D)2283 3586 y Fv(using)f Ft(d)j
Fu(7!)h Fx(map)2760 3606 y Fn(d)2283 3671 y Fv(in)c Fx(map)2493
3639 y Fz(0)2818 3589 y Fs(=)2899 3372 y Fv(r)o(eplace)h
Ft(d)f Fv(fr)o(om)h Fu(D)2899 3456 y Fv(using)f Ft(d)j
Fu(7!)p Fv(r)o(eplace)d Ft(d)3515 3424 y Fz(0)3556 3456
y Fv(fr)o(om)h Fu(D)3226 3540 y Fv(using)f Ft(d)3455
3509 y Fz(0)3498 3540 y Fu(7!)j Fq(?)3226 3644 y Fv(in)3370
3573 y Fh(G)3319 3735 y Fn(d)3351 3721 y Fj(00)3405 3735
y Fk(in)12 b Fz(D)3518 3644 y Fx(map)3647 3663 y Fn(d)3679
3649 y Fj(00)2899 3802 y Fv(in)18 b Fx(map)3108 3771
y Fz(0)2042 3965 y Fx(Pr)m(oof.)28 b FF(Easily)19 b(sho)n(wn)h(through)
g(tedious)f(calculation.)p 3980 3965 V 3984 3918 45 4
v 3984 3965 V 4028 3965 4 51 v 2042 4130 a Fv(Lemma)28
b(3.)48 b Fx(Given)28 b(a)g(\002nite)g(set)g(of)g(domain)h(elements)f
Fu(D)i Fx(and)e(a)g(fam-)2042 4216 y(ily)j(of)h(partial)g(maps)h
Fu(f)p Fx(map)2830 4236 y Fn(d)2866 4216 y Fu(g)2904
4225 y Fn(d)13 b Fk(in)f Fz(D)3054 4216 y Fx(,)31 b(de\002ne)i
Ft(d)46 b Fu(\034)3477 4185 y Fn(\036)3477 4230 y Fb(map)3613
4216 y Ft(d)3653 4185 y Fz(0)3707 4216 y Fx(as)32 b(\223map)3976
4236 y Fn(d)4008 4222 y Fj(0)2042 4300 y Fx(maps)d Ft(d)g
Fx(to)g(an)h(e)o(xtended)g(natur)o(al)g(number)g Ft(i)f
Fx(suc)o(h)h(that)f Ft(\036)p Fs(\()p Ft(i)p Fs(\))g
Fx(holds\224.)2042 4387 y(If)20 b Fu(\034)2185 4355 y
Fn(>)p Fo(0)2185 4400 y Fb(map)2295 4387 y Fx(is)g(well-founded)h(on)g
Fu(D)h Fx(modulo)g(the)e(equivalence)i(cor)m(e\003ection)2042
4476 y(of)28 b(the)g(pr)m(eor)m(der)i(r)m(e\003ection)f(of)f
Fu(\034)3005 4444 y Fa(true)3005 4489 y Fb(map)3122 4476
y Fx(then)h Fv(\002x)18 b Ft(d)h Fv(fr)o(om)g Fu(D)i
Fv(using)d Ft(d)39 b Fu(7!)2042 4563 y Fx(map)2170 4582
y Fn(d)2225 4563 y Fv(in)18 b Fx(map)2435 4531 y Fz(0)2475
4563 y FF(is)f Fx(\002x)2612 4582 y Fn(n)2672 4563 y
FF(where)h Fx(\002x)g FF(is)f(de\002ned)i(inducti)n(v)o(ely)f(by)h(the)
e(follo)n(w-)2042 4646 y(ing:)2195 4993 y Fx(\002x)2266
5013 y Fo(0)2322 4993 y Fs(=)k Fx(map)2531 4957 y Fz(0)2628
4993 y Fx(\002x)2699 5013 y Fn(i)p Fo(+1)2824 4993 y
Fs(=)2905 4768 y Fv(r)o(eplace)d Ft(d)h Fv(fr)o(om)g
Fu(E)3429 4776 y Fn(i)p Fo(+1)2905 4852 y Fv(using)f
Ft(d)j Fu(7!)p Fv(r)o(eplace)d Ft(d)3521 4820 y Fz(0)3562
4852 y Fv(fr)o(om)h Fu(E)3778 4860 y Fn(i)p Fo(+1)3232
4936 y Fv(using)f Ft(d)3461 4905 y Fz(0)3504 4936 y Fu(7!)j
Fq(?)3232 5040 y Fv(in)3416 4969 y Fh(G)3325 5131 y Fn(d)3357
5117 y Fj(00)3411 5131 y Fk(in)12 b Fz(E)3495 5142 y
Fl(i)p Fi(+1)3605 5040 y Fx(map)3734 5059 y Fn(d)3766
5045 y Fj(00)2905 5215 y Fv(in)18 b Fx(\002x)3056 5234
y Fn(i)2042 5344 y FF(where)23 b Fu(fE)2326 5352 y Fn(i)2352
5344 y Fu(g)2390 5352 y Fn(i)13 b Fk(in)f(1)g(to)h Fn(n)2629
5344 y FF(is)22 b(an)o(y)h(toposort)h(\(ignoring)f(self-loops\))g
(according)2042 5430 y(to)e Fu(\034)2198 5398 y Fc(true)2198
5443 y Fb(map)2312 5430 y FF(of)g(the)h(equi)n(v)n(alence)h(classes)f
(of)g(the)f(equi)n(v)n(alence)j(core\003ection)p eop
end
%%Page: 20 20
TeXDict begin 20 19 bop -150 66 a FF(of)35 b(the)h(preorder)g
(re\003ection)g(of)f Fu(\034)854 35 y Fc(true)854 80
y Fb(map)982 66 y FF(\(i.e.)f(the)i(strongly)g(connected)-150
157 y(components)21 b(of)e Fu(\034)388 126 y Fc(true)388
170 y Fb(map)480 157 y FF(\).)-150 318 y Fx(Pr)m(oof.)29
b FF(A)21 b(toposort)h(\(ignoring)h(self-loops\))f(e)o(xists)g(because)
h Fu(\034)1573 286 y Fn(>)p Fo(0)1573 331 y Fb(map)1684
318 y FF(is)e(as-)-150 401 y(sumed)j(to)f(be)g(well-founded)h(modulo)h
(the)e(equi)n(v)n(alence)i(core\003ection)e(of)-150 485
y(the)17 b(preorder)h(re\003ection)f(of)g Fu(\034)683
453 y Fc(true)683 498 y Fb(map)775 485 y FF(.)f(So)h(what)g(has)g(to)g
(be)g(sho)n(wn)h(is)e(that)h(the)-150 568 y(\002xpoint)i(is)g(equi)n(v)
n(alent)h(to)f(the)g(inducti)n(v)o(ely)h(de\002ned)f(v)n(alue.)-50
651 y(W)-6 b(e)18 b(pro)o(v)o(e)i(by)f(induction)h(on)f
Ft(i)g FF(that)g(the)g(follo)n(wing)g(holds:)39 791 y
Fx(\002x)110 811 y Fn(i)157 791 y Fs(=)i Fv(\002x)e Ft(d)f
Fv(fr)o(om)641 721 y Fh([)582 879 y Fn(j)e Fk(in)c(1)h(to)f
Fn(i)798 791 y Fu(E)839 799 y Fn(j)890 791 y Fv(using)18
b Ft(d)j Fu(7!)g Fx(map)1366 811 y Fn(d)1421 791 y Fv(in)d
Fx(map)1631 756 y Fz(0)-50 999 y FF(This)25 b(ob)o(viously)h(holds)g
(for)f(0)h(since)f(the)h(set)1191 943 y Fh(S)1255 1022
y Fn(j)16 b Fk(in)c(1)g(to)g Fo(0)1483 999 y Fu(E)1524
1007 y Fn(j)1581 999 y FF(is)25 b(empty)-150 1095 y(and)20
b Fx(\002x)47 1115 y Fo(0)100 1095 y FF(is)f(de\002ned)h(to)e(be)i
Fx(map)702 1063 y Fz(0)725 1095 y FF(.)-50 1178 y(F)o(or)d
Ft(i)f Fs(+)f(1)j FF(we)g(rely)h(on)g(our)f(assumptions)i(and)f(our)g
(lemmas.)f(First,)f(by)-150 1262 y(de\002nition)h(of)f
Fu(\034)310 1230 y Fc(true)310 1275 y Fb(map)419 1262
y FF(and)h(toposort,)g(for)f(an)o(y)h(domain)g(element)g
Ft(d)f FF(in)g Fu(E)1721 1270 y Fn(i)p Fo(+1)1824 1262
y FF(,)-150 1345 y Fx(map)-21 1365 y Fn(d)35 1345 y FF(maps)22
b(no)f(domain)h(element)f(in)890 1289 y Fh(S)954 1368
y Fn(j)16 b Fk(in)c(1)g(to)g Fn(i)1174 1345 y Fu(E)1215
1353 y Fn(j)1267 1345 y FF(to)21 b(an)g(e)o(xtended)h(nat-)-150
1433 y(ural)g(number)l(.)g(Thus)h(by)f(Lemma)g(1)g(and)h(then)f(by)g
(inducti)n(v)o(e)h(assumption)-150 1516 y(we)c(ha)o(v)o(e)-146
1725 y Fv(\002x)g Ft(d)f Fv(fr)o(om)231 1654 y Fh([)134
1813 y Fn(j)e Fk(in)c(1)g(to)h Fn(i)p Fo(+1)363 1725
y Fu(E)404 1733 y Fn(j)-146 1889 y Fv(using)18 b Ft(d)j
Fu(7!)g Fx(map)331 1909 y Fn(d)-146 1973 y Fv(in)d Fx(map)64
1942 y Fz(0)457 1841 y Fs(=)538 1621 y Fv(\002x)h Ft(d)f
Fv(fr)o(om)h Fu(E)910 1629 y Fn(i)p Fo(+1)538 1706 y
Fv(using)f Ft(d)767 1674 y Fz(0)811 1706 y Fu(7!)j Fx(map)1037
1725 y Fn(d)538 1809 y Fv(in)d(\002x)h Ft(d)757 1777
y Fz(0)798 1809 y Fv(fr)o(om)1019 1738 y Fh([)960 1897
y Fn(j)d Fk(in)c(1)g(to)g Fn(i)1150 1809 y Fu(E)1191
1817 y Fn(j)619 1973 y Fv(using)18 b Ft(d)j Fu(7!)g Fx(map)1096
1992 y Fn(d)1128 1978 y Fj(0)619 2057 y Fv(in)d Fx(map)829
2025 y Fz(0)1244 1841 y Fs(=)1325 1756 y Fv(\002x)h Ft(d)f
Fv(fr)o(om)h Fu(E)1697 1764 y Fn(i)p Fo(+1)1325 1839
y Fv(using)f Ft(d)j Fu(7!)g Fx(map)1802 1859 y Fn(d)1325
1922 y Fv(in)d Fx(\002x)1477 1942 y Fn(i)-150 2179 y
FF(Note)26 b(that)g(we)h(are)f(trying)h(to)f(pro)o(v)o(e)h(the)f(left)g
(v)n(alue)h(is)f(equal)h(to)f Fx(\002x)1720 2199 y Fn(i)p
Fo(+1)1824 2179 y FF(,)-150 2262 y(which)20 b(we)g(can)h(no)n(w)f(do)h
(by)f(pro)o(ving)h(the)f(right)g(v)n(alue)h(is)e(equal)i(to)f
Fx(\002x)1720 2282 y Fn(i)p Fo(+1)1824 2262 y FF(.)-150
2345 y(Since)f Fu(E)76 2353 y Fn(i)p Fo(+1)198 2345 y
FF(is)g(de\002ned)h(to)f(be)g(an)h(equi)n(v)n(alence)h(class)e(of)g
(the)g(equi)n(v)n(alence)-150 2429 y(core\003ection)g(of)g(the)g
(preorder)h(re\003ection)f(of)f Fu(\034)1142 2397 y Fc(true)1142
2442 y Fb(map)1235 2429 y FF(,)g(and)i(since)f(our)g(well-)-150
2520 y(foundedness)24 b(assumption)g(implies)e Ft(d)27
b Fu(\034)994 2488 y Fn(>)p Fo(0)994 2533 y Fb(map)1111
2520 y Ft(d)1151 2488 y Fz(0)1196 2520 y FF(does)22 b(not)h(hold)g(for)
f(an)o(y)-150 2607 y Ft(d)c FF(and)i Ft(d)75 2575 y Fz(0)116
2607 y FF(in)f Fu(E)234 2615 y Fn(i)p Fo(+1)337 2607
y FF(,)f(we)h(can)g(apply)h(Lemma)f(2)g(to)g(conclude)h(that)-88
2868 y Fv(\002x)f Ft(d)f Fv(fr)o(om)h Fu(E)284 2876 y
Fn(i)p Fo(+1)-88 2951 y Fv(using)f Ft(d)j Fu(7!)g Fx(map)389
2971 y Fn(d)-88 3034 y Fv(in)d Fx(\002x)64 3054 y Fn(i)447
2953 y Fs(=)528 2728 y Fv(r)o(eplace)g Ft(d)h Fv(fr)o(om)g
Fu(E)1052 2736 y Fn(i)p Fo(+1)528 2812 y Fv(using)f Ft(d)j
Fu(7!)p Fv(r)o(eplace)d Ft(d)1144 2780 y Fz(0)1185 2812
y Fv(fr)o(om)h Fu(E)1401 2820 y Fn(i)p Fo(+1)855 2896
y Fv(using)f Ft(d)1084 2865 y Fz(0)1127 2896 y Fu(7!)j
Fq(?)855 3000 y Fv(in)1039 2929 y Fh(G)948 3091 y Fn(d)980
3077 y Fj(00)1034 3091 y Fk(in)12 b Fz(E)1118 3102 y
Fl(i)p Fi(+1)1228 3000 y Fx(map)1357 3019 y Fn(d)1389
3005 y Fj(00)528 3174 y Fv(in)18 b Fx(\002x)679 3194
y Fn(i)1525 2953 y Fs(=)j Fx(\002x)1677 2973 y Fn(i)p
Fo(+1)-50 3301 y FF(Lastly)-5 b(,)18 b(since)h Fu(D)i
FF(equals)631 3245 y Fh(S)695 3324 y Fn(i)13 b Fk(in)f(1)g(to)g
Fn(n)925 3301 y Fu(E)966 3309 y Fn(i)991 3301 y FF(,)19
b(we)g(ha)o(v)o(e)g(that)151 3434 y Fv(\002x)g Ft(d)f
Fv(fr)o(om)h Fu(D)i Fv(using)d Ft(d)j Fu(7!)g Fx(map)1039
3454 y Fn(d)1094 3434 y Fv(in)d Fx(map)1304 3399 y Fz(0)1347
3434 y Fs(=)j Fx(\002x)1499 3454 y Fn(n)p 1788 3559 4
51 v 1792 3512 45 4 v 1792 3559 V 1836 3559 4 51 v -150
3712 a Fv(B.1.4)75 b(Inheritance)-150 3828 y FF(Our)25
b(algorithm)g(assumes)h(the)f(presence)h(of)f(an)g(inheritance)h
(table.)f(This)-150 3911 y(inheritance)18 b(must)g(satisfy)g(a)f
(requirement)i(in)f(order)g(for)f(our)h(algorithm)g(to)-150
3994 y(terminate.)-150 4119 y Fv(Inheritance)30 b(Requir)o(ement.)48
b FF(F)o(or)30 b(all)g(classes)h Ft(C)k FF(and)d Ft(D)r
FF(,)e(whene)n(v)o(er)-150 4202 y Ft(C)-90 4202 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -90
4202 a Fw(<)-90 4202 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -90 4202 a 30 w Ft(P)-11 4210
y Fo(1)23 4202 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 23 4202 a Fw(,)40 b(...,)23 4202 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 23
4202 a 206 w Ft(P)278 4210 y Fn(m)337 4202 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 337 4202
a Fw(>)337 4202 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 337 4202 a 44 w FF(is)15 b(a)g(subclass)h(of)f
Ft(D)900 4202 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 900 4202 a Fw(<)900 4202 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 900 4202 a
945 4170 a Fr(E)930 4202 y Ft(\034)964 4210 y Fo(1)998
4202 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 998 4202 a Fw(,)39 b(...,)998 4202 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 998 4202
a 1219 4170 a Fr(E)1204 4202 y Ft(\034)1238 4210 y Fn(n)1280
4202 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1280 4202 a Fw(>)1280 4202 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1280 4202 a 44 w
FF(and)16 b Fu(9)p Fs(\000)9 b(:)g(\001\(\001)-44 b Fu(\001)22
b Fs(\))p Ft(:)1816 4170 y Fr(E)1800 4202 y Ft(\034)-150
4285 y FF(is)29 b(a)h(sube)o(xpression)h(of)550 4253
y Fr(E)535 4285 y Ft(\034)569 4293 y Fn(i)625 4285 y
FF(for)e(some)h Ft(i)g FF(in)f Fs(1)h FF(to)g Ft(n)p
FF(,)f(then)h Fs(\001)-43 b Fu(\001)51 b FF(must)30 b(not)-150
4368 y(contain)20 b(an)o(y)f(constraints)h(of)e(the)h(form)g
Ft(v)25 b Fs(::)p Ft(>)1112 4336 y Fr(E)1096 4368 y Ft(\034)1139
4336 y Fz(0)1161 4368 y FF(.)-150 4493 y Fv(Lemma)g(4.)46
b Fx(Given)25 b(the)g(Inheritance)h(Requir)m(ement,)f(for)g(all)f
(classes)h Ft(C)-150 4576 y Fx(and)i Ft(D)r Fx(,)g(if)f
Ft(C)227 4576 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 227 4576 a Fw(<)227 4576 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 227 4576 a
29 w Ft(P)305 4584 y Fo(1)340 4576 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 340 4576 a Fw(,)39
b(...,)340 4576 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 340 4576 a 206 w Ft(P)595 4584 y Fn(m)653
4576 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 653 4576 a Fw(>)653 4576 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 653 4576 a 56 w Fx(is)26
b(a)h(subclass)g(of)g Ft(D)1278 4576 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1278 4576 a Fw(<)1278
4576 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1278 4576 a 1323 4544 a Fr(E)1308 4576 y Ft(\034)1342
4584 y Fo(1)1376 4576 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1376 4576 a Fw(,)39 b(...,)1376
4576 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1376 4576 a 1597 4544 a Fr(E)1582 4576 y Ft(\034)1616
4584 y Fn(n)1658 4576 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1658 4576 a Fw(>)1658 4576 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate

1658 4576 a 56 w Fx(then)-150 4659 y(the)19 b(following)g(holds:)-70
4758 y Fh(G)-134 4916 y Fn(i)13 b Fk(in)f(1)g(to)h Fn(n)92
4724 y Fh(\032)149 4785 y Fx(swaps-sub)r Fs(\()506 4753
y Fr(E)491 4785 y Ft(\034)525 4793 y Fn(i)551 4785 y
Fs(\))149 4868 y Fx(swaps-sup)r Fs(\()506 4836 y Fr(E)491
4868 y Ft(\034)525 4876 y Fn(i)551 4868 y Fs(\))612 4829
y Fu(v)21 b(f)p Fx(const)h Fu(7!)g Fs(0)p Fu(g)1157 4758
y Fh(G)1085 4916 y Fn(i)13 b Fk(in)f(1)h(to)f Fn(m)1314
4724 y Fh(\032)1372 4785 y Fx(sub)q Fs(\()p Ft(P)1555
4793 y Fn(i)1581 4785 y Fs(\))21 b Fu(7!)g Fs(0)1372
4868 y Fx(sup)q Fs(\()p Ft(P)1555 4876 y Fn(i)1581 4868
y Fs(\))g Fu(7!)g Fs(0)1769 4724 y Fh(\033)-150 5050
y Fx(Pr)m(oof.)29 b FF(Easily)21 b(pro)o(v)o(en)h(by)g(coinduction)h
(using)f(the)g(more)g(general)g(prop-)-150 5133 y(erty)c(that)f(if)192
5101 y Fr(E)176 5133 y Ft(\034)26 b FF(satis\002es)17
b(the)h(restriction)f(in)g(the)h(Inheritance)h(Requirement)-150
5216 y(then)-150 5371 y Fx(swaps-sub)q Fs(\()207 5339
y Fr(E)191 5371 y Ft(\034)9 b Fs(\))p Fu(t)p Fx(swaps-sup)q
Fs(\()671 5339 y Fr(E)656 5371 y Ft(\034)g Fs(\))20 b
Fu(v)h(f)p Fx(const)i Fu(7!)e Fs(0)p Fu(g)1240 5300 y
Fh(G)1171 5462 y Fn(v)15 b Fk(free)d(in)1372 5441 y Fd(E)1358
5462 y Fn(\034)1367 5266 y Fh(\032)1425 5328 y Fx(sub)q
Fs(\()p Ft(v)s Fs(\))21 b Fu(7!)g Fs(0)1425 5411 y Fx(sup)q
Fs(\()p Ft(v)s Fs(\))g Fu(7!)g Fs(0)1786 5266 y Fh(\033)p
3980 66 4 51 v 3984 19 45 4 v 3984 66 V 4028 66 4 51
v 2042 215 a Fv(B.1.5)74 b(Recursion)2042 332 y FF(Here)27
b(we)g(formalize)g(the)g(recursi)n(v)o(e)h(beha)o(vior)g(of)f(our)g
(subtyping)i(algo-)2042 415 y(rithm.)i(F)o(or)g(this,)g(we)g(de\002ne)h
(a)g(four)o(-part)f(le)o(xicographic)i(ordering)g(on)2042
498 y(judgements)28 b Fr(G)36 b Fs(:)h Fr(D)e Fu(`)2750
465 y Fr(E)2734 498 y Ft(\034)45 b(<)p Fs(:)2945 465
y Fr(E)2930 498 y Ft(\034)2973 466 y Fz(0)2995 498 y
FF(.)26 b(Note)g(that)h(an)o(y)g(man)o(y)g(of)g(the)g(com-)2042
581 y(ponents)i(use)g(e)o(xtended)h(natural)f(numbers,)g(and)g(for)f
(these)h(we)f(use)h(the)2042 664 y(relation)21 b Fs(1)f(+)f
Ft(m)26 b Fu(\024)g Ft(n)c FF(\(which)g(in)f(particular)h(means)h
Fu(1)e FF(is)g(less)g(than)i Fu(1)2042 747 y FF(with)16
b(respect)h(to)g(these)g(metrics,)g(which)g(we)g(deal)g(with)f(in)h
(Section)g(B.1.7\).)2065 1122 y(1.)2150 883 y Fv(\002x)h
Ft(v)k Fv(fr)o(om)d Fr(G)2150 1121 y Fv(using)2351 923
y Fh(8)2351 991 y(>)2351 1013 y(>)2351 1035 y(<)2351
1170 y(>)2351 1192 y(>)2351 1215 y(:)2420 986 y Fx(sub)q
Fs(\()p Ft(v)s Fs(\))39 b Fu(7!)2865 915 y Fh(G)2780
1090 y Fn(v)r(<)p Fo(::)2900 1074 y(^)2910 1069 y Fd(E)2896
1090 y Fn(\034)18 b Fk(in)12 b Fd(D)3049 986 y Fx(swaps-sub)q
Fs(\()3394 962 y(^)3406 954 y Fr(E)3390 986 y Ft(\034)d
Fs(\))2420 1181 y Fx(sup)q Fs(\()p Ft(v)s Fs(\))39 b
Fu(7!)2865 1110 y Fh(G)2780 1285 y Fn(v)r Fo(::)o Fn(>)2900
1269 y Fo(^)2910 1264 y Fd(E)2896 1285 y Fn(\034)18 b
Fk(in)12 b Fd(D)3049 1181 y Fx(swaps-sup)q Fs(\()3394
1157 y(^)3406 1149 y Fr(E)3390 1181 y Ft(\034)d Fs(\))2150
1357 y Fv(in)18 b Fx(swaps-sub)q Fs(\()2587 1325 y Fr(E)2572
1357 y Ft(\034)9 b Fs(\))16 b(+)h Fx(swaps-sup)q Fs(\()3095
1325 y Fr(E)3079 1357 y Ft(\034)3122 1326 y Fz(0)3144
1357 y Fs(\))2150 1462 y FF(Note)i(that)h Fs(+)f FF(on)g(partial)h
(maps)g(is)f(de\002ned)h(such)g(that)f(it)g(is)g(commuta-)2150
1545 y(ti)n(v)o(e)c(and)h(distrib)o(utes)f(through)h
Fv(r)o(eplace)f FF(and)h Fv(\002x)p FF(.)f(F)o(or)g(e)o(xample,)g
Fu(f)p Ft(x)22 b Fu(7!)2150 1628 y Fs(3)p Ft(;)13 b(y)24
b Fu(7!)e Fs(5)p Fu(g)c Fs(+)f Fu(f)p Ft(y)25 b Fu(7!)c
Fs(2)p Ft(;)14 b(z)24 b Fu(7!)e Fs(1)p Fu(g)e FF(equals)f
Fu(f)p Ft(x)j Fu(7!)g Fs(0)p Ft(;)13 b(y)24 b Fu(7!)e
Fs(7)p Ft(;)13 b(z)25 b Fu(7!)d Fs(1)p Fu(g)2150 1711
y FF(rather)d(than)g Fu(f)p Ft(y)24 b Fu(7!)d Fs(7)p
Fu(g)p FF(.)2065 1828 y(2.)29 b(maximum)20 b(depth)h(of)f(the)g(free)g
(v)n(ariables)h(in)e Fx(access-sup)3676 1847 y Fo(=0)3757
1828 y Fs(\()3803 1795 y Fr(E)3787 1828 y Ft(\034)3830
1796 y Fz(0)3852 1828 y Fs(\))g FF(with)2150 1927 y(respect)i(to)f(the)
h(relation)f(\223there)h(e)o(xists)3217 1903 y Fs(^)3228
1895 y Fr(E)3212 1927 y Ft(\034)29 b FF(with)20 b Ft(v)3468
1895 y Fz(0)3515 1927 y Fs(::)q Ft(>)3646 1903 y Fs(^)3657
1895 y Fr(E)3642 1927 y Ft(\034)29 b FF(in)20 b Fr(D)g
FF(and)h Ft(v)2150 2023 y FF(free)e(in)f Fx(access-sup)2685
2043 y Fo(=0)2766 2023 y Fs(\()2800 1999 y(^)2812 1991
y Fr(E)2796 2023 y Ft(\034)9 b Fs(\))p FF(\224)2065 2140
y(3.)29 b(sube)o(xpression)21 b(on)e Fx(access-sup)3008
2159 y Fo(=0)3089 2140 y Fs(\()p Fx(e)o(xplicit)o Fs(\()3383
2107 y Fr(E)3367 2140 y Ft(\034)3410 2108 y Fz(0)3432
2140 y Fs(\)\))2065 2256 y FF(4.)29 b(if)2233 2224 y
Fr(E)2218 2256 y Ft(\034)h FF(is)23 b(a)f(v)n(ariable)h
Ft(v)s FF(,)f(then)h(depth)h(of)e Ft(v)j FF(with)e(respect)f(to)h(the)g
(re)n(v)o(erse)2150 2339 y(of)c(the)g(relation)g Ft(<)p
Fs(::)g FF(in)f Fr(D)h FF(on)g Fr(G)p FF(;)g(else)g(-1)2042
2479 y Fv(Theor)o(em)14 b(1.)33 b Fx(Pr)m(o)o(vided)15
b(the)g(Algorithm)f(Requir)m(ements)i(and)f(Inheritance)2042
2562 y(Requir)m(ement)26 b(hold,)g(eac)o(h)h(r)m(ecur)o(sive)g(pr)m
(emise)f(of)f(our)i(subtyping)g(algo-)2042 2645 y(rithm)22
b(is)g(strictly)g(less)g(than)h(the)g(conclusion)h(with)e(r)m(espect)h
(to)f(the)h(abo)o(ve)2042 2728 y(or)m(dering)o(.)2042
2877 y(Pr)m(oof.)28 b FF(The)20 b(proof)g(is)f(gi)n(v)o(en)i(in)f
(Figure)f(37.)h(It)f(mak)o(es)h(use)h(of)e(the)h(proper)o(-)2042
2960 y(ties)e(pro)o(v)o(en)i(belo)n(w)-5 b(.)p 3980 2960
V 3984 2913 45 4 v 3984 2960 V 4028 2960 4 51 v 2042
3109 a Fv(Lemma)19 b(5.)42 b Fx(F)-8 b(or)19 b(all)2639
3077 y Fr(E)2623 3109 y Ft(\034)27 b Fx(and)20 b Ft(\022)r
Fx(,)2191 3356 y(swaps-sub)q Fs(\()2547 3323 y Fr(E)2532
3356 y Ft(\034)9 b Fs([)p Ft(\022)r Fs(]\))21 b(=)2787
3222 y Fv(r)o(eplace)e Ft(v)i Fv(fr)o(om)e(domain)g(of)g
Ft(\022)2787 3356 y Fv(using)2989 3250 y Fh(\032)3046
3312 y Fx(sub)q Fs(\()p Ft(v)s Fs(\))g Fu(7!)i Fx(swaps-sub)q
Fs(\()p Ft(\022)r Fs(\()p Ft(v)s Fs(\)\))3046 3395 y
Fx(sup)q Fs(\()p Ft(v)s Fs(\))e Fu(7!)i Fx(swaps-sup)q
Fs(\()p Ft(\022)r Fs(\()p Ft(v)s Fs(\)\))2787 3485 y
Fv(in)d Fx(swaps-sub)q Fs(\()3225 3453 y Fr(E)3209 3485
y Ft(\034)9 b Fs(\))2984 3601 y FF(and)2191 3859 y Fx(swaps-sup)q
Fs(\()2547 3827 y Fr(E)2532 3859 y Ft(\034)g Fs([)p Ft(\022)r
Fs(]\))21 b(=)2787 3725 y Fv(r)o(eplace)e Ft(v)i Fv(fr)o(om)e(domain)g
(of)g Ft(\022)2787 3859 y Fv(using)2989 3754 y Fh(\032)3046
3815 y Fx(sub)q Fs(\()p Ft(v)s Fs(\))g Fu(7!)i Fx(swaps-sub)q
Fs(\()p Ft(\022)r Fs(\()p Ft(v)s Fs(\)\))3046 3898 y
Fx(sup)q Fs(\()p Ft(v)s Fs(\))e Fu(7!)i Fx(swaps-sup)q
Fs(\()p Ft(\022)r Fs(\()p Ft(v)s Fs(\)\))2787 3988 y
Fv(in)d Fx(swaps-sup)q Fs(\()3225 3956 y Fr(E)3209 3988
y Ft(\034)9 b Fs(\))2042 4134 y Fx(Pr)m(oof.)28 b FF(Easily)18
b(pro)o(v)o(ed)i(from)e(the)g(de\002nitions)h(of)f Fx(swaps-sub)i
FF(and)f Fx(swaps-)2042 4217 y(sup)g FF(by)h(coinduction)g(and)g
(tedious)f(calculation.)p 3980 4217 V 3984 4170 45 4
v 3984 4217 V 4028 4217 4 51 v 2042 4366 a Fv(Lemma)32
b(6.)52 b Fx(Suppose)34 b(all)d(of)h(the)g(Algorithm)g(Requir)m(ements)
h(hold.)g(If)2042 4449 y(swaps-sub)q Fs(\()2398 4417
y Fr(E)2383 4449 y Ft(\034)9 b Fs(\))15 b Fx(maps)h(sub)q
Fs(\()p Ft(v)s Fs(\))f Fx(or)h(sup)q Fs(\()p Ft(v)s Fs(\))f
Fx(to)g Ft(i)h Fx(suc)o(h)h(that)e Ft(\036)p Fs(\()p
Ft(i)p Fs(\))h Fx(holds,)g(then)2042 4532 y Ft(v)24 b
Fx(must)e(be)g(fr)m(ee)g(in)f(access-sub)2896 4541 y
Fn(\036)2937 4532 y Fs(\()2983 4500 y Fr(E)2967 4532
y Ft(\034)9 b Fs(\))p Fx(.)21 b(Lik)o(e)o(wise)o(,)g(if)g(swaps-sup)q
Fs(\()3798 4500 y Fr(E)3783 4532 y Ft(\034)9 b Fs(\))21
b Fx(maps)2042 4615 y(sub)q Fs(\()p Ft(v)s Fs(\))h Fx(or)h(sup)q
Fs(\()p Ft(v)s Fs(\))f Fx(to)h Ft(i)g Fx(suc)o(h)h(that)f
Ft(\036)p Fs(\()p Ft(i)p Fs(\))f Fx(holds,)i(then)f Ft(v)j
Fx(must)d(be)g(fr)m(ee)g(in)2042 4698 y(access-sup)2365
4718 y Fn(\036)2407 4698 y Fs(\()2452 4666 y Fr(E)2437
4698 y Ft(\034)9 b Fs(\))p Fx(.)2042 4848 y(Pr)m(oof.)28
b FF(W)-6 b(e)25 b(pro)o(v)o(e)i(by)f(coinduction)h(\(since)f(freeness)
g(of)f(type)h(v)n(ariables)2042 4932 y(is)31 b(a)g(coinducti)n(v)o(e)i
(property)f(when)g(dealing)g(with)f(coinducti)n(v)o(e)i(types\).)2042
5015 y(If)2132 4982 y Fr(E)2116 5015 y Ft(\034)g FF(is)25
b Ft(v)s FF(,)f(then)i Fx(swaps-sub)q Fs(\()2851 4982
y Fr(E)2836 5015 y Ft(\034)9 b Fs(\))24 b FF(maps)h Fx(sub)q
Fs(\()p Ft(v)s Fs(\))f FF(to)h(0)g(and)h Fx(swaps-sup)q
Fs(\()3978 4982 y Fr(E)3962 5015 y Ft(\034)9 b Fs(\))2042
5098 y FF(maps)26 b Fx(sup)q Fs(\()p Ft(v)s Fs(\))f FF(to)h(0)g(so)h
(that)e(in)h(either)g(case)h Ft(i)f FF(is)f(0,)h(and)h
Fx(access-sub)q Fs(\()3978 5065 y Fr(E)3962 5098 y Ft(\034)9
b Fs(\))2042 5181 y FF(and)28 b Fx(access-sup)q Fs(\()2546
5148 y Fr(E)2530 5181 y Ft(\034)9 b Fs(\))27 b FF(both)h(equal)g
Fx(access-var)q Fs(\()p Ft(v)s Fs(\))f FF(which)h(is)f
Ft(v)j FF(since)e(by)2042 5264 y(assumption)20 b Ft(\036)e
FF(holds)i(for)f Ft(i)g FF(which)g(is)f(0)h(in)g(both)h(cases.)2141
5347 y(If)14 b(on)h(the)g(other)g(hand)2743 5314 y Fr(E)2727
5347 y Ft(\034)23 b FF(is)14 b Fu(9)p Fs(\000)9 b(:)g(\001\(\001)-44
b Fu(\001)22 b Fs(\))p Ft(:)14 b(C)3260 5347 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3260 5347
a Fw(<)3260 5347 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3260 5347 a 3305 5314 a Fr(E)3290
5347 y Ft(\034)3324 5355 y Fo(1)3358 5347 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3358 5347
a Fw(,)39 b(...,)3358 5347 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3358 5347 a 3579 5314 a
Fr(E)3564 5347 y Ft(\034)3598 5355 y Fn(n)3640 5347 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

3640 5347 a Fw(>)3640 5347 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3640 5347 a 44 w FF(then)15
b Fx(swaps-)2042 5430 y(sub)28 b FF(and)g Fx(access-sub)i
FF(recurse)e(to)f(the)h(same)g(sube)o(xpressions)i(of)3872
5397 y Fr(E)3857 5430 y Ft(\034)35 b FF(and)p eop end
%%Page: 21 21
TeXDict begin 21 20 bop -150 120 a FF(There)19 b(are)g(four)g(kinds)h
(of)f(recursi)n(v)o(e)g(premises)g(and)h(each)f(component)i(of)e(the)g
(abo)o(v)o(e)h(metric)f(is)f(corresponds)j(to)e(one)g(of)g(these)g
(kinds:)-127 253 y(1.)29 b(Decreased)20 b(by)f(the)g(recursi)n(v)o(e)h
(premise)f(in)i(S)t Fp(U)t(B)t FF(-)t(E)t Fp(X)t(I)t(S)t(T)t(S)c
FF(checking)j(e)o(xplicit)f(lo)n(wer)g(bounds)h(after)f(substitution.)
-127 344 y(2.)29 b(Decreased)20 b(by)f(the)g(recursi)n(v)o(e)h(premise)
f(in)i(S)t Fp(U)t(B)t FF(-)t(V)-5 b Fp(A)t(R)18 b FF(checking)i
(assumed)g(lo)n(wer)f(bounds)i(on)e(type)g(v)n(ariables.)-127
436 y(3.)29 b(Decreased)20 b(by)f(the)g(recursi)n(v)o(e)h(premise)f(in)
i(S)t Fp(U)t(B)t FF(-)t(E)t Fp(X)t(I)t(S)t(T)t(S)c FF(checking)j(e)o
(xplicit)f(upper)h(bounds)g(after)f(substitution.)-127
527 y(4.)29 b(Decreased)20 b(by)f(the)g(recursi)n(v)o(e)h(premise)f(in)
i(S)t Fp(U)t(B)t FF(-)t(V)-5 b Fp(A)t(R)18 b FF(checking)i(assumed)g
(upper)g(bounds)h(on)e(type)g(v)n(ariables.)-150 660
y(F)o(or)i(each)h(recursi)n(v)o(e)g(premise)f(we)h(ha)o(v)o(e)f(to)h
(pro)o(v)o(e)g(it)e(decreases)j(the)e(corresponding)j(metric)d
(component)i(and)f(preserv)o(es)g(or)f(decreases)i(all)d(earlier)h
(metric)-150 743 y(components:)-127 876 y(1.)29 b(The)23
b(conclusion)h(at)f(hand)h(is)f Fr(G)29 b Fs(:)h Fr(D)e
Fu(`)h(9)p Fs(\000)16 b(:)h(\001\(\001)-43 b Fu(\001)22
b Fs(\))p Ft(:)h(C)1491 876 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1491 876 a Fw(<)1491 876
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1491 876 a 1536 843 a Fr(E)1520 876 y Ft(\034)1554
884 y Fo(1)1589 876 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1589 876 a Fw(,)39 b(...,)1589
876 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1589 876 a 1810 843 a Fr(E)1795 876 y Ft(\034)1829
884 y Fn(m)1887 876 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1887 876 a Fw(>)1887 876 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1887
876 a 59 w Ft(<)p Fs(:)29 b Fu(9)p Fs(\000)2147 844 y
Fz(0)2185 876 y Fs(:)17 b(\001)2287 844 y Fz(0)2309 876
y Fs(\(\001)-43 b Fu(\001)2403 844 y Fz(0)2425 876 y
Fs(\))p Ft(:)23 b(D)2564 876 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2564 876 a Fw(<)2564 876
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2564 876 a 2610 843 a Fr(E)2594 876 y Ft(\034)2637
844 y Fz(0)2628 889 y Fo(1)2662 876 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2662 876 a Fw(,)40
b(...,)2662 876 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2662 876 a 2884 843 a Fr(E)2868 876
y Ft(\034)2911 844 y Fz(0)2902 889 y Fn(n)2945 876 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

2945 876 a Fw(>)2945 876 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2945 876 a 29 w FF(.)23 b(From)f(Lemma)h(1)g
(we)g(kno)n(w)h(that)f(the)-42 959 y(follo)n(wing)h(holds)g(for)f(an)o
(y)h(partial)f(map)g Fx(map)h FF(since)g(type)f(v)n(ariables)h(in)f
Fs(\000)g FF(cannot)i(be)e(free)g(in)h Fr(D)e FF(and)i(since)g
Fs(\001)f FF(cannot)h(impose)g(constraints)g(on)g(type)-42
1042 y(v)n(ariables)19 b(in)g Fr(G)p FF(:)521 1382 y
Fv(\002x)f Ft(v)k Fv(fr)o(om)d Fr(G)p Ft(;)14 b Fs(\000)521
1627 y Fv(using)723 1406 y Fh(8)723 1474 y(>)723 1496
y(>)723 1519 y(>)723 1541 y(<)723 1675 y(>)723 1698 y(>)723
1720 y(>)723 1743 y(:)791 1486 y Fx(sub)q Fs(\()p Ft(v)s
Fs(\))39 b Fu(7!)1271 1415 y Fh(G)1151 1590 y Fn(v)r(<)p
Fo(::)1271 1574 y(^)1281 1569 y Fd(E)1267 1590 y Fn(\034)18
b Fk(in)13 b Fd(D)p Fn(;)p Fo(\001)1489 1486 y Fx(swaps-sub)q
Fs(\()1834 1462 y(^)1846 1454 y Fr(E)1830 1486 y Ft(\034)c
Fs(\))791 1687 y Fx(sup)q Fs(\()p Ft(v)s Fs(\))39 b Fu(7!)1271
1616 y Fh(G)1151 1791 y Fn(v)r Fo(::)o Fn(>)1271 1775
y Fo(^)1281 1769 y Fd(E)1267 1791 y Fn(\034)18 b Fk(in)13
b Fd(D)p Fn(;)p Fo(\001)1489 1687 y Fx(swaps-sup)q Fs(\()1834
1663 y(^)1846 1654 y Fr(E)1830 1687 y Ft(\034)c Fs(\))521
1868 y Fv(in)18 b Fx(map)1934 1627 y Fs(=)2015 1151 y
Fv(\002x)g Ft(v)k Fv(fr)o(om)d Fr(G)2015 1389 y Fv(using)2217
1191 y Fh(8)2217 1259 y(>)2217 1281 y(>)2217 1304 y(<)2217
1438 y(>)2217 1460 y(>)2217 1483 y(:)2285 1254 y Fx(sub)q
Fs(\()p Ft(v)s Fs(\))39 b Fu(7!)2731 1183 y Fh(G)2645
1358 y Fn(v)r(<)p Fo(::)2765 1342 y(^)2775 1337 y Fd(E)2761
1358 y Fn(\034)18 b Fk(in)12 b Fd(D)2914 1254 y Fx(swaps-sub)q
Fs(\()3259 1230 y(^)3271 1222 y Fr(E)3255 1254 y Ft(\034)d
Fs(\))2285 1449 y Fx(sup)q Fs(\()p Ft(v)s Fs(\))39 b
Fu(7!)2731 1378 y Fh(G)2645 1553 y Fn(v)r Fo(::)o Fn(>)2765
1537 y Fo(^)2775 1532 y Fd(E)2761 1553 y Fn(\034)18 b
Fk(in)12 b Fd(D)2914 1449 y Fx(swaps-sup)q Fs(\()3259
1425 y(^)3271 1417 y Fr(E)3255 1449 y Ft(\034)d Fs(\))2015
1625 y Fv(in)18 b(\002x)g Ft(v)2233 1594 y Fz(0)2274
1625 y Fv(fr)o(om)h Fs(\000)2096 1864 y Fv(using)2298
1666 y Fh(8)2298 1733 y(>)2298 1756 y(>)2298 1778 y(<)2298
1913 y(>)2298 1935 y(>)2298 1958 y(:)2366 1729 y Fx(sub)q
Fs(\()p Ft(v)2540 1697 y Fz(0)2562 1729 y Fs(\))40 b
Fu(7!)2849 1658 y Fh(G)2748 1833 y Fn(v)2781 1819 y Fj(0)2804
1833 y Fn(<)p Fo(::)2891 1817 y(^)2901 1811 y Fd(E)2887
1833 y Fn(\034)18 b Fk(in)12 b Fo(\001)3048 1729 y Fx(swaps-sub)q
Fs(\()3393 1705 y(^)3405 1697 y Fr(E)3389 1729 y Ft(\034)d
Fs(\))2366 1924 y Fx(sup)q Fs(\()p Ft(v)2540 1892 y Fz(0)2562
1924 y Fs(\))40 b Fu(7!)2849 1853 y Fh(G)2748 2028 y
Fn(v)2781 2014 y Fj(0)2804 2028 y Fo(::)o Fn(>)2891 2012
y Fo(^)2901 2007 y Fd(E)2887 2028 y Fn(\034)18 b Fk(in)12
b Fo(\001)3048 1924 y Fx(swaps-sup)q Fs(\()3393 1900
y(^)3405 1892 y Fr(E)3389 1924 y Ft(\034)d Fs(\))2096
2099 y Fv(in)18 b Fx(map)-42 2233 y FF(Because)26 b(of)g(Algorithm)g
(Requirement)g(2,)f(the)h(second)h(premise)f(is)f(guaranteed)i(to)f
(construct)g(an)g(assignment)g Ft(\022)i FF(of)d(all)g(v)n(ariables)i
(in)e Fs(\000)3705 2201 y Fz(0)3753 2233 y FF(to)g(sube)o(x-)-42
2316 y(pressions)j(of)g(an)o(y)g(of)g(the)711 2284 y
Fr(E)696 2316 y Ft(\034)730 2324 y Fn(i)783 2316 y FF(without)g(an)o(y)
g(escaping)h(type)f(v)n(ariables.)g(Furthermore,)g(from)g(the)f
(de\002nition)h(of)g Fu(\031)3107 2325 y Fn(\022)3169
2316 y FF(and)g(the)g(de\002nition)g(of)g Fx(swaps-)-42
2407 y(sub)p FF(,)f(for)g(each)g Ft(v)i FF(in)e Fs(\000)583
2375 y Fz(0)632 2407 y FF(we)g(kno)n(w)g Fx(swaps-sub)r
Fs(\()p Ft(\022)r Fs(\()p Ft(v)s Fs(\)\))22 b Fu(t)h
Fx(swaps-sup)r Fs(\()p Ft(\022)r Fs(\()p Ft(v)s Fs(\)\))j
FF(is)g(less)h(than)g(or)g(equal)g(to)g Fx(swaps-sub)q
Fs(\()3155 2383 y(\026)3166 2375 y Fr(E)3151 2407 y Ft(\034)3185
2415 y Fn(i)3211 2407 y Fs([)p Ft(P)3281 2415 y Fo(1)3316
2407 y Fu(7!)3408 2375 y Fr(E)3393 2407 y Ft(\034)3427
2415 y Fo(1)3461 2407 y Ft(;)13 b(:)h(:)f(:)g(;)g(P)3681
2415 y Fn(m)3740 2407 y Fu(7!)3832 2375 y Fr(E)3816 2407
y Ft(\034)3850 2415 y Fn(m)3909 2407 y Fs(]\))23 b Fu(t)-42
2501 y Fx(swaps-sup)q Fs(\()303 2477 y(\026)315 2468
y Fr(E)299 2501 y Ft(\034)333 2509 y Fn(i)359 2501 y
Fs([)p Ft(P)429 2509 y Fo(1)464 2501 y Fu(7!)557 2468
y Fr(E)541 2501 y Ft(\034)575 2509 y Fo(1)609 2501 y
Ft(;)14 b(:)f(:)g(:)g(;)g(P)829 2509 y Fn(m)888 2501
y Fu(7!)980 2468 y Fr(E)965 2501 y Ft(\034)999 2509 y
Fn(m)1057 2501 y Fs(]\))26 b FF(for)f(some)i Ft(i)f FF(in)f(1)h(to)g
Ft(n)p FF(.)f(Lemmas)h(4)g(and)h(5)e(and)i(monotonicity)g(of)f
Fx(swaps-sub)h FF(and)f Fx(swaps-sup)h FF(then)f(in-)-42
2584 y(form)f(us)h(that)f(under)i(our)f(Inheritance)g(Requirement,)g
(for)f(each)h Ft(v)i FF(in)e Fs(\000)1940 2552 y Fz(0)1962
2584 y FF(,)f Fx(swaps-sub)q Fs(\()p Ft(\022)r Fs(\()p
Ft(v)s Fs(\)\))d Fu(t)g Fx(swaps-sup)q Fs(\()p Ft(\022)r
Fs(\()p Ft(v)s Fs(\)\))j FF(must)h(be)f(less)h(than)g(or)f(equal)h(to)
-42 2667 y Fx(swaps-sub)q Fs(\()315 2634 y Fr(E)299 2667
y Ft(\034)333 2675 y Fn(i)359 2667 y Fs(\))20 b Fu(t)g
Fx(swaps-sup)q Fs(\()837 2634 y Fr(E)821 2667 y Ft(\034)855
2675 y Fn(i)881 2667 y Fs(\))i FF(for)h(some)g Ft(i)f
FF(in)g(1)h(to)f Ft(m)p FF(.)g(So,)g(from)g(the)g(abo)o(v)o(e)i(observ)
n(ations)g(we)e(can)h(deduce)h(that)e(the)h(follo)n(wing)g(must)f(hold)
h(for)-42 2750 y(an)o(y)c Ft(v)j FF(in)d Fs(\000)267
2718 y Fz(0)289 2750 y FF(:)588 2857 y Fv(\002x)f Ft(v)k
Fv(fr)o(om)d Fr(G)p Ft(;)14 b Fs(\000)588 3103 y Fv(using)790
2882 y Fh(8)790 2949 y(>)790 2972 y(>)790 2994 y(>)790
3017 y(<)790 3151 y(>)790 3174 y(>)790 3196 y(>)790 3218
y(:)858 2962 y Fx(sub)q Fs(\()p Ft(v)s Fs(\))39 b Fu(7!)1338
2891 y Fh(G)1218 3066 y Fn(v)r(<)p Fo(::)1338 3050 y(^)1348
3044 y Fd(E)1334 3066 y Fn(\034)18 b Fk(in)13 b Fd(D)p
Fn(;)p Fo(\001)1556 2962 y Fx(swaps-sub)q Fs(\()1901
2938 y(^)1913 2930 y Fr(E)1897 2962 y Ft(\034)c Fs(\))858
3162 y Fx(sup)q Fs(\()p Ft(v)s Fs(\))39 b Fu(7!)1338
3091 y Fh(G)1218 3266 y Fn(v)r Fo(::)o Fn(>)1338 3250
y Fo(^)1348 3245 y Fd(E)1334 3266 y Fn(\034)18 b Fk(in)13
b Fd(D)p Fn(;)p Fo(\001)1556 3162 y Fx(swaps-sup)q Fs(\()1901
3138 y(^)1913 3130 y Fr(E)1897 3162 y Ft(\034)c Fs(\))588
3344 y Fv(in)18 b Fx(swaps-sub)q Fs(\()p Ft(\022)r Fs(\()p
Ft(v)s Fs(\)\))f Fu(t)g Fx(swaps-sup)q Fs(\()p Ft(\022)r
Fs(\()p Ft(v)s Fs(\)\))2001 3103 y Fu(v)2082 2864 y Fv(\002x)h
Ft(v)k Fv(fr)o(om)d Fr(G)2082 3103 y Fv(using)2283 2905
y Fh(8)2283 2972 y(>)2283 2994 y(>)2283 3017 y(<)2283
3151 y(>)2283 3174 y(>)2283 3196 y(:)2352 2967 y Fx(sub)p
Fs(\()p Ft(v)s Fs(\))40 b Fu(7!)2797 2896 y Fh(G)2712
3071 y Fn(v)r(<)p Fo(::)2832 3055 y(^)2842 3050 y Fd(E)2828
3071 y Fn(\034)18 b Fk(in)12 b Fd(D)2981 2967 y Fx(swaps-sub)q
Fs(\()3326 2943 y(^)3338 2935 y Fr(E)3322 2967 y Ft(\034)d
Fs(\))2352 3162 y Fx(sup)p Fs(\()p Ft(v)s Fs(\))40 b
Fu(7!)2797 3091 y Fh(G)2712 3266 y Fn(v)r Fo(::)o Fn(>)2832
3250 y Fo(^)2842 3245 y Fd(E)2828 3266 y Fn(\034)18 b
Fk(in)12 b Fd(D)2981 3162 y Fx(swaps-sup)q Fs(\()3326
3138 y(^)3338 3130 y Fr(E)3322 3162 y Ft(\034)d Fs(\))2082
3337 y Fv(in)18 b Fx(swaps-sub)q Fs(\()p Fu(9)p Fs(\000)9
b(:)g(\001\(\001)-44 b Fu(\001)22 b Fs(\))p Ft(:)d(C)2921
3337 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2921 3337 a Fw(<)2921 3337 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2921 3337 a 2966
3305 a Fr(E)2950 3337 y Ft(\034)2984 3345 y Fo(1)3019
3337 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3019 3337 a Fw(,)39 b(...,)3019 3337 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3019 3337
a 3240 3305 a Fr(E)3225 3337 y Ft(\034)3259 3345 y Fn(m)3317
3337 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3317 3337 a Fw(>)3317 3337 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3317 3337 a 29 w
Fs(\))-42 3458 y FF(Since)17 b(for)g(this)g(case)h(we)f(are)g
(processing)i(an)f(e)o(xplicit)f(lo)n(wer)o(-bound)h(constraint,)g(we)f
(only)h(care)f(that)g(the)h(abo)o(v)o(e)g(holds)g(for)f
Fx(swaps-sup)q Fs(\()p Ft(\022)r Fs(\()p Ft(v)s Fs(\)\))p
FF(;)g(kno)n(wing)-42 3541 y(it)h(also)h(holds)h(for)f
Fx(swaps-sub)q Fs(\()p Ft(\022)r Fs(\()p Ft(v)s Fs(\)\))f
FF(will)g(be)h(useful)h(for)e(another)i(case.)-42 3634
y(F)o(or)e(a)h(speci\002c)g(lo)n(wer)o(-bound)h(constraint)g
Ft(v)k Fs(::)q Ft(>)1278 3610 y Fs(\026)1289 3602 y Fr(E)1274
3634 y Ft(\034)j FF(in)18 b Fs(\001)-42 b Fu(\001)21
b FF(')e(being)h(processed)g(in)h(S)t Fp(U)t(B)t FF(-)t(E)t
Fp(X)t(I)t(S)t(T)t(S)r FF(,)14 b(we)19 b(also)g(ha)o(v)o(e)g(to)g(sho)n
(w)h(the)f(follo)n(wing:)508 4008 y Fs(1)e(+)640 3759
y Fv(\002x)h Ft(v)k Fv(fr)o(om)d Fr(G)p Ft(;)14 b Fs(\000)640
4004 y Fv(using)842 3783 y Fh(8)842 3851 y(>)842 3873
y(>)842 3896 y(>)842 3918 y(<)842 4052 y(>)842 4075 y(>)842
4097 y(>)842 4120 y(:)910 3863 y Fx(sub)q Fs(\()p Ft(v)s
Fs(\))39 b Fu(7!)1390 3792 y Fh(G)1270 3967 y Fn(v)r(<)p
Fo(::)1390 3951 y(^)1400 3946 y Fd(E)1386 3967 y Fn(\034)18
b Fk(in)13 b Fd(D)p Fn(;)p Fo(\001)1608 3863 y Fx(swaps-sub)q
Fs(\()1953 3839 y(^)1965 3831 y Fr(E)1949 3863 y Ft(\034)c
Fs(\))910 4064 y Fx(sup)q Fs(\()p Ft(v)s Fs(\))39 b Fu(7!)1390
3993 y Fh(G)1270 4168 y Fn(v)r Fo(::)o Fn(>)1390 4152
y Fo(^)1400 4146 y Fd(E)1386 4168 y Fn(\034)18 b Fk(in)13
b Fd(D)p Fn(;)p Fo(\001)1608 4064 y Fx(swaps-sub)q Fs(\()1953
4040 y(^)1965 4031 y Fr(E)1949 4064 y Ft(\034)c Fs(\))640
4253 y Fv(in)18 b Fx(swaps-sub)q Fs(\()1066 4230 y(\026)1078
4221 y Fr(E)1062 4253 y Ft(\034)9 b Fs([)p Ft(\022)r
Fs(]\))2053 4008 y Fu(v)2134 3769 y Fv(\002x)18 b Ft(v)k
Fv(fr)o(om)d Fr(G)2134 4007 y Fv(using)2335 3809 y Fh(8)2335
3877 y(>)2335 3899 y(>)2335 3921 y(<)2335 4056 y(>)2335
4078 y(>)2335 4101 y(:)2404 3872 y Fx(sub)q Fs(\()p Ft(v)s
Fs(\))39 b Fu(7!)2850 3801 y Fh(G)2764 3976 y Fn(v)r(<)p
Fo(::)2884 3960 y(^)2894 3955 y Fd(E)2880 3976 y Fn(\034)18
b Fk(in)12 b Fd(D)3033 3872 y Fx(swaps-sub)q Fs(\()3378
3848 y(^)3390 3840 y Fr(E)3374 3872 y Ft(\034)d Fs(\))2404
4067 y Fx(sup)q Fs(\()p Ft(v)s Fs(\))39 b Fu(7!)2850
3996 y Fh(G)2764 4171 y Fn(v)r Fo(::)o Fn(>)2884 4155
y Fo(^)2894 4150 y Fd(E)2880 4171 y Fn(\034)18 b Fk(in)12
b Fd(D)3033 4067 y Fx(swaps-sup)q Fs(\()3378 4043 y(^)3390
4035 y Fr(E)3374 4067 y Ft(\034)d Fs(\))2134 4243 y Fv(in)18
b Fx(swaps-sup)q Fs(\()p Fu(9)p Fs(\000)2647 4212 y Fz(0)2678
4243 y Fs(:)9 b(\001)2772 4212 y Fz(0)2794 4243 y Fs(\(\001)-43
b Fu(\001)2888 4212 y Fz(0)2910 4243 y Fs(\))p Ft(:)19
b(D)3045 4243 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3045 4243 a Fw(<)3045 4243 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3045 4243
a 3090 4211 a Fr(E)3075 4243 y Ft(\034)3118 4212 y Fz(0)3109
4257 y Fo(1)3143 4243 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3143 4243 a Fw(,)40 b(...,)3143
4243 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3143 4243 a 3365 4211 a Fr(E)3349 4243 y Ft(\034)3392
4212 y Fz(0)3383 4257 y Fn(n)3425 4243 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3425 4243 a
Fw(>)3425 4243 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3425 4243 a 30 w Fs(\))-42 4379 y FF(This)18
b(follo)n(ws)h(from)g(the)g(\002rst)f(equality)i(abo)o(v)o(e)g(and)f
(the)g(de\002nition)g(of)g Fx(swaps-sup)h FF(\(speci\002cally)f(its)f
(treatment)h(of)g(e)o(xplicit)g(lo)n(wer)g(bounds\).)-42
4462 y(From)d(the)h(abo)o(v)o(e)h(tw)o(o)e(inequalities)h(and)h(the)e
(f)o(act)h(that)g Fs(+)f FF(on)h(partial)f(maps)i(is)e(commutati)n(v)o
(e)h(we)g(get)g(the)g(follo)n(wing)g(pro)o(ving)g(that)g(the)g(metric)f
(decreases)-42 4545 y(in)j(this)f(case:)-42 4904 y Fs(1)e(+)87
4654 y Fv(\002x)i Ft(v)k Fv(fr)o(om)d Fr(G)p Ft(;)14
b Fs(\000)87 4899 y Fv(using)289 4679 y Fh(8)289 4746
y(>)289 4769 y(>)289 4791 y(>)289 4813 y(<)289 4948 y(>)289
4970 y(>)289 4993 y(>)289 5015 y(:)357 4759 y Fx(sub)q
Fs(\()p Ft(v)s Fs(\))39 b Fu(7!)735 4688 y Fh(G)615 4863
y Fn(v)r(<)p Fo(::)734 4847 y(^)744 4841 y Fd(E)731 4863
y Fn(\034)18 b Fk(in)12 b Fd(D)p Fn(;)p Fo(\001)850 4759
y Fx(swaps-sub)q Fs(\()1195 4735 y(^)1207 4726 y Fr(E)1191
4759 y Ft(\034)d Fs(\))357 4959 y Fx(sup)q Fs(\()p Ft(v)s
Fs(\))39 b Fu(7!)735 4888 y Fh(G)615 5063 y Fn(v)r Fo(::)o
Fn(>)734 5047 y Fo(^)744 5042 y Fd(E)731 5063 y Fn(\034)18
b Fk(in)12 b Fd(D)p Fn(;)p Fo(\001)850 4959 y Fx(swaps-sup)q
Fs(\()1195 4935 y(^)1207 4927 y Fr(E)1191 4959 y Ft(\034)d
Fs(\))87 5149 y Fv(in)18 b Fx(swaps-sub)q Fs(\()513 5125
y(\026)525 5117 y Fr(E)509 5149 y Ft(\034)9 b Fs([)p
Ft(\022)r Fs(]\))17 b(+)g Fx(swaps-sup)q Fs(\()p Ft(\022)r
Fs(\()p Ft(v)s Fs(\)\))1295 4904 y Fu(v)1376 4664 y Fv(\002x)i
Ft(v)i Fv(fr)o(om)e Fr(G)1376 4903 y Fv(using)1578 4705
y Fh(8)1578 4772 y(>)1578 4795 y(>)1578 4817 y(<)1578
4951 y(>)1578 4974 y(>)1578 4996 y(:)1646 4767 y Fx(sub)q
Fs(\()p Ft(v)s Fs(\))39 b Fu(7!)2092 4696 y Fh(G)2006
4872 y Fn(v)r(<)p Fo(::)2126 4856 y(^)2136 4850 y Fd(E)2122
4872 y Fn(\034)18 b Fk(in)13 b Fd(D)2275 4767 y Fx(swaps-sub)r
Fs(\()2621 4744 y(^)2632 4735 y Fr(E)2617 4767 y Ft(\034)c
Fs(\))1646 4963 y Fx(sup)q Fs(\()p Ft(v)s Fs(\))39 b
Fu(7!)2092 4892 y Fh(G)2006 5067 y Fn(v)r Fo(::)o Fn(>)2126
5051 y Fo(^)2136 5045 y Fd(E)2122 5067 y Fn(\034)18 b
Fk(in)13 b Fd(D)2275 4963 y Fx(swaps-sup)r Fs(\()2621
4939 y(^)2632 4930 y Fr(E)2617 4963 y Ft(\034)c Fs(\))1376
5139 y Fv(in)18 b Fx(swaps-sub)q Fs(\()p Fu(9)p Fs(\000)9
b(:)g(\001\(\001)-44 b Fu(\001)22 b Fs(\))p Ft(:)d(C)2215
5139 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2215 5139 a Fw(<)2215 5139 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2215 5139 a 2260
5107 a Fr(E)2244 5139 y Ft(\034)2278 5147 y Fo(1)2313
5139 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2313 5139 a Fw(,)39 b(...,)2313 5139 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2313 5139
a 2534 5107 a Fr(E)2519 5139 y Ft(\034)2553 5147 y Fn(m)2611
5139 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2611 5139 a Fw(>)2611 5139 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2611 5139 a 30 w
Fs(\))17 b(+)f Fx(swaps-sup)r Fs(\()p Fu(9)p Fs(\000)3197
5107 y Fz(0)3227 5139 y Fs(:)9 b(\001)3321 5107 y Fz(0)3343
5139 y Fs(\(\001)-42 b Fu(\001)3437 5107 y Fz(0)3460
5139 y Fs(\))p Ft(:)19 b(D)3595 5139 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3595 5139 a Fw(<)3595
5139 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3595 5139 a 3640 5107 a Fr(E)3624 5139 y Ft(\034)3667
5107 y Fz(0)3658 5152 y Fo(1)3693 5139 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3693 5139 a
Fw(,)39 b(...,)3693 5139 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3693 5139 a 3914 5107 a Fr(E)3899
5139 y Ft(\034)3942 5107 y Fz(0)3933 5152 y Fn(n)3975
5139 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3975 5139 a Fw(>)3975 5139 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3975 5139 a 29 w
Fs(\))p -150 5260 4185 3 v 637 5344 a Fv(Figur)o(e)18
b(37.)38 b FF(Proof)19 b(that)g(the)g(metric)f(decreases)i(during)g
(recursion)g(in)f(our)g(subtyping)h(algorithm)p eop end
%%Page: 22 22
TeXDict begin 22 21 bop -127 56 a FF(2.)29 b(Since)20
b Fr(G)p FF(,)f Fr(D)p FF(,)g(and)472 24 y Fr(E)457 56
y Ft(\034)28 b FF(are)20 b(the)g(same)g(for)g(the)f(conclusion)j(and)e
(the)g(recursi)n(v)o(e)h(premise)f(at)g(hand,)g(the)g(\002rst)f
(component)j(of)d(the)h(metric)g(stays)g(the)g(same)g(or)-42
139 y(decreases)g(due)f(to)g(the)g(\002xpoint)g(property)h(of)f
Fv(\002x)p FF(.)-42 222 y(The)g(second)h(component)h(decreases)f(by)f
(its)f(de\002nition.)-127 313 y(3.)29 b(F)o(or)18 b(the)h(same)g
(reasons)h(as)f(earlier)m(,)f(we)h(can)h(deduce)g(that)f(the)g(follo)n
(wing)g(must)g(hold)h(for)e(an)o(y)i Ft(v)h FF(in)e Fs(\000)2647
282 y Fz(0)2670 313 y FF(:)588 438 y Fv(\002x)f Ft(v)k
Fv(fr)o(om)d Fr(G)p Ft(;)14 b Fs(\000)588 683 y Fv(using)790
462 y Fh(8)790 530 y(>)790 552 y(>)790 575 y(>)790 597
y(<)790 731 y(>)790 754 y(>)790 776 y(>)790 799 y(:)858
542 y Fx(sub)q Fs(\()p Ft(v)s Fs(\))39 b Fu(7!)1338 471
y Fh(G)1218 646 y Fn(v)r(<)p Fo(::)1338 630 y(^)1348
625 y Fd(E)1334 646 y Fn(\034)18 b Fk(in)13 b Fd(D)p
Fn(;)p Fo(\001)1556 542 y Fx(swaps-sub)q Fs(\()1901 518
y(^)1913 510 y Fr(E)1897 542 y Ft(\034)c Fs(\))858 743
y Fx(sup)q Fs(\()p Ft(v)s Fs(\))39 b Fu(7!)1338 672 y
Fh(G)1218 847 y Fn(v)r Fo(::)o Fn(>)1338 831 y Fo(^)1348
825 y Fd(E)1334 847 y Fn(\034)18 b Fk(in)13 b Fd(D)p
Fn(;)p Fo(\001)1556 743 y Fx(swaps-sup)q Fs(\()1901 719
y(^)1913 710 y Fr(E)1897 743 y Ft(\034)c Fs(\))588 924
y Fv(in)18 b Fx(swaps-sub)q Fs(\()p Ft(\022)r Fs(\()p
Ft(v)s Fs(\)\))2001 683 y Fu(v)2082 444 y Fv(\002x)g
Ft(v)k Fv(fr)o(om)d Fr(G)2082 683 y Fv(using)2283 485
y Fh(8)2283 552 y(>)2283 575 y(>)2283 597 y(<)2283 731
y(>)2283 754 y(>)2283 776 y(:)2352 547 y Fx(sub)p Fs(\()p
Ft(v)s Fs(\))40 b Fu(7!)2797 476 y Fh(G)2712 652 y Fn(v)r(<)p
Fo(::)2832 636 y(^)2842 630 y Fd(E)2828 652 y Fn(\034)18
b Fk(in)12 b Fd(D)2981 547 y Fx(swaps-sub)q Fs(\()3326
524 y(^)3338 515 y Fr(E)3322 547 y Ft(\034)d Fs(\))2352
743 y Fx(sup)p Fs(\()p Ft(v)s Fs(\))40 b Fu(7!)2797 672
y Fh(G)2712 847 y Fn(v)r Fo(::)o Fn(>)2832 831 y Fo(^)2842
825 y Fd(E)2828 847 y Fn(\034)18 b Fk(in)12 b Fd(D)2981
743 y Fx(swaps-sup)q Fs(\()3326 719 y(^)3338 710 y Fr(E)3322
743 y Ft(\034)d Fs(\))2082 918 y Fv(in)18 b Fx(swaps-sub)q
Fs(\()p Fu(9)p Fs(\000)9 b(:)g(\001\(\001)-44 b Fu(\001)22
b Fs(\))p Ft(:)d(C)2921 918 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2921 918 a Fw(<)2921 918
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2921 918 a 2966 885 a Fr(E)2950 918 y Ft(\034)2984
926 y Fo(1)3019 918 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3019 918 a Fw(,)39 b(...,)3019
918 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3019 918 a 3240 885 a Fr(E)3225 918 y Ft(\034)3259
926 y Fn(m)3317 918 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3317 918 a Fw(>)3317 918 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3317
918 a 29 w Fs(\))-42 1065 y FF(F)o(or)14 b(similar)g(reasons,)h(for)f
(an)o(y)h(e)o(xplicit)f(upper)h(bound)h Ft(v)25 b(<)p
Fs(::)1588 1041 y(\026)1599 1033 y Fr(E)1583 1065 y Ft(\034)e
FF(in)14 b Fs(\001)-42 b Fu(\001)1776 1034 y Fz(0)1813
1065 y FF(we)14 b(can)h(deduce)h(the)f(follo)n(wing)f(due)i(to)e(the)g
(de\002nition)h(of)g Fx(swaps-sup)g FF(\(speci\002cally)-42
1148 y(its)j(treatment)h(of)g(e)o(xplicit)g(upper)h(bounds\):)574
1272 y Fv(\002x)e Ft(v)k Fv(fr)o(om)d Fr(G)p Ft(;)13
b Fs(\000)574 1518 y Fv(using)775 1297 y Fh(8)775 1365
y(>)775 1387 y(>)775 1409 y(>)775 1432 y(<)775 1566 y(>)775
1589 y(>)775 1611 y(>)775 1634 y(:)844 1377 y Fx(sub)q
Fs(\()p Ft(v)s Fs(\))39 b Fu(7!)1324 1306 y Fh(G)1204
1481 y Fn(v)r(<)p Fo(::)1324 1465 y(^)1334 1460 y Fd(E)1320
1481 y Fn(\034)18 b Fk(in)12 b Fd(D)p Fn(;)p Fo(\001)1542
1377 y Fx(swaps-sub)q Fs(\()1887 1353 y(^)1898 1345 y
Fr(E)1883 1377 y Ft(\034)d Fs(\))844 1578 y Fx(sup)q
Fs(\()p Ft(v)s Fs(\))39 b Fu(7!)1324 1507 y Fh(G)1204
1682 y Fn(v)r Fo(::)o Fn(>)1324 1666 y Fo(^)1334 1660
y Fd(E)1320 1682 y Fn(\034)18 b Fk(in)12 b Fd(D)p Fn(;)p
Fo(\001)1542 1578 y Fx(swaps-sup)q Fs(\()1887 1554 y(^)1898
1545 y Fr(E)1883 1578 y Ft(\034)d Fs(\))574 1767 y Fv(in)18
b Fx(swaps-sup)q Fs(\()1000 1744 y(\026)1011 1735 y Fr(E)996
1767 y Ft(\034)9 b Fs([)p Ft(\022)r Fs(]\))1987 1522
y Fu(v)2068 1283 y Fv(\002x)18 b Ft(v)k Fv(fr)o(om)d
Fr(G)2068 1521 y Fv(using)2269 1323 y Fh(8)2269 1391
y(>)2269 1413 y(>)2269 1435 y(<)2269 1570 y(>)2269 1592
y(>)2269 1615 y(:)2338 1386 y Fx(sub)p Fs(\()p Ft(v)s
Fs(\))40 b Fu(7!)2783 1315 y Fh(G)2698 1490 y Fn(v)r(<)p
Fo(::)2818 1474 y(^)2828 1469 y Fd(E)2814 1490 y Fn(\034)18
b Fk(in)12 b Fd(D)2967 1386 y Fx(swaps-sub)q Fs(\()3312
1362 y(^)3324 1354 y Fr(E)3308 1386 y Ft(\034)d Fs(\))2338
1581 y Fx(sup)p Fs(\()p Ft(v)s Fs(\))40 b Fu(7!)2783
1510 y Fh(G)2698 1685 y Fn(v)r Fo(::)o Fn(>)2818 1669
y Fo(^)2828 1664 y Fd(E)2814 1685 y Fn(\034)18 b Fk(in)12
b Fd(D)2967 1581 y Fx(swaps-sup)q Fs(\()3312 1557 y(^)3324
1549 y Fr(E)3308 1581 y Ft(\034)d Fs(\))2068 1757 y Fv(in)18
b Fx(swaps-sup)q Fs(\()p Fu(9)p Fs(\000)2581 1726 y Fz(0)2611
1757 y Fs(:)9 b(\001)2705 1726 y Fz(0)2728 1757 y Fs(\(\001)-43
b Fu(\001)2821 1726 y Fz(0)2844 1757 y Fs(\))p Ft(:)19
b(D)2979 1757 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2979 1757 a Fw(<)2979 1757 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2979 1757
a 3024 1725 a Fr(E)3009 1757 y Ft(\034)3052 1726 y Fz(0)3043
1770 y Fo(1)3077 1757 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3077 1757 a Fw(,)39 b(...,)3077
1757 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3077 1757 a 3298 1725 a Fr(E)3283 1757 y Ft(\034)3326
1726 y Fz(0)3317 1770 y Fn(n)3359 1757 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3359 1757 a
Fw(>)3359 1757 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3359 1757 a 30 w Fs(\))-42 1893 y FF(Consequently)21
b(the)e(\002rst)e(component)k(of)e(the)g(metric)g(stays)g(the)g(same)g
(or)g(decreases.)-42 1976 y(The)g(second)h(component)g(stays)f(the)g
(same)g(or)g(decreases)h(by)f(its)f(de\002nition)h(and)h(the)f
(de\002nition)g(of)g Fx(access-sup)h FF(\(speci\002cally)f(its)f
(treatment)g(of)h(e)o(xplicit)-42 2059 y(upper)h(bounds\).)-42
2142 y(The)c(third)g(component)i(decreases)f(by)f(its)g(de\002nition)g
(and)h(the)f(de\002nitions)g(of)g Fx(e)o(xplicit)h FF(and)g
Fx(access-sup)g FF(\(speci\002cally)f(their)g(treatment)g(of)g(e)o
(xplicit)g(upper)-42 2225 y(bounds\).)-127 2317 y(4.)29
b(Since)19 b Fr(G)p FF(,)f Fr(D)p FF(,)h(and)469 2284
y Fr(E)453 2317 y Ft(\034)496 2285 y Fz(0)537 2317 y
FF(are)g(the)g(same)g(for)g(the)g(conclusion)i(and)e(the)g(recursi)n(v)
o(e)h(premise)f(at)g(hand,)h(the)f(\002rst)f(component)j(of)e(the)g
(metric)f(stays)i(the)f(same)g(or)-42 2400 y(decreases)h(due)f(to)g
(the)g(\002xpoint)g(property)h(of)f Fv(\002x)p FF(.)-42
2483 y(The)j(second)h(component)h(stays)e(the)g(same)h(by)f(its)g
(de\002nition)g(since)g Fr(G)p FF(,)g Fr(D)p FF(,)f(and)2146
2450 y Fr(E)2131 2483 y Ft(\034)2174 2451 y Fz(0)2218
2483 y FF(are)h(the)g(same)g(for)g(the)g(conclusion)i(and)e(the)g
(recursi)n(v)o(e)h(premise)f(at)-42 2566 y(hand.)-42
2649 y(The)d(third)g(component)h(stays)f(the)g(same)h(by)f(its)f
(de\002nition)i(since)1729 2616 y Fr(E)1714 2649 y Ft(\034)1757
2617 y Fz(0)1797 2649 y FF(is)f(the)g(same)g(for)g(the)g(conclusion)h
(and)g(the)f(recursi)n(v)o(e)g(premise)g(at)g(hand.)-42
2732 y(The)f(fourth)g(component)i(decreases)f(by)g(its)e(de\002nition)h
(since)h(the)f(assumed)h(upper)g(bound)h(must)e(either)g(be)g(a)g(v)n
(ariable)h(so)f(the)g(depth)h(is)e(decreased)j(or)e(be)-42
2815 y(an)h(e)o(xistential)g(type)g(so)g(this)g(component)i(decreases)f
(since)f Fu(\000)p Fs(1)g FF(is)f(less)h(than)g(an)o(y)h(depth.)p
-150 2933 4185 3 v 456 3018 a Fv(Figur)o(e)e(37.)38 b
FF(Proof)18 b(that)h(the)g(metric)g(decreases)h(during)f(recursion)h
(in)f(our)g(subtyping)i(algorithm)e(\(continued\))-150
3267 y(lik)o(e)n(wise)k(for)f Fx(swaps-sup)i FF(and)g
Fx(access-sup)g FF(\(note)f(that)f Fx(access)i FF(has)f(more)-150
3350 y(free)17 b(v)n(ariables)h(than)f(both)h Fx(access-sub)g
FF(and)g Fx(access-sup)p FF(\).)g(F)o(or)e Fx(swaps-sub)-150
3433 y FF(and)i Fx(access-sub)p FF(,)g(all)e(recursions)i(are)f(with)g
(the)g(same)h Ft(\036)e FF(and)i(the)f(mapping)-150 3516
y(for)k(one)h(of)f(them)h(must)f(be)h Ft(i)f FF(since)h(Algorithm)f
(Requirement)h(7)f(enables)-150 3599 y(us)e(to)g(assume)g(both)h
Fx(swaps-sub)q Fs(\()758 3566 y Fr(E)743 3599 y Ft(\034)777
3607 y Fn(j)809 3599 y Fs(\))f FF(and)g Fx(swaps-sup)r
Fs(\()1341 3566 y Fr(E)1326 3599 y Ft(\034)1360 3607
y Fn(j)1392 3599 y Fs(\))f FF(maps)i Fx(sub)p Fs(\()p
Ft(v)1790 3567 y Fz(0)1813 3599 y Fs(\))-150 3682 y FF(and)j
Fx(sup)q Fs(\()p Ft(v)154 3650 y Fz(0)176 3682 y Fs(\))f
FF(to)h(0)f(if)g(an)o(ything)i(for)e Ft(v)868 3650 y
Fz(0)913 3682 y FF(in)g Fs(\000)p FF(.)g(As)g(for)g Fx(swaps-sup)p
FF(,)i Ft(i)e FF(must)-150 3765 y(either)i(come)h(from)f(a)g(recursion)
h(for)f(e)o(xplicit)g(upper)h(bounds)h(or)e(from)g(1)-150
3848 y(plus)d(a)f(recursion)i(for)e(e)o(xplicit)h(lo)n(wer)f(bounds.)i
(In)f(the)f(former)h(case,)g Ft(\036)f FF(is)-150 3931
y(the)c(same)g(for)g(the)g(corresponding)i(recursion)e(in)g
Fx(access-sup)p FF(.)h(In)f(the)g(latter)-150 4014 y(case,)23
b(the)g(corresponding)j(recursion)e(in)f Fx(access-sup)i
FF(uses)e Ft(\025j:\036)p Fs(\(1)e(+)f Ft(j)t Fs(\))-150
4097 y FF(which)h(accounts)h(for)e(the)h(1)f(plus)h(in)g
Fx(swaps-sub)g FF(so)g(that)f(the)h(coinducti)n(v)o(e)-150
4180 y(in)m(v)n(ariant)e(is)g(maintained.)-50 4263 y(Thus)c(by)g
(coinduction)i(we)e(ha)o(v)o(e)g(sho)n(wn)h(that)f(free)g(v)n(ariables)
h(in)f Fx(access)-150 4346 y FF(projections)24 b(re\003ect)f(mappings)i
(in)e(sw)o(ap)i(heights)f(assuming)g(Algorithm)-150 4429
y(Requirement)c(7)f(holds.)p 1788 4429 4 51 v 1792 4382
45 4 v 1792 4429 V 1836 4429 4 51 v -150 4646 a Fv(Cor)o(ollary)31
b(1.)49 b Fx(Given)519 4614 y Fr(E)504 4646 y Ft(\034)9
b Fx(,)28 b(if)i Ft(v)i Fx(is)e(not)g(fr)m(ee)g(in)g(access-sub)1495
4654 y Fa(true)1582 4646 y Fs(\()1627 4614 y Fr(E)1612
4646 y Ft(\034)9 b Fs(\))29 b Fx(then)-150 4729 y(swaps-sub)q
Fs(\()207 4697 y Fr(E)191 4729 y Ft(\034)9 b Fs(\))25
b Fx(does)h(not)g(map)g(sub)q Fs(\()p Ft(v)s Fs(\))f
Fx(or)g(sup)q Fs(\()p Ft(v)s Fs(\))g Fx(to)h(anything)o(,)h(and)f(if)
-150 4812 y Ft(v)f Fx(is)d(not)g(fr)m(ee)h(in)f(access-sup)640
4832 y Fa(true)727 4812 y Fs(\()773 4780 y Fr(E)757 4812
y Ft(\034)9 b Fs(\))22 b Fx(then)g(swaps-sup)q Fs(\()1359
4780 y Fr(E)1343 4812 y Ft(\034)9 b Fs(\))22 b Fx(does)g(not)h(map)-150
4895 y(sub)q Fs(\()p Ft(v)s Fs(\))18 b Fx(or)h(sup)q
Fs(\()p Ft(v)s Fs(\))f Fx(to)h(anything)o(.)-150 5064
y Fv(B.1.6)75 b(Context)-150 5181 y FF(As)28 b(we)g(pointed)h(out)f(in)
h(the)f(paper)m(,)g(bounds)i(on)f(type)f(v)n(ariables)h(in)f(the)-150
5264 y(conte)o(xt)h(can)g(produce)h(the)f(same)g(problems)g(as)g
(inheritance.)g(As)f(such,)-150 5347 y(we)c(require)g(the)f(initial)g
(conte)o(xt)h Fr(G)31 b Fs(:)g Fr(D)23 b FF(for)g(a)h(subtyping)h(in)m
(v)o(ocation)f(to)-150 5430 y(satisfy)19 b(our)g(Conte)o(xt)g
(Requirement.)2141 3270 y(De\002ne)30 b Ft(v)46 b Fu(\034)2530
3235 y Fn(\036)2530 3291 y Fo(\001)2626 3270 y Ft(v)2666
3238 y Fz(0)2718 3270 y FF(as)29 b(\223there)i(e)o(xists)3236
3238 y Fr(E)3220 3270 y Ft(\034)39 b FF(with)29 b(either)h
Ft(v)3695 3238 y Fz(0)3759 3270 y Ft(<)p Fs(::)3920 3238
y Fr(E)3904 3270 y Ft(\034)38 b FF(in)2042 3355 y Fs(\001)27
b FF(and)h Ft(v)i FF(free)d(in)g Fx(access-sub)2887 3364
y Fn(\036)2928 3355 y Fs(\()2973 3322 y Fr(E)2958 3355
y Ft(\034)9 b Fs(\))26 b FF(or)h Ft(v)3186 3323 y Fz(0)3246
3355 y Fs(::)q Ft(>)3401 3322 y Fr(E)3385 3355 y Ft(\034)36
b FF(in)27 b Fs(\001)g FF(and)h Ft(v)i FF(free)d(in)2042
3438 y Fx(access-sup)2365 3457 y Fn(\036)2407 3438 y
Fs(\()2452 3405 y Fr(E)2437 3438 y Ft(\034)9 b Fs(\))p
FF(\224.)2042 3566 y Fv(Context)26 b(Requir)o(ement.)46
b Fr(G)26 b FF(and)h Fr(D)f FF(must)h(ha)o(v)o(e)f(\002nite)g(length,)h
Ft(<)p Fs(::)f FF(in)2042 3649 y Fr(D)21 b FF(must)g(be)h
(co-well-founded)h(on)f Fr(G)p FF(,)g(the)f(relation)h(\223there)f(e)o
(xists)3853 3617 y Fr(E)3838 3649 y Ft(\034)29 b FF(with)2042
3732 y Ft(v)2082 3700 y Fz(0)2125 3732 y Fs(::)q Ft(>)2265
3700 y Fr(E)2249 3732 y Ft(\034)23 b FF(in)15 b Fr(D)f
FF(and)i Ft(v)h FF(free)e(in)f Fx(access-sup)3160 3752
y Fc(true)3253 3732 y Fs(\()3298 3700 y Fr(E)3283 3732
y Ft(\034)9 b Fs(\))p FF(\224)14 b(is)g(well-founded)i(on)f
Fr(G)p FF(,)2042 3820 y(and)g Fu(\034)2241 3789 y Fn(<)p
Fo(0)2241 3840 y Fd(D)2338 3820 y FF(is)f(well-founded)i(on)f
Fr(G)g FF(modulo)h(the)f(equi)n(v)n(alence)i(core\003ection)2042
3908 y(of)i(the)g(preorder)g(re\003ection)g(of)g Fu(\034)2963
3876 y Fc(true)2963 3924 y Fd(D)3074 3908 y FF(on)h Fr(G)p
FF(.)2042 4060 y Fv(B.1.7)74 b(W)-5 b(ell-f)n(oundedness)2042
4176 y FF(In)32 b(Section)g(B.1.5)g(we)g(identi\002ed)h(a)f(metric)g
(which)g(decreases)h(as)g(our)2042 4259 y(subtyping)h(algorithm)f
(recurses.)g(Ho)n(we)n(v)o(er)m(,)h(this)e(does)i(not)f(guarantee)2042
4342 y(termination.)e(F)o(or)g(that,)g(we)h(need)g(to)f(pro)o(v)o(e)i
(that)e(the)g(metric)h(is)f(well-)2042 4425 y(founded)20
b(at)f(least)g(for)g(the)g(conte)o(xts)g(and)h(e)o(xistential)f(types)g
(we)g(apply)h(our)2042 4508 y(algorithm)f(to.)g(W)-6
b(e)18 b(do)h(so)g(in)g(this)g(section.)2042 4634 y Fv(Theor)o(em)30
b(2.)50 b Fx(Pr)m(o)o(vided)32 b(the)e(Algorithm)h(Requir)m(ements)g
(and)g(Conte)o(xt)2042 4717 y(Requir)m(ement)e(hold,)g(the)g(metric)g
(pr)m(esented)h(in)f(Section)g(B.1.5)f(is)h(well-)2042
4800 y(founded.)2042 4958 y(Pr)m(oof.)f FF(Since)19 b(we)f(used)h(a)g
(le)o(xicographic)h(ordering,)f(we)f(can)i(pro)o(v)o(e)f(well-)2042
5041 y(foundedness)33 b(of)d(the)h(metric)f(by)h(pro)o(ving)h
(well-foundedness)g(of)e(each)2042 5124 y(component.)2065
5264 y(1.)f(This)17 b(component)i(is)e(well-founded)i(pro)o(vided)g
(the)e(partial)h(map)g(maps)2150 5347 y Fx(const)35 b
FF(to)f(a)g(natural)g(number)g(\(i.e.)f(something)i(besides)f
Fu(1)p FF(\).)f(It)g(is)2150 5430 y(possible)c(for)e
Fx(const)j FF(to)e(be)h(mapped)g(to)f(nothing)h(at)f(all,)g(b)o(ut)f
(by)i(the)p eop end
%%Page: 23 23
TeXDict begin 23 22 bop -42 66 a FF(de\002nition)30 b(of)g
Fx(swaps-sub)h FF(this)e(implies)1109 34 y Fr(E)1094
66 y Ft(\034)38 b FF(is)29 b(a)h(type)g(v)n(ariable)h(and)-42
149 y(in)21 b(this)g(case)h(this)f(component)i(is)e(al)o(w)o(ays)i
(preserv)o(ed)f(e)o(xactly)g(so)f(that)-42 232 y(termination)d(is)f
(still)f(guaranteed.)j(Thus)e(the)h(k)o(e)o(y)g(problem)g(is)f(pro)o
(ving)-42 315 y(that)i Fx(const)h FF(does)g(not)f(map)h(to)e
Fu(1)p FF(.)-42 399 y(First)29 b(we)i(pro)o(v)o(e)g(that,)f(due)h(to)f
(the)h(Algorithm)f(Requirements,)h(for)-42 482 y(an)o(y)117
449 y Fr(E)102 482 y Ft(\034)45 b FF(the)37 b(partial)g(maps)h
(resulting)f(from)g(the)h(height)f(functions)-42 565
y Fx(swaps-sub)q Fs(\()315 532 y Fr(E)299 565 y Ft(\034)9
b Fs(\))35 b FF(and)h Fx(swaps-sup)r Fs(\()907 532 y
Fr(E)892 565 y Ft(\034)9 b Fs(\))34 b FF(ne)n(v)o(er)j(map)f(an)o(y)g
(domain)h(el-)-42 648 y(ement)g(to)f Fu(1)p FF(.)g(In)h(f)o(act,)f(we)h
(will)e(sho)n(w)i(that)g Fx(swaps-sub)q Fs(\()1642 615
y Fr(E)1626 648 y Ft(\034)9 b Fs(\))36 b FF(and)-42 731
y Fx(swaps-sup)q Fs(\()315 698 y Fr(E)299 731 y Ft(\034)9
b Fs(\))19 b FF(ne)n(v)o(er)i(map)f(an)o(y)h(domain)f(element)h(to)e(v)
n(alues)i(greater)-42 814 y(than)27 b Fx(height-sub)q
Fs(\()473 781 y Fr(E)458 814 y Ft(\034)9 b Fs(\))25 b
FF(and)i Fx(height-sup)q Fs(\()1051 781 y Fr(E)1035 814
y Ft(\034)9 b Fs(\))25 b FF(respecti)n(v)o(ely)-5 b(.)27
b(Algorithm)-42 897 y(Requirement)f(6)g(then)g(guarantees)h(these)f(v)n
(alues)g(are)g(not)g Fu(1)f FF(\(since)-42 980 y(\002niteness)f(of)f
Fx(height-sub)r Fs(\()710 947 y Fr(E)695 980 y Ft(\034)9
b Fs(\))22 b FF(implies)i(\002niteness)f(of)h Fx(height-sup)q
Fs(\()1786 947 y Fr(E)1770 980 y Ft(\034)9 b Fs(\))-42
1063 y FF(from)19 b(the)g(de\002nition)g(of)g Fx(height-sup)p
FF(\).)h(W)-6 b(e)18 b(do)h(so)h(by)f(coinduction.)-42
1146 y(The)41 b(cases)h(when)533 1114 y Fr(E)517 1146
y Ft(\034)50 b FF(is)41 b(a)g(v)n(ariable)h(are)f(ob)o(vious,)i(so)e
(we)h(only)-42 1229 y(need)32 b(to)f(concern)h(ourselv)o(es)g(with)e
(when)1170 1197 y Fr(E)1154 1229 y Ft(\034)39 b FF(is)31
b(of)g(the)g(form)g Fu(9)p Fs(\000)g(:)-42 1312 y(\001\(\001)-43
b Fu(\001)22 b Fs(\))p Ft(:)36 b(C)263 1312 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 263 1312
a Fw(<)263 1312 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 263 1312 a 308 1280 a Fr(E)293 1312
y Ft(\034)327 1320 y Fo(1)361 1312 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 361 1312 a Fw(,)k(...,)361
1312 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 361 1312 a 583 1280 a Fr(E)567 1312 y Ft(\034)601
1320 y Fn(n)644 1312 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 644 1312 a Fw(>)644 1312 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 644
1312 a 29 w FF(.)c(F)o(or)g Fx(swaps-sub)p FF(,)h(Algorithm)g(Require-)
-42 1395 y(ments)21 b(1,)f(5)h(and)g(7)g(and)h(Lemma)e(3)h(allo)n(w)g
(us)g(to)f(replace)h(the)g(\002xpoint)-42 1478 y(with)f(the)h(join)g
(of)g(the)g(v)n(arious)g(partial)g(maps)g(after)f(replacing)i
Fx(sub)q Fs(\()p Ft(v)s Fs(\))-42 1561 y FF(and)30 b
Fx(sup)q Fs(\()p Ft(v)s Fs(\))f FF(with)h Fq(?)f FF(so)h(that)g
Fx(swaps-sub)h FF(coincides)f(with)g Fx(height-)-42 1644
y(sub)p FF(.)23 b(F)o(or)f Fx(swaps-sup)p FF(,)h(the)g(only)g(concern)g
(is)g(the)f(replacements)i(with)-42 1727 y Fu(f)p Fx(const)38
b Fu(7!)f(1g)p FF(;)27 b(ho)n(we)n(v)o(er)h(from)f(Algorithm)g
(Requirement)h(3)g(and)-42 1810 y(Corollary)k(1)f(we)h(kno)n(w)g
Fx(sub)q Fs(\()p Ft(v)s Fs(\))f FF(and)h Fx(sup)q Fs(\()p
Ft(v)s Fs(\))f FF(are)h(not)g(mapped)g(to)-42 1893 y(an)o(ything)19
b(and)g(so)g(the)f(replacement)h(does)g(nothing.)h(Thus)e
Fx(height-sub)-42 1976 y FF(and)25 b Fx(height-sup)g
FF(are)f(upper)h(bounds)h(of)e Fx(swaps-sub)h FF(and)g
Fx(swaps-sup)-42 2059 y FF(respecti)n(v)o(ely)-5 b(.)-42
2142 y(Lastly)18 b(we)g(need)i(to)e(pro)o(v)o(e)h(that)g(the)f
(\002xpoint)h(o)o(v)o(er)g Fr(G)g FF(and)g Fr(D)f FF(is)g(\002nite.)-42
2225 y(Here)f(we)h(apply)g(Lemmas)f(6)h(and)g(3)f(using)h(the)g(Conte)o
(xt)g(Requirement)-42 2308 y(to)24 b(e)o(xpress)g(this)g(\002xpoint)g
(in)f(terms)h(of)g(a)f(\002nite)g(number)i(of)f(replace-)-42
2391 y(ments)17 b(of)f(\002nite)h(quantities)f(which)i(ensures)f(the)g
(result)f(is)g(\002nite.)g(Thus)-42 2474 y(this)j(component)h(is)f
(well-founded.)-127 2578 y(2.)29 b(The)19 b(in)m(v)n(ariant)h(that)g
(\223there)g(e)o(xists)899 2555 y Fs(^)911 2546 y Fr(E)895
2578 y Ft(\034)28 b FF(with)19 b Ft(v)1149 2547 y Fz(0)1194
2578 y Fs(::)p Ft(>)1323 2555 y Fs(^)1334 2546 y Fr(E)1319
2578 y Ft(\034)27 b FF(in)20 b Fr(D)f FF(and)h Ft(v)i
FF(free)-42 2662 y(in)27 b Fx(access-sup)367 2682 y Fo(=0)448
2662 y Fs(\()482 2638 y(^)493 2630 y Fr(E)478 2662 y
Ft(\034)9 b Fs(\))p FF(\224)26 b(is)h(well-founded)h(on)f
Fr(G)h FF(holds)f(initially)g(due)-42 2745 y(to)20 b(the)f(Conte)o(xt)h
(Requirement)h(and)f(is)g(preserv)o(ed)h(through)f(recursion)-42
2828 y(due)25 b(to)f(Algorithm)h(Requirement)g(5.)f(In)g(light)g(of)g
(this,)g(this)g(compo-)-42 2911 y(nent)19 b(is)g(clearly)g
(well-founded.)-127 3003 y(3.)29 b(This)k(component)i(is)e
(well-founded)i(due)f(to)f(Algorithm)h(Require-)-42 3086
y(ment)19 b(1)g(and)h(the)f(de\002nition)g(of)g Fx(access-sup)p
FF(.)-127 3177 y(4.)29 b(The)22 b(in)m(v)n(ariant)h(that)f
Ft(<)p Fs(::)g FF(in)g Fr(D)g FF(is)g(co-well-founded)i(on)f
Fr(G)f FF(holds)h(ini-)-42 3260 y(tially)c(due)h(to)f(the)h(Conte)o(xt)
f(Requirement)h(and)h(is)e(preserv)o(ed)h(through)-42
3343 y(recursion)h(due)f(to)g(Algorithm)g(Requirement)g(5,)g(and)h(so)f
(this)f(compo-)-42 3426 y(nent)g(is)g(well-founded.)p
1788 3564 4 51 v 1792 3517 45 4 v 1792 3564 V 1836 3564
4 51 v -50 3719 a(Note)k(that)f(most)h(of)g(the)g(Algorithm)g
(Requirements)h(are)e(used)i(solely)-150 3802 y(to)j(pro)o(v)o(e)g
(well-foundedness)i(of)e(this)f(metric.)g(In)h(particular)m(,)g(man)o
(y)g(are)-150 3885 y(used)h(to)g(pro)o(v)o(e)g(that)g(the)g(\002rst)e
(component)k(is)d(well-founded.)i(W)-6 b(e)27 b(ha)o(v)o(e)-150
3968 y(pro)o(vided)17 b(one)f(set)g(of)g(requirements)g(that)g(ensure)g
(this)g(property)-5 b(,)16 b(b)o(ut)g(other)-150 4051
y(sets)29 b(w)o(ould)i(w)o(ork)f(as)g(well.)f(F)o(or)g(e)o(xample,)h
(requiring)g(all)f(types)h(to)g(be)-150 4134 y(\002nite)i(allo)n(ws)h
(Algorithm)g(Requirement)h(5)f(to)g(be)g(relax)o(ed)g(to)g(require)-150
4217 y(well-foundedness)21 b(rather)d(than)h(complete)h(absence)g(of)e
(free)h(v)n(ariables)g(in)-150 4300 y Fx(access-cxt)q
Fs(\(\001\))p FF(.)24 b(Ho)n(we)n(v)o(er)m(,)h(our)g(set)g(of)f
(requirements)i(is)e(weak)i(enough)-150 4383 y(to)19
b(suit)f(man)o(y)i(purposes)g(including)g(wildcards)g(in)e(particular)l
(.)-150 4535 y Fv(B.1.8)75 b(T)-7 b(ermination)18 b(f)n(or)h(Subtyping)
e(Our)i(Existential)f(T)-6 b(ypes)-150 4651 y FF(W)g(e)18
b(ha)o(v)o(e)h(\002nally)g(b)o(uilt)f(up)h(the)g(set)f(of)h(tools)g(to)
g(pro)o(v)o(e)g(that)g(our)g(subtyping)-150 4734 y(algorithm)f
(terminates)f(under)h(our)g(requirements.)g(No)n(w)g(we)f(simply)g
(need)-150 4817 y(to)i(put)g(the)g(pieces)g(together)l(.)-150
4942 y Fv(Theor)o(em)k(3.)45 b Fx(Given)23 b(the)g(Algorithm)g(Requir)m
(ements,)g(T)-7 b(ermination)24 b(Re-)-150 5025 y(quir)m(ement,)g(and)g
(Conte)o(xt)e(Requir)m(ement,)i(the)f(algorithm)g(pr)m(escribed)i(by)
-150 5108 y(the)19 b(rules)g(in)g(F)m(igur)m(e)g(7)g(terminates.)-150
5264 y(Pr)m(oof.)29 b FF(By)16 b(Theorems)i(1)f(and)g(2)g(we)g(ha)o(v)o
(e)g(that)g(the)g(recursion)g(in)g(the)g(algo-)-150 5347
y(rithm)f(is)g(well-founded,)h(thus)g(we)f(simply)h(need)g(to)f(ensure)
h(that)f(all)g(the)h(in-)-150 5430 y(termediate)f(steps)f(terminate.)h
(The)f(only)h(intermediate)g(step)g(in)h(S)t Fp(U)t(B)t
FF(-)t(V)-5 b Fp(A)t(R)2042 66 y FF(is)24 b(the)g(enumeration)h
(through)h(the)e(constraints)h(in)f Fr(D)f FF(which)i(terminates)2042
149 y(since)h Fr(D)f FF(is)g(al)o(w)o(ays)i(\002nite)e(due)h(to)g(the)g
(Conte)o(xt)g(Requirement)g(and)h(Al-)2042 232 y(gorithm)19
b(Requirement)g(4.)g(As)f(for)j(S)t Fp(U)t(B)t FF(-)t(E)t
Fp(X)t(I)t(S)t(T)t(S)r FF(,)14 b(the)19 b(construction)h(of)e
Ft(\022)2042 315 y FF(terminates)e(since)g Fu(\031)2598
324 y Fn(\022)2648 315 y FF(recurses)g(on)g(the)g(structure)g(of)g
Fx(uni\002es)q Fs(\()3700 283 y Fr(E)3685 315 y Ft(\034)3728
284 y Fz(0)3719 329 y Fn(i)3749 315 y Fs(\))g FF(for)f(each)2042
399 y Ft(i)21 b FF(in)h Fs(1)g FF(to)f Ft(n)h FF(which)g(is)f(al)o(w)o
(ays)h(\002nite)f(since)h Fx(e)o(xplicit)p Fs(\()3492
366 y Fr(E)3477 399 y Ft(\034)3520 367 y Fz(0)3541 399
y Fs(\))f FF(is)h(\002nite)f(by)h(Al-)2042 482 y(gorithm)c(Requirement)
g(1,)f(and)h(due)h(to)e(that)g(same)h(requirement)g(there)g(are)2042
565 y(only)i(a)g(\002nite)f(number)i(of)f(recursi)n(v)o(e)g(calls)g(to)
f(check)i(e)o(xplicit)f(constraints)2042 648 y(in)f Fs(\001)-43
b Fu(\001)2183 616 y Fz(0)2205 648 y FF(.)18 b(Thus)h(the)g(subtyping)i
(algorithm)e(terminates.)p 3980 648 V 3984 600 45 4 v
3984 648 V 4028 648 4 51 v 2042 838 a Fv(B.2)74 b(T)-7
b(ermination)19 b(f)n(or)g(W)o(ildcard)e(T)-6 b(ypes)2042
954 y FF(W)g(e)20 b(just)h(laid)g(out)g(a)g(number)h(of)e(requirements)
i(on)g(our)f(e)o(xistential)g(types)2042 1037 y(in)f(order)g(to)g
(ensure)g(termination)g(of)g(subtyping,)h(and)g(in)f(Section)g(A.3)f
(we)2042 1120 y(sho)n(wed)31 b(ho)n(w)g(to)f(translate)g(wildcard)g
(types)h(to)f(our)g(e)o(xistential)g(types.)2042 1203
y(Here)19 b(we)f(pro)o(v)o(e)i(that)f(the)g(e)o(xistential)f(types)i
(resulting)f(from)g(this)f(transla-)2042 1286 y(tion)26
b(satis\002es)g(our)h(requirements)g(supposing)h(the)f(Inheritance)g
(Restric-)2042 1369 y(tion)k(and)g(P)o(arameter)f(Restriction)h(from)g
(Section)g(4.4)g(both)g(hold.)g(The)2042 1452 y(rules)25
b(in)g(Figure)g(8)g(are)g(the)h(result)f(of)g(combining)h(the)g
(translation)f(from)2042 1535 y(wildcards)30 b(to)g(our)g(e)o
(xistential)g(types)h(with)e(\(a)h(specialized)h(simpli\002ca-)2042
1618 y(tion)18 b(of\))h(the)g(subtyping)h(rules)f(for)f(our)h(e)o
(xistential)g(types,)f(so)h(this)g(section)2042 1701
y(will)i(pro)o(v)o(e)i(that)f(the)h(algorithm)g(prescribed)g(by)g
(these)g(rules)f(al)o(w)o(ays)h(ter)o(-)2042 1784 y(minates.)g(Later)f
(we)h(will)f(demonstrate)h(that)g(these)g(rules)g(are)g(sound)h(and)
2042 1867 y(complete)17 b(with)e(respect)i(to)f(the)g(rules)g(in)g
(Figure)g(30)h(corresponding)h(to)e(the)2042 1950 y(Ja)o(v)n(a)j
(language)h(speci\002cation.)2141 2033 y(Algorithm)k(Requirement)f(4)h
(holds)g(because)g(wildcard)f(types)h(are)f(\002-)2042
2116 y(nite)29 b(and)g(the)g(e)o(xplicit)g(portion)h(of)f(a)g
(translated)g(wildcard)g(type)h(corre-)2042 2199 y(sponds)20
b(directly)f(with)g(the)f(syntax)i(of)f(the)g(original)g(wildcard)g
(type.)2141 2282 y(Algorithm)j(Requirement)g(2)g(holds)g(because)g(an)o
(y)g(bound)h(v)n(ariable)f(in)2042 2365 y(a)15 b(translated)h(wildcard)
g(type)g(corresponds)i(to)d(a)h(wildcard)g(in)f(the)h(wildcard)2042
2448 y(type)j(and)h(so)f(will)f(occur)h(as)g(a)g(type)h(ar)o(gument)f
(to)g(the)g(class)g(in)g(the)g(body)-5 b(.)2141 2531
y(Algorithm)21 b(Requirement)f(3)g(holds)h(because)g(e)o(xplicit)f
(constraints)h(on)2042 2614 y(wildcard)33 b(cannot)h(reference)g(the)g
(type)f(v)n(ariable)h(represented)h(by)e(that)2042 2697
y(wildcard)19 b(or)g(an)o(y)g(other)h(wildcard.)2141
2780 y(Algorithm)26 b(Requirement)g(4)f(holds)h(because)g(the)f(set)g
(of)h(constraints)2042 2863 y(is)e(simply)h(the)g(union)h(of)f(the)g(e)
o(xplicit)g(and)g(implicit)f(constraints)i(on)f(the)2042
2946 y(wildcards,)19 b(both)g(of)g(which)g(are)g(\002nite.)2141
3029 y(Algorithm)30 b(Requirement)g(5)g(holds)g(because)h(Ja)o(v)n(a)e
(does)h(not)g(allo)n(w)2042 3112 y(type)24 b(parameters)f(to)h(be)f
(bounded)j(abo)o(v)o(e)e(by)g(other)g(type)f(parameters)h(in)2042
3196 y(a)k(c)o(yclic)g(manner)m(,)g(the)g(P)o(arameter)g(Restriction)f
(ensures)i(that)f(an)o(y)h(type)2042 3279 y(v)n(ariable)17
b(occurring)h(free)f(in)f Fx(access-cxt)q Fs(\(\001\))g
FF(must)h(be)g(from)g(another)h(type)2042 3362 y(ar)o(gument)29
b(to)g(the)h(rele)n(v)n(ant)f(class)g(and)h(so)f(must)g(not)h(be)f(a)g
(bound)i(type)2042 3445 y(v)n(ariable,)j(and)g(lastly)g(because)h(Ja)o
(v)n(a)f(does)g(not)g(allo)n(w)g(implicit)f(lo)n(wer)2042
3528 y(bounds)c(on)f(wildcards)g(and)g(e)o(xplicit)g(lo)n(wer)g(bounds)
h(cannot)f(reference)2042 3611 y(the)19 b(type)g(v)n(ariables)h
(represented)g(by)f(wildcards.)2141 3694 y(Algorithm)g(Requirement)h(6)
f(holds)g(because)h(the)f(P)o(arameter)g(Restric-)2042
3777 y(tion)g(ensures)g(the)g(height)h(is)e(not)i(increased)f(by)h
(implicit)e(constraints.)2141 3860 y(Algorithm)i(Requirement)h(7)e
(holds)i(because)g(types)f(in)f(the)h(body)h(can-)2042
3943 y(not)g(reference)h(type)g(v)n(ariables)g(corresponding)h(to)f
(wildcards)f(unless)h(the)2042 4026 y(type)d(is)g(e)o(xactly)g(one)h
(such)f(type)h(v)n(ariable.)2141 4109 y(The)h(Inheritance)g
(Requirement)h(is)e(ensured)h(by)g(the)g(Inheritance)g(Re-)2042
4192 y(striction,)c(and)h(the)g(Conte)o(xt)g(Requirement)h(is)e
(ensured)i(by)g(the)f(P)o(arameter)2042 4275 y(Restriction.)2042
4483 y FD(C.)91 b(Soundness)2042 4599 y FF(Here)14 b(we)h(gi)n(v)o(e)g
(an)f(informal)h(ar)o(gument)g(of)g(soundness)h(of)f(traditional)f(e)o
(xis-)2042 4682 y(tential)k(types)h(and)h(subtyping.)f(Then)g(we)g(sho)
n(w)g(formally)g(that)g(subtyping)2042 4765 y(is)i(preserv)o(ed)h(by)g
(translation)f(from)h(our)f(e)o(xistential)g(types)h(to)f(traditional)
2042 4848 y(e)o(xistential)c(types)h(under)h(ne)n(w)f(requirements.)g
(Lastly)f(we)h(sho)n(w)g(that)g(sub-)2042 4932 y(typing)j(is)g(preserv)
o(ed)h(by)f(translation)g(from)g(wildcard)g(types)g(to)g(our)g(e)o
(xis-)2042 5015 y(tential)h(types)i(and)g(ho)n(w)f(wildcard)h(types)f
(ful\002ll)f(the)h(ne)n(w)h(requirements,)2042 5098 y(thus)18
b(suggesting)h(that)f(subtyping)h(of)f(wildcards)g(is)g(sound.)h(Note)f
(that)f(this)2042 5181 y(last)25 b(aspect)h(actually)f(pro)o(v)o(es)i
(that)e(our)h(subtyping)h(algorithm)e(for)h(wild-)2042
5264 y(card)21 b(types)g(is)f(complete)h(with)f(respect)h(to)g(the)f
(Ja)o(v)n(a)h(language)h(speci\002ca-)2042 5347 y(tion;)15
b(later)g(we)h(will)f(sho)n(w)h(it)f(is)g(sound)i(with)e(respect)h(to)g
(the)g(Ja)o(v)n(a)g(language)2042 5430 y(speci\002cation.)p
eop end
%%Page: 24 24
TeXDict begin 24 23 bop -150 66 a Fv(C.1)75 b(Soundness)17
b(f)n(or)i(T)-6 b(raditional)19 b(Existential)f(T)-6
b(ypes)-150 183 y FF(Although)20 b(we)f(of)n(fer)g(no)g(proof)g(that)g
(our)g(application)h(of)f(traditional)f(e)o(xis-)-150
266 y(tential)i(types)i(is)e(sound,)i(we)e(do)i(of)n(fer)e(our)i
(intuition)e(for)h(why)g(we)g(e)o(xpect)-150 349 y(this)g(to)h(be)g
(true.)f(In)h(particular)m(,)f(e)o(xisting)h(proofs)g(of)g(soundness)i
(ha)o(v)o(e)d(as-)-150 432 y(sumed)e(\002nite)f(v)o(ersions)i(of)e(e)o
(xistential)h(types)g(and)g(proofs)g([5],)f(so)h(the)g(k)o(e)o(y)-150
515 y(challenge)25 b(is)e(adapting)h(these)g(proofs)g(to)f(the)h
(coinducti)n(v)o(e)g(v)n(ariation)g(we)-150 598 y(ha)o(v)o(e)19
b(presented)h(here.)-50 681 y(Suppose)28 b(a)f(v)n(alue)h(of)f(static)g
(type)916 649 y Fr(t)906 681 y Ft(\034)36 b FF(is)26
b(a)h(tuple)h Fu(h)p Ft(v)s(;)1403 649 y Fr(t)1393 681
y Ft(\034)1427 689 y Fn(v)1464 681 y Ft(;)13 b(p)p Fu(i)26
b FF(where)i Ft(v)-150 764 y FF(is)j(an)i(instance)f(of)g(runtime)g
(type)838 732 y Fr(t)828 764 y Ft(\034)862 772 y Fn(v)931
764 y FF(\(which)g(is)g(a)f(class\))h(and)h Ft(p)e FF(is)g(a)-150
847 y(proof)23 b(of)129 815 y Fr(t)119 847 y Ft(\034)153
855 y Fn(v)218 847 y Ft(<)p Fs(:)338 815 y Fr(t)328 847
y Ft(\034)9 b FF(.)21 b(Of)i(course,)g(since)g(this)f(is)g(Ja)o(v)n(a)h
(all)f(the)h(types)g(erase,)-150 930 y(b)o(ut)e(for)f(sho)n(wing)j
(soundness)f(its)f(con)m(v)o(enient)h(to)f(think)g(of)g(the)g(types)h
(and)-150 1013 y(proofs)d(as)g(usable)h(entities.)e(F)o(or)g(e)o
(xample,)h(when)h(in)m(v)o(oking)f(a)g(method)h(on)-150
1100 y(a)15 b(v)n(alue)h Fu(h)p Ft(v)s(;)187 1068 y Fr(t)177
1100 y Ft(\034)211 1108 y Fn(v)248 1100 y Ft(;)d(p)p
Fu(i)i FF(of)g(static)g(type)g Ft(C)819 1100 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 819 1100
a Fw(<)819 1100 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 819 1100 a 853 1076 a Fs(\026)859 1068
y Fr(t)849 1100 y Ft(\034)883 1108 y Fo(1)917 1100 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

917 1100 a Fw(,)40 b(...,)917 1100 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 917 1100 a 1127
1076 a Fs(\026)1133 1068 y Fr(t)1123 1100 y Ft(\034)1157
1108 y Fn(n)1200 1100 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1200 1100 a Fw(>)1200 1100 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate

1200 1100 a 29 w FF(,)15 b(the)g(e)o(x)o(ecution)h(needs)-150
1183 y(to)h(kno)n(w)h(that)f(the)g(v-table)g(for)g Ft(v)j
FF(has)d(the)h(e)o(xpected)g Ft(C)k FF(method;)c(in)f(partic-)-150
1270 y(ular)m(,)g(it)g(needs)h(to)f(use)h(the)g(f)o(act)f(that)813
1237 y Fr(t)803 1270 y Ft(\034)837 1278 y Fn(v)891 1270
y FF(is)g(a)h(subclass)g(of)f Ft(C)1414 1270 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1414 1270
a Fw(<)1414 1270 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1414 1270 a 1448 1246 a Fs(\026)1454
1237 y Fr(t)1444 1270 y Ft(\034)1478 1278 y Fo(1)1512
1270 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1512 1270 a Fw(,)40 b(...,)1512 1270 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1512 1270
a 1722 1246 a Fs(\026)1728 1237 y Fr(t)1718 1270 y Ft(\034)1752
1278 y Fn(n)1794 1270 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1794 1270 a Fw(>)1794 1270 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate

1794 1270 a 30 w FF(.)-150 1353 y(Supposing)26 b(we)f(put)h(the)f
(subtyping)h(rules)g(for)f(assumption,)h(re\003e)o(xi)n(vity)-5
b(,)-150 1436 y(and)29 b(transiti)n(vity)f(aside)h(for)f(no)n(w)-5
b(,)29 b(then)g(the)g(proof)g Ft(p)f FF(can)h(only)g(e)o(xist)f(if)-150
1523 y(the)17 b(class)130 1490 y Fr(t)120 1523 y Ft(\034)154
1531 y Fn(v)207 1523 y FF(is)f(a)h(subclass)h(of)f Ft(C)728
1523 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 728 1523 a Fw(<)728 1523 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 728 1523 a 761 1499
a Fs(\026)767 1490 y Fr(t)757 1523 y Ft(\034)791 1531
y Fo(1)826 1523 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 826 1523 a Fw(,)39 b(...,)826 1523
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 826 1523 a 1036 1499 a Fs(\026)1041 1490 y Fr(t)1031
1523 y Ft(\034)1065 1531 y Fn(n)1108 1523 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1108 1523
a Fw(>)1108 1523 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1108 1523 a 46 w FF(since)17 b(Rule)g(1)f(is)h(the)g
(only)-150 1606 y(rule)e(that)f(can)i(apply)f(when)h(both)f(the)g
(subtype)h(and)f(supertype)i(are)d(classes.)-150 1689
y(Thus,)22 b(ha)o(ving)h(such)f(a)g(proof)h Ft(p)e FF(ensures)i(that)f
(the)g(method)h(in)m(v)o(ocation)g(is)-150 1772 y(sound.)-50
1855 y(Another)c(major)g(operation)h(the)g(language)g(needs)g(to)f(do)h
(is)e(open)i(e)o(xis-)-150 1938 y(tential)j(types)g(\(i.e.)f(wildcard)h
(capture\).)h(Thus,)f(gi)n(v)o(en)g(a)g(v)n(alue)h Fu(h)p
Ft(v)s(;)1679 1906 y Fr(t)1669 1938 y Ft(\034)1703 1946
y Fn(v)1740 1938 y Ft(;)13 b(p)p Fu(i)-150 2021 y FF(of)19
b(static)g(type)g Fu(9)p Fs(\000)9 b(:)g(\001)p Ft(:)499
1989 y Fr(t)489 2021 y Ft(\034)g FF(,)18 b(the)h(language)i(needs)f(to)
f(be)g(able)g(to)g(get)g(v)n(alues)-150 2104 y(for)d(the)h(bound)h(v)n
(ariables)f Fs(\000)f FF(and)h(proofs)g(for)f(the)h(properties)g(in)f
Fs(\001)p FF(.)g(Again,)-150 2187 y(the)25 b(proof)h
Ft(p)e FF(pro)o(vides)i(this)e(information.)i(Supposing)g(we)f(put)g
(the)g(sub-)-150 2270 y(typing)d(rules)f(for)g(assumption,)h(re\003e)o
(xi)n(vity)-5 b(,)21 b(and)h(transiti)n(vity)f(aside)g(once)-150
2353 y(more,)c(then)h(the)f(proof)h Ft(p)f FF(can)g(only)h(e)o(xist)f
(if)g(there)g(is)g(an)h(instantiation)f Ft(\022)i FF(of)-150
2436 y(the)g(bound)h(v)n(ariables)f Fs(\000)p FF(,)f(satisfying)h(the)f
(constraints)h(in)g Fs(\001)p FF(,)f(since)h(Rule)f(3)-150
2519 y(is)k(the)g(only)h(rule)f(that)g(can)h(apply)g(when)g(the)f
(subtype)h(is)f(a)g(class)g(and)h(the)-150 2602 y(supertype)h(is)e(an)h
(e)o(xistential)f(type.)h(Thus,)g(by)g(using)g(this)f(rule)h(the)g
(proof)-150 2685 y Ft(p)e FF(can)h(pro)o(vide)g(the)g(instantiations)g
(of)f(the)h(v)n(ariables)g(and)h(the)e(proofs)h(for)-150
2768 y(the)27 b(properties,)g(ensuring)h(that)e(the)h(opening)i(\(or)d
(wildcard)h(capture\))h(is)-150 2851 y(sound.)-50 2934
y(Notice)k(that,)f(in)h(order)h(to)f(pro)o(v)o(e)h(soundness)h(of)e
(the)g(fundamental)-150 3017 y(operations,)27 b(we)g(k)o(eep)h
(destructing)f Ft(p)p FF(;)f(that)h(is,)f(we)g(break)i
Ft(p)e FF(do)n(wn)h(into)-150 3100 y(smaller)c(parts)f(such)i(as)f(a)g
(subclassing)h(proof)f(or)g(instantiations)g(of)g(v)n(ari-)-150
3183 y(ables)30 b(and)g(subproofs)h(for)e(those)h(v)n(ariables.)g
(Since)f(soundness)i(of)f(an)o(y)-150 3266 y(indi)n(vidual)g(operation)
g(ne)n(v)o(er)f(actually)h(needs)g(to)e(do)i(induction)g(on)f(the)-150
3349 y(entire)24 b(proof,)g(it)f(is)h(sound)h(for)f(the)f(proof)i(to)f
(be)g(in\002nite.)f(Note)h(that)g(this)-150 3432 y(is)32
b(because)i(e)o(x)o(ecution)g(in)f(Ja)o(v)n(a)f(is)h(a)f(coinducti)n(v)
o(e)i(process)g(\(i.e.)e(non-)-150 3515 y(termination)d(is)f
(implicit\),)g(so)h(this)f(line)h(of)f(reasoning)i(does)g(not)f(apply)
-150 3598 y(to)19 b(a)g(language)h(in)f(which)g(w)o(ould)h(lik)o(e)f
(to)g(ha)o(v)o(e)g(termination)g(guarantees.)-50 3681
y(No)n(w)14 b(we)h(return)g(to)g(the)f(subtyping)j(rules)d(for)h
(assumption,)h(re\003e)o(xi)n(vity)-5 b(,)-150 3764 y(and)34
b(transiti)n(vity)-5 b(.)34 b(First,)e(we)h(can)i(put)f(aside)g(the)f
(subtyping)j(rules)d(for)-150 3847 y(assumption)20 b(because)g(we)e
(can)h(interpret)g(an)o(y)g(proof)g(of)g Fr(G)j Fs(:)f
Fr(D)g Fu(`)1622 3815 y Fr(t)1612 3847 y Ft(\034)29 b(<)p
Fs(:)1788 3815 y Fr(t)1778 3847 y Ft(\034)1821 3815 y
Fz(0)-150 3930 y FF(as)16 b(a)g(function)h(from)e(instantiations)i
Ft(\022)h FF(of)d Fr(G)h FF(and)h(proofs)g(of)f Fr(D)p
Fs([)p Ft(\022)r Fs(])g FF(to)g(proofs)-150 4013 y(of)26
b Fq(?)34 b Fs(:)g Fq(?)g Fu(`)268 3981 y Fr(t)258 4013
y Ft(\034)9 b Fs([)p Ft(\022)r Fs(])34 b Ft(<)p Fs(:)540
3981 y Fr(t)530 4013 y Ft(\034)573 3981 y Fz(0)595 4013
y Fs([)p Ft(\022)r Fs(])p FF(.)25 b(Second,)h(we)g(can)g(put)g(aside)g
(re\003e)o(xi)n(vity)-5 b(,)-150 4096 y(since)16 b(for)g(an)o(y)g(type)
398 4064 y Fr(t)388 4096 y Ft(\034)24 b FF(well-formed)16
b(in)f Fq(?)22 b Fs(:)f Fq(?)16 b FF(one)g(can)h(construct)f(a)g(proof)
-150 4179 y(of)j Fq(?)k Fs(:)g Fq(?)f Fu(`)215 4147 y
Fr(t)205 4179 y Ft(\034)31 b(<)p Fs(:)383 4147 y Fr(t)373
4179 y Ft(\034)d FF(without)19 b(using)h(re\003e)o(xi)n(vity)g(\(e)o
(xcept)g(for)f(v)n(ariables\).)-150 4262 y(Third,)32
b(we)g(can)h(put)g(aside)f(transiti)n(vity)-5 b(,)32
b(since,)h(if)e(one)i(has)g(proofs)g(of)-150 4345 y Fq(?)f
Fs(:)g Fq(?)g Fu(`)171 4313 y Fr(t)161 4345 y Ft(\034)40
b(<)p Fs(:)358 4313 y Fr(t)348 4345 y Ft(\034)391 4314
y Fz(0)437 4345 y FF(and)25 b Fq(?)31 b Fs(:)h Fq(?)g
Fu(`)890 4313 y Fr(t)880 4345 y Ft(\034)923 4314 y Fz(0)976
4345 y Ft(<)p Fs(:)1099 4313 y Fr(t)1089 4345 y Ft(\034)1132
4314 y Fz(0)1178 4345 y FF(not)24 b(using)h(assumption,)-150
4428 y(re\003e)o(xi)n(vity)c(for)g(non-v)n(ariables,)h(or)f(transiti)n
(vity)-5 b(,)20 b(then)i(one)f(can)h(construct)-150 4511
y(a)e(proof)h(of)g Fq(?)j Fu(`)331 4479 y Fr(t)322 4511
y Ft(\034)32 b(<)p Fs(:)503 4479 y Fr(t)493 4511 y Ft(\034)536
4480 y Fz(00)597 4511 y FF(not)20 b(using)h(assumption,)h(re\003e)o(xi)
n(vity)e(for)h(non-)-150 4594 y(v)n(ariables,)g(or)f(transiti)n(vity)-5
b(.)20 b(Thus,)h(the)f(subtyping)i(rules)f(for)f(assumption,)-150
4677 y(re\003e)o(xi)n(vity)-5 b(,)26 b(and)h(transiti)n(vity)f
(correspond)i(to)e(operations)h(on)g(canonical)-150 4760
y(proofs)i(rather)f(than)h(constructors)g(on)g(canonical)g(proofs.)g
(This)e(is)h(why)-150 4843 y(the)o(y)20 b(cannot)h(be)e(used)i
(coinducti)n(v)o(ely)g(\(although)g(this)e(restriction)g(is)h(only)-150
4926 y(visible)f(for)g(transiti)n(vity\).)-150 5064 y
Fv(C.1.1)75 b(Consistency)18 b(and)g(Null)g(Refer)o(ences)-150
5181 y FF(The)26 b(abo)o(v)o(e)h(discussion)f(does)h(not)f(account)h
(for)f(the)f(possibility)h(of)g(null)-150 5264 y(references.)21
b(Null)g(references)h(are)f(problematic)g(because)i(when)e(an)g(e)o
(xis-)-150 5347 y(tential)j(type)h(is)f(opened)i(its)d(constraints)i
(are)f(assumed)i(to)e(hold)h(because)-150 5430 y(we)17
b(assume)g(the)g(e)o(xistential)g(type)g(is)g(inhabited,)g(b)o(ut)g
(this)g(last)f(assumption)2042 66 y(may)j(not)h(hold)f(because)i(the)e
(inhabitant)h(at)e(hand)j(may)e(just)g(be)g(a)g(null)g(ref-)2042
149 y(erence)24 b(and)g(not)f(contain)h(an)o(y)g(proofs)g(that)f(the)g
(constraints)h(hold.)f(Thus,)2042 232 y(after)h(opening)i(the)f
(wildcard)g(type)3023 232 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3023 232 a Fw(Numbers<?)41
b(super)f(String>)3023 232 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3023 232 a 701 w FF(we)24
b(hence-)2042 315 y(forth)k(can)h(pro)o(v)o(e)f(that)2683
315 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2683 315 a Fw(String)2683 315 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2683 315 a 204
w FF(is)g(a)g(subtype)h(of)3377 315 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3377 315 a Fw(Number)3377
315 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3377 315 a 176 w FF(,)f(which)g(enables)2042 399
y(a)23 b(v)n(ariety)h(of)f(unsound)j(code)e(since)g(opening)h(a)e
(wildcard)h(type)g(may)g(not)2042 482 y(trigger)19 b(a)2312
482 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2312 482 a Fw(NullPointerException)2312 482 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2312
482 a 607 w FF(when)g(the)g(reference)h(is)e(actually)3829
482 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3829 482 a Fw(null)3829 482 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3829 482 a 118 w
FF(.)2141 565 y(T)-6 b(o)31 b(address)h(this,)f(we)g(introduce)h(the)f
(notion)h(of)f(consistenc)o(y)h(of)f(a)2042 648 y(traditional)g(e)o
(xistential)f(type)h(\(be)o(yond)i(just)d(well)h(formed\))g(in)g(a)f
(gi)n(v)o(en)2042 731 y(conte)o(xt,)20 b(formalized)g(in)f(Figure)g
(38.)h(The)g(k)o(e)o(y)g(is)f(the)h(use)g(of)f(the)h(premise)2042
814 y Fr(G)45 b Fs(:)h Fr(D)p Fs(\(\001\))f Fu(`)2534
781 y Fr(t)2524 814 y Ft(\034)54 b(<)p Fs(:)2748 781
y Fr(t)2738 814 y Ft(\034)2781 782 y Fz(0)2834 814 y
FF(which)32 b(is)f(lik)o(e)g(normal)h(subtyping)h(e)o(xcept)2042
897 y(that)26 b(the)h(assumptions)g(in)g Fs(\001)f FF(may)h(only)g(be)g
(used)g(after)f(an)h(application)2042 980 y(of)32 b(Rule)g(1.)g(This)g
(pre)n(v)o(ents)i(assumptions)f(from)f(being)i(able)e(to)g(break)2042
1063 y(the)25 b(class)h(hierarchy)g(or)g(add)g(ne)n(w)g(constraints)g
(to)g(v)n(ariables)g(already)g(in)2042 1146 y Fr(G)h
FF(so)h(that,)f(in)g(particular)m(,)g(an)o(y)h(pair)f(of)h(types)g
(already)g(well-formed)f(in)2042 1229 y Fr(G)h Fs(:)g
Fr(D)21 b FF(that)h(are)h(subtypes)g(after)f(opening)i(a)e(consistent)h
(e)o(xistential)f(type)2042 1312 y(are)g(guaranteed)h(to)f(ha)o(v)o(e)g
(be)g(subtypes)i(before)e(opening)h(that)f(e)o(xistential)2042
1395 y(type.)k(In)f(this)h(w)o(ay)-5 b(,)26 b(e)n(v)o(en)h(if)e(an)h
(inhabitant)g(of)g(a)g(v)n(alid)g(e)o(xistential)g(type)2042
1478 y(is)e(null,)h(opening)h(it)f(cannot)h(lead)f(to)g(an)g(unsound)i
(subtypings)f(since)g(its)2042 1561 y(constraints)20
b(do)g(not)h(af)n(fect)e(subtyping)j(between)e(types)h(from)f(the)f
(outside)2042 1644 y(w)o(orld.)2042 1816 y Fv(C.2)74
b(Pr)o(eser)o(ving)20 b(Our)e(Subtyping)2042 1932 y FF(F)o(or)26
b(the)h(most)g(part)f(it)g(is)h(clear)f(ho)n(w)i(proofs)f(of)g
(subtyping)h(for)f(our)g(e)o(x-)2042 2016 y(istential)d(types)h(can)g
(be)g(translated)g(to)g(proofs)g(of)g(traditional)g(subtyping)2042
2099 y(between)20 b(the)f(translated)h(types.)f(The)h(k)o(e)o(y)g
(challenge)g(is)f(that)g(our)h(subtyp-)2042 2182 y(ing)28
b(proofs)h(check)g(the)g(constraints)f(in)h Fs(\001)-43
b Fu(\001)49 b FF(whereas)29 b(traditional)f(proofs)2042
2265 y(check)19 b(the)f(constraints)h(in)f Fs(\001)p
FF(.)f(This)h(is)g(where)g(implicit)g(constraints)g(come)2042
2348 y(into)f(play)-5 b(,)17 b(which)g(is)f(possibly)i(the)e(most)h
(interesting)g(aspect)g(of)g(this)f(prob-)2042 2431 y(lem)f(from)h(a)f
(type-design)i(perspecti)n(v)o(e.)f(Again,)g(we)f(address)i(this)e
(with)g(the)2042 2514 y(concept)20 b(of)f(v)n(alidity)g(for)g(our)g(e)o
(xistential)g(types)g(in)g(a)g(gi)n(v)o(en)h(conte)o(xt.)2141
2597 y(W)-6 b(e)18 b(do)i(not)e(de\002ne)h(v)n(alidity)-5
b(,)19 b(rather)g(we)f(assume)h(there)g(is)f(a)h(de\002nition)2042
2680 y(of)j(v)n(alidity)g(which)h(satis\002es)e(certain)i(requirements)
g(in)f(addition)g(to)h(con-)2042 2763 y(sistenc)o(y)f(as)g(described)h
(in)f(Section)g(C.2.1.)f(There)h(are)g(man)o(y)h(de\002nitions)2042
2846 y(of)d(v)n(alidity)h(that)f(satisfy)h(these)f(requirements,)i
(each)f(one)g(corresponding)2042 2929 y(to)i(a)g(dif)n(ferent)h
(implicit-constraint)f(system.)g(This)g(de)o(gree)h(of)g(\003e)o
(xibility)2042 3012 y(allo)n(ws)g(our)h(e)o(xistential)g(types)g(to)f
(be)h(applied)h(to)e(type)h(systems)g(besides)2042 3095
y(wildcards)19 b(as)g(well)f(as)h(v)n(ariations)h(on)f(wildcards.)2141
3178 y(The)40 b(requirements)h(are)f(f)o(airly)g(simple.)g(First,)e(v)n
(alidity)j(must)f(be)2042 3261 y(closed)29 b(under)h(opening:)g(if)e
Fr(G)40 b Fs(:)g Fr(D)g Fu(`)g(9)p Fs(\000)27 b(:)g(\001\(\001)-43
b Fu(\001)22 b Fs(\))p Ft(:)29 b(C)3625 3261 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3625 3261
a Fw(<)3625 3261 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3625 3261 a 3670 3229 a Fr(E)3654
3261 y Ft(\034)3688 3269 y Fo(1)3723 3261 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3723 3261
a Fw(,)39 b(...,)3723 3261 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3723 3261 a 3944 3229 a
Fr(E)3929 3261 y Ft(\034)3963 3269 y Fn(n)4005 3261 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

4005 3261 a Fw(>)4005 3261 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 4005 3261 a 2042 3344 a
FF(holds,)32 b(then)h Fr(G)p Ft(;)13 b Fs(\000)47 b(:)g
Fr(D)p Ft(;)13 b Fs(\001)46 b Fu(`)2974 3312 y Fr(E)2959
3344 y Ft(\034)2993 3352 y Fn(i)3051 3344 y FF(must)32
b(hold)h(for)f(each)g Ft(i)h FF(in)f(1)g(to)g Ft(n)2042
3427 y FF(and)f(similarly)f(each)h(bound)h(in)e(either)g
Fs(\001)g FF(or)h Fs(\001)-43 b Fu(\001)52 b FF(must)30
b(be)h(v)n(alid.)g(Sec-)2042 3510 y(ond,)g(v)n(alidity)h(must)f(be)g
(closed)h(under)g(substitution:)f(if)f Fr(G)45 b Fs(:)g
Fr(D)f Fu(`)4007 3478 y Fr(E)3992 3510 y Ft(\034)2042
3593 y FF(holds)d(and)h Ft(\022)g FF(is)f(an)g(assignment)g(of)g(the)g
(v)n(ariables)g(in)g Fr(G)g FF(to)g(types)2042 3676 y(v)n(alid)e(in)g
Fr(G)2371 3644 y Fz(0)2454 3676 y Fs(:)60 b Fr(D)2598
3644 y Fz(0)2659 3676 y FF(such)40 b(that)f(each)h(constraint)g(in)f
Fr(D)p Fs([)p Ft(\022)r Fs(])g FF(holds)h(in)2042 3759
y Fr(G)2088 3727 y Fz(0)2171 3759 y Fs(:)61 b Fr(D)2316
3727 y Fz(0)2338 3759 y FF(,)39 b(then)g Fr(G)2609 3727
y Fz(0)2692 3759 y Fs(:)61 b Fr(D)2837 3727 y Fz(0)2920
3759 y Fu(`)3042 3727 y Fr(E)3027 3759 y Ft(\034)9 b
Fs([)p Ft(\022)r Fs(])39 b FF(must)h(hold)g(as)f(well.)g(Lastly)-5
b(,)2042 3842 y(b)o(ut)36 b(conceptually)j(the)d(most)h(important,)g(v)
n(alidity)g(must)g(ensure)g(that)2042 3925 y(implicit)k(constraints)i
(hold)f(pro)o(vided)i(e)o(xplicit)e(constraints)g(hold:)h(if)2042
4008 y Fr(G)48 b Fs(:)h Fr(D)e Fu(`)h(9)p Fs(\000)35
b(:)h(\001\(\001)-43 b Fu(\001)22 b Fs(\))p Ft(:)33 b(C)2896
4008 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2896 4008 a Fw(<)2896 4008 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2896 4008 a 2941
3976 a Fr(E)2925 4008 y Ft(\034)2959 4016 y Fo(1)2994
4008 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2994 4008 a Fw(,)39 b(...,)2994 4008 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2994 4008
a 3215 3976 a Fr(E)3200 4008 y Ft(\034)3234 4016 y Fn(m)3292
4008 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3292 4008 a Fw(>)3292 4008 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3292 4008 a 62 w
FF(and)34 b Fr(G)48 b Fs(:)h Fr(D)f Fu(`)g(9)p Fs(\000)3956
3976 y Fz(0)4013 4008 y Fs(:)2042 4091 y(\001)2106 4059
y Fz(0)2128 4091 y Fs(\(\001)-43 b Fu(\001)2222 4059
y Fz(0)2244 4091 y Fs(\))p Ft(:)34 b(D)2394 4091 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2394
4091 a Fw(<)2394 4091 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2394 4091 a 2439 4059 a Fr(E)2424
4091 y Ft(\034)2467 4059 y Fz(0)2458 4104 y Fo(1)2492
4091 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2492 4091 a Fw(,)40 b(...,)2492 4091 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2492 4091
a 2714 4059 a Fr(E)2698 4091 y Ft(\034)2741 4059 y Fz(0)2732
4104 y Fn(n)2774 4091 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2774 4091 a Fw(>)2774 4091 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate

2774 4091 a 63 w FF(hold)34 b(with)f Ft(C)3229 4091 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

3229 4091 a Fw(<)3229 4091 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3229 4091 a 30 w Ft(P)3308
4099 y Fo(1)3343 4091 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3343 4091 a Fw(,)39 b(...,)3343
4091 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3343 4091 a 205 w Ft(P)3597 4099 y Fn(m)3656 4091
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3656 4091 a Fw(>)3656 4091 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3656 4091 a 63 w FF(a)33
b(subclass)2042 4180 y(of)23 b Ft(D)2192 4180 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2192
4180 a Fw(<)2192 4180 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2192 4180 a 2226 4157 a Fs(\026)2237
4148 y Fr(E)2222 4180 y Ft(\034)2256 4188 y Fo(1)2290
4180 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2290 4180 a Fw(,)39 b(...,)2290 4180 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2290 4180
a 2500 4157 a Fs(\026)2511 4148 y Fr(E)2496 4180 y Ft(\034)2530
4188 y Fn(n)2572 4180 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2572 4180 a Fw(>)2572 4180 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate

2572 4180 a 30 w FF(,)22 b(then)h(if)f Ft(\022)j FF(assigns)f(v)n
(ariables)f(in)g Fs(\000)3581 4149 y Fz(0)3626 4180 y
FF(to)f(types)i(v)n(alid)2042 4267 y(in)g Fr(G)p Ft(;)14
b Fs(\000)31 b(:)h Fr(D)p Ft(;)13 b Fs(\001)24 b FF(with)g
Fr(G)p Ft(;)14 b Fs(\000)31 b(:)h Fr(D)p Ft(;)13 b Fs(\001)32
b Fu(`)3168 4243 y Fs(\026)3179 4235 y Fr(E)3164 4267
y Ft(\034)3198 4275 y Fn(i)3224 4267 y Fs([)p Ft(P)3294
4275 y Fo(1)3329 4267 y Fu(7!)3421 4235 y Fr(E)3406 4267
y Ft(\034)3440 4275 y Fo(1)3474 4267 y Ft(;)13 b(:)g(:)g(:)h(;)f(P)3694
4275 y Fn(m)3752 4267 y Fu(7!)3845 4235 y Fr(E)3829 4267
y Ft(\034)3863 4275 y Fn(m)3922 4267 y Fs(])3975 4248
y Fu(\030)3975 4271 y Fs(=)2057 4318 y Fr(E)2042 4350
y Ft(\034)2085 4319 y Fz(0)2076 4364 y Fn(i)2107 4350
y Fs([)p Ft(\022)r Fs(])30 b FF(such)h(that)f Fs(\001)-43
b Fu(\001)2590 4319 y Fz(0)2612 4350 y Fs([)p Ft(\022)r
Fs(])31 b FF(holds)g(in)f Fr(G)p Ft(;)13 b Fs(\000)43
b(:)g Fr(D)p Ft(;)13 b Fs(\001)30 b FF(then)g Fs(\001)3651
4319 y Fz(0)3674 4350 y Fs([)p Ft(\022)r Fs(])g FF(holds)h(in)2042
4433 y Fr(G)p Ft(;)13 b Fs(\000)24 b(:)g Fr(D)p Ft(;)12
b Fs(\001)p FF(.)20 b(Also,)g(all)f(types)i(used)g(in)e(the)i
(inheritance)f(hierarchy)h(must)2042 4516 y(be)e(v)n(alid.)2141
4599 y(This)39 b(last)g(condition)i(essentially)e(says)h(that)f(an)o(y)
h(assignment)g(of)2042 4682 y(bound)17 b(type)g(v)n(ariables)f(that)g
(can)g(occur)h(during)g(subtyping)g(between)g(v)n(alid)2042
4765 y(types)i(ensures)g(that)f(the)h(constraints)g(in)f
Fs(\001)h FF(will)e(hold)i(whene)n(v)o(er)h(the)f(con-)2042
4848 y(straints)j(in)g Fs(\001)-43 b Fu(\001)44 b FF(hold)22
b(and)h(so)g(do)f(not)h(need)g(to)f(be)g(check)o(ed)i(e)o(xplicitly)-5
b(.)22 b(As)2042 4932 y(such,)h(subtyping)h(between)f(v)n(alid)g(types)
g(is)f(preserv)o(ed)h(by)g(translation)g(to)2042 5015
y(traditional)c(e)o(xistential)f(types.)2141 5098 y(This)35
b(last)f(requirement)i(can)f(be)g(satis\002ed)f(in)h(a)g(v)n(ariety)g
(of)g(w)o(ays.)2042 5181 y(The)f(simplest)h(is)f(to)h(say)g(that)g(a)f
(type)h(is)g(v)n(alid)g(if)f Fs(\001)h FF(is)f(e)o(xactly)h(the)2042
5264 y(same)30 b(as)g Fs(\001)-43 b Fu(\001)22 b FF(,)29
b(in)h(which)g(case)g(our)h(subtyping)g(corresponds)h(e)o(xactly)e(to)
2042 5347 y(traditional)23 b(subtyping.)i(If)d(a)i(class)f(hierarchy)h
(has)g(the)f(property)h(that)g(all)2042 5430 y(classes)30
b(are)h(subclasses)g(of)2834 5430 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2834 5430 a Fw(Object<>)2834
5430 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2834 5430 a 236 w FF(,)e(then)i(a)f(slightly)h(more)f(comple)o
(x)p eop end
%%Page: 25 25
TeXDict begin 25 24 bop -140 404 415 4 v -84 472 a Fr(G)22
b Fs(:)f Fr(D)g Fu(`)h Ft(v)425 371 y FF(for)d(all)g
Ft(i)g FF(in)f(1)h(to)g Ft(n;)51 b Fr(G)22 b Fs(:)f Fr(D)g
Fu(`)1270 338 y Fr(t)1260 371 y Ft(\034)1294 379 y Fn(i)p
369 404 1007 4 v 506 476 a Fr(G)h Fs(:)g Fr(D)f Fu(`)g
Ft(C)829 476 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 829 476 a Fw(<)829 476 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 829 476 a 869
444 a Fr(t)859 476 y Ft(\034)893 484 y Fo(1)927 476 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

927 476 a Fw(,)40 b(...,)927 476 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 927 476 a 1143 444
a Fr(t)1133 476 y Ft(\034)1167 484 y Fn(n)1209 476 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

1209 476 a Fw(>)1209 476 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1209 476 a 2158 109 a FF(for)19
b(all)2367 77 y Fr(t)2357 109 y Ft(\034)30 b(<)p Fs(::)2554
77 y Fr(t)2545 109 y Ft(\034)2588 77 y Fz(0)2628 109
y FF(in)19 b Fs(\001)2769 77 y Fz(0)2791 109 y Ft(;)2854
77 y Fr(t)2844 109 y Ft(\034)27 b FF(in)19 b Fs(\000)g
FF(or)3139 77 y Fr(t)3129 109 y Ft(\034)3172 77 y Fz(0)3213
109 y FF(in)g Fs(\000)1527 196 y FF(for)f(all)1736 164
y Fr(t)1726 196 y Ft(\034)29 b(<)p Fs(::)1892 165 y Fo(+)1974
164 y Fr(t)1964 196 y Ft(\034)2007 165 y Fz(0)2047 196
y FF(in)19 b Fs(\001)p Ft(;)2232 164 y Fr(t)2222 196
y Ft(\034)27 b FF(not)20 b(in)e Fs(\000)h FF(and)2677
164 y Fr(t)2668 196 y Ft(\034)2711 165 y Fz(0)2751 196
y FF(not)g(in)g Fs(\000)g FF(implies)f Fr(G)p Ft(;)c
Fs(\000)21 b(:)h Fr(D)p Fs(\(\001)3597 165 y Fz(0)3619
196 y Fs(\))f Fu(`)3748 164 y Fr(t)3738 196 y Ft(\034)30
b(<)p Fs(:)3914 164 y Fr(t)3904 196 y Ft(\034)3947 165
y Fz(0)1838 283 y FF(for)18 b(all)2047 251 y Fr(t)2037
283 y Ft(\034)29 b(<)p Fs(::)2234 251 y Fr(t)2224 283
y Ft(\034)2267 252 y Fz(0)2308 283 y FF(in)18 b Fs(\001)p
Ft(;)51 b Fr(G)p Ft(;)13 b Fs(\000)22 b(:)f Fr(D)p Ft(;)13
b Fs(\001)22 b Fu(`)2973 251 y Fr(t)2963 283 y Ft(\034)27
b FF(and)19 b Fr(G)p Ft(;)14 b Fs(\000)21 b(:)h Fr(D)p
Ft(;)13 b Fs(\001)21 b Fu(`)3603 251 y Fr(t)3593 283
y Ft(\034)3636 252 y Fz(0)2505 371 y Fr(G)p Ft(;)14 b
Fs(\000)21 b(:)h Fr(D)p Ft(;)13 b Fs(\001)21 b Fu(`)2958
338 y Fr(t)2948 371 y Ft(\034)p 1471 404 2555 4 v 2479
476 a Fr(G)g Fs(:)h Fr(D)f Fu(`)g(9)p Fs(\000)9 b(:)g(\001)p
Ft(:)2984 444 y Fr(t)2975 476 y Ft(\034)p -150 565 4185
3 v 622 649 a Fv(Figur)o(e)18 b(38.)38 b FF(Consistenc)o(y)20
b(for)e(traditional)h(e)o(xistential)g(types)g(\(in)g(addition)h(to)e
(well-formedness\))-150 898 y(system)30 b(could)g(say)g(a)f(type)h(is)g
(v)n(alid)f(if)g Fs(\001)h FF(is)f Fs(\001)-43 b Fu(\001)51
b FF(plus)30 b Ft(v)44 b(<)p Fs(::)1607 898 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1607 898
a Fw(Object<>)1607 898 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1607 898 a -150 981 a FF(for)29
b(each)h(type)g(v)n(ariable)g Ft(v)i FF(in)d Fs(\000)p
FF(.)g(Theoretically)-5 b(,)29 b(since)1434 981 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1434
981 a Fw(String)1434 981 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1434 981 a 205 w FF(has)h(no)-150
1064 y(strict)c(subclasses,)h(a)g(system)g(could)g(also)g(constrain)g
(an)o(y)h(type)f(v)n(ariable)-150 1147 y(e)o(xplicitly)35
b(e)o(xtending)495 1147 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 495 1147 a Fw(String)495 1147
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 495 1147 a 211 w FF(to)h(also)f(implicitly)g(be)g(a)h(supertype)g(of)
-150 1230 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 -150 1230 a Fw(String)-150 1230 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 -150 1230
a 177 w FF(,)21 b(although)j(this)e(causes)h(problems)h(for)e
(completeness)i(as)e(we)g(will)-150 1313 y(discuss)i(later)l(.)e
(Nonetheless,)j(there)e(is)g(a)g(lot)g(of)h(\003e)o(xibility)e(here)i
(and)g(the)-150 1396 y(choices)18 b(made)g(can)g(signi\002cantly)g(af)n
(fect)g(the)f(type)h(system.)g(Of)f(course,)h(at)-150
1479 y(present)24 b(we)f(are)g(concerned)i(with)e(Ja)o(v)n(a,)h(and)g
(so)f(we)g(will)g(e)o(xamine)h(ho)n(w)-150 1562 y(this)19
b(last)f(requirement)i(is)e(ensured)i(by)g(wildcards)f(in)g(Section)g
(C.3.1.)-150 1711 y Fv(C.2.1)75 b(Consistency)-150 1827
y FF(As)18 b(with)g(traditional)h(e)o(xistential)f(types,)h(our)g(e)o
(xistential)f(types)h(also)g(ha)o(v)o(e)-150 1910 y(a)32
b(notion)g(of)g(consistenc)o(y)h(sho)n(wn)f(in)g(Figure)f(39,)h
(although)h(ours)f(is)f(a)-150 1994 y(little)h(bit)h(stronger)h(in)g
(order)g(to)f(address)h(the)g(more)g(restricted)f(set)g(of)-150
2077 y(subtyping)27 b(rules.)f(First,)e(consistenc)o(y)j(requires)g
(that)e(the)h(constraints)g(in)-150 2160 y Fs(\001)-43
b Fu(\001)44 b FF(are)22 b(implied)g(by)g(the)g(constraints)g(in)g
Fs(\001)p FF(,)g(which)g(will)f(be)h(important)g(in)-150
2243 y(Section)f(D.1.)f(Second,)i(consistenc)o(y)g(requires)f(that)g
(types)g(which)h(can)f(be)-150 2326 y(bridged)e(together)g(by)g
(assumptions)g(on)g(v)n(ariables)f(are)h(actually)f(subtypes)-150
2409 y(of)32 b(each)h(other)l(.)f(Because)g(subtyping)i(rules)e(for)g
(our)g(e)o(xistential)g(types)-150 2492 y(are)d(more)g(restricti)n(v)o
(e,)f(this)g(in)h(enough)h(to)f(ensure)g(that)g(consistenc)o(y)h(is)
-150 2575 y(preserv)o(ed)17 b(by)f(translation)g(to)g(traditional)g(e)o
(xistential)g(types.)g(This)f(second)-150 2658 y(requirement)21
b(will)f(also)h(be)f(important)h(for)g(transiti)n(vity)f(as)h(we)f
(will)g(sho)n(w)-150 2741 y(in)j(Section)g(C.3.2.)f(Lastly)-5
b(,)22 b(consistenc)o(y)i(must)f(hold)h(recursi)n(v)o(ely)g(as)f(one)
-150 2824 y(w)o(ould)d(e)o(xpect.)-150 2973 y Fv(C.3)75
b(Pr)o(eser)o(ving)19 b(W)o(ildcard)e(Subtyping)-150
3089 y FF(No)n(w)j(we)h(sho)n(w)g(that)f(the)g(translation)h(from)f
(wildcard)h(types)f(to)h(our)f(e)o(xis-)-150 3172 y(tential)k(types)h
(preserv)o(es)g(subtyping,)h(which)f(in)f(particular)h(implies)f(that)
-150 3255 y(our)e(algorithm)h(is)e(complete)i(b)o(ut)f(also)g(implies)g
(that)f(subtyping)j(of)e(wild-)-150 3338 y(cards)h(is)f(sound)h
(supposing)i(our)d(informal)h(reasoning)h(for)e(soundness)i(of)-150
3421 y(traditional)i(e)o(xistential)f(types)h(holds.)g(W)-6
b(e)26 b(do)g(this)f(in)h(tw)o(o)g(phases:)g(\002rst)-150
3504 y(sho)n(w)e(that)g(our)f(subtyping)j(rules)d(in)h(Figure)f(8)h(is)
f(preserv)o(ed)h(by)g(transla-)-150 3587 y(tion,)e(and)h(then)g(sho)n
(w)g(that)f(our)g(rules)h(subsumes)g(those)g(in)f(the)h(Ja)o(v)n(a)f
(lan-)-150 3670 y(guage)i(speci\002cation)f(as)g(formalized)h(in)e
(Figure)h(30.)g(Note)g(that)g(here)g(the)-150 3753 y(notion)d(of)f
(equi)n(v)n(alence)h(that)f(we)g(use)g(is)g(simply)g(syntactic)g
(equality)-5 b(.)-150 3902 y Fv(C.3.1)75 b(Pr)o(eser)o(v)o(ation)-150
4018 y FF(In)15 b(f)o(act,)g(preserv)n(ation)i(of)e(subtyping)i(is)d(f)
o(airly)i(ob)o(vious.)g(The)f(only)h(signi\002-)-150
4101 y(cant)g(dif)n(ferences)g(in)f(the)h(rules)f(are)g(some)h
(simpli\002cations)g(made)g(since)f(we)-150 4184 y(are)23
b(using)h(syntactic)f(equality)h(for)f(equi)n(v)n(alence)i(and)e(since)
h(bound)g(v)n(ari-)-150 4267 y(ables)19 b(cannot)h(occur)g(in)f(e)o
(xplicit)g(constraints.)g(Ho)n(we)n(v)o(er)m(,)h(remember)f(that)-150
4350 y(subtyping)24 b(is)f(preserv)o(ed)g(by)h(the)e(subsequent)j
(translation)e(to)f(traditional)-150 4433 y(e)o(xistential)27
b(types)i(pro)o(vided)g(this)e(translation)h(to)f(our)h(e)o(xistential)
g(types)-150 4516 y(produces)g(only)g(v)n(alid)f(e)o(xistential)g
(types)g(for)g(some)h(notion)f(of)g(v)n(alidity)-5 b(.)-150
4599 y(Finally)27 b(implicit)g(constraints)h(and)g(v)n(alidity)g(of)f
(wildcard)h(types)g(comes)-150 4682 y(into)19 b(play)-5
b(.)-50 4765 y(W)f(e)20 b(formalize)i(v)n(alidity)f(of)h(wildcard)f
(types)h(in)f(Figure)h(40.)f(This)g(for)o(-)-150 4848
y(malization)j(dif)n(fers)g(from)g(the)g(Ja)o(v)n(a)g(language)i
(speci\002cation)e([6)q(])f(in)h(tw)o(o)-150 4932 y(w)o(ays.)18
b(First,)f(it)g(is)h(weak)o(er)h(than)f(the)g(requirements)h(of)f(the)h
(Ja)o(v)n(a)f(language)-150 5015 y(speci\002cation)k(since)f(it)g(mak)o
(es)h(no)g(ef)n(fort)f(to)g(enforce)h(properties)g(such)g(as)-150
5098 y(single-instantiation)e(inheritance;)f(ho)n(we)n(v)o(er)m(,)h
(this)f(dif)n(ference)h(is)f(not)g(sig-)-150 5181 y(ni\002cant)k(since)
h(an)o(y)h(strengthening)g(of)e(the)h(v)n(alidity)g(we)f(sho)n(w)h
(here)g(will)-150 5264 y(still)j(be)i(suf)n(\002cient)g(for)f(our)h
(needs.)g(Second,)g(we)f(pre)n(v)o(ent)i(problematic)-150
5347 y(constraints)d(as)f(discussed)i(in)e(Section)g(7.4.)g(This)g
(second)i(dif)n(ference)f(is)-150 5430 y(used)20 b(simply)g(to)g
(ensure)g(that)f(the)h(corresponding)i(traditional)d(e)o(xistential)
2042 898 y(type)24 b(is)g(v)n(alid)h(and)f(so)h(opening)g(is)f(sound)i
(e)n(v)o(en)f(with)e(the)i(possibility)f(of)2042 981
y(null)19 b(references.)2141 1064 y(The)i(k)o(e)o(y)f(aspect)h(of)f(v)n
(alidity)h(of)f(wildcard)g(types)h(is)f(the)g(enforcement)2042
1147 y(of)k(type-parameter)g(requirements.)h(Since)e(the)h(implicit)f
(constraints)h(are)2042 1230 y(tak)o(en)e(from)g(these)g(requirements)h
(\(and)f(the)g(f)o(act)f(that)h(all)f(classes)h(e)o(xtend)2042
1313 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2042 1313 a Fw(Object)2042 1313 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2042 1313 a
176 w FF(\),)28 b(implicit)g(constraints)h(hold)g(automatically)h
(after)e(instantiation)2042 1396 y(in)19 b(subtyping)i(whene)n(v)o(er)g
(the)f(subtype)h(is)e(a)h(v)n(alid)g(wildcard)f(types.)h(Since)2042
1479 y(type)i(v)n(alidity)g(uses)g(subtyping)i(without)e(\002rst)f
(ensuring)i(type)f(v)n(alidity)g(of)2042 1562 y(the)i(types)h(being)f
(compared,)i(it)d(is)h(possible)h(to)f(\002nitely)f(construct)i(what)
2042 1645 y(are)19 b(essentially)g(in\002nite)f(proofs)i(as)f
(discussed)h(in)f(Section)f(3.3.)2141 1728 y(The)24 b(last)f(check)i
(done)g(in)e(Figure)h(40)g(for)f(types)i(with)e(wildcard)h(type)2042
1811 y(ar)o(guments)d(is)g(to)g(mak)o(e)h(sure)f(the)g(combined)h
(implicit)e(and)i(e)o(xplicit)f(con-)2042 1894 y(straints)14
b(are)h(consistent)h(with)f(inheritance)h(and)f(the)g(e)o(xisting)h
(conte)o(xt.)f(The)2042 1977 y(judgement)24 b Fr(G)30
b Fs(:)f Fr(D)p Fs(\(\001\))g Fu(`)g Ft(\034)37 b(<)p
Fs(:)30 b Ft(\034)3023 1946 y Fz(0)3067 1977 y FF(is)23
b(lik)o(e)g(subtyping)h(e)o(xcept)g(that)f(the)2042 2060
y(assumptions)18 b(in)e Fs(\001)h FF(may)g(only)g(be)g(used)h(after)e
(an)h(application)h(of)e(rules)h(for)2042 2143 y(the)25
b(judgement)i Fr(G)33 b Fs(:)h Fr(D)f Fu(`)h Ft(\034)41
b Fu(2)2983 2102 y
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 2983 2102 a Fw(?)2983 2102 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 2983
2102 a 2970 2143 a Ft(\034)8 b FF(.)25 b(This)g(ensures)h(that)f(v)n
(alid)h(wildcard)2042 2226 y(types)19 b(con)m(v)o(ert)h(to)f
(consistent)g(e)o(xistential)g(types.)2042 2441 y Fv(C.3.2)75
b(Subsumption)2042 2557 y FF(Lastly)35 b(we)i(need)f(to)h(sho)n(w)f
(that)g(our)h(subtyping)g(rules)g(subsume)g(the)2042
2640 y(of)n(\002cial)32 b(subtyping)j(rules.)d(F)o(or)h(most)g(of)f
(the)h(of)n(\002cial)g(rules)g(it)f(should)2042 2723
y(be)g(clear)g(ho)n(w)h(the)o(y)f(can)h(be)f(translated)h(to)f(our)g
(rules)g(since)h(the)o(y)f(are)2042 2806 y(mostly)27
b(subcomponents)j(of)d(our)j(S)t Fp(U)t(B)t FF(-)t(E)t
Fp(X)t(I)t(S)t(T)t(S)25 b FF(and)30 b(S)t Fp(U)t(B)t
FF(-)t(V)-5 b Fp(A)t(R)26 b FF(rules.)2042 2889 y(Re\003e)o(xi)n(vity)
17 b(and)i(transiti)n(vity)e(are)g(the)h(only)g(tw)o(o)g(dif)n
(\002cult)f(cases)h(since)g(we)2042 2972 y(ha)o(v)o(e)h(no)g(rules)g
(for)g(re\003e)o(xi)n(vity)g(or)g(transiti)n(vity)-5
b(.)2141 3055 y(Re\003e)o(xi)n(vity)23 b(can)h(be)g(sho)n(wn)g(for)f
(an)o(y)g(of)h(our)f(e)o(xistential)g(types)h(v)n(alid)2042
3138 y(in)d(an)o(y)h(system)f(by)h(coinduction)h(on)f(the)f(type.)h
(The)f(case)g(when)h(the)g(type)2042 3221 y(is)i(a)h(v)n(ariable)g(is)f
(simply)-5 b(.)25 b(The)f(case)h(when)g(the)g(type)g(is)f(e)o
(xistential)h(uses)2042 3304 y(the)c(identity)g(substitution)h(and)g
(relies)f(on)g(the)h(v)n(alidity)f(requirement)h(that)2042
3387 y(the)d(constraints)g(in)g Fs(\001)-43 b Fu(\001)41
b FF(must)19 b(hold)g(under)h(the)f(constraints)g(in)g
Fs(\001)p FF(.)2141 3470 y(T)m(ransiti)n(vity)k(is)f(dif)n(\002cult)f
(to)i(pro)o(v)o(e)g(since)f(it)g(has)g(to)h(be)f(done)i(concur)o(-)2042
3553 y(rently)e(with)g(substitution.)g(In)h(particular)m(,)f(one)h
(must)f(do)h(coinduction)h(on)2042 3636 y(lists)29 b(of)h(subtyping)i
(proofs)f Fu(f)p Fr(G)2914 3644 y Fn(i)2984 3636 y Fs(:)43
b Fr(D)3111 3644 y Fn(j)3186 3636 y Fu(`)3291 3604 y
Fr(E)3275 3636 y Ft(\034)3309 3644 y Fn(i)3378 3636 y
Ft(<)p Fs(:)3517 3604 y Fr(E)3502 3636 y Ft(\034)3545
3605 y Fz(0)3536 3650 y Fn(i)3567 3636 y Fu(g)3605 3644
y Fn(i)13 b Fk(in)f(1)g(to)g Fn(n)3852 3636 y FF(where)2042
3719 y(each)22 b(proof)g(is)f(accompanied)j(with)d(a)g(list)g(of)g
(constraint-satisfying)i(sub-)2042 3805 y(stitutions)31
b Fu(f)p Ft(\022)2423 3773 y Fn(i)2421 3818 y(j)2498
3805 y Fs(:)44 b(\()p Fr(G)2639 3773 y Fn(i)2639 3818
y(j)2716 3805 y Fs(:)h Fr(D)2845 3773 y Fn(i)2845 3818
y(j)2877 3805 y Fs(\))f Fu(!)g Fs(\()p Fr(G)3148 3773
y Fn(i)3148 3818 y(j)s Fo(+1)3302 3805 y Fs(:)h Fr(D)3431
3773 y Fn(i)3431 3818 y(j)s Fo(+1)3540 3805 y Fs(\))p
Fu(g)3608 3814 y Fn(j)16 b Fk(in)c(1)g(to)h Fn(k)3822
3825 y Fl(i)3852 3805 y FF(,)30 b(with)2042 3897 y Fs(\()p
Fr(G)2118 3865 y Fn(i)2118 3910 y Fo(1)2195 3897 y Fs(:)43
b Fr(D)2322 3865 y Fn(i)2322 3910 y Fo(1)2356 3897 y
Fs(\))g(=)f(\()p Fr(G)2607 3905 y Fn(i)2676 3897 y Fs(:)h
Fr(D)2803 3905 y Fn(i)2829 3897 y Fs(\))30 b FF(and)h
Fs(\()p Fr(G)3103 3865 y Fn(i)3103 3912 y(k)3136 3923
y Fl(i)3209 3897 y Fs(:)43 b Fr(D)3336 3865 y Fn(i)3336
3912 y(k)3369 3923 y Fl(i)3399 3897 y Fs(\))f(=)h(\()p
Fr(G)f Fs(:)h Fr(D)p Fs(\))p FF(,)29 b(such)2042 3993
y(that)2197 3961 y Fr(E)2182 3993 y Ft(\034)2225 3961
y Fz(0)2216 4007 y Fn(i)2246 3993 y Fs([)p Ft(\022)2305
3961 y Fn(i)2303 4006 y Fo(1)2338 3993 y Fs(][)p Ft(:)14
b(:)f(:)g Fs(][)p Ft(\022)2563 3961 y Fn(i)2561 4008
y(k)2594 4019 y Fl(i)2625 3993 y Fs(])39 b(=)2799 3961
y Fr(E)2783 3993 y Ft(\034)2817 4001 y Fn(i)p Fo(+1)2921
3993 y Fs([)p Ft(\022)2980 3960 y Fn(i)p Fo(+1)2978 4012
y(1)3083 3993 y Fs(][)p Ft(:)14 b(:)f(:)g Fs(][)p Ft(\022)3308
3960 y Fn(i)p Fo(+1)3306 4014 y Fn(k)3339 4025 y Fl(i)p
Fi(+1)3441 3993 y Fs(])28 b FF(so)h(that)e(the)h(proofs)2042
4087 y(can)i(be)f(stitched)h(together)g(by)f(substitution)h(and)g
(transiti)n(vity)f(to)g(pro)o(v)o(e)2042 4171 y Fr(G)e
Fs(:)g Fr(D)g Fu(`)2342 4139 y Fr(E)2327 4171 y Ft(\034)2361
4179 y Fo(1)2395 4171 y Fs([)p Ft(\022)2454 4139 y Fo(1)2452
4184 y(1)2489 4171 y Fs(][)p Ft(:)14 b(:)f(:)g Fs(][)p
Ft(\022)2714 4139 y Fo(1)2712 4186 y Fn(k)2745 4196 y
Fi(1)2782 4171 y Fs(])27 b Ft(<)p Fs(:)2954 4139 y Fr(E)2938
4171 y Ft(\034)2981 4139 y Fz(0)2972 4184 y Fn(n)3015
4171 y Fs([)p Ft(\022)3074 4139 y Fn(n)3072 4184 y Fo(1)3117
4171 y Fs(][)p Ft(:)13 b(:)g(:)h Fs(][)p Ft(\022)3342
4139 y Fn(n)3340 4186 y(k)3373 4194 y Fl(n)3418 4171
y Fs(])p FF(.)22 b(The)f(recursi)n(v)o(e)i(pro-)2042
4254 y(cess)c(requires)g(a)g(number)h(of)f(steps.)2141
4337 y(First,)d(by)h(induction)g(we)g(can)g(turn)g(a)f(list)g(of)h
(proofs)g(with)f(substitutions)2042 4424 y(trying)i(to)g(sho)n(w)h
Fr(G)i Fs(:)h Fr(D)f Fu(`)2766 4392 y Fr(E)2750 4424
y Ft(\034)30 b(<)p Fs(:)2932 4392 y Fr(E)2916 4424 y
Ft(\034)2959 4392 y Fz(0)2999 4424 y FF(into)18 b(a)g(path)3346
4392 y Fr(E)3330 4424 y Ft(\034)30 b(<)p Fs(::)3497 4392
y Fz(\003)3558 4400 y Fs(\026)3569 4392 y Fr(E)3554 4424
y Ft(\034)c FF(in)18 b Fr(D)g FF(follo)n(wed)2042 4507
y(by)k(a)g(\(possibly)g(empty\))h(list)e(of)h(proofs)g(with)f
(subtypings)j Fx(between)e(non-)2042 4594 y(variables)29
b FF(trying)f(to)g(sho)n(w)h Fr(G)39 b Fs(:)g Fr(D)g
Fu(`)3161 4570 y Fs(\026)3172 4562 y Fr(E)3157 4594 y
Ft(\034)47 b(<)p Fs(:)3362 4570 y(\026)3373 4562 y Fr(E)3358
4594 y Ft(\034)3401 4562 y Fz(0)3450 4594 y FF(follo)n(wed)29
b(by)g(a)f(path)2057 4649 y Fr(E)2042 4681 y Ft(\034)2085
4649 y Fz(0)2139 4681 y Fs(::)q Ft(>)2242 4649 y Fz(\003)2314
4657 y Fs(\026)2326 4649 y Fr(E)2310 4681 y Ft(\034)2353
4649 y Fz(0)2399 4681 y FF(in)d Fr(D)p FF(.)f(A)h(single)g(proof)g(can)
h(be)f(turned)g(into)g(a)g(path-proof-)2042 4764 y(path)j(by)h
(breaking)g(it)e(do)n(wn)i(into)f(a)g(\002nite)f(number)i(of)f
(applications)h(of)2044 4847 y(S)t Fp(U)t(B)t FF(-)t(V)-5
b Fp(A)t(R)27 b FF(follo)n(wed)h(by)i(S)t Fp(U)t(B)t
FF(-)t(E)t Fp(X)t(I)t(S)t(T)t(S)c FF(or)i(re\003e)o(xi)n(vity)g(on)g(a)
g(v)n(ariable.)2042 4930 y(Gi)n(v)o(en)i(a)f(list)g(of)g
(path-proof-paths,)i(we)f(can)g(use)g(consistenc)o(y)h(to)e(turn)2042
5014 y(a)2118 4981 y Fr(E)2103 5014 y Ft(\034)47 b(<)p
Fs(::)2287 4982 y Fo(+)2376 5014 y Ft(v)31 b FF(path)e(follo)n(wed)g
(by)f(a)g Ft(v)42 b Fs(::)q Ft(>)3238 4982 y Fo(+)3343
4981 y Fr(E)3328 5014 y Ft(\034)3371 4982 y Fz(0)3420
5014 y FF(path)29 b(into)f(a)g(proof)h(of)2057 5065 y
Fr(E)2042 5098 y Ft(\034)h(<)p Fs(:)2224 5065 y Fr(E)2208
5098 y Ft(\034)2251 5066 y Fz(0)2292 5098 y FF(and)19
b(repeat)g(this)g(process)h(until)f(the)g(only)g Ft(<)p
Fs(::)3509 5066 y Fo(+)3578 5098 y FF(and)h Fs(::)p Ft(>)3807
5066 y Fo(+)3877 5098 y FF(paths)2042 5181 y(are)29 b(at)h(the)f(e)o
(xtremities.)g(Gi)n(v)o(en)h(a)g(path-proof-path)h(and)f(a)g
(constraint-)2042 5264 y(satisfying)h(substitution,)g(simply)g(replace)
g(each)h(assumption)g(with)e(the)2042 5347 y(corresponding)19
b(proof)e(from)g(the)g(constraint-satisfying)h(substitution)f(and)2042
5430 y(push)i(this)f(substitution)h(onto)g(the)f(stack)h(of)f
(substitutions)h(for)g(each)g(of)f(the)p eop end
%%Page: 26 26
TeXDict begin 26 25 bop 231 471 415 4 v 287 539 a Fr(G)22
b Fs(:)g Fr(D)f Fu(`)g Ft(v)872 89 y FF(for)d(all)h Ft(v)24
b(<)p Fs(::)1271 57 y Fr(E)1256 89 y Ft(\034)j FF(in)19
b Fs(\001)-43 b Fu(\001)22 b Ft(;)50 b Fr(G)p Ft(;)14
b Fs(\000)21 b(:)h Fr(D)p Ft(;)13 b Fs(\001)21 b Fu(`)g
Ft(v)j(<)p Fs(:)2151 57 y Fr(E)2136 89 y Ft(\034)120
b FF(for)19 b(all)f Ft(v)25 b Fs(::)p Ft(>)2690 57 y
Fr(E)2674 89 y Ft(\034)j FF(in)18 b Fs(\001)-42 b Fu(\001)21
b Ft(;)51 b Fr(G)p Ft(;)13 b Fs(\000)22 b(:)f Fr(D)p
Ft(;)13 b Fs(\001)21 b Fu(`)3406 57 y Fr(E)3391 89 y
Ft(\034)29 b(<)p Fs(:)22 b Ft(v)1320 176 y FF(for)d(all)f
Ft(v)25 b Fs(::)p Ft(>)1683 145 y Fo(+)1771 144 y Fr(E)1755
176 y Ft(\034)i FF(and)20 b Ft(v)k(<)p Fs(::)2107 145
y Fo(+)2194 144 y Fr(E)2179 176 y Ft(\034)2222 145 y
Fz(0)2262 176 y FF(in)19 b Fs(\001)p Ft(;)50 b Fr(G)p
Ft(;)14 b Fs(\000)21 b(:)h Fr(D)p Ft(;)13 b Fs(\001)21
b Fu(`)2933 144 y Fr(E)2917 176 y Ft(\034)30 b(<)p Fs(:)3099
144 y Fr(E)3083 176 y Ft(\034)3126 145 y Fz(0)953 264
y FF(for)19 b(all)g Ft(v)24 b(<)p Fs(::)1353 231 y Fr(E)1338
264 y Ft(\034)j FF(in)19 b Fs(\001)p Ft(;)50 b Fr(G)p
Ft(;)13 b Fs(\000)22 b(:)f Fr(D)p Ft(;)13 b Fs(\001)22
b Fu(`)2069 231 y Fr(E)2054 264 y Ft(\034)284 b FF(for)19
b(all)f Ft(v)25 b Fs(::)p Ft(>)2772 231 y Fr(E)2756 264
y Ft(\034)i FF(in)19 b Fs(\001)p Ft(;)51 b Fr(G)p Ft(;)13
b Fs(\000)21 b(:)h Fr(D)p Ft(;)13 b Fs(\001)21 b Fu(`)3488
231 y Fr(E)3473 264 y Ft(\034)953 351 y FF(for)e(all)g
Ft(v)24 b(<)p Fs(::)1353 318 y Fr(E)1338 351 y Ft(\034)j
FF(in)19 b Fs(\001)-43 b Fu(\001)22 b Ft(;)50 b Fr(G)p
Ft(;)13 b Fs(\000)22 b(:)f Fr(D)p Ft(;)13 b Fs(\001)22
b Fu(`)2069 318 y Fr(E)2054 351 y Ft(\034)284 b FF(for)19
b(all)f Ft(v)25 b Fs(::)p Ft(>)2772 318 y Fr(E)2756 351
y Ft(\034)i FF(in)19 b Fs(\001)-42 b Fu(\001)21 b Ft(;)51
b Fr(G)p Ft(;)13 b Fs(\000)21 b(:)h Fr(D)p Ft(;)13 b
Fs(\001)21 b Fu(`)3488 318 y Fr(E)3473 351 y Ft(\034)1697
438 y FF(for)e(all)f Ft(i)h FF(in)g(1)g(to)g Ft(n;)50
b Fr(G)p Ft(;)14 b Fs(\000)21 b(:)h Fr(D)p Ft(;)13 b
Fs(\001)21 b Fu(`)2727 406 y Fr(E)2711 438 y Ft(\034)2745
446 y Fn(i)p 816 471 2838 4 v 1690 543 a Fr(G)g Fs(:)h
Fr(D)f Fu(`)g(9)p Fs(\000)9 b(:)g(\001\(\001)-43 b Fu(\001)21
b Fs(\))p Ft(:)e(C)2369 543 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2369 543 a Fw(<)2369 543
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2369 543 a 2409 511 a Fr(t)2399 543 y Ft(\034)2433
551 y Fo(1)2467 543 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2467 543 a Fw(,)40 b(...,)2467
543 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2467 543 a 2683 511 a Fr(t)2673 543 y Ft(\034)2707
551 y Fn(n)2749 543 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2749 543 a Fw(>)2749 543 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2749
543 a -150 623 4185 3 v 726 707 a Fv(Figur)o(e)18 b(39.)38
b FF(Consistenc)o(y)19 b(for)g(our)g(e)o(xistential)g(types)h(\(in)e
(addition)i(to)f(well-formedness\))p 318 1462 415 4 v
374 1530 a Fr(G)i Fs(:)h Fr(D)f Fu(`)g Ft(v)1113 971
y FF(for)e(all)f Ft(i)h FF(in)g(1)g(to)g Ft(n;)32 b(C)1726
971 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1726 971 a Fw(<)1726 971 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1726 971 a 30 w Ft(P)1805
979 y Fo(1)1839 971 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1839 971 a Fw(,)40 b(...,)1839
971 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1839 971 a 206 w Ft(P)2094 979 y Fn(n)2137 971
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2137 971 a Fw(>)2137 971 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2137 971 a 48 w FF(requires)19
b Ft(P)2493 979 y Fn(i)2538 971 y FF(to)g(e)o(xtend)24
b Fs(\026)-42 b Ft(\034)2875 939 y Fn(i)2866 985 y(j)2919
971 y FF(for)19 b Ft(j)k FF(in)c(1)g(to)g Ft(k)3329 979
y Fn(i)1783 1063 y FF(for)f(all)h Ft(i)g FF(in)g(1)g(to)g
Ft(n;)50 b Fr(G)22 b Fs(:)g Fr(D)f Fu(`)2630 1021 y
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 2630
1021 a Fw(?)2630 1021 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 2630 1021 a 2617 1063 a Ft(\034)2659
1071 y Fn(i)1600 1150 y Fx(e)o(xplicit)o Fs(\()1862 1108
y
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 1862 1108 a Fw(?)1862 1108 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 1862 1108 a 1848 1150
a Ft(\034)1891 1158 y Fo(1)1925 1150 y Ft(;)13 b(:)h(:)f(:)g(;)2109
1108 y
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 2109 1108 a Fw(?)2109 1108 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 2109 1108 a 2096
1150 a Ft(\034)2138 1158 y Fn(n)2181 1150 y Fs(\))21
b(=)g Fu(h)p Fs(\000;)13 b(\001)-43 b Fu(\001)22 b Fs(;)13
b Ft(\034)2557 1158 y Fo(1)2592 1150 y Ft(;)g(:)g(:)g(:)g(;)g(\034)2796
1158 y Fn(n)2839 1150 y Fu(i)1761 1237 y Fx(implicit)o
Fs(\(\000;)g Ft(C)5 b Fs(;)14 b Ft(\034)2230 1245 y Fo(1)2264
1237 y Ft(;)f(:)g(:)g(:)h(;)f(\034)2469 1245 y Fn(n)2511
1237 y Fs(\))21 b(=)g(\001)2659 1233 y
 currentpoint currentpoint translate .7 .7 scale neg exch neg exch
translate
 2659 1233 a Fu(\016)2659
1233 y
 currentpoint currentpoint translate 1 .7 div 1 .7 div scale neg exch
neg exch translate
 2659 1233 a 970 1329 a FF(for)e(all)g Ft(i)g FF(in)f(1)h(to)g
Ft(n)g FF(and)h Ft(j)j FF(in)c(1)g(to)g Ft(k)1920 1337
y Fn(i)1946 1329 y Ft(;)51 b Fr(G)p Ft(;)13 b Fs(\000)21
b(:)h Fr(D)p Ft(;)13 b Fs(\001)2323 1325 y
 currentpoint currentpoint translate .7 .7 scale neg exch neg exch
translate
 2323 1325
a Fu(\016)2323 1325 y
 currentpoint currentpoint translate 1 .7 div 1 .7 div scale neg exch
neg exch translate
 2323 1325 a 2371 1329 a Ft(;)g
Fs(\001)-43 b Fu(\001)43 b(`)22 b Ft(\034)2593 1337 y
Fn(i)2640 1329 y Ft(<)p Fs(:)k(\026)-42 b Ft(\034)2786
1297 y Fn(i)2777 1342 y(j)2811 1329 y Fs([)p Ft(P)2881
1337 y Fo(1)2916 1329 y Fu(7!)p Ft(\034)3027 1337 y Fo(1)3061
1329 y Ft(;)14 b(:)f(:)g(:)g(;)g(P)3281 1337 y Fn(n)3324
1329 y Fu(7!)o Ft(\034)3434 1337 y Fn(n)3477 1329 y Fs(])958
1424 y FF(for)19 b(all)f Ft(v)24 b Fs(::)q Ft(>)h Fs(^)-42
b Ft(\034)27 b FF(in)19 b Fs(\001)-43 b Fu(\001)41 b
FF(and)19 b Ft(v)24 b(<)p Fs(::)1853 1392 y Fo(+)1929
1424 y Fs(^)-42 b Ft(\034)1968 1392 y Fz(0)2008 1424
y FF(in)19 b Fs(\001)2101 1420 y
 currentpoint currentpoint translate .7 .7 scale neg exch neg exch
translate
 2101 1420 a Fu(\016)2101
1420 y
 currentpoint currentpoint translate 1 .7 div 1 .7 div scale neg exch
neg exch translate
 2101 1420 a 2168 1424 a FF(with)j Fs(^)-42 b Ft(\034)2362
1392 y Fz(0)2403 1424 y FF(not)19 b(in)g Fs(\000)p Ft(;)50
b Fr(G)p Ft(;)14 b Fs(\000)21 b(:)h Fr(D)p Fs(\(\001)3014
1420 y
 currentpoint currentpoint translate .7 .7 scale neg exch neg exch
translate
 3014 1420 a Fu(\016)3014 1420 y
 currentpoint currentpoint translate 1 .7 div 1 .7 div scale neg exch
neg exch translate
 3014 1420 a 3062
1424 a Ft(;)13 b Fs(\001)-42 b Fu(\001)21 b Fs(\))h Fu(`)j
Fs(^)-42 b Ft(\034)30 b(<)p Fs(:)25 b(^)-42 b Ft(\034)3489
1392 y Fz(0)p 902 1462 2665 4 v 1860 1537 a Fr(G)21 b
Fs(:)h Fr(D)f Fu(`)g Ft(C)2182 1537 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2182 1537 a Fw(<)2182
1537 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2182 1537 a 2225 1496 a
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 2225 1496 a Fw(?)2225
1496 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 2225 1496 a 2212 1537 a Ft(\034)2254 1545 y Fo(1)2289
1537 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2289 1537 a Fw(,)39 b(...,)2289 1537 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2289 1537
a 2508 1496 a
 currentpoint currentpoint translate .4 .4 scale neg exch neg exch
translate
 2508 1496 a Fw(?)2508 1496 y
 currentpoint currentpoint translate 1 .4 div 1 .4 div scale neg exch
neg exch translate
 2508 1496
a 2495 1537 a Ft(\034)2537 1545 y Fn(n)2579 1537 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2579
1537 a Fw(>)2579 1537 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2579 1537 a 142 1640 3600 7 v
142 1656 V 889 1802 405 4 v 945 1870 a Fr(G)21 b Fs(:)h
Fr(D)f Fu(`)1208 1870 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1208 1870 a Fw(?)1208 1870 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate

1208 1870 a 1665 1783 a Fr(G)h Fs(:)g Fr(D)f Fu(`)g Ft(\034)p
1462 1802 712 4 v 1518 1870 a Fr(G)h Fs(:)g Fr(D)f Fu(`)1781
1870 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 1781 1870 a Fw(?)40 b(extends)1781 1870 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 1781
1870 a 294 w Ft(\034)2517 1783 y Fr(G)21 b Fs(:)h Fr(D)f
Fu(`)g Ft(\034)p 2343 1802 653 4 v 2399 1870 a Fr(G)h
Fs(:)f Fr(D)g Fu(`)2662 1870 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2662 1870 a Fw(?)39 b(super)2662
1870 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2662 1870 a 235 w Ft(\034)p -150 1966 4185 3 v
871 2051 a Fv(Figur)o(e)18 b(40.)38 b FF(V)-8 b(alidity)18
b(for)h(wildcard)g(types)g(\(in)g(addition)h(to)e(well-formedness\))
-150 2300 y(pre-e)o(xisting)e(proofs)g(and)h(then)f(use)f(the)h(abo)o
(v)o(e)h(techniques)f(to)g(con)m(v)o(ert)g(the)-150 2383
y(resulting)j(sequence)i(of)e(proofs)g(into)g(a)g(path-proof-path.)-50
2466 y(Second,)25 b(we)g(can)h(use)f(the)g(abo)o(v)o(e)h(technique)h
(to)e(coinducti)n(v)o(ely)h(turn)-150 2549 y(lists)18
b(of)i(proofs)g(with)e(substitutions)i(into)g(subtyping)g(proofs.)g(Gi)
n(v)o(en)g(such)-150 2632 y(a)g(list,)f(\002rst)g(turn)i(it)e(into)i(a)
f(path-proof-path.)h(Apply)i(S)t Fp(U)t(B)t FF(-)t(V)-5
b Fp(A)t(R)20 b FF(for)g(each)-150 2715 y(of)33 b(the)g(assumptions)h
(in)f(the)g(tw)o(o)g(paths)h(\(since)f(the)g(paths)g(are)g(\002nite,)
-150 2798 y(this)24 b(is)h(a)f(\002nite)g(number)i(of)e(applications)i
(of)g(S)t Fp(U)t(B)t FF(-)t(V)-5 b Fp(A)t(R)r FF(\).)22
b(If)i(the)h(list)e(of)-150 2881 y(proofs)k(is)e(empty)-5
b(,)27 b(then)g(b)o(uild)f(the)g(tw)o(o)g(paths)h(must)f(con)m(v)o(er)o
(ge)h(at)f(some)-150 2964 y(type)20 2932 y Fr(E)4 2964
y Ft(\034)34 b FF(and)26 b(so)g(simply)g(b)o(uild)f(the)h(re\003e)o(xi)
n(vity)f(proof)i(for)1464 2932 y Fr(E)1449 2964 y Ft(\034)9
b FF(.)24 b(Otherwise)-150 3047 y(we)g(ha)o(v)o(e)f(a)h(list)f(of)h
(proofs)g(of)g(subtypings)h(between)f(non-v)n(ariable)h(e)o(xis-)-150
3130 y(tential)g(types,)h(which)g(implies)g(that)f(the)h(head)g(of)g
(each)h(proof)f(is)f(an)h(ap-)-150 3213 y(plication)k(of)j(S)t
Fp(U)t(B)t FF(-)t(E)t Fp(X)t(I)t(S)t(T)t(S)28 b FF(with)i
(constraint-satisfying)h(substitutions)-150 3296 y Fu(f)p
Ft(\022)-76 3304 y Fn(i)-49 3296 y Fu(g)-11 3304 y Fn(i)13
b Fk(in)f(1)g(to)h Fn(n)206 3296 y FF(.)27 b(As)g(such,)g(we)g(can)h
(apply)i(S)t Fp(U)t(B)t FF(-)t(E)t Fp(X)t(I)t(S)t(T)t(S)25
b FF(using)j(the)f(sub-)-150 3382 y(stitution)32 b Ft(\022)163
3390 y Fn(n)205 3382 y Fs(;)13 b Ft(\022)277 3351 y Fn(n)275
3396 y Fo(1)320 3382 y Fs(;)g Ft(:)g(:)g(:)g Fs(;)g Ft(\022)528
3351 y Fn(n)526 3398 y(k)559 3406 y Fl(n)604 3382 y Fs(;)g
Ft(:)g(:)h(:)f Fs(;)g Ft(\022)811 3390 y Fo(1)845 3382
y Fs(;)h Ft(\022)918 3351 y Fo(1)916 3396 y(1)952 3382
y Fs(;)f Ft(:)g(:)h(:)f Fs(;)g Ft(\022)1161 3351 y Fo(1)1159
3398 y Fn(k)1192 3408 y Fi(1)1228 3382 y FF(.)32 b(T)-6
b(o)31 b(pro)o(v)o(e)i(the)f(con-)-150 3465 y(straints)17
b(are)h(satis\002ed)f(by)h(this)f(substitution,)h(recurse)g(for)g(each)
g(constraint)-150 3549 y(using)i(the)f(appropriate)h(stack)f(of)g
(substitutions.)-50 3632 y(Thus)k(our)g(subtyping)h(is)f(re\003e)o(xi)n
(v)o(e)g(and)h(transiti)n(v)o(e)e(so)h(an)o(y)h(tw)o(o)f(v)n(alid)-150
3715 y(wildcard)g(types)h(that)f(are)g(subtypes)h(in)f(Ja)o(v)n(a)g
(will)f(con)m(v)o(ert)i(to)f(consistent)-150 3798 y(and)g
(appropriately)g(v)n(alid)g(types)g(in)f(our)h(e)o(xistential)f(type)g
(system)h(which)-150 3881 y(are)c(also)f(subtypes,)i(and)f(those)g
(will)f(translate)g(to)h(consistent)g(types)g(in)f(the)-150
3964 y(traditional)h(e)o(xistential)g(type)g(system)g(which)g(are)g
(also)g(subtypes.)-150 4145 y FD(D)n(.)91 b(Completeness)-150
4261 y FF(Subtyping)29 b(for)f(traditional)f(e)o(xistential)h(types)g
(is)g(e)o(xtremely)g(po)n(werful,)-150 4344 y(e)n(v)o(en)j(allo)n(wing)
f(in\002nite)f(proofs.)h(Here)g(we)g(sho)n(w)g(that)g(the)g
(translation)-150 4427 y(from)g(our)h(e)o(xistential)f(types)g(to)g
(traditional)g(e)o(xistential)g(types)h(re\003ects)-150
4510 y(subtyping,)h(meaning)h(if)d(tw)o(o)h(types)h(translate)f(to)g
(subtypes)h(then)g(the)o(y)-150 4593 y(must)23 b(themselv)o(es)h(be)f
(subtypes.)h(Similarly)-5 b(,)22 b(we)g(sho)n(w)i(that)f(the)g(con)m(v)
o(er)o(-)-150 4676 y(sion)f(from)g(wildcard)h(types)f(to)g(our)h(e)o
(xistential)f(types)g(to)g(our)g(e)o(xistential)-150
4759 y(types)c(also)f(re\003ects)f(subtyping.)j(This)d(suggests)i(that)
f(we)g(cannot)h(hope)g(for)-150 4842 y(a)h(more)g(po)n(werful)h
(subtyping)h(system)e(based)h(on)f(e)o(xistential)g(types)h(with-)-150
4925 y(out)i(changing)i(either)e(our)g(notion)g(of)g(v)n(alidity)g(or)g
(our)h(notion)f(of)g(equi)n(v)n(a-)-150 5008 y(lence.)-150
5147 y Fv(D)o(.1)74 b(Re\003ection)18 b(of)h(T)-6 b(raditional)19
b(Subtyping)-150 5264 y FF(In)32 b(order)h(to)f(pro)o(v)o(e)h(that)f
(the)g(translation)g(from)g(our)h(e)o(xistential)f(types)-150
5347 y(to)26 b(traditional)g(e)o(xistential)g(types)g(re\003ects)g
(subtyping,)h(we)f(\002rst)f(need)h(to)-150 5430 y(de\002ne)15
b(a)g(notion)h(of)f(consistenc)o(y)h(for)f(conte)o(xts)g(analogous)i
(to)e(consistenc)o(y)2215 2346 y(for)k(all)f Ft(v)24
b Fs(::)q Ft(>)2578 2315 y Fo(+)2665 2314 y Fr(E)2650
2346 y Ft(\034)j FF(and)19 b Ft(v)25 b(<)p Fs(::)3001
2315 y Fo(+)3089 2314 y Fr(E)3073 2346 y Ft(\034)3116
2315 y Fz(0)3157 2346 y FF(in)18 b Fr(D)p Ft(;)51 b Fr(G)21
b Fs(:)h Fr(D)f Fu(`)3646 2314 y Fr(E)3630 2346 y Ft(\034)30
b(<)p Fs(:)3812 2314 y Fr(E)3796 2346 y Ft(\034)3839
2315 y Fz(0)p 2159 2380 1759 4 v 2917 2448 a Fu(`)22
b Fr(G)f Fs(:)h Fr(D)p 2042 2525 1993 3 v 2042 2610 a
Fv(Figur)o(e)38 b(41.)g FF(Consistenc)o(y)i(for)g(our)f(conte)o(xts)h
(\(in)f(addition)i(to)e(well-)2042 2693 y(formedness\))2042
2939 y(for)c(our)h(e)o(xistential)g(types.)f(W)-6 b(e)36
b(do)g(so)g(in)f(Figure)h(41,)f(although)i(we)2042 3022
y(also)22 b(implicitly)g(assume)h(that)f(all)g(types)h(in)m(v)o(olv)o
(ed)g(are)g(consistent)g(in)f(the)2042 3105 y(appropriate)e(conte)o
(xt.)2141 3188 y(F)o(or)k(re\003ection)f(of)h(traditional)f(subtyping,)
i(we)f(require)g(all)f(types)h(in-)2042 3271 y(v)o(olv)o(ed)j(to)g(be)g
(consistent)g(as)g(well)f(as)h(the)g(conte)o(xt.)g(Because)g(transiti)n
(v-)2042 3354 y(ity)g(may)i(only)g(be)f(used)h(\002nitely)-5
b(,)27 b(an)o(y)i(subtyping)g(proof)g(for)f(translated)2042
3437 y(types)e(can)g(be)f(turned)i(into)e(a)g(list)g(of)h(non-transiti)
n(v)o(e)g(and)g(non-re\003e)o(xi)n(v)o(e)2042 3520 y(subtyping)33
b(proofs.)g(W)-6 b(e)31 b(can)i(use)f(the)g(consistenc)o(y)h(of)f(the)h
(conte)o(xt)f(to)2042 3603 y(mak)o(e)j(sure)f(that)g(assumptions)h(are)
f(only)h(in)f(the)g(be)o(ginning)i(and)e(end)2042 3686
y(of)27 b(this)g(list)g(lik)o(e)g(we)g(did)h(in)f(Section)g(C.3.2.)g
(Because)h(the)f(constructor)2042 3769 y Fu(9)p Fs(\000)f(:)g(\001)p
Ft(:)2329 3737 y Fr(t)2319 3769 y Ft(\034)37 b FF(is)27
b(inducti)n(v)o(e,)i(we)f(can)h(turn)f(the)g(proofs)h(between)g(e)o
(xisten-)2042 3852 y(tial)24 b(types)h(into)f(constraint-satisfying)i
(substitutions.)f(Also,)f(since)h(con-)2042 3935 y(sistenc)o(y)15
b(of)h Fu(9)p Fs(\000)9 b(:)g(\001\(\001)-44 b Fu(\001)21
b Fs(\))p Ft(:)16 b(C)2787 3935 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2787 3935 a Fw(<)2787
3935 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2787 3935 a 2832 3903 a Fr(E)2816 3935 y Ft(\034)2850
3943 y Fo(1)2885 3935 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2885 3935 a Fw(,)39 b(...,)2885
3935 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2885 3935 a 3106 3903 a Fr(E)3090 3935 y Ft(\034)3124
3943 y Fn(n)3167 3935 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3167 3935 a Fw(>)3167 3935 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate

3167 3935 a 44 w FF(requires)16 b Fs(\001)f FF(to)g(imply)g
Fs(\001)-43 b Fu(\001)22 b FF(,)15 b(then)2042 4018 y(an)o(y)20
b(substitution)h(satisfying)g Fs(\001)f FF(also)g(satis\002es)f
Fs(\001)-42 b Fu(\001)21 b FF(.)f(Thus)g(the)g(same)h(tech-)2042
4101 y(niques)27 b(that)g(we)f(emplo)o(yed)i(in)f(Section)f(C.3.2)h
(can)g(be)f(emplo)o(yed)j(here)2042 4184 y(with)20 b(slight)h
(adjustments)h(to)f(deal)g(with)g(the)g(f)o(act)g(that)g(not)h(all)e
(traditional)2042 4267 y(e)o(xistential)k(types)h(in)m(v)o(olv)o(ed)g
(are)f(translations)h(of)f(our)h(e)o(xistential)f(types,)2042
4350 y(so)f(we)g(do)h(not)f(repeat)g(the)h(presentation)g(of)f(that)g
(complicated)h(coinduc-)2042 4433 y(ti)n(v)o(e)19 b(process)g(here.)
2141 4516 y(Note)28 b(that)g(there)g(is)f(one)i(last)e(subtle)h(issue)g
(with)g(equi)n(v)n(alence.)h(Our)2042 4599 y(uni\002cation)h(rule)g(is)
f(designed)i(so)f(that)g(e)n(v)o(ery)h(v)n(ariable)f(is)f(assigned)i
(to)2042 4682 y(some)g(type)f(which)h(occurs)g(in)g(the)f(tar)o(get)g
(type.)g(Ho)n(we)n(v)o(er)m(,)h(traditional)2042 4765
y(e)o(xistential)15 b(types)h(do)g(not)g(ha)o(v)o(e)g(this)f
(restriction.)g(As)g(such,)h(if)f(equi)n(v)n(alence)2042
4848 y(meant)29 b(\223subtypes)i(of)d(each)i(other\224)g(then)f
(traditional)g(e)o(xistential)g(types)2042 4932 y(could)23
b(determine)h(that)2687 4932 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2687 4932 a Fw(List<)2687
4932 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2687 4932 a 147 w Fu(9)2877 4932 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2877 4932 a
Fw(X)2877 4932 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2877 4932 a 45 w Fs(:)2959 4932 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2959
4932 a Fw(X)2959 4932 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2959 4932 a 59 w Ft(<)p Fs(::)3149
4932 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3149 4932 a Fw(String)3149 4932 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3149 4932 a
176 w Ft(;)3359 4932 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3359 4932 a Fw(X)3359 4932 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3359
4932 a 59 w Fs(::)p Ft(>)3549 4932 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3549 4932 a Fw(String)3549
4932 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3549 4932 a 177 w Ft(:)3770 4932 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3770 4932 a
Fw(Map<X,X>)3770 4932 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3770 4932 a 4005 4932 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 4005
4932 a Fw(>)4005 4932 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 4005 4932 a 2042 5015 a FF(is)c(a)g(subtype)i
(of)e Fu(9)2543 5015 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2543 5015 a Fw(Y)2543 5015 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2543
5015 a 41 w Fs(:)11 b Fq(?)p Ft(:)2716 5015 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2716 5015
a Fw(List<)2716 5015 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2716 5015 a 148 w Fu(9)2907 5015
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2907 5015 a Fw(X)2907 5015 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2907 5015 a 40 w Fs(:)2979
5015 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2979 5015 a Fw(X)2979 5015 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2979 5015 a 55 w
Ft(<)p Fs(::)3160 5015 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3160 5015 a Fw(String)3160 5015
y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3160 5015 a 177 w Ft(;)3371 5015 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3371 5015 a Fw(X)3371
5015 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3371 5015 a 54 w Fs(::)p Ft(>)3551 5015 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3551
5015 a Fw(String)3551 5015 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3551 5015 a 177 w Ft(:)3770
5015 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3770 5015 a Fw(Map<X,Y>)3770 5015 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3770 5015
a 4005 5015 a
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 4005 5015 a Fw(>)4005 5015 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 4005 5015
a 2042 5098 a FF(by)26 b(assigning)2450 5098 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2450 5098
a Fw(Y)2450 5098 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2450 5098 a 55 w FF(to)2588 5098 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate

2588 5098 a Fw(String)2588 5098 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2588 5098 a 202 w FF(e)n(v)o(en)h
(though)3187 5098 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3187 5098 a Fw(String)3187 5098 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate

3187 5098 a 202 w FF(does)f(not)g(occur)h(at)e(the)2042
5181 y(location)k(corresponding)i(to)2854 5181 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2854
5181 a Fw(Y)2854 5181 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2854 5181 a 30 w FF(.)d(In)h(our)g(system,)3405
5181 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3405 5181 a Fw(Y)3405 5181 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3405 5181 a 58 w
FF(w)o(ould)h(be)f(assigned)2042 5264 y(to)2130 5264
y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 2130 5264 a Fw(X)2130 5264 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 2130 5264 a 60 w FF(which)i(w)o(ould)g
(be)g(in)m(v)n(alid)g(since)g(otherwise)3458 5264 y
 currentpoint currentpoint translate .75 1.1 scale neg exch neg exch
translate
 3458
5264 a Fw(X)3458 5264 y
 currentpoint currentpoint translate 1 .75 div 1 1.1 div scale neg
exch neg exch translate
 3458 5264 a 60 w FF(w)o(ould)g(escape)h(its)
2042 5347 y(bound.)18 b(T)-6 b(o)16 b(pre)n(v)o(ent)i(this)e(problem,)h
(we)g(must)g(require)g(that)g(an)o(y)g(tw)o(o)g(types)2042
5430 y(deemed)j(equi)n(v)n(alent)g(must)f(ha)o(v)o(e)g(the)g(same)g
(set)g(of)g(free)g(v)n(ariables.)p eop end
%%Page: 27 27
TeXDict begin 27 26 bop -150 66 a Fv(D)o(.2)74 b(Re\003ection)18
b(of)h(Our)g(Subtyping)-150 183 y FF(It)25 b(should)i(be)g(clear)e
(that)h(the)g(con)m(v)o(ersion)i(from)e(wildcard)g(types)g(to)g(our)
-150 266 y(e)o(xistential)34 b(types)i(re\003ects)e(subtyping)i(using)f
(the)g(rules)g(described)g(in)-150 349 y(Figure)22 b(8.)h(Thus)f(the)h
(challenge)g(is)g(to)f(sho)n(w)h(that)f(the)h(subtyping)h(system)-150
432 y(described)30 b(in)f(Figure)g(30)h(subsumes)g(that)f(described)h
(in)f(Figure)g(8,)g(the)-150 515 y(con)m(v)o(erse)21
b(of)e(what)g(we)h(sho)n(wed)g(in)g(Section)f(C.3.2.)g(It)g(is)g(clear)
g(that)i(S)t Fp(U)t(B)t FF(-)-148 598 y(V)-5 b Fp(A)t(R)26
b FF(corresponds)h(to)e(an)g(application)h(of)f(transiti)n(vity)g(and)h
(assumption)-150 681 y(\(or)31 b(re\003e)o(xi)n(vity\).)g(Similarly)-5
b(,)32 b(S)t Fp(U)t(B)t FF(-)t(E)t Fp(X)t(I)t(S)t(T)t(S)e
FF(corresponds)j(to)e(wildcard)-150 764 y(capture)j(follo)n(wed)g(by)g
(a)g(transiti)n(v)o(e)f(application)i(of)e(inheritance)i(with)-150
847 y(inhabitance)20 b(\()p Fu(2)p FF(\).)e(Thus)i(the)f(con)m(v)o
(ersion)h(re\003ects)e(subtyping.)-150 1056 y FD(Refer)n(ences)-117
1164 y FB([1])30 b(Gilad)21 b(Bracha,)g(Martin)g(Odersk)o(y)l(,)f(Da)o
(vid)h(Stoutamire,)h(and)e(Philip)h(W)-5 b(adler)l(.)-10
1238 y(Making)29 b(the)g(future)g(safe)f(for)g(the)h(past:)g(Adding)g
(genericity)i(to)d(the)g(Ja)o(v)n(a)-10 1313 y(programming)18
b(language.)26 b(In)17 b FA(OOPSLA)p FB(,)f(1998.)-117
1416 y([2])30 b(Kim)24 b(B.)f(Bruce.)48 b FA(F)-7 b(oundations)26
b(of)e(Object-Oriented)k(Pr)m(o)o(gr)o(amming)d(Lan-)-10
1490 y(gua)o(g)o(es:)18 b(T)-5 b(ypes)18 b(and)f(Semantics)p
FB(.)26 b(The)17 b(MIT)f(Press,)h(2002.)-117 1593 y([3])30
b(Kim)43 b(B.)g(Bruce,)i(Angela)g(Schuett,)g(Robert)g(v)n(an)g(Gent,)f
(and)g(Adrian)-10 1668 y(Fiech.)26 b(PolyT)o(OIL:)17
b(A)g(type-safe)i(polymorphic)g(object-oriented)j(language.)-10
1742 y FA(T)o(OPLAS)p FB(,)15 b(25:225\226290,)j(March)g(2003.)-117
1845 y([4])30 b(Nicholas)d(Cameron)g(and)f(Sophia)h(Drossopoulou.)53
b(On)25 b(subtyping,)i(wild-)-10 1920 y(cards,)17 b(and)h(e)o
(xistential)i(types.)25 b(In)17 b FA(FTfJP)p FB(,)f(2009.)-117
2022 y([5])30 b(Nicholas)24 b(Cameron,)g(Sophia)g(Drossopoulou,)g(and)g
(Erik)f(Ernst.)43 b(A)22 b(model)-10 2097 y(for)17 b(Ja)o(v)n(a)g(with)
h(wildcards.)26 b(In)17 b FA(ECOOP)p FB(,)e(2008.)-117
2200 y([6])30 b(James)23 b(Gosling,)h(Bill)g(Jo)o(y)l(,)f(Guy)g(Steel,)
h(and)g(Gilad)h(Bracha.)45 b FA(The)24 b(Java)1768 2176
y Fb(TM)-10 2274 y FA(Langua)o(g)o(e)e(Speci\002cation)p
FB(.)40 b(Addison-W)-5 b(esle)o(y)22 b(Professional,)h(third)e
(edition,)-10 2349 y(June)c(2005.)-117 2452 y([7])30
b(Atsushi)22 b(Igarashi)h(and)f(Mirk)o(o)g(V)l(iroli.)40
b(On)21 b(v)n(ariance-based)26 b(subtyping)d(for)-10
2527 y(parametric)c(types.)25 b(In)17 b FA(ECOOP)p FB(,)f(2002.)-117
2629 y([8])30 b(Simon)g(Pe)o(yton)i(Jones,)f(Dimitrios)g(Vytiniotis,)i
(Stephanie)g(W)-5 b(eirich,)32 b(and)-10 2704 y(Mark)18
b(Shields.)28 b(Practical)21 b(type)e(inference)i(for)d(arbitrary-rank)
j(types.)28 b FA(J)n(our)o(-)-10 2779 y(nal)17 b(of)g(Functional)j(Pr)m
(o)o(gr)o(amming)p FB(,)d(17:1\22682,)h(January)g(2007.)-117
2881 y([9])30 b(Andre)n(w)23 b(K)n(ennedy)i(and)e(Benjamin)h(Pierce.)44
b(On)22 b(decidability)27 b(of)c(nominal)-10 2956 y(subtyping)18
b(with)g(v)n(ariance.)27 b(In)17 b FA(FOOL)p FB(,)e(2007.)-150
3059 y([10])30 b(Daan)d(Leijen.)55 b(HMF:)27 b(Simple)g(type)g
(inference)j(for)c(\002rst-class)i(polymor)o(-)-10 3133
y(phism.)c(In)17 b FA(ICFP)p FB(,)e(2008.)-150 3236 y([11])30
b(Martin)25 b(Odersk)o(y)f(and)g(K)n(onstantin)i(L)t(\250)-26
b(aufer)l(.)46 b(Putting)26 b(type)e(annotations)j(to)-10
3311 y(w)o(ork.)d(In)17 b FA(POPL)p FB(,)e(1996.)-150
3413 y([12])30 b(Gordon)22 b(D.)e(Plotkin.)40 b(A)21
b(note)i(on)e(inducti)n(v)o(e)k(generalization.)43 b(In)21
b FA(Mac)o(hine)-10 3488 y(Intellig)o(ence)p FB(,)27
b(v)o(olume)e(5,)e(pages)h(153\226163.)h(Edinb)o(ur)o(gh)f(Uni)n(v)o
(ersity)i(Press,)-10 3563 y(1969.)-150 3665 y([13])k(John)19
b(C.)f(Re)o(ynolds.)31 b(T)n(ransformational)22 b(systems)c(and)i(the)f
(algebraic)j(struc-)-10 3740 y(ture)k(of)e(atomic)j(formulas.)50
b(In)25 b FA(Mac)o(hine)h(Intellig)o(ence)p FB(,)j(v)o(olume)d(5,)e
(pages)-10 3815 y(135\226151.)17 b(Edinb)o(ur)o(gh)h(Uni)n(v)o(ersity)h
(Press,)e(1969.)-150 3917 y([14])30 b(Daniel)23 b(Smith)g(and)f(Robert)
i(Cartwright.)42 b(Ja)o(v)n(a)23 b(type)g(inference)h(is)e(brok)o(en:)
-10 3992 y(Can)17 b(we)g(\002x)g(it?)25 b(In)17 b FA(OOPSLA)p
FB(,)f(2008.)-150 4095 y([15])30 b(Ale)o(xander)42 b(J.)d(Summers,)f
(Nicholas)k(Cameron,)e(Mariangiola)j(Dezani-)-10 4169
y(Ciancaglini,)29 b(and)d(Sophia)h(Drossopoulou.)53 b(T)-5
b(o)n(w)o(ards)26 b(a)g(semantic)h(model)-10 4244 y(for)17
b(Ja)o(v)n(a)g(wildcards.)26 b(In)17 b FA(FTfJP)p FB(,)f(2010.)-150
4347 y([16])30 b(Ross)17 b(T)-5 b(ate,)17 b(Alan)h(Leung,)g(and)g
(Sorin)g(Lerner)l(.)26 b(T)-5 b(aming)17 b(wildcards)i(in)f(Ja)o(v)n
(a')l(s)-10 4421 y(type)24 b(system.)46 b(T)-5 b(echnical)26
b(report,)f(Uni)n(v)o(ersity)h(of)d(California,)k(San)d(Die)o(go,)-10
4496 y(March)18 b(2011.)-150 4599 y([17])30 b(Kresten)g(Krab)g(Thorup)g
(and)g(Mads)g(T)-5 b(or)o(gersen.)64 b(Unifying)31 b(genericity)h(-)-10
4673 y(combining)21 b(the)f(bene\002ts)h(of)e(virtual)i(types)g(and)e
(parameterized)24 b(classes.)32 b(In)-10 4748 y FA(ECOOP)p
FB(,)15 b(1999.)-150 4851 y([18])30 b(Mads)20 b(T)-5
b(or)o(gersen,)20 b(Erik)g(Ernst,)g(and)g(Christian)j(Plesner)e
(Hansen.)35 b(Wild)20 b(FJ.)-10 4926 y(In)d FA(FOOL)p
FB(,)e(2005.)-150 5028 y([19])30 b(Mads)20 b(T)-5 b(or)o(gersen,)21
b(Christian)h(Plesner)g(Hansen,)f(Erik)f(Ernst,)g(Peter)h(v)o(on)g(der)
-10 5103 y(Ah)t(\264)-26 b(e,)24 b(Gilad)i(Bracha,)f(and)g(Neal)h
(Gafter)l(.)49 b(Adding)25 b(wildcards)i(to)d(the)h(Ja)o(v)n(a)-10
5178 y(programming)18 b(language.)26 b(In)17 b FA(SA)n(C)p
FB(,)f(2004.)-150 5280 y([20])30 b(Mirk)o(o)19 b(V)l(iroli.)31
b(On)18 b(the)i(recursi)n(v)o(e)h(generation)g(of)e(parametric)i
(types.)30 b(T)-5 b(ech-)-10 5355 y(nical)33 b(Report)f
(DEIS-LIA-00-002,)f(Uni)n(v)o(ersit)t(\036)-26 b(a)34
b(di)d(Bologna,)h(September)-10 5430 y(2000.)2042 66
y([21])d(Stef)o(an)d(W)-5 b(ehr)23 b(and)h(Peter)h(Thiemann.)45
b(On)24 b(the)g(decidability)k(of)23 b(subtyping)2181
141 y(with)18 b(bounded)h(e)o(xistential)h(types.)25
b(In)17 b FA(APLAS)p FB(,)e(2009.)p eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
